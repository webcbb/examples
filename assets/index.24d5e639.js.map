{"version":3,"file":"index.24d5e639.js","sources":["../../../../proc7ts/primitives/dist/primitives.js","../../../../proc7ts/push-iterator/dist/push-iterator.js","../../../../proc7ts/supply/dist/supply.js","../../../../proc7ts/context-values/dist/context-values.js","../../../../proc7ts/amend/dist/amend.js","../../../../frontmeans/namespace-aliaser/dist/namespace-aliaser.js","../../../../proc7ts/fun-events/dist/_fun-events.base.js","../../../../proc7ts/fun-events/dist/fun-events.js","../../../../frontmeans/dom-events/dist/dom-events.js","../../../../proc7ts/context-values/dist/context-values.updatable.js","../../../../frontmeans/dom-primitives/dist/dom-primitives.js","../../../../frontmeans/render-scheduler/dist/render-scheduler.js","../../../../frontmeans/drek/dist/drek.js","../../../../proc7ts/workbench/dist/workbench.js","../../../../frontmeans/httongue/dist/httongue.js","../../../wesib/dist/wesib.js","../../../generic/dist/wesib.generic.js","../../../../proc7ts/delta-set/dist/delta-set.js","../../../../frontmeans/input-aspects/dist/input-aspects.js","../../../forms/dist/wesib.forms.js","../../../../frontmeans/doqry/dist/doqry.js","../../../../frontmeans/style-producer/dist/style-producer.js","../../../css/dist/wesib.css.js","../../src/common/examples.ns.ts","../../src/common/theme/theme-settings.ts","../../src/common/theme/link.style.ts","../../src/common/theme/default.style.ts","../../src/common/theme/body.style.ts","../../src/common/forms/form.theme-settings.ts","../../src/common/forms/field-error.component.ts","../../src/common/forms/forms-support.feature.ts","../../../../hatsy/http-header-value/dist/_http-header-value.base.js","../../../../hatsy/http-header-value/dist/http-header-value.js","../../../navigation/dist/wesib.navigation.js","../../src/common/layout/main.component.ts","../../src/common/layout/nav.component.ts","../../src/common/layout/container.component.ts","../../src/common/layout/layout-support.feature.ts","../../src/common/theme/body-style-support.feature.ts","../../src/common/app.feature.ts","../../src/common/index.ts"],"sourcesContent":["function isArrayOfElements(value) {\n    return Array.isArray(value);\n}\nfunction arrayOfElements(value) {\n    return ( /*#__INLINE__*/isArrayOfElements(value)) ? value : value != null ? [value] : [];\n}\n\n/**\n * Checks whether two values are the same. I.e. strictly equal to each other.\n *\n * @typeParam T - A type of values.\n * @param first - First value to compare.\n * @param second - Second value to compare.\n *\n * @returns `true` if `first === second`, or `false` otherwise.\n */\nfunction areTheSame(first, second) {\n    return first === second;\n}\n\n/**\n * @internal\n */\nfunction isAsyncEvaluator(value) {\n    return typeof value === 'function';\n}\n/**\n * Asynchronously evaluates a value by its recipe.\n *\n * @typeParam TValue - Evaluated value type. This can not be a function.\n * @typeParam TArgs - A type of parameters tuple required for value evaluation.\n * @param recipe - Asynchronous value evaluation recipe.\n * @param args - Parameters required for value evaluation.\n *\n * @returns A promise resolved to the value.\n */\nasync function asyncByRecipe(recipe, ...args) {\n    return ( /*#__INLINE__*/isAsyncEvaluator(recipe)) ? recipe(...args) : recipe;\n}\n/**\n * Converts asynchronous value recipe to its {@link AsyncRecipe.Evaluator evaluator} function.\n *\n * @typeParam TValue - Evaluated value type. This can not be a function.\n * @typeParam TArgs - A type of parameters tuple required for value evaluation.\n * @param recipe - Asynchronous value recipe to convert.\n *\n * @returns A function asynchronously evaluating the value.\n */\nfunction asyncRecipe(recipe) {\n    return ( /*#__INLINE__*/isAsyncEvaluator(recipe))\n        ? (async (...args) => recipe(...args))\n        : () => Promise.resolve(recipe);\n}\n\n/**\n * Creates a provider of the only argument.\n *\n * @param value - A value to return.\n *\n * @returns A function that returns `value`.\n */\nfunction valueProvider(value) {\n    return () => value;\n}\n/**\n * Creates a provider of arguments tuple.\n *\n * The returned tuple should never be modified as it is not cloned.\n *\n * @param values - Values to return.\n *\n * @returns A function that returns `values` tuple.\n */\nfunction valuesProvider(...values) {\n    return () => values;\n}\n/**\n * Creates a provider of cloned arguments tuple.\n *\n * The returned tuple can be modified as it is cloned before the return.\n *\n * @param values - Values to return.\n *\n * @returns A function that returns a clone of `values` tuple.\n */\nfunction valuesCloner(...values) {\n    return () => values.slice();\n}\n\n/**\n * Creates a provider of lazily evaluated value.\n *\n * The returned function evaluates the value first time it is called. Then it just returns previously evaluated value.\n *\n * @param provider - A no-arg function evaluating the value.\n *\n * @returns A function that returns the value evaluated by `provider`.\n */\nfunction lazyValue(provider) {\n    let get = () => {\n        get = lazyValue$recurrent; // Prevent recurrent evaluation\n        const value = provider();\n        get = valueProvider(value);\n        return value;\n    };\n    return () => get();\n}\nfunction lazyValue$recurrent() {\n    throw new TypeError('Recurrent evaluation');\n}\n\n/**\n * @internal\n */\nfunction isValueEvaluator(value) {\n    return typeof value === 'function';\n}\n/**\n * Evaluates a value by its recipe.\n *\n * @typeParam TValue - Evaluated value type. This can not be a function.\n * @typeParam TArgs - A type of parameters tuple required for value evaluation.\n * @param recipe - Value evaluation recipe.\n * @param args - Parameters required for value evaluation.\n *\n * @returns Either the value itself, or the one evaluated by the given evaluator recipe.\n */\nfunction valueByRecipe(recipe, ...args) {\n    return ( /*#__INLINE__*/isValueEvaluator(recipe)) ? recipe(...args) : recipe;\n}\n/**\n * Converts a value recipe to its {@link ValueRecipe.Evaluator evaluator} function.\n *\n * @typeParam TValue - Evaluated value type. This can not be a function.\n * @typeParam TArgs - A type of parameters tuple required for value evaluation.\n * @param recipe - Value recipe to convert.\n *\n * @returns Either evaluator itself, or the one evaluating to the given value.\n */\nfunction valueRecipe(recipe) {\n    return ( /*#__INLINE__*/isValueEvaluator(recipe)) ? recipe : valueProvider(recipe);\n}\n\nfunction arraysAreEqual(first, second, compareOrFromOrLength, fromOrLength, to) {\n    return typeof compareOrFromOrLength === 'function'\n        ? arrayElementsAreEqual(first, second, compareOrFromOrLength, fromOrLength, to)\n        : arrayElementsAreEqual(first, second, areTheSame, compareOrFromOrLength, fromOrLength);\n}\nfunction arrayElementsAreEqual(first, second, elementsAreEqual, fromOrLength, to) {\n    let start;\n    let end;\n    if (to !== undefined) {\n        start = fromOrLength ? Math.max(fromOrLength, 0) : 0;\n        end = to != null ? to : Math.max(first.length, second.length);\n    }\n    else if (fromOrLength != null) {\n        start = 0;\n        end = fromOrLength;\n    }\n    else {\n        start = 0;\n        end = Math.max(first.length, second.length);\n    }\n    if ((first.length <= end || second.length <= end) && first.length !== second.length) {\n        return false;\n    }\n    for (let i = start; i < end; ++i) {\n        if (!elementsAreEqual(first[i], second[i], i)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Builds element or array of the given elements.\n *\n * @param source - A source of elements as their iterable or array-like container.\n *\n * @returns The only element of the `source`, an array of all elements of non-empty source, or `undefined` if the\n * `source` is empty.\n */\nfunction elementOrArray(source) {\n    const array = Array.from(source);\n    const { length } = array;\n    if (length) {\n        return length === 1 ? array[0] : array;\n    }\n    return;\n}\n\n/**\n * Builds a set of the given element or array of elements.\n *\n * @param elements Either element, readonly array of elements, `null`, or `undefined`.\n *\n * @returns A new set containing all of the given elements, or empty set if `elements` is `null` or `undefined`.\n */\nfunction setOfElements(elements) {\n    return ( /*#__INLINE__*/isArrayOfElements(elements))\n        ? new Set(elements)\n        : (elements != null ? new Set([elements]) : new Set());\n}\n/**\n * Adds element of array of elements to the given set.\n *\n * Adds to the set a single element, all `elements` of the given array, or nothing when `elements` is `null`\n * or `undefined`.\n *\n * @param set - Target set to add elements to.\n * @param elements - Element(s) to add to the `set`. Either element, readonly array of elements, `null`, or `undefined`.\n *\n * @returns The target `set`.\n */\nfunction extendSetOfElements(set, elements) {\n    if ( /*#__INLINE__*/isArrayOfElements(elements)) {\n        elements.forEach(element => set.add(element));\n    }\n    else if (elements != null) {\n        set.add(elements);\n    }\n    return set;\n}\n\n/**\n * Detects a super class of the given class optionally satisfying the given criteria.\n *\n * Traverses all class ancestors until reaches the one satisfying the given criteria, or stops when there is no more\n * ancestors.\n *\n * @param type - The class constructor to find super class of.\n * @param satisfying - The criteria of super class matching. It is a function accepting a super class constructor\n * as the only parameter and returning `true` if the given super class matches, or `false` otherwise. Always returns\n * `true` by default.\n *\n * @return A super class `satisfying` the given criteria, or `undefined` if there is no such super class, or there is no\n * super class at all (e.g. when `Object` is passed in).\n */\nfunction superClassOf(type, satisfying = () => true) {\n    const prototype = Reflect.getPrototypeOf(type.prototype);\n    if (prototype == null) {\n        return;\n    }\n    const superType = prototype.constructor;\n    if (satisfying(superType)) {\n        return superType;\n    }\n    return superClassOf(superType, satisfying);\n}\n\n/**\n * A function that returns its argument as is.\n *\n * @param value - A value to return.\n *\n * @returns `value`.\n */\nfunction asis(value) {\n    return value;\n}\n\n/**\n * Counts meaningful arguments passed to function.\n *\n * Ignores trailing `undefined` values.\n *\n * @param args - Function call arguments tuple.\n *\n * @returns The number of arguments, except for the trailing `undefined` values.\n */\nfunction countArgs(args) {\n    let len = args.length;\n    while (len > 0) {\n        const idx = len - 1;\n        if (args[idx] !== undefined) {\n            break;\n        }\n        len = idx;\n    }\n    return len;\n}\n\nfunction mergeFunctions(first, second, merge = (_f, s) => s) {\n    if (!first) {\n        return second;\n    }\n    if (!second) {\n        return first;\n    }\n    return function (...args) {\n        return merge(first.apply(this, args), second.apply(this, args));\n    };\n}\n\n/**\n * A function that does nothing.\n *\n * @returns `undefined`.\n */\nfunction noop() {\n    return;\n}\n\nconst hasOwnProperty$ = Object.prototype.hasOwnProperty;\n/**\n * Checks whether the `target` object has own property with the given `key`.\n *\n * This is a safer variant of `target.hasOwnProperty(key)` call.\n *\n * @param target - Target object to check.\n * @param key - A key of the property to check.\n *\n * @returns `true` if `target` object has own property with the given `key`, or `false` otherwise.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\n */\nfunction hasOwnProperty(target, key) {\n    return hasOwnProperty$.call(target, key);\n}\n\n/**\n * Checks whether two objects have equal properties.\n *\n * @typeParam - A type of objects to check.\n * @param first - First object to check.\n * @param second - Second object to check.\n * @param valuesAreEqual - A function that compares corresponding property values. Accepts property values from both\n * objects and their key as parameters. Returns `true` if property values are equal. By default, checks property values\n * for {@link areTheSame strict equality}.\n * @param keys - Either an iterable of property keys to compare, or a function returning one. Defaults to own keys\n * (`Reflect.ownKeys`) of both objects.\n *\n * @returns `true` if `valuesAreEqual` returned `true` for each property key, or `false` otherwise.\n */\nfunction propertiesAreEqual(first, second, valuesAreEqual, keys = propertiesAreEqual$ownKeys) {\n    valuesAreEqual || (valuesAreEqual = areTheSame);\n    const keyList = typeof keys === 'function' ? keys(first, second) : keys;\n    for (const key of keyList) {\n        const value1 = first[key];\n        const value2 = second[key];\n        if (!valuesAreEqual(value1, value2, key)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction* propertiesAreEqual$ownKeys(first, second) {\n    const keys = new Set();\n    for (const key of Reflect.ownKeys(first)) {\n        yield key;\n        keys.add(key);\n    }\n    for (const key of Reflect.ownKeys(second)) {\n        if (!keys.has(key)) {\n            yield key;\n        }\n    }\n}\n\n/**\n * Creates a promise resolver.\n *\n * @returns New promise resolver.\n */\nfunction newPromiseResolver() {\n    let resolvePromise;\n    let rejectPromise;\n    let buildPromise = lazyValue(() => new Promise((resolve, reject) => {\n        resolvePromise = resolve;\n        rejectPromise = reject;\n    }));\n    const settle = (resolution) => {\n        buildPromise = lazyValue(resolution);\n        resolvePromise = noop;\n        rejectPromise = noop;\n    };\n    resolvePromise = value => {\n        settle(() => Promise.resolve(value));\n    };\n    rejectPromise = error => {\n        settle(() => Promise.reject(error));\n    };\n    return {\n        resolve(value) {\n            resolvePromise(value);\n        },\n        reject(reason) {\n            rejectPromise(reason);\n        },\n        promise() {\n            return buildPromise();\n        },\n    };\n}\n\n/**\n * Checks whether the given value is array-like.\n *\n * @typeParam TElement - Array elements type.\n * @typeParam TOther - Non-array value type.\n * @param value - A value to check.\n *\n * @returns `true` if the `value` has a `length` property, or `false` otherwise.\n */\nfunction isArrayLike(value) {\n    return !!value && typeof value === 'object' && typeof value.length === 'number';\n}\n\n/**\n * Checks whether the given object is iterable.\n *\n * @typeParam TElement - Iterable elements type.\n * @typeParam TOther - Non-iterable value type.\n * @param value - An object value to check.\n *\n * @returns `true` if the `value` has a `[Symbol.iterator]` property set, or `false` otherwise.\n */\nfunction isIterable(value) {\n    return !!value[Symbol.iterator];\n}\n\n/**\n * A function that checks whether the given value is present.\n *\n * @param value - A value to check.\n *\n * @returns `true` when the given `value` is not `null` or `undefined`, or `false` otherwise.\n */\nfunction isPresent(value) {\n    return value != null;\n}\n/**\n * A function that checks whether the given value is not present.\n *\n * This is a direct opposite to `isPresent()`.\n *\n * @param value - A value to check.\n *\n * @returns `true` when the given `value` is `null` or `undefined`, or `false` otherwise.\n */\nfunction isNotPresent(value) {\n    return value == null;\n}\n/**\n * A function that checks whether the given value is defined.\n *\n * @param value - A value to check.\n *\n * @returns `true` when the given `value` is not `undefined`, or `false` otherwise.\n */\nfunction isDefined(value) {\n    return value !== undefined;\n}\n/**\n * A function that checks whether the given value is undefined.\n *\n * This is a direct opposite to `isDefined()`.\n *\n * @param value - A value to check.\n *\n * @returns `true` when the given `value` is `undefined`, or `false` otherwise.\n */\nfunction isUndefined(value) {\n    return value === undefined;\n}\n\nexport { areTheSame, arrayOfElements, arraysAreEqual, asis, asyncByRecipe, asyncRecipe, countArgs, elementOrArray, extendSetOfElements, hasOwnProperty, isArrayLike, isArrayOfElements, isDefined, isIterable, isNotPresent, isPresent, isUndefined, lazyValue, mergeFunctions, newPromiseResolver, noop, propertiesAreEqual, setOfElements, superClassOf, valueByRecipe, valueProvider, valueRecipe, valuesCloner, valuesProvider };\n//# sourceMappingURL=primitives.js.map\n","/**\n * A key of {@link PushIterable} iteration method.\n */\nconst PushIterator__symbol = ( /*#__PURE__*/Symbol('push-iterator'));\n\nfunction isPushIterable(iterable) {\n    return !!iterable[PushIterator__symbol];\n}\n\nfunction iteratorOf(iterable) {\n    return iterable[Symbol.iterator]();\n}\n\n/**\n * Creates a push iterable implementation.\n *\n * @typeParam T - Iterated elements type.\n * @param iterate - A function iterating over iterable elements conforming to {@link PushIterable.Iterate} requirements.\n *\n * @returns New push iterable instance performing iteration by `forNext` function.\n */\nfunction makePushIterable(iterate) {\n    return {\n        [Symbol.iterator]: PushIterable$iterator,\n        [PushIterator__symbol]: iterate,\n    };\n}\n/**\n * @internal\n */\nfunction PushIterable$iterator() {\n    return this[PushIterator__symbol]();\n}\n\n/**\n * Iterates over elements of the given push iterable.\n *\n * Calls `accept` method for each iterated element until there are elements to iterate, or `accept` returned either\n * `true` or `false`.\n *\n * Calling this function is the same as calling `!iterable[PushIterator__symbol](accept).isOver()`.\n *\n * @typeParam T - Iterated elements type.\n * @param iterable - A push iterable to iterate elements of.\n * @param accept - A function to push iterated elements to. Accepts iterated element as its only parameter. May return\n * `true` to suspend iteration, or `false` to stop it.\n *\n * @returns `true` if there are more elements to iterate, or `false` otherwise. The former is possible only when\n * iteration suspended, i.e. `accept` returned `true`.\n */\nfunction pushIterated(iterable, accept) {\n    return !iterable[PushIterator__symbol](accept).isOver();\n}\n\n/**\n * Creates a push iterator implementation.\n *\n * @typeParam T - Iterated elements type.\n * @param forNext - A function iterating over elements conforming to push iteration protocol.\n *\n * @returns New push iterator instance performing iteration by `forNext` function.\n */\nfunction makePushIterator(forNext) {\n    let over = false;\n    let iterate = (accept) => {\n        if (accept && !forNext(accept)) {\n            over = true;\n            iterate = PushIterator$dontIterate;\n        }\n    };\n    return {\n        [Symbol.iterator]: PushIterator$iterator,\n        [PushIterator__symbol](accept) {\n            iterate(accept);\n            return this;\n        },\n        next: PushIterator$next,\n        isOver: () => over,\n    };\n}\n/**\n * @internal\n */\nfunction PushIterator$iterator() {\n    return this;\n}\n/**\n * @internal\n */\nfunction PushIterator$next() {\n    for (;;) {\n        let result;\n        const over = !pushIterated(this, value => {\n            result = { value };\n            return true;\n        });\n        if (result) {\n            return result;\n        }\n        if (over) {\n            return { done: true };\n        }\n    }\n}\n/**\n * @internal\n */\nfunction PushIterator$noNext() {\n    return { done: true };\n}\n/**\n * @internal\n */\nfunction PushIterator$dontIterate(_accept) {\n    /* do not iterate */\n}\n/**\n * @internal\n */\nconst emptyPushIterator = {\n    [Symbol.iterator]: PushIterator$iterator,\n    [PushIterator__symbol](_accept) {\n        return this;\n    },\n    next: () => ({ done: true }),\n    isOver: () => true,\n};\n\n/**\n * Iterates over the head elements of the given push iterable.\n *\n * Calls `accept` method for each iterated element until there are elements to iterate, or `accept` returned either\n * `true` or `false`.\n *\n * Calling this function is the same as calling `iterable[PushIterator__symbol](accept)`.\n *\n * @typeParam T - Iterated elements type.\n * @param iterable - A push iterable to iterate elements of.\n * @param accept - A function to push iterated elements to. Accepts iterated element as its only parameter. May return\n * `true` to suspend iteration, or `false` to stop it.\n *\n * @returns A push iterator instance representing the tail of the given iterable. This iterator can be used to continue\n * iteration with, unless `accept` returned `false`. In the latter case the further iteration won't be possible.\n */\nfunction pushHead(iterable, accept) {\n    return iterable[PushIterator__symbol](accept);\n}\n\n/**\n * @internal\n */\nfunction indexedItemOf(indexed, index) {\n    return indexed.item(index); // The index is always valid.\n}\n/**\n * @internal\n */\nfunction iterateOverIndexed(indexed, elementOf) {\n    return accept => {\n        let i = 0;\n        const forNext = (accept) => {\n            if (i >= indexed.length) {\n                return false;\n            }\n            for (;;) {\n                const goOn = accept(elementOf(indexed, i++));\n                if (i >= indexed.length || goOn === false) {\n                    return false;\n                }\n                if (goOn === true) {\n                    return true;\n                }\n            }\n        };\n        if (accept && !forNext(accept)) {\n            return emptyPushIterator;\n        }\n        let over = false;\n        let iterate = (accept) => {\n            if (accept && !forNext(accept)) {\n                over = true;\n                iterate = PushIterator$dontIterate;\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                next = PushIterator$noNext;\n            }\n        };\n        let next = () => {\n            if (i < indexed.length) {\n                return { value: elementOf(indexed, i++) };\n            }\n            over = true;\n            iterate = PushIterator$dontIterate;\n            next = PushIterator$noNext;\n            return { done: true };\n        };\n        return {\n            [Symbol.iterator]: PushIterator$iterator,\n            [PushIterator__symbol](accept) {\n                iterate(accept);\n                return this;\n            },\n            next: () => next(),\n            isOver: () => over,\n        };\n    };\n}\n\n/**\n * @internal\n */\nfunction arrayElementOf(array, index) {\n    return array[index];\n}\n/**\n * @internal\n */\nfunction iterateOverArray(array) {\n    return iterateOverIndexed(array, arrayElementOf);\n}\n\n/**\n * Creates a {@link PushIterable | push iterable} over elements of array-like structure.\n *\n * @typeParam T - Array elements type.\n * @param array - An array-like structure. E.g. `Array`, DOM `NodeList`, etc.\n *\n * @returns New push iterable over array elements.\n */\nfunction overArray(array) {\n    return makePushIterable(iterateOverArray(array));\n}\n\n/**\n * Iterates over elements of the given iterable.\n *\n * Calls `accept` method for each iterated element until there are elements to iterate, or `accept` returned either\n * `true` or `false`.\n *\n * In contrast to {@link pushIterated} function, this one accepts any iterable instance.\n *\n * @typeParam T - Iterated elements type.\n * @param iterable - An iterable to iterate elements of.\n * @param accept - A function to push iterated elements to. Accepts iterated element as its only parameter. May return\n * `true` to suspend iteration, or `false` to stop it.\n *\n * @returns `true` if there are more elements to iterate, or `false` otherwise. The former is possible only when\n * iteration suspended, i.e. `accept` returned `true`.\n */\nfunction itsIterated(iterable, accept) {\n    if (isPushIterable(iterable)) {\n        return pushIterated(iterable, accept);\n    }\n    const it = iteratorOf(iterable);\n    if (isPushIterable(it)) {\n        return pushIterated(it, accept);\n    }\n    for (;;) {\n        const next = it.next();\n        if (next.done) {\n            return false;\n        }\n        const status = accept(next.value);\n        if (typeof status === 'boolean') {\n            return status;\n        }\n    }\n}\n\n/**\n * Performs the given `action` for each element of the given `iterable`.\n *\n * @typeParam T - Iterated elements type.\n * @param iterable - An iterable of elements to perform actions on.\n * @param action - An action to perform on each iterable element. This is a function accepting an element as its only\n * parameter.\n */\nfunction itsEach(iterable, action) {\n    itsIterated(iterable, element => { action(element); });\n}\n\n/**\n * @internal\n */\nconst itsElements$defaultConverter = (element) => element;\nfunction itsElements(source, convert = itsElements$defaultConverter) {\n    if (isPushIterable(source)) {\n        return pushedElements(source, convert);\n    }\n    const it = iteratorOf(source);\n    return isPushIterable(it) ? pushedElements(it, convert) : Array.from(source, convert);\n}\n/**\n * @internal\n */\nfunction pushedElements(it, convert) {\n    const result = [];\n    pushIterated(it, element => { result.push(convert(element)); });\n    return result;\n}\n\n/**\n * Checks whether the given `iterable` is empty.\n *\n * @param iterable - An iterable or push iterable to check for elements.\n *\n * @returns `true` if the given iterable contains at least one element, or `false` otherwise.\n */\nfunction itsEmpty(iterable) {\n    if (isPushIterable(iterable)) {\n        return pushedEmpty(iterable);\n    }\n    const it = iteratorOf(iterable);\n    return isPushIterable(it) ? pushedEmpty(it) : !!it.next().done;\n}\n/**\n * @internal\n */\nfunction pushedEmpty(it) {\n    let isEmpty = true;\n    pushIterated(it, _element /* Unused parameter to prevent deoptimization */ => isEmpty = false);\n    return isEmpty;\n}\n\n/**\n * Tests whether all elements of the given `iterable` pass the test implemented by the provided function.\n *\n * @typeParam T - Iterated elements type.\n * @param iterable - An iterable to test elements of.\n * @param test - A predicate function to test each element. Returns `true` to continue tests, or `false` to stop it\n * and return `false` from the method call. It accepts the tested element as the only parameter.\n *\n * @returns `true` if the `test` function returned a truthy value for every element, or `false` otherwise.\n * Returns `true` for empty iterable.\n */\nfunction itsEvery(iterable, test) {\n    let allMatch = true;\n    itsIterated(iterable, element => {\n        allMatch = !!test(element);\n        if (!allMatch) {\n            return false;\n        }\n        return;\n    });\n    return allMatch;\n}\n\n/**\n * Searches for the value in `iterable`.\n *\n * @typeParam T - Iterated elements type.\n * @typeParam TFound - Found value type.\n * @param iterable - An iterable to extract element from.\n * @param search - A function extracting the value from elements. It is called for each iterated element until the value\n * found. Accepts element as the only parameter, and returns extracted value. If returns `false` or `undefined` the\n * search continues from the next element.\n *\n * @returns Either found value or `undefined`.\n */\nfunction itsFind(iterable, search) {\n    let find;\n    itsIterated(iterable, element => {\n        const result = search(element);\n        if (result !== false && result !== undefined) {\n            find = result;\n            return true;\n        }\n        return;\n    });\n    return find;\n}\n\n/**\n * Extracts the first element of the given `iterable`, if any.\n *\n * @typeParam T - Iterated elements type.\n * @param iterable - An iterable to extract element from.\n *\n * @returns Either the first element, or `undefined` if the given `iterable` is empty.\n */\nfunction itsFirst(iterable) {\n    if (isPushIterable(iterable)) {\n        return pushedFirst(iterable);\n    }\n    const it = iteratorOf(iterable);\n    return isPushIterable(it) ? pushedFirst(it) : rawFirst(it);\n}\n/**\n * @internal\n */\nfunction pushedFirst(it) {\n    let first;\n    pushIterated(it, element => {\n        first = element;\n        return false;\n    });\n    return first;\n}\n/**\n * @internal\n */\nfunction rawFirst(it) {\n    const result = it.next();\n    return result.done ? undefined : result.value;\n}\n\n/**\n * @internal\n */\nfunction toPushIterator(it, forNext) {\n    let over = false;\n    let iterate = (accept) => {\n        if ((over = !!accept && !forNext(accept))) {\n            iterate = PushIterator$dontIterate;\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            next = PushIterator$noNext;\n        }\n    };\n    let next = () => {\n        const res = it.next();\n        if (res.done) {\n            over = true;\n            iterate = PushIterator$dontIterate;\n            next = PushIterator$noNext;\n        }\n        return res;\n    };\n    return {\n        [Symbol.iterator]: PushIterator$iterator,\n        [PushIterator__symbol](accept) {\n            iterate(accept);\n            return this;\n        },\n        next() {\n            return next();\n        },\n        isOver: () => over,\n    };\n}\n/**\n * @internal\n */\nfunction rawIteratorPusher(it) {\n    return accept => {\n        for (;;) {\n            const res = it.next();\n            if (res.done) {\n                return false;\n            }\n            const status = accept(res.value);\n            if (typeof status === 'boolean') {\n                return status;\n            }\n        }\n    };\n}\n\n/**\n * Iterates over elements of the given iterable.\n *\n * Calls `accept` method for each iterated element until there are elements to iterate, or `accept` returned either\n * `true` or `false`.\n *\n * In contrast to {@link pushHead} function, this one accepts any iterable instance.\n *\n * @typeParam T - Iterated elements type.\n * @param iterable - An iterable to iterate elements of.\n * @param accept - A function to push iterated elements to. Accepts iterated element as its only parameter. May return\n * `true` to suspend iteration, or `false` to stop it.\n *\n * @returns A push iterator instance representing the tail of the given iterable. This iterator can be used to continue\n * iteration with, unless `accept` returned `false`. In the latter case the further iteration won't be possible.\n */\nfunction itsHead(iterable, accept) {\n    if (isPushIterable(iterable)) {\n        return pushHead(iterable, accept);\n    }\n    if (Array.isArray(iterable)) {\n        return arrayHead(iterable, accept);\n    }\n    return rawIterableHead(iterable, accept);\n}\n/**\n * @internal\n */\nfunction arrayHead(array, accept) {\n    return array.length ? iterateOverArray(array)(accept) : emptyPushIterator;\n}\n/**\n * @internal\n */\nfunction rawIterableHead(iterable, accept) {\n    const it = iteratorOf(iterable);\n    if (isPushIterable(it)) {\n        return pushHead(it, accept);\n    }\n    const forEach = rawIteratorPusher(it);\n    return forEach(accept) ? toPushIterator(it, forEach) : emptyPushIterator;\n}\n\n/**\n * Starts iteration over the given `iterable`.\n *\n * @typeParam T - Iterated elements type.\n * @param iterable - An iterable or push iterable to iterate over.\n *\n * @returns A push iterator iterating over the given iterable.\n */\nfunction itsIterator(iterable) {\n    const it = iteratorOf(iterable);\n    return isPushIterable(it) ? it : toPushIterator(it, rawIteratorPusher(it));\n}\n\n/**\n * Extracts the first element matching the given condition from `iterable`.\n *\n * @typeParam T - Iterated elements type.\n * @param iterable - An iterable to extract element from.\n * @param test - A predicate function to test elements. Returns truthy value for matching one. It accepts the tested\n * element as the only parameter.\n *\n * @returns Either the matching element, or `undefined` if no elements match.\n */\nfunction itsMatch(iterable, test) {\n    let match;\n    itsIterated(iterable, element => {\n        if (test(element)) {\n            match = element;\n            return true;\n        }\n        return;\n    });\n    return match;\n}\n\n/**\n * Applies a function against an accumulator and each element of the given `iterable` to reduce elements to a single\n * value.\n *\n * @typeParam T - Iterated elements type.\n * @typeParam TResult - A type of reduced value.\n * @param iterable - An iterable to reduce values of.\n * @param reducer - A function to apply the value returned from the previous `reducer` call and to each element.\n * @param initialValue - Initial value passed to the first `reducer` call.\n *\n * @returns Reduced value returned from the last `reducer` call, or `initialValue` if there is no elements in the given\n * `iterable`.\n */\nfunction itsReduction(iterable, reducer, initialValue) {\n    let reduced = initialValue;\n    itsIterated(iterable, element => { reduced = reducer(reduced, element); });\n    return reduced;\n}\n\n/**\n * Tests whether at least one element of the given `iterable` passes the test implemented by the provided function.\n *\n * @typeParam T - Iterated elements type.\n * @param iterable - An iterable to test elements of.\n * @param test - A predicate function to test each element. Returns `false` to continue tests, or `true` to stop it\n * and return `true` from the method call. It accepts the tested element as the only parameter.\n *\n * @returns `true` if the callback function returned a truthy value for at least one element in the array, or `false`\n * otherwise. Returns `false` for empty iterable.\n */\nfunction itsSome(iterable, test) {\n    let someMatches = false;\n    itsIterated(iterable, element => {\n        someMatches = !!test(element);\n        if (someMatches) {\n            return false;\n        }\n        return;\n    });\n    return someMatches;\n}\n\n/**\n * Returns a {@link PushIterator | push iterable iterator} without elements.\n *\n * @typeParam T - Iterated elements type.\n *\n * @returns Empty push iterable and push iterator instance.\n */\nfunction overNone() {\n    return emptyPushIterator;\n}\n\n/**\n * Creates a {@link PushIterable | push iterable} over elements of iterator created by the given function.\n *\n * @typeParam T - Iterated elements type.\n * @param iterate - A function creating new iterator.\n *\n * @returns New push iterable over elements of created iterator.\n */\nfunction overIterator(iterate) {\n    return makePushIterable(iterateOverRawIterator(iterate));\n}\n/**\n * @internal\n */\nfunction iterateOverRawIterator(iterate) {\n    return accept => {\n        const it = iterate();\n        if (isPushIterable(it)) {\n            return it[PushIterator__symbol](accept);\n        }\n        const forNext = rawIteratorPusher(it);\n        return accept && !forNext(accept) ? overNone() : toPushIterator(it, forNext);\n    };\n}\n\n/**\n * Creates a {@link PushIterable | push iterable} over elements of the given raw iterable.\n *\n * @typeParam T - Iterated elements type.\n * @param iterable - An iterable to iterate over elements of.\n *\n * @returns New push iterable over elements of the given `iterable`.\n */\nfunction overIterable(iterable) {\n    return Array.isArray(iterable)\n        ? overArray(iterable)\n        : overIterator(() => iteratorOf(iterable));\n}\n\n/**\n * Creates a {@link PushIterable | push iterable} over elements of other iterables.\n *\n * @typeParam T - Iterated elements type.\n * @param sources - Source iterables to iterate over elements of.\n *\n * @returns New push iterable over elements of the given `sources`.\n */\nfunction overElementsOf(...sources) {\n    return sources.length > 1\n        ? makePushIterable(iterateOverSubElements(sources))\n        : (sources.length\n            ? overIterable(sources[0])\n            : overNone());\n}\n/**\n * @internal\n */\nfunction iterateOverSubElements(sources) {\n    return accept => {\n        let i = 0;\n        let src = sources[0];\n        const forNext = (accept) => {\n            for (;;) {\n                // eslint-disable-next-line @typescript-eslint/no-invalid-void-type\n                let status;\n                const srcTail = itsHead(src, element => status = accept(element));\n                if (srcTail.isOver()) {\n                    if (++i >= sources.length) {\n                        return false;\n                    }\n                    src = sources[i];\n                }\n                else {\n                    src = srcTail;\n                }\n                if (typeof status === 'boolean') {\n                    return status;\n                }\n            }\n        };\n        return accept && !forNext(accept) ? overNone() : makePushIterator(forNext);\n    };\n}\n\n/**\n * Creates a {@link PushIterable | push iterable} over items of {@link IndexedItemList | indexed list}.\n *\n * @typeParam T - Indexed items type.\n * @param indexed - An indexed list of items. E.g. DOM `NodeList`.\n *\n * @returns New push iterable over list items.\n */\nfunction overIndexed(indexed) {\n    return makePushIterable(iterateOverIndexed(indexed, indexedItemOf));\n}\n\n/**\n * Creates a {@link PushIterable | push iterable} over one value.\n *\n * @typeParam T - Iterated element value type.\n * @param value - A value to iterate over.\n *\n * @returns New push iterable over the given value.\n */\nfunction overOne(value) {\n    return makePushIterable(iterateOverOneValue(value));\n}\n/**\n * @internal\n */\nfunction iterateOverOneValue(value) {\n    return accept => {\n        if (accept) {\n            accept(value);\n            return overNone();\n        }\n        let over = false;\n        return {\n            [Symbol.iterator]: PushIterator$iterator,\n            [PushIterator__symbol](accept) {\n                if (over) {\n                    return overNone();\n                }\n                if (accept) {\n                    over = true;\n                    accept(value);\n                    return overNone();\n                }\n                return this;\n            },\n            next() {\n                if (over) {\n                    return { done: over };\n                }\n                over = true;\n                return { value };\n            },\n            isOver: () => over,\n        };\n    };\n}\n\n/**\n * Creates a {@link PushIterable | push iterable} over many values.\n *\n * @typeParam T - Iterated elements value type.\n * @param values - Values to iterate over.\n *\n * @returns New push iterable over the given values.\n */\nfunction overMany(...values) {\n    return values.length > 1\n        ? overArray(values)\n        : (values.length\n            ? overOne(values[0])\n            : overNone());\n}\n\n/**\n * Creates a {@link PushIterable | push iterable} over elements of array-like structure in reverse order.\n *\n * @typeParam T - Array elements type.\n * @param array - An array-like structure. E.g. `Array`, DOM `NodeList`, etc.\n *\n * @returns New push iterable over array elements in reverse order.\n */\nfunction reverseArray(array) {\n    return makePushIterable(iterateOverArrayReversely(array));\n}\n/**\n * @internal\n */\nfunction iterateOverArrayReversely(array) {\n    return accept => {\n        let i = array.length - 1;\n        const forNext = (accept) => {\n            if (i < 0) {\n                return false;\n            }\n            for (;;) {\n                const status = accept(array[i--]);\n                if (i < 0) {\n                    return false;\n                }\n                if (typeof status === 'boolean') {\n                    return true;\n                }\n            }\n        };\n        if (accept && !forNext(accept)) {\n            return overNone();\n        }\n        let over = false;\n        let iterate = (accept) => {\n            if (accept && !forNext(accept)) {\n                over = true;\n                iterate = PushIterator$dontIterate;\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                next = PushIterator$noNext;\n            }\n        };\n        let next = () => {\n            if (i < 0) {\n                over = true;\n                iterate = PushIterator$dontIterate;\n                next = PushIterator$noNext;\n                return { done: true };\n            }\n            return { value: array[i--] };\n        };\n        return {\n            [Symbol.iterator]: PushIterator$iterator,\n            [PushIterator__symbol](accept) {\n                iterate(accept);\n                return this;\n            },\n            next: () => next(),\n            isOver: () => over,\n        };\n    };\n}\n\n/**\n * Creates a {@link PushIterable | push iterable} over keys of the given object.\n *\n * A list of keys is constructed using `Reflect.ownKeys()`.\n *\n * @typeParam TObj - Source object type.\n * @param source - An object to select keys from.\n *\n * @returns New push iterable over own object keys retrieved by `Reflect.ownKeys()`.\n */\nfunction overKeys(source) {\n    return overArray(Reflect.ownKeys(source));\n}\n\n/**\n * @internal\n */\nfunction iterateOverFilteredIndexed(indexed, elementOf, test) {\n    return accept => {\n        let i = 0;\n        const forNext = (accept) => {\n            for (;;) {\n                if (i >= indexed.length) {\n                    return false;\n                }\n                const value = elementOf(indexed, i++);\n                if (test(value)) {\n                    const status = accept(value);\n                    if (typeof status === 'boolean') {\n                        return status;\n                    }\n                }\n            }\n        };\n        if (accept && !forNext(accept)) {\n            return overNone();\n        }\n        let over = false;\n        let iterate = (accept) => {\n            if (accept && !forNext(accept)) {\n                over = true;\n                iterate = PushIterator$dontIterate;\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                next = PushIterator$noNext;\n            }\n        };\n        let next = () => {\n            for (;;) {\n                if (i >= indexed.length) {\n                    over = true;\n                    iterate = PushIterator$dontIterate;\n                    next = PushIterator$noNext;\n                    return { done: true };\n                }\n                const value = elementOf(indexed, i++);\n                if (test(value)) {\n                    return { value };\n                }\n            }\n        };\n        return {\n            [Symbol.iterator]: PushIterator$iterator,\n            [PushIterator__symbol](accept) {\n                iterate(accept);\n                return this;\n            },\n            next: () => next(),\n            isOver: () => over,\n        };\n    };\n}\n\nfunction filterArray(array, test) {\n    return makePushIterable(iterateOverFilteredIndexed(array, arrayElementOf, test));\n}\n\nfunction filterIndexed(indexed, test) {\n    return makePushIterable(iterateOverFilteredIndexed(indexed, indexedItemOf, test));\n}\n\nfunction filterIt(source, test) {\n    return makePushIterable(accept => {\n        const forNext = isPushIterable(source) ? filterPusher(source, test) : filterRawPusher(source, test);\n        return accept && !forNext(accept) ? overNone() : makePushIterator(forNext);\n    });\n}\n/**\n * @internal\n */\nfunction filterPusher(source, test) {\n    return accept => {\n        const tail = pushHead(source, element => {\n            if (test(element)) {\n                return accept(element);\n            }\n            return;\n        });\n        source = tail;\n        return !tail.isOver();\n    };\n}\n/**\n * @internal\n */\nfunction filterRawPusher(source, test) {\n    const it = iteratorOf(source);\n    if (isPushIterable(it)) {\n        return filterPusher(it, test);\n    }\n    return accept => {\n        for (;;) {\n            const next = it.next();\n            if (next.done) {\n                return false;\n            }\n            const value = next.value;\n            if (test(value)) {\n                const status = accept(value);\n                if (typeof status === 'boolean') {\n                    return status;\n                }\n            }\n        }\n    };\n}\n\n/**\n * @internal\n */\nfunction iterateOverFlattenedIndexed(indexed, elementsOf) {\n    return accept => {\n        let i = 0;\n        let subs;\n        const forNext = (accept) => {\n            if (i >= indexed.length) {\n                return false;\n            }\n            if (!subs) {\n                subs = elementsOf(indexed, i);\n            }\n            for (;;) {\n                let status;\n                const subsTail = itsHead(subs, element => status = accept(element));\n                if (subsTail.isOver()) {\n                    if (++i >= indexed.length) {\n                        return false;\n                    }\n                    subs = elementsOf(indexed, i);\n                }\n                else {\n                    subs = subsTail;\n                }\n                if (typeof status === 'boolean') {\n                    return status;\n                }\n            }\n        };\n        return accept && !forNext(accept) ? overNone() : makePushIterator(forNext);\n    };\n}\n\nfunction flatMapArray(array, convert) {\n    return makePushIterable(iterateOverFlattenedIndexed(array, convert\n        ? (array, index) => convert(array[index])\n        : flatMapArray$defaultElementOf));\n}\n/**\n * @internal\n */\nfunction flatMapArray$defaultElementOf(array, index) {\n    return array[index];\n}\n\nfunction flatMapIndexed(indexed, convert) {\n    return makePushIterable(iterateOverFlattenedIndexed(indexed, convert\n        ? (indexed, index) => convert(indexed.item(index))\n        : flatMapIndexed$defaultElementOf));\n}\n/**\n * @internal\n */\nfunction flatMapIndexed$defaultElementOf(indexed, index) {\n    return indexed.item(index);\n}\n\nfunction flatMapIt(source, convert = flatMapIt$defaultConverter) {\n    return makePushIterable(accept => {\n        const forNext = isPushIterable(source) ? flatMapPusher(source, convert) : flatMapRawPusher(source, convert);\n        return accept && !forNext(accept) ? overNone() : makePushIterator(forNext);\n    });\n}\n/**\n * @internal\n */\nfunction flatMapPusher(source, convert) {\n    let subs;\n    let lastSrc = false;\n    return accept => {\n        for (;;) {\n            while (!subs) {\n                const sourceTail = pushHead(source, src => {\n                    subs = convert(src);\n                    return true;\n                });\n                source = sourceTail;\n                if (sourceTail.isOver()) {\n                    if (!subs) {\n                        return false;\n                    }\n                    lastSrc = true;\n                }\n            }\n            // eslint-disable-next-line @typescript-eslint/no-invalid-void-type\n            let status;\n            const subsTail = itsHead(subs, element => status = accept(element));\n            if (subsTail.isOver()) {\n                subs = undefined;\n                if (lastSrc) {\n                    return false;\n                }\n            }\n            else {\n                subs = subsTail;\n            }\n            if (typeof status === 'boolean') {\n                return status;\n            }\n        }\n    };\n}\n/**\n * @internal\n */\nfunction flatMapRawPusher(source, convert) {\n    const it = iteratorOf(source);\n    if (isPushIterable(it)) {\n        return flatMapPusher(it, convert);\n    }\n    let subs;\n    return accept => {\n        for (;;) {\n            if (!subs) {\n                const next = it.next();\n                if (next.done) {\n                    return false;\n                }\n                subs = convert(next.value);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-invalid-void-type\n            let status;\n            const subsTail = itsHead(subs, element => status = accept(element));\n            subs = subsTail.isOver() ? undefined : subsTail;\n            if (typeof status === 'boolean') {\n                return status;\n            }\n        }\n    };\n}\n/**\n * @internal\n */\nfunction flatMapIt$defaultConverter(element) {\n    return element;\n}\n\n/**\n * Creates a {@link PushIterable | push iterable} with the results of calling a provided function on every element\n * of the given `array`.\n *\n * @typeParam TSrc - A type of array elements.\n * @typeParam TConv - A type of converted elements.\n * @param array - A source array-like instance.\n * @param convert - A function that produces an element of new iterable, taking array element as the only parameter.\n *\n * @returns New push iterable of transformed elements.\n */\nfunction mapArray(array, convert) {\n    return makePushIterable(iterateOverIndexed(array, (array, index) => convert(array[index])));\n}\n\n/**\n * Creates a {@link PushIterable | push iterable} with the results of calling a provided function on every item of the\n * given indexed list.\n *\n * @typeParam TSrc - A type of indexed list items.\n * @typeParam TConv - A type of converted elements.\n * @param indexed - A source indexed items list.\n * @param convert - A function that produces an element of new iterable, taking list item as the only parameter.\n *\n * @returns New push iterable of transformed elements.\n */\nfunction mapIndexed(indexed, convert) {\n    return makePushIterable(iterateOverIndexed(indexed, (list, index) => convert(list.item(index) /* The index is always valid */)));\n}\n\n/**\n * Creates a {@link PushIterable | push iterable} with the results of calling a provided function on every element\n * of the `source` iterable.\n *\n * @typeParam TSrc - A type of source elements.\n * @typeParam TConv - A type of converted elements.\n * @param source - A source iterable.\n * @param convert - A function that produces an element of the new iterable, taking the source element as the only\n * parameter.\n *\n * @returns New push iterable of transformed elements.\n */\nfunction mapIt(source, convert) {\n    return makePushIterable(accept => {\n        const forNext = isPushIterable(source) ? mapPusher(source, convert) : mapRawPusher(source, convert);\n        return accept && !forNext(accept) ? overNone() : makePushIterator(forNext);\n    });\n}\n/**\n * @internal\n */\nfunction mapPusher(source, convert) {\n    return accept => {\n        const tail = pushHead(source, element => accept(convert(element)));\n        source = tail;\n        return !tail.isOver();\n    };\n}\n/**\n * @internal\n */\nfunction mapRawPusher(source, convert) {\n    const it = iteratorOf(source);\n    if (isPushIterable(it)) {\n        return mapPusher(it, convert);\n    }\n    return accept => {\n        for (;;) {\n            const next = it.next();\n            if (next.done) {\n                return false;\n            }\n            const status = accept(convert(next.value));\n            if (typeof status === 'boolean') {\n                return status;\n            }\n        }\n    };\n}\n\n/**\n * @internal\n */\nfunction iterateOverValuedIndexed(indexed, elementOf, valueOf) {\n    return accept => {\n        let i = 0;\n        const forNext = (accept) => {\n            for (;;) {\n                if (i >= indexed.length) {\n                    return false;\n                }\n                const value = valueOf(elementOf(indexed, i++));\n                if (value != null && value !== false) {\n                    const status = accept(value);\n                    if (typeof status === 'boolean') {\n                        return status;\n                    }\n                }\n            }\n        };\n        if (accept && !forNext(accept)) {\n            return overNone();\n        }\n        let over = false;\n        let iterate = (accept) => {\n            if (accept && !forNext(accept)) {\n                over = true;\n                iterate = PushIterator$dontIterate;\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                next = PushIterator$noNext;\n            }\n        };\n        let next = () => {\n            for (;;) {\n                if (i >= indexed.length) {\n                    over = true;\n                    iterate = PushIterator$dontIterate;\n                    next = PushIterator$noNext;\n                    return { done: true };\n                }\n                const value = valueOf(elementOf(indexed, i++));\n                if (value != null && value !== false) {\n                    return { value };\n                }\n            }\n        };\n        return {\n            [Symbol.iterator]: PushIterator$iterator,\n            [PushIterator__symbol](accept) {\n                iterate(accept);\n                return this;\n            },\n            next: () => next(),\n            isOver: () => over,\n        };\n    };\n}\n\n/**\n * Creates a {@link PushIterable | push iterable} with the values of elements of the given `array`.\n *\n * Element value is the result of provided function call, except `false`, `null`, and `undefined` which are filtered\n * out.\n *\n * This can be used as a more effective {@link mapArray} / {@link filterIt} combination.\n *\n * @typeParam T - A type of array elements.\n * @typeParam TValue - A type of array element values.\n * @param array - A source array.\n * @param valueOf - A function that values elements, taking the source element as the only parameter, and returning\n * either its value, or `false`/`null`/`undefined` to filter it out.\n *\n * @returns New push iterable with array element values.\n */\nfunction valueArray(array, valueOf) {\n    return makePushIterable(iterateOverValuedIndexed(array, arrayElementOf, valueOf));\n}\n\n/**\n * Creates a {@link PushIterable | push iterable} with the values of items of the given indexed list.\n *\n * Item value is the result of provided function call, except `false`, `null`, and `undefined` which are filtered out.\n *\n * This can be used as a more effective {@link mapIndexed} / {@link filterIt} combination.\n *\n * @typeParam T - Indexed items type.\n * @typeParam TValue - A type of item values.\n * @param indexed - A source indexed items list.\n * @param valueOf - A function that values items, taking the source item as the only parameter, and returning either\n * its value, or `false`/`null`/`undefined` to filter it out.\n *\n * @returns New push iterable with the item values.\n */\nfunction valueIndexed(indexed, valueOf) {\n    return makePushIterable(iterateOverValuedIndexed(indexed, indexedItemOf, valueOf));\n}\n\n/**\n * Creates a {@link PushIterable | push iterable} with the values of elements of the `source` iterable.\n *\n * Element value is the result of provided function call, except `false`, `null`, and `undefined` which are filtered\n * out.\n *\n * This can be used as a more effective {@link mapIt} / {@link filterIt} combination.\n *\n * @typeParam T - A type of source elements.\n * @typeParam TValue - A type of source element values.\n * @param source - A source iterable.\n * @param valueOf - A function that values elements, taking the source element as the only parameter, and returning\n * either its value, or `false`/`null`/`undefined` to filter it out.\n *\n * @returns New push iterable with the element values.\n */\nfunction valueIt(source, valueOf) {\n    return makePushIterable(accept => {\n        const forNext = isPushIterable(source) ? valuePusher(source, valueOf) : valueRawPusher(source, valueOf);\n        return accept && !forNext(accept) ? overNone() : makePushIterator(forNext);\n    });\n}\n/**\n * @internal\n */\nfunction valuePusher(source, valueOf) {\n    return accept => {\n        const tail = pushHead(source, element => {\n            const value = valueOf(element);\n            if (value != null && value !== false) {\n                return accept(value);\n            }\n            return;\n        });\n        source = tail;\n        return !tail.isOver();\n    };\n}\n/**\n * @internal\n */\nfunction valueRawPusher(source, valueOf) {\n    const it = iteratorOf(source);\n    if (isPushIterable(it)) {\n        return valuePusher(it, valueOf);\n    }\n    return accept => {\n        for (;;) {\n            const next = it.next();\n            if (next.done) {\n                return false;\n            }\n            const value = valueOf(next.value);\n            if (value != null && value !== false) {\n                const status = accept(value);\n                if (typeof status === 'boolean') {\n                    return status;\n                }\n            }\n        }\n    };\n}\n\n/**\n * Creates a {@link PushIterable | push iterable} over the property key/value entries of the given object.\n *\n * A list of keys is constructed using `Reflect.ownKeys()`.\n *\n * @typeParam TObj - Object type.\n *\n * @param source - An object to select keys and values from.\n *\n * @returns New push iterable of object property entries.\n */\nfunction overEntries(source) {\n    return mapIt(overKeys(source), key => [key, source[key]]);\n}\n\nexport { PushIterator__symbol, filterArray, filterIndexed, filterIt, flatMapArray, flatMapIndexed, flatMapIt, isPushIterable, iteratorOf, itsEach, itsElements, itsEmpty, itsEvery, itsFind, itsFirst, itsHead, itsIterated, itsIterator, itsMatch, itsReduction, itsSome, makePushIterable, makePushIterator, mapArray, mapIndexed, mapIt, overArray, overElementsOf, overEntries, overIndexed, overIterable, overIterator, overKeys, overMany, overNone, overOne, pushHead, pushIterated, reverseArray, valueArray, valueIndexed, valueIt };\n//# sourceMappingURL=push-iterator.js.map\n","/**\n * @internal\n */\nlet Supply$unexpectedAbort = Supply$unexpectedAbort$byDefault;\n/**\n * @internal\n */\nfunction Supply$unexpectedAbort$handle(handler = Supply$unexpectedAbort$byDefault) {\n    Supply$unexpectedAbort = handler;\n}\nfunction Supply$unexpectedAbort$byDefault(reason) {\n    console.error('Supply aborted unexpectedly.', reason);\n}\n\nlet Supply$off = false;\nlet Supply$off$unexpected$reasons;\n/**\n * @internal\n */\nfunction Supply$off$start() {\n    const prevOff = Supply$off;\n    Supply$off = true;\n    return prevOff;\n}\n/**\n * @internal\n */\nfunction Supply$off$unexpected(reason) {\n    if (reason !== undefined) {\n        if (!Supply$off$unexpected$reasons) {\n            Supply$off$unexpected$reasons = new Set();\n        }\n        Supply$off$unexpected$reasons.add(reason);\n    }\n}\n/**\n * @internal\n */\nfunction Supply$off$end(prevOff) {\n    Supply$off = prevOff;\n    if (!prevOff) {\n        const reasons = Supply$off$unexpected$reasons;\n        if (reasons) {\n            Supply$off$unexpected$reasons = undefined;\n            for (const reason of reasons) {\n                Supply$unexpectedAbort(reason);\n            }\n        }\n    }\n}\n\n/**\n * @internal\n */\nconst SupplyState__symbol = ( /*#__PURE__*/Symbol('SupplyState'));\nconst SupplyState$done = {\n    isOff: true,\n    off: SupplyState$done$off,\n    whenOff(_supply, callback) {\n        callback();\n    },\n};\nfunction SupplyState$off(reason) {\n    if (reason === undefined) {\n        return SupplyState$done;\n    }\n    return {\n        isOff: true,\n        off: SupplyState$done$off,\n        whenOff(_supply, callback) {\n            callback(reason);\n        },\n    };\n}\nfunction SupplyState$done$off(_supply, _reason) {\n    /* no off */\n}\n/**\n * @internal\n */\nconst SupplyState$noCallback = {\n    isOff: false,\n    off(supply, reason) {\n        const prevOff = Supply$off$start();\n        try {\n            supply[SupplyState__symbol] = SupplyState$off(reason);\n            Supply$off$unexpected(reason);\n        }\n        finally {\n            Supply$off$end(prevOff);\n        }\n    },\n    whenOff(supply, callback) {\n        supply[SupplyState__symbol] = SupplyState$withCallback(callback);\n    },\n};\n/**\n * @internal\n */\nfunction SupplyState$withCallback(off) {\n    return {\n        isOff: false,\n        off(supply, reason) {\n            const prevOff = Supply$off$start();\n            try {\n                supply[SupplyState__symbol] = SupplyState$off(reason);\n                off(reason);\n            }\n            finally {\n                Supply$off$end(prevOff);\n            }\n        },\n        whenOff(_supply, callback) {\n            const prev = off;\n            off = reason => {\n                prev(reason);\n                callback(reason);\n            };\n        },\n    };\n}\n\n/**\n * Supply handle.\n *\n * Represents a supply of something.\n *\n * The supply can be {@link off cut off}, and can {@link whenOff inform} on cutting off.\n */\nclass Supply {\n    /**\n     * Constructs new supply instance.\n     *\n     * @param off - A function to call when the supply is {@link Supply.off cut off}. Accepts optional cut off reason\n     * as its only parameter. No-op by default.\n     */\n    constructor(off) {\n        this[SupplyState__symbol] = off ? SupplyState$withCallback(off) : SupplyState$noCallback;\n    }\n    /**\n     * Assigns unexpected abort handler.\n     *\n     * When a supply {@link off aborted}, and there is no {@link whenOff cut off callback} registered, the given handler\n     * will be called with the abort reason.\n     *\n     * By default, the unexpected abort reason will be logged to console.\n     *\n     * @param handler - A handler to call on unexpected abort, or `undefined` to reset to default one.\n     */\n    static onUnexpectedAbort(handler) {\n        Supply$unexpectedAbort$handle(handler);\n    }\n    /**\n     * `this` supply instance.\n     */\n    get supply() {\n        return this;\n    }\n    /**\n     * Whether this supply is {@link off cut off} already.\n     *\n     * `true` means nothing would be supplied any more.\n     */\n    get isOff() {\n        return this[SupplyState__symbol].isOff;\n    }\n    /**\n     * Cuts off this supply.\n     *\n     * After this method call nothing would be supplied any more.\n     *\n     * Calling this method for the second time has no effect.\n     *\n     * @param reason - An optional reason why the supply is cut off. It will be reported to {@link whenOff} callbacks.\n     * By convenience, an absent reason means the supply is done successfully.\n     *\n     * @returns The cut off supply instance.\n     */\n    off(reason) {\n        this[SupplyState__symbol].off(this, reason);\n        return this;\n    }\n    /**\n     * Registers a callback function that will be called as soon as this supply is {@link off cut off}. This callback\n     * will be called immediately if {@link isOff} is `true`.\n     *\n     * @param callback - A callback function accepting optional cut off reason as its only parameter.\n     * By convenience an `undefined` reason means the supply is done successfully.\n     *\n     * @returns `this` instance.\n     */\n    whenOff(callback) {\n        this[SupplyState__symbol].whenOff(this, callback);\n        return this;\n    }\n    /**\n     * Builds a promise that will be resolved once this supply is {@link off done}.\n     *\n     * @returns A promise that will be successfully resolved once this supply is cut off without a reason, or rejected\n     * once this supply is cut off with any reason except `undefined`.\n     */\n    whenDone() {\n        return new Promise((resolve, reject) => this.whenOff(reason => reason === undefined ? resolve() : reject(reason)));\n    }\n    /**\n     * Makes another supply depend on this one.\n     *\n     * Once this supply is {@link off cut off}, `another` one will be cut off with the same reason.\n     *\n     * Calling this method has the same effect as calling `another.supply.needs(this)`.\n     *\n     * @param another - A supply peer to make dependent on this one.\n     *\n     * @returns `this` instance.\n     */\n    cuts(another) {\n        another.supply.needs(this);\n        return this;\n    }\n    /**\n     * Makes this supply depend on another one.\n     *\n     * Once `another` supply is {@link off cut off}, this one will be cut off with the same reason.\n     *\n     * @param another - A supply peer to make this one depend on.\n     *\n     * @returns `this` instance.\n     */\n    needs(another) {\n        another.supply.whenOff(reason => this.off(reason));\n        return this;\n    }\n    /**\n     * Makes this and another supply depend on each other.\n     *\n     * Calling this method is the same as calling `.needs(another).cuts(another)`.\n     *\n     * @param another - A supply peer to make this one to mutually depend on.\n     *\n     * @returns `this` instance.\n     */\n    as(another) {\n        return this.needs(another).cuts(another);\n    }\n}\n\n/**\n * @internal\n */\nclass AlwaysSupply extends Supply {\n    get isOff() {\n        return false;\n    }\n    off(_reason) {\n        return this;\n    }\n    whenOff(_callback) {\n        return this;\n    }\n    cuts(_another) {\n        return this;\n    }\n    needs(_another) {\n        return this;\n    }\n}\n/**\n * @internal\n */\nconst alwaysSupply$ = ( /*#__PURE__*/new AlwaysSupply());\n/**\n * Builds an always-supply instance.\n *\n * The {@link Supply.off} method of the returned supply does nothing.\n *\n * @returns A supply instance that can not be cut off.\n */\nfunction alwaysSupply() {\n    return alwaysSupply$;\n}\n/**\n * Checks whether the given supply is an {@link AlwaysSupply | always-supply} instance.\n *\n * @param supply - A supply to check.\n *\n * @returns `true` is the given `supply` can not be cut off, or `false` otherwise.\n */\nfunction isAlwaysSupply(supply) {\n    return supply === alwaysSupply$;\n}\n\n/**\n * @internal\n */\nclass NeverSupply extends Supply {\n    get isOff() {\n        return true;\n    }\n    off() {\n        return this;\n    }\n    whenOff(callback) {\n        callback();\n        return this;\n    }\n    cuts(another) {\n        another.supply.off();\n        return this;\n    }\n    needs(_another) {\n        return this;\n    }\n}\n/**\n * @internal\n */\nconst neverSupply$ = ( /*#__PURE__*/new NeverSupply());\n/**\n * Builds a never-supply instance.\n *\n * @returns A supply instance that is already cut off without any particular reason.\n */\nfunction neverSupply() {\n    return neverSupply$;\n}\n\nexport { Supply, alwaysSupply, isAlwaysSupply, neverSupply };\n//# sourceMappingURL=supply.js.map\n","import { valueProvider, lazyValue, valuesProvider, noop } from '@proc7ts/primitives';\nimport { overNone, overElementsOf, valueIt, itsEmpty, itsElements, overIterator } from '@proc7ts/push-iterator';\nimport { Supply, alwaysSupply } from '@proc7ts/supply';\n\n/**\n * An error indicating the absence of context value with the given key.\n */\nclass ContextKeyError extends Error {\n    /**\n     * Constructs an invalid context key error.\n     *\n     * @param key - Missing value key.\n     * @param message - Arbitrary error message.\n     */\n    constructor(key, message = `There is no value with key ${key}`) {\n        super(message);\n        this.key = key;\n    }\n}\n\n/**\n * A symbol of the property containing a {@link ContextKey} instance.\n */\nconst ContextKey__symbol = ( /*#__PURE__*/Symbol('ContextKey'));\n/**\n * Context value key.\n *\n * Every key should be an unique instance of this class.\n *\n * Multiple source values pay be provided per per value key. They all grouped into single seed.\n * The value is grown from this seed by {@link ContextKey.grow} method.\n *\n * @typeParam TValue - Context value type.\n * @typeParam TSrc - Source value type.\n * @typeParam TSeed - Value seed type.\n */\nclass ContextKey {\n    /**\n     * Constructs context value key.\n     *\n     * @param name - Human-readable key name.\n     */\n    constructor(name) {\n        this.name = name;\n    }\n    /**\n     * Always the key itself.\n     *\n     * This is to use this context value key both as a context value request and its definition target.\n     */\n    get [ContextKey__symbol]() {\n        return this;\n    }\n    toString() {\n        return `ContextKey(${this.name})`;\n    }\n}\n\n/**\n * A key of context value holding a seed of context value.\n *\n * @typeParam TSrc - Source value type.\n * @typeParam TSeed - Value seed type.\n */\nclass ContextSeedKey extends ContextKey {\n    /**\n     * Constructs context value sources key.\n     *\n     * @param key - A key of context value having its sources associated with this key.\n     */\n    constructor(key) {\n        super(`${key.name}:seed`);\n    }\n    /**\n     * Always refers to itself.\n     */\n    get seedKey() {\n        return this;\n    }\n    grow(opts) {\n        const { seeder, seed } = opts;\n        if (!seeder.isEmpty(seed)) {\n            opts.insert(seed);\n        }\n        else if (!opts.hasFallback) {\n            opts.insert(seed);\n        }\n    }\n}\n\n/**\n * The values available from context.\n *\n * The values are available by their keys.\n */\nclass ContextValues {\n}\n\n/**\n * A key of {@link Contextual contextual value reference} method resolving a contextual instance.\n */\nconst Contextual__symbol = ( /*#__PURE__*/Symbol('Contextual'));\nfunction isContextual(value) {\n    return !!value\n        && (typeof value === 'object' || typeof value === 'function')\n        && typeof value[Contextual__symbol] === 'function';\n}\n\nfunction applyContextTo(value) {\n    return isContextual(value)\n        ? context => value[Contextual__symbol](context)\n        : valueProvider(value);\n}\n\n/**\n * @internal\n */\nclass IterativeContextSeeder {\n    constructor() {\n        this._providers = new Map();\n    }\n    provide(provider) {\n        const supply = new Supply();\n        this._providers.set(supply, provider);\n        return supply.whenOff(() => this._providers.delete(supply));\n    }\n    seed(context, initial = overNone()) {\n        return overElementsOf(initial, iterativeSeed(context, this._providers));\n    }\n    isEmpty(seed) {\n        return itsEmpty(seed);\n    }\n    combine(first, second) {\n        return overElementsOf(first, second);\n    }\n}\n/**\n * @internal\n */\nclass IterativeSeedKey extends ContextSeedKey {\n    seeder() {\n        return new IterativeContextSeeder();\n    }\n}\n/**\n * Iterative context value key implementation.\n *\n * Collects value sources as iterable instance.\n *\n * A context value associated with this key is never changes once constructed.\n *\n * @typeParam TValue - Context value type.\n * @typeParam TSrc - Source value type.\n */\nclass IterativeContextKey extends ContextKey {\n    /**\n     * Constructs iterative context value key.\n     *\n     * @param name - Human-readable key name.\n     * @param seedKey - Value seed key. A new one will be constructed when omitted.\n     */\n    constructor(name, { seedKey, } = {}) {\n        super(name);\n        this.seedKey = seedKey || new IterativeSeedKey(this);\n    }\n}\n/**\n * @internal\n */\nfunction iterativeSeed(context, providers) {\n    // Lazily evaluated providers\n    const lazyProviders = itsElements(overIterator(() => providers.values()), provider => lazyValue(provider.bind(undefined, context)));\n    return valueIt(lazyProviders, provider => provider());\n}\n\n/**\n * Multiple context values key.\n *\n * Represents context value as read-only array of source values.\n *\n * Associated with empty array by default.\n *\n * @typeParam TSrc - TValue source type and context value item type.\n */\nclass MultiContextKey extends IterativeContextKey {\n    /**\n     * Constructs multiple context values key.\n     *\n     * @param name - Human-readable key name.\n     * @param seedKey - Value seed key. A new one will be constructed when omitted.\n     * @param byDefault - Optional default value provider. If unspecified then the default value is empty array.\n     */\n    constructor(name, { seedKey, byDefault = valuesProvider(), } = {}) {\n        super(name, seedKey);\n        this.byDefault = byDefault;\n    }\n    grow(slot) {\n        const result = itsElements(slot.seed);\n        if (result.length) {\n            slot.insert(result);\n        }\n        else if (!slot.hasFallback) {\n            const defaultSources = this.byDefault(slot.context, this);\n            if (defaultSources) {\n                slot.insert(Array.from(defaultSources));\n            }\n        }\n    }\n}\n\nclass SimpleContextSeeder {\n    constructor() {\n        this._providers = [];\n    }\n    provide(provider) {\n        // Ensure the same provider may be registered multiple times\n        const entry = [provider];\n        this._providers.push(entry);\n        return new Supply(() => this._providers.splice(this._providers.indexOf(entry), 1));\n    }\n    seed(context, initial) {\n        const { length } = this._providers;\n        if (!length) {\n            return initial || noop;\n        }\n        const makeSeed = ([provider]) => lazyValue(provider.bind(undefined, context));\n        const seeds = length > 1\n            ? combineSimpleSeeds(this._providers.map(makeSeed))\n            : makeSeed(this._providers[0]);\n        return initial ? combineTwoSimpleSeeds(initial, seeds) : seeds;\n    }\n    isEmpty(seed) {\n        return seed() == null;\n    }\n    combine(first, second) {\n        if (first === noop) {\n            return second;\n        }\n        if (second === noop) {\n            return first;\n        }\n        return combineTwoSimpleSeeds(first, second);\n    }\n}\nfunction combineSimpleSeeds(seeds) {\n    return lazyValue(() => {\n        for (let i = seeds.length - 1; i >= 0; --i) {\n            const value = seeds[i]();\n            if (value != null) {\n                return value;\n            }\n        }\n        return;\n    });\n}\nfunction combineTwoSimpleSeeds(first, second) {\n    return lazyValue(() => { var _a; return (_a = second()) !== null && _a !== void 0 ? _a : first(); });\n}\nclass SimpleSeedKey extends ContextSeedKey {\n    seeder() {\n        return new SimpleContextSeeder();\n    }\n}\n/**\n * Simple context value key implementation.\n *\n * Collects the most recent source value.\n *\n * A context value associated with this key is never changes once constructed.\n *\n * @typeParam TValue - Context value type.\n * @typeParam TSrc - Source value type.\n */\nclass SimpleContextKey extends ContextKey {\n    /**\n     * Constructs simple context value key.\n     *\n     * @param name - Human-readable key name.\n     * @param seedKey - Value seed key. A new one will be constructed when omitted.\n     */\n    constructor(name, { seedKey, } = {}) {\n        super(name);\n        this.seedKey = seedKey || new SimpleSeedKey(this);\n    }\n}\n\n/**\n * Single context value key.\n *\n * Treats the last source value as context one and ignores the rest of them.\n *\n * @typeParam TValue - Context value type.\n */\nclass SingleContextKey extends SimpleContextKey {\n    /**\n     * Constructs single context value key.\n     *\n     * @param name - Human-readable key name.\n     * @param seedKey - Value seed key. A new one will be constructed when omitted.\n     * @param byDefault - Optional default value provider. If unspecified or `undefined` the key has no default\n     * value.\n     */\n    constructor(name, { seedKey, byDefault = noop, } = {}) {\n        super(name, { seedKey });\n        this.byDefault = byDefault;\n    }\n    grow(slot) {\n        const value = slot.seed();\n        if (value != null) {\n            slot.insert(value);\n        }\n        else if (!slot.hasFallback) {\n            slot.insert(this.byDefault(slot.context, this));\n        }\n    }\n}\n\n/**\n * @internal\n */\nclass ContextSupplyKey extends SimpleContextKey {\n    constructor() {\n        super('context-supply');\n    }\n    grow(slot) {\n        slot.insert(slot.seed()\n            || slot.context.supply\n            || (slot.hasFallback ? slot.or : alwaysSupply()));\n    }\n}\n/**\n * A key of context value containing a {@link ContextSupply context values supply}.\n *\n * It is guaranteed to present.\n *\n * Predefined to the supply of the context if the latter implements `SupplyPeer` interface. Defaults to supply-always\n * otherwise.\n */\nconst ContextSupply = ( /*#__PURE__*/new ContextSupplyKey());\n\n/**\n * A key of {@link ContextBuilder context builder} method that provides context values.\n */\nconst ContextBuilder__symbol = ( /*#__PURE__*/Symbol('ContextBuilder'));\n\n/**\n * @internal\n */\nclass ContextSeeders {\n    constructor(_initial) {\n        this._initial = _initial;\n        this._issuers = new Map();\n    }\n    issuer(seedKey) {\n        const found = this._issuers.get(seedKey);\n        if (found) {\n            return found;\n        }\n        const seeder = seedKey.seeder();\n        const issuer = [\n            seeder,\n            context => seeder.seed(context, this._initial(seedKey, context)),\n        ];\n        this._issuers.set(seedKey, issuer);\n        return issuer;\n    }\n    newSeed(context, key) {\n        const { seedKey } = key;\n        const [seeder, factory] = this.issuer(seedKey);\n        if (seedKey !== key) {\n            // This is not a seed key\n            // Retrieve the seed by seed key\n            return [seeder, context.get(seedKey)];\n        }\n        return [seeder, factory(context)];\n    }\n}\n\n/**\n * Constructs a specifier of context value defined by provider out of arbitrary one.\n *\n * @typeParam TCtx - Context type.\n * @typeParam TValue - Context value type.\n * @typeParam TSrc - Source value type.\n * @typeParam TDeps - Dependencies tuple type.\n * @param spec - Explicit context value specifier to convert.\n *\n * @returns A specifier of context value defined by provider function.\n *\n * @throws TypeError  On malformed context value specifier.\n */\nfunction contextValueSpec(spec) {\n    if (isValueSpecByProvider(spec)) {\n        if (!isValueSpecWithDeps(spec)) {\n            return spec;\n        }\n        const { a, by, with: deps } = spec;\n        return {\n            a,\n            by(context) {\n                return by(...deps.map((dep) => context.get(dep)));\n            },\n        };\n    }\n    if (isConstantValueSpec(spec)) {\n        const { a, is: value } = spec;\n        return {\n            a,\n            by: valueProvider(value),\n        };\n    }\n    if (isValueSpecViaAlias(spec)) {\n        const { a, via } = spec;\n        return {\n            a,\n            by(ctx) {\n                return ctx.get(via);\n            },\n        };\n    }\n    if (isValueSpecAsInstance(spec)) {\n        if (isSelfInstanceValueSpec(spec)) {\n            spec = toAsInstance(spec);\n        }\n        if (!isValueSpecWithDeps(spec)) {\n            const { as: Type } = spec;\n            return {\n                a: spec.a,\n                by(ctx) {\n                    return new Type(ctx);\n                },\n            };\n        }\n        const { as: DepType, with: deps } = spec;\n        return {\n            a: spec.a,\n            by(context) {\n                return new DepType(...deps.map((dep) => context.get(dep)));\n            },\n        };\n    }\n    throw new TypeError(`Malformed context value specifier: ${JSON.stringify(spec)}`);\n}\n/**\n * @internal\n */\nfunction isValueSpecByProvider(spec) {\n    return 'by' in spec;\n}\n/**\n * @internal\n */\nfunction isValueSpecAsInstance(spec) {\n    return 'as' in spec;\n}\n/**\n * @internal\n */\nfunction isSelfInstanceValueSpec(spec) {\n    return !('a' in spec);\n}\n/**\n * @internal\n */\nfunction toAsInstance(spec) {\n    return {\n        ...spec,\n        a: spec.as,\n    };\n}\n/**\n * @internal\n */\nfunction isConstantValueSpec(spec) {\n    return 'is' in spec;\n}\n/**\n * @internal\n */\nfunction isValueSpecViaAlias(spec) {\n    return 'via' in spec;\n}\n/**\n * @internal\n */\nfunction isValueSpecWithDeps(spec) {\n    return 'with' in spec;\n}\n\n/**\n * @internal\n */\nfunction newContextValues(registry, seeders) {\n    const values = new Map();\n    class ContextValues$ extends ContextValues {\n        get({ [ContextKey__symbol]: key }, opts) {\n            const cached = values.get(key);\n            if (cached != null) {\n                return cached;\n            }\n            const [constructed, setup] = new ContextValueSlot$(seeders, this, key, opts)._grow();\n            if (setup) {\n                values.set(key, constructed);\n                setup({\n                    key,\n                    context: this,\n                    registry: registry,\n                });\n            }\n            return constructed;\n        }\n    }\n    return new ContextValues$();\n}\n/**\n * @internal\n */\nclass ContextValueSlot$ {\n    constructor(seeders, context, key, _opts = {}) {\n        this.context = context;\n        this.key = key;\n        this._opts = _opts;\n        this._constructed = null;\n        this._setup = noop;\n        const [seeder, seed] = seeders.newSeed(context, key);\n        this.seeder = seeder;\n        this.seed = seed;\n        this.hasFallback = 'or' in _opts; // Fallback _may_ have `undefined` value.\n    }\n    get or() {\n        return this._opts.or; // Access here, as fallback value accessor may be implemented as getter.\n    }\n    insert(value) {\n        this._constructed = value;\n    }\n    fillBy(grow) {\n        grow(this);\n        return this._constructed;\n    }\n    setup(setup) {\n        const prevSetup = this._setup;\n        this._setup = opts => {\n            prevSetup(opts);\n            setup(opts);\n        };\n    }\n    _grow() {\n        this.key.grow(this);\n        if (this._constructed != null) {\n            return [this._constructed, this._setup];\n        }\n        if (!this.hasFallback) {\n            throw new ContextKeyError(this.key);\n        }\n        return [this.or];\n    }\n}\n\n/**\n * A registry of context value providers.\n *\n * @typeParam TCtx - Context type.\n */\nclass ContextRegistry {\n    /**\n     * Constructs a registry for context value providers.\n     *\n     * It can be chained with another registry by providing an initially known source of known context values.\n     *\n     * @param initial - An optional source of initially known context values. This can be either a function, or\n     * `ContextValues` instance.\n     */\n    constructor(initial) {\n        this._seeders = new ContextSeeders(initial\n            ? (typeof initial === 'function' ? initial : (seedKey => initial.get(seedKey)))\n            : noop);\n    }\n    /**\n     * Provides context value.\n     *\n     * @typeParam TSrc - Source value type.\n     * @typeParam TDeps - Dependencies tuple type.\n     * @param spec - Context value specifier.\n     *\n     * @returns Provider supply instance that removes just added context value provider once cut off.\n     */\n    provide(spec) {\n        if (isContextBuilder(spec)) {\n            return spec[ContextBuilder__symbol](this);\n        }\n        const { a: { [ContextKey__symbol]: { seedKey } }, by } = contextValueSpec(spec);\n        const [seeder] = this._seeders.issuer(seedKey);\n        return seeder.provide(by);\n    }\n    /**\n     * Creates a seed for the given key in target context.\n     *\n     * @param context - Target context.\n     * @param key - Context value seed key.\n     *\n     * @returns New context value seed.\n     */\n    seed(context, key) {\n        const [, factory] = this._seeders.issuer(key);\n        return factory(context);\n    }\n    /**\n     * Builds context seeds provider originated from this registry.\n     *\n     * @returns Mandatory context seeds provider.\n     */\n    seeds() {\n        return (seedKey, context) => this.seed(context, seedKey);\n    }\n    /**\n     * Builds context seeds provider that binds seeds to target `context`.\n     *\n     * @param context - Target value context.\n     *\n     * @returns A provider of context value seeds bound to the given `context`.\n     */\n    seedIn(context) {\n        return this.newValues().get.bind(context);\n    }\n    /**\n     * Creates new context values instance consulting this registry for value providers.\n     *\n     * @returns New context values instance which methods expect `this` instance to be a context the values provided for.\n     */\n    newValues() {\n        return newContextValues(this, this._seeders);\n    }\n    /**\n     * Appends values provided by another value registry to the ones provided by this one.\n     *\n     * @param other - Another context value registry or context seeds provider.\n     *\n     * @return New context value registry which values provided by both registries.\n     */\n    append(other) {\n        const otherSeeds = typeof other === 'function' ? other : other.seeds();\n        return new ContextRegistry((key, context) => {\n            const second = otherSeeds(key, context);\n            const [seeder, factory] = this._seeders.issuer(key);\n            const first = factory(context);\n            return second ? seeder.combine(first, second, context) : first;\n        });\n    }\n}\n/**\n * @internal\n */\nfunction isContextBuilder(spec) {\n    return typeof spec[ContextBuilder__symbol] === 'function';\n}\n\nexport { ContextBuilder__symbol, ContextKey, ContextKeyError, ContextKey__symbol, ContextRegistry, ContextSeedKey, ContextSupply, ContextValues, Contextual__symbol, IterativeContextKey, MultiContextKey, SimpleContextKey, SingleContextKey, applyContextTo, contextValueSpec, isContextual };\n//# sourceMappingURL=context-values.js.map\n","import { valueProvider, lazyValue, noop, superClassOf, hasOwnProperty } from '@proc7ts/primitives';\n\n/**\n * Converts arbitrary amendment to {@link Amender amender}.\n *\n * @typeParam TAmended - Amended entity type.\n * @param amendment - An amendment to convert.\n *\n * @returns Either the `amendment` itself if it is already an amender, or its {@link Amendatory.applyAmendment\n * applyAmendment} method if it is an {@link Amendatory} instance.\n */\nfunction amenderOf(amendment) {\n    return isAmendatoryAmendment(amendment) ? amendment.applyAmendment : amendment;\n}\n/**\n * Checks if the given amendment is represented by {@link Amendatory} instance.\n *\n * @typeParam TAmended - Amended entity type.\n * @param amendment - An amendment to check.\n *\n * @returns `true` if the given `amendment` has an {@link Amendatory.applyAmendment applyAmendment} method,\n * or `false` otherwise.\n */\nfunction isAmendatoryAmendment(amendment) {\n    return typeof amendment.applyAmendment === 'function';\n}\n/**\n * Checks whether the given value is an {@link Amendatory} instance.\n *\n * @typeParam TAmended - Amended entity type.\n * @typeParam TOther - Another type the `value` may have.\n * @param value - The value to check.\n *\n * @returns `true` if the given `value` is an object or function with {@link Amendatory.applyAmendment applyAmendment}\n * method, or `false` otherwise.\n */\nfunction isAmendatory(value) {\n    return !!value\n        && (typeof value === 'object' || typeof value === 'function')\n        && isAmendatoryAmendment(value);\n}\n\n/**\n * An {@link Amender amender} that amends nothing.\n *\n * @param _target - An unused amendment target that remains intact.\n *\n * @returns Itself for convenience.\n */\nfunction noopAmender(_target) {\n    return noopAmender;\n}\n\n/**\n * Combines multiple amendments into one amender.\n *\n * The resulting amender performs amendments in order. The subsequent amendments receive the amendment targets modified\n * by preceding ones.\n *\n * @typeParam TAmended - Amended entity type.\n * @param amendments - An iterable of amendments to apply in their application order.\n *\n * @returns A combining amender.\n */\nfunction allAmender(amendments) {\n    if (Array.isArray(amendments) && amendments.length < 2) {\n        const [amender = noopAmender] = amendments;\n        return amenderOf(amender);\n    }\n    return target => {\n        let amendBy = (amendment) => {\n            const amend = (request) => {\n                const result = target.amend(request);\n                amendBy = (next) => {\n                    const nextTarget = result();\n                    amenderOf(next)({\n                        ...nextTarget,\n                        amend,\n                    });\n                    return nextTarget;\n                };\n                return () => ({\n                    ...result(),\n                    amend,\n                });\n            };\n            amenderOf(amendment)({\n                ...target,\n                amend,\n            });\n        };\n        for (const amendment of amendments) {\n            amendBy(amendment);\n        }\n    };\n}\n\n/**\n * Creates custom amendment target.\n *\n * @typeParam TAmended - Amended entity type.\n * @param options - Options for created amendment target.\n *\n * @returns New amendment target instance.\n */\nfunction newAmendTarget(options) {\n    const { base, amend: baseAmend } = options;\n    const nextTarget = (createBase) => {\n        const nextBase = createBase();\n        return {\n            ...nextBase,\n            amend(nextRequest) {\n                const modify = lazyValue(baseAmend(nextBase, nextRequest)\n                    || (() => AmendTarget$default$modify(nextBase, nextRequest)));\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                return () => nextTarget(modify);\n            },\n        };\n    };\n    return nextTarget(valueProvider(base));\n}\nfunction AmendTarget$default$modify(base, request) {\n    return { ...base, ...request };\n}\n\nfunction AeClass$target(base) {\n    return newAmendTarget({\n        base,\n        amend: AeClass$target$amend(base),\n    });\n}\nfunction AeClass$target$amend({ amend }) {\n    if (!amend) {\n        return noop;\n    }\n    return (_base, request) => amend(request);\n}\n\n/**\n * Creates an amendment (and decorator) for a class.\n *\n * @typeParam TClass - A type of amended class.\n * @typeParam TAmended - A type of the entity representing a class to amend.\n * @param amendments - Amendments to apply.\n *\n * @returns - New class amendment instance.\n */\nfunction AeClass(...amendments) {\n    const amender = allAmender(amendments);\n    const decorateAmended = (base) => amender(AeClass$target(base));\n    const decorator = ((target) => {\n        decorateAmended({ amendedClass: target });\n    });\n    decorator.applyAmendment = amender;\n    decorator.decorateAmended = decorateAmended;\n    return decorator;\n}\n\nconst autoAmended = ( /*#__PURE__*/new WeakSet());\n/**\n * Issues an auto-amendment of the given class.\n *\n * An amendment is done by {@link AmendableClass.autoAmend autoAmend} static method this function calls.\n *\n * A class is auto-amended at most once. The subsequent calls of this function for the same class would do nothing.\n *\n * Auto-amends a super-class prior to amending the given one.\n *\n * @param amendedClass - A class to auto-amend.\n *\n * @returns Amended class instance.\n */\nfunction amend(amendedClass) {\n    if (autoAmended.has(amendedClass)) {\n        // Already auto-amended.\n        return amendedClass;\n    }\n    autoAmended.add(amendedClass);\n    const superClass = superClassOf(amendedClass);\n    if (superClass) {\n        // Amend super-class first.\n        amend(superClass);\n    }\n    if (!hasOwnProperty(amendedClass, 'autoAmend')) {\n        return amendedClass;\n    }\n    amendedClass.autoAmend(AeClass$target({ amendedClass }));\n    return amendedClass;\n}\n\n/**\n * Abstract {@link AmendableClass amendable class} instance.\n *\n * Automatically issues an {@link amend amendment} of any subclass upon instance construction.\n */\nclass Amendable {\n    /**\n     * Constructs an amendable class instance.\n     *\n     * Issues a class amendment, unless the class already amended.\n     */\n    constructor() {\n        amend(new.target);\n    }\n}\n\n/**\n * Unique symbol used as a pseudo-member key by default.\n */\nconst PseudoMember__symbol = ( /*#__PURE__*/Symbol('PseudoMember'));\n\nfunction AeProp$notReadable(host, key) {\n    return _instance => {\n        throw new TypeError(`${host.kind.pName} ${host.cls.name}${AmendProp$accessString(key)} is not readable`);\n    };\n}\nfunction AeProp$notWritable(host, key) {\n    return (_instance, _update) => {\n        throw new TypeError(`${host.kind.pName} ${host.cls.name}${AmendProp$accessString(key)} is not writable`);\n    };\n}\nconst AeProp$idPattern = /^[a-z_$][a-z0-9_$]*$/i;\nfunction AmendProp$accessString(key) {\n    if (typeof key === 'string') {\n        return AeProp$idPattern.test(key) ? `.${key}` : `[${JSON.stringify(key)}]`;\n    }\n    return `[${String(key)}]`;\n}\n\nfunction createAePropAccessor(host, key, descriptor) {\n    if (descriptor) {\n        const { get, set } = descriptor;\n        if (get || set) {\n            return [\n                get\n                    ? instance => get.call(instance)\n                    : AeProp$notReadable(host, key),\n                set\n                    ? (instance, update) => set.call(instance, update)\n                    : AeProp$notWritable(host, key),\n                noop,\n            ];\n        }\n    }\n    const valueKey = Symbol(host.kind.vDesc(key));\n    let getValue = (host) => host[key];\n    let setValue = (host, update) => {\n        host[key] = update;\n    };\n    const writeValue = (host, update) => {\n        host[valueKey] = update;\n    };\n    let toAccessor;\n    if (descriptor && ('value' in descriptor || 'writable' in descriptor)) {\n        const { value, writable } = descriptor;\n        if (writable) {\n            toAccessor = () => {\n                getValue = host => valueKey in host\n                    ? host[valueKey]\n                    : host[valueKey] = value;\n                setValue = writeValue;\n            };\n        }\n        else {\n            setValue = AeProp$notWritable(host, key);\n            toAccessor = noop;\n        }\n    }\n    else {\n        toAccessor = () => {\n            const superProto = Reflect.getPrototypeOf(host.host);\n            if (superProto != null) {\n                getValue = hostInstance => {\n                    if (valueKey in hostInstance) {\n                        return hostInstance[valueKey];\n                    }\n                    return hostInstance[valueKey] = Reflect.get(superProto, key, hostInstance);\n                };\n            }\n            else {\n                getValue = instance => instance[valueKey];\n            }\n            setValue = writeValue;\n        };\n    }\n    return [\n        instance => getValue(instance),\n        (instance, update) => setValue(instance, update),\n        toAccessor,\n    ];\n}\n\nfunction createAePropApplicator(host, amender, key, init) {\n    return (baseTarget) => {\n        const result = { ...init };\n        amender(newAmendTarget({\n            base: {\n                ...baseTarget,\n                key,\n                ...init,\n            },\n            amend(_base, request = {}) {\n                const { key: $key, enumerable = result.enumerable, configurable = result.configurable, readable: $readable, writable: $writable, get: $get, set: $set, ...baseRequest } = request;\n                const createBaseTarget = baseTarget.amend(baseRequest);\n                let { get, set } = request;\n                let readable;\n                let writable;\n                if (!set) {\n                    if (get) {\n                        set = AeProp$notWritable(host, key);\n                        writable = false;\n                        readable = true;\n                    }\n                    else {\n                        // Neither get, not set provided.\n                        // Accessor remains the same.\n                        ({ readable, writable, get, set } = result);\n                    }\n                }\n                else if (get) {\n                    readable = true;\n                    writable = true;\n                }\n                else {\n                    get = AeProp$notReadable(host, key);\n                    readable = false;\n                    writable = true;\n                }\n                result.configurable = configurable;\n                result.enumerable = enumerable;\n                result.readable = readable;\n                result.writable = writable;\n                result.get = get;\n                result.set = set;\n                return () => ({\n                    ...createBaseTarget(),\n                    key,\n                    enumerable,\n                    configurable,\n                    readable,\n                    writable,\n                    get,\n                    set,\n                });\n            },\n        }));\n        return result;\n    };\n}\n\nfunction AeProp(createHost, hostClass, amendments) {\n    const amender = allAmender(amendments);\n    const decorateAmended = (decorated, key, descriptor) => {\n        const host = createHost(decorated);\n        const [getValue, setValue, toAccessor] = createAePropAccessor(host, key, descriptor);\n        const init = {\n            enumerable: !descriptor || !!descriptor.enumerable,\n            configurable: !descriptor || !!descriptor.configurable,\n            readable: !descriptor || !!descriptor.get,\n            writable: !descriptor || !!descriptor.set || !!descriptor.writable,\n            get: hostInstance => getValue(hostInstance),\n            set: (hostInstance, update) => setValue(hostInstance, update),\n        };\n        const applyAmendment = createAePropApplicator(host, amender, key, init);\n        let desc;\n        AeClass(classTarget => {\n            desc = applyAmendment(classTarget);\n        }).decorateAmended(decorated);\n        const { enumerable, configurable, get, set } = desc;\n        let newDescriptor;\n        if (set !== init.set || get !== init.get) {\n            newDescriptor = {\n                enumerable,\n                configurable,\n                get() {\n                    return get(this);\n                },\n                set(update) {\n                    set(this, update);\n                },\n            };\n            toAccessor();\n        }\n        else if (enumerable !== init.enumerable || configurable !== init.configurable) {\n            if (descriptor && (descriptor.get || descriptor.set)) {\n                newDescriptor = {\n                    ...descriptor,\n                    enumerable,\n                    configurable,\n                };\n            }\n            else {\n                newDescriptor = {\n                    ...descriptor,\n                    enumerable,\n                    configurable,\n                    writable: desc.writable,\n                };\n            }\n        }\n        if (newDescriptor && !descriptor) {\n            // Decorated field.\n            // Declare accessor.\n            Reflect.defineProperty(host.host, key, newDescriptor);\n        }\n        return newDescriptor;\n    };\n    const decorator = ((targetHost, key, descriptor) => {\n        const aeClass = { amendedClass: hostClass(targetHost) };\n        return decorateAmended(aeClass, key, descriptor);\n    });\n    decorator.decorateAmended = decorateAmended;\n    decorator.applyAmendment = amender;\n    return decorator;\n}\n\nfunction PseudoProp(createHost, { key, get, set }, amendments) {\n    const amender = allAmender(amendments);\n    const decorateAmended = (decorated, memberKey) => {\n        if (key) {\n            memberKey = key;\n        }\n        else if (!memberKey) {\n            memberKey = PseudoMember__symbol;\n        }\n        const host = createHost(decorated);\n        const init = {\n            enumerable: false,\n            configurable: true,\n            readable: !!get,\n            writable: !!set,\n            get: get || AeProp$notReadable(host, memberKey),\n            set: set || AeProp$notWritable(host, memberKey),\n        };\n        const applyAmendment = createAePropApplicator(host, amender, memberKey, init);\n        AeClass(applyAmendment).decorateAmended(decorated);\n    };\n    const decorator = ((amendedClass) => {\n        const aeClass = { amendedClass };\n        return decorateAmended(aeClass);\n    });\n    decorator.decorateAmended = decorateAmended;\n    decorator.applyAmendment = (target) => {\n        decorateAmended(target, target.key);\n    };\n    return decorator;\n}\n\n/**\n * Creates an amendment (and decorator) for the class instance member.\n *\n * @typeParam TValue - Amended member value type.\n * @typeParam TClass - A type of amended class.\n * @typeParam TUpdate - Amended member update type accepted by its setter.\n * @typeParam TAmended - A type of the entity representing a member to amend.\n * @param amendments - Amendments to apply.\n *\n * @returns New class member amendment instance.\n */\nfunction AeMember(...amendments) {\n    return AeProp(AeMember$createHost, AeMember$hostClass, amendments);\n}\nconst AeMember$HostKind = {\n    pName: 'Property',\n    vDesc: key => `valueOf(${String(key)}`,\n};\nfunction AeMember$createHost({ amendedClass }) {\n    return {\n        kind: AeMember$HostKind,\n        cls: amendedClass,\n        host: amendedClass.prototype,\n    };\n}\nfunction AeMember$hostClass(proto) {\n    return proto.constructor;\n}\n\n/**\n * Amends a member (property) of the class.\n *\n * Applies the given amendments to the own property of the target class prototype.\n *\n * @typeParam TClass - A type of amended class.\n * @typeParam TKey - A type of amended member key.\n * @typeParam TAmended - A type of the entity representing a member to amend.\n * @param decorated - Decorated class representation.\n * @param memberKey - A key of the member to amend.\n * @param amendments - Amendment to apply.\n */\nfunction amendMemberOf(decorated, memberKey, ...amendments) {\n    const amendment = AeMember(...amendments);\n    const proto = decorated.amendedClass.prototype;\n    const sourceDesc = Reflect.getOwnPropertyDescriptor(proto, memberKey);\n    const amendedDesc = amendment.decorateAmended(decorated, memberKey, sourceDesc);\n    if (amendedDesc && sourceDesc) {\n        // Redefine the property.\n        Reflect.defineProperty(proto, memberKey, amendedDesc);\n    }\n}\n\n/**\n * Creates a class amendment (and decorator) that amends its members.\n *\n * @typeParam TClass - A type of amended class.\n * @typeParam TExtClass - A type of class extended by the amendment.\n * @typeParam TAmended - A type of the entity representing a class to amend.\n * @param def - A map of member amendments.\n *\n * @returns New class amendment instance.\n */\nfunction AeMembers(def) {\n    return AeClass(target => {\n        for (const key of Reflect.ownKeys(def)) {\n            const amendment = def[key];\n            if (amendment) {\n                amendMemberOf(target, key, amendment);\n            }\n        }\n    });\n}\n\n/**\n * Creates a class amendment (and decorator) that declares a pseudo-member of the target class.\n *\n * A pseudo-member does not alter the class prototype or instance. Instead, its value is read and written by the given\n * `accessor`.\n *\n * @typeParam TValue - Pseudo-member value type.\n * @typeParam TClass - A type of amended class.\n * @typeParam TUpdate - Pseudo-member update type accepted by its setter.\n * @typeParam TAmended - A type of the entity representing a pseudo-member.\n * @param accessor - Pseudo-member accessor.\n * @param amendments - Amendments to apply to pseudo-member.\n *\n * @returns New pseudo-member amendment.\n */\nfunction PseudoMember(accessor, ...amendments) {\n    return PseudoProp(PseudoMember$createHost, accessor, amendments);\n}\nconst PseudoMember$HostKind = {\n    pName: 'Pseudo-property',\n};\nfunction PseudoMember$createHost({ amendedClass }) {\n    return {\n        kind: PseudoMember$HostKind,\n        cls: amendedClass,\n        host: amendedClass.prototype,\n    };\n}\n\n/**\n * Creates an amendment (and decorator) for the static class member.\n *\n * @typeParam TValue - Amended member value type.\n * @typeParam TClass - A type of amended class.\n * @typeParam TUpdate - Amended member update type accepted by its setter.\n * @typeParam TAmended - A type of the entity representing a static member to amend.\n * @param amendments - Amendments to apply.\n *\n * @returns - New static member amendment instance.\n */\nfunction AeStatic(...amendments) {\n    return AeProp(AeStatic$createHost, AeStatic$hostClass, amendments);\n}\nconst AeStatic$HostKind = {\n    pName: 'Static property',\n    vDesc: key => `staticOf(${String(key)}`,\n};\nfunction AeStatic$createHost({ amendedClass }) {\n    return {\n        kind: AeStatic$HostKind,\n        cls: amendedClass,\n        host: amendedClass,\n    };\n}\nfunction AeStatic$hostClass(classConstructor) {\n    return classConstructor;\n}\n\n/**\n * Amends a static member (static property) of the class.\n *\n * Applies the given amendments to the own property of the target class constructor.\n *\n * @typeParam TClass - A type of amended class.\n * @typeParam TKey - A type of amended static member key.\n * @typeParam TAmended - A type of the entity representing a static member to amend.\n * @param decorated - Decorated class representation.\n * @param memberKey - A key of the member to amend.\n * @param amendments - Amendment to apply.\n */\nfunction amendStaticOf(decorated, memberKey, ...amendments) {\n    const amendment = AeStatic(...amendments);\n    const targetClass = decorated.amendedClass;\n    const sourceDesc = Reflect.getOwnPropertyDescriptor(targetClass, memberKey);\n    const amendedDesc = amendment.decorateAmended(decorated, memberKey, sourceDesc);\n    if (amendedDesc && sourceDesc) {\n        // Redefine the property.\n        Reflect.defineProperty(targetClass, memberKey, amendedDesc);\n    }\n}\n\n/**\n * Creates a class amendment (and decorator) that amends its static members.\n *\n * @typeParam TClass - A type of amended class.\n * @typeParam TExtClass - A type of class extended by the amendment.\n * @typeParam TAmended - A type of the entity representing a class to amend.\n * @param def - A map of static member amendments.\n *\n * @returns New class amendment instance.\n */\nfunction AeStatics(def) {\n    return AeClass(target => {\n        for (const key of Reflect.ownKeys(def)) {\n            const amendment = def[key];\n            if (amendment) {\n                amendStaticOf(target, key, amendment);\n            }\n        }\n    });\n}\n\n/**\n * Creates a class amendment (and decorator) that declares a static pseudo-member of the target class.\n *\n * A static pseudo-member does not alter the class constructor. Instead, its value is read and written by the given\n * `accessor`.\n *\n * @typeParam TValue - Static pseudo-member value type.\n * @typeParam TClass - A type of amended class.\n * @typeParam TUpdate - Static pseudo-member update type accepted by its setter.\n * @typeParam TAmended - A type of the entity representing a static pseudo-member.\n * @param accessor - Static pseudo-member accessor.\n * @param amendments - Amendments to apply to static pseudo-member.\n *\n * @returns New static pseudo-member amendment.\n */\nfunction PseudoStatic(accessor, ...amendments) {\n    return PseudoProp(PseudoStatic$createHost, accessor, amendments);\n}\nconst PseudoStatic$HostKind = {\n    pName: 'Static pseudo-property',\n};\nfunction PseudoStatic$createHost({ amendedClass }) {\n    return {\n        kind: PseudoStatic$HostKind,\n        cls: amendedClass,\n        host: amendedClass,\n    };\n}\n\nexport { AeClass, AeMember, AeMembers, AeStatic, AeStatics, Amendable, PseudoMember, PseudoMember__symbol, PseudoStatic, allAmender, amend, amendMemberOf, amendStaticOf, amenderOf, isAmendatory, newAmendTarget, noopAmender };\n//# sourceMappingURL=amend.js.map\n","/**\n * Naming schema is responsible for applying namespace aliases to simple names. E.g. by appending alias as prefix or\n * suffix of the name.\n */\nclass Naming {\n    /**\n     * Converts the given qualified `name` into simple one accordingly to this naming schema.\n     *\n     * @param name Qualified name to convert.\n     * @param nsAlias Namespace aliaser to use.\n     */\n    name(name, nsAlias) {\n        if (typeof name === 'string') {\n            return name;\n        }\n        const [local, ns] = name;\n        return ns.name(nsAlias(ns), local, this);\n    }\n}\n\n/**\n * @internal\n */\nclass DefaultNaming extends Naming {\n    applyAlias(name, alias) {\n        return `${alias}-${name}`;\n    }\n}\n/**\n * Default naming schema.\n *\n * Prefixes a name with namespace alias separating them by dash.\n *\n * The result looks like `<alias>-<name>`.\n */\nconst default__naming = ( /*#__PURE__*/new DefaultNaming());\n/**\n * HTML elements naming schema.\n *\n * Prefixes a name with namespace alias separating them by dash.\n *\n * The result looks like `<alias>-<name>`.\n */\nconst html__naming = ( /*#__PURE__*/new DefaultNaming());\n/**\n * @internal\n */\nclass XmlNaming extends Naming {\n    applyAlias(name, alias) {\n        return `${alias}:${name}`;\n    }\n}\n/**\n * XML elements naming schema.\n *\n * Prefixes a name with namespace alias separating them by colon.\n *\n * The result looks like `<alias>:<name>`.\n */\nconst xml__naming = ( /*#__PURE__*/new XmlNaming());\n/**\n * Element identifiers naming schema.\n *\n * Prefixes a name with namespace alias separating them by colon.\n *\n * The result looks like `<alias>:<name>`.\n */\nconst id__naming = ( /*#__PURE__*/new XmlNaming());\n/**\n * @internal\n */\nclass CssNaming extends Naming {\n    applyAlias(name, alias) {\n        return `${name}@${alias}`;\n    }\n}\n/**\n * CSS classes naming scheme.\n *\n * Appends namespace alias as a name suffix separated by `@` sign.\n *\n * The result looks like `<name>@<alias>`.\n */\nconst css__naming = ( /*#__PURE__*/new CssNaming());\n\n/**\n * Namespace definition.\n *\n * Namespaces are identified by their URLs.\n */\nclass NamespaceDef {\n    /**\n     * Constructs new namespace definition.\n     *\n     * @param url - Unique namespace URL.\n     * @param aliases - Preferred namespace aliases. It is expected that each alias is an ASCII letter followed by\n     * any number of ASCII letters, digits, `-`, or `_` signs. Aliases starting with `xml` are reserved. Empty alias\n     * is reserved for {@link DEFAULT__NS default namespace}.\n     */\n    constructor(url, ...aliases) {\n        this.url = url;\n        this.aliases = aliases;\n    }\n    /**\n     * The most preferred namespace alias.\n     *\n     * By default this is the first preferred alias, or `ns` if there is no preferred aliases.\n     */\n    get alias() {\n        return this.aliases[0] || 'ns';\n    }\n    /**\n     * Converts a local `name` belonging to this namespace to simple one according to the given `naming` schema.\n     *\n     * Calls {@link Naming.applyAlias} by default.\n     *\n     * @param alias - Namespace alias to apply to the name.\n     * @param name - A name to convert.\n     * @param naming - Naming schema to use. {@link default__naming default naming schema} is used when omitted.\n     *\n     * @returns A simple name with this namespace alias applied.\n     */\n    name(alias, name, naming = default__naming) {\n        return naming.applyAlias(name, alias, this);\n    }\n}\n\n/**\n * @internal\n */\nclass DefaultNs extends NamespaceDef {\n    constructor() {\n        super('');\n    }\n    name(_alias, name) {\n        return name;\n    }\n}\n/**\n * Default namespace.\n *\n * This namespace is assumed for names without namespace specified.\n *\n * Its URL is empty. And it does not alter names, i.e. its {@link NamespaceDef.name} method returns the name as is.\n */\nconst DEFAULT__NS = ( /*#__PURE__*/new DefaultNs());\n\n/**\n * Checks whether the given `value` is a name+namespace tuple.\n *\n * @param value - A value to check.\n *\n * @returns `true` if the given `value` is an array consisting of exactly two elements, where the first element is a\n * non-empty string, and the second element is an instance of {@link NamespaceDef}. Or `false` otherwise.\n */\nfunction isNameAndNamespace(value) {\n    return Array.isArray(value)\n        && value.length === 2\n        && typeof value[0] === 'string'\n        && isNamespaceDef(value[1]);\n}\nfunction isNamespaceDef(value) {\n    if (value instanceof NamespaceDef) {\n        return true;\n    }\n    return typeof value === 'object'\n        && typeof value.url === 'string'\n        && typeof value.alias === 'string'\n        && Array.isArray(value.aliases)\n        && typeof value.name === 'function';\n}\n/**\n * Checks whether the given `value` is a qualified name.\n *\n * @param value - A value to check.\n *\n * @returns `true` if the given `value` is a string, or an array consisting of exactly two elements, where the first\n * element is a non-empty string, and the second element is an instance of {@link NamespaceDef}. `false` otherwise.\n */\nfunction isQualifiedName(value) {\n    return typeof value === 'string' || isNameAndNamespace(value);\n}\n/**\n * Detects a namespace of the given qualified `name`\n *\n * @param name - Qualified name to detect a namespace of.\n *\n * @returns A namespace if the given `name` has it, or {@link DEFAULT__NS default namespace} otherwise.\n */\nfunction namespaceOf(name) {\n    return typeof name !== 'string' ? name[1] : DEFAULT__NS;\n}\n/**\n * Converts the given qualified `name` to local name and namespace tuple.\n *\n * @param name - Qualified name to convert.\n *\n * @returns The `name` itself if it has a namespace, or a tuple consisting of `name` and\n * {@link DEFAULT__NS default namespace} otherwise.\n */\nfunction nameAndNamespace(name) {\n    return typeof name !== 'string' ? name : [name, DEFAULT__NS];\n}\n/**\n * Checks whether two qualified names are equal to each other.\n *\n * @param first - First qualified name to compare.\n * @param second - Second qualified name to compare.\n *\n * @returns `true` if both names are equal, or `false` otherwise.\n */\nfunction namesEqual(first, second) {\n    if (typeof first === 'string') {\n        return typeof second === 'string' ? first === second : !second[1].url && second[0] === first;\n    }\n    const [firstName, { url: firstUrl }] = first;\n    if (typeof second === 'string') {\n        return !firstUrl && firstName === second;\n    }\n    return firstName === second[0] && firstUrl === second[1].url;\n}\n/**\n * Compares two qualified names.\n *\n * Names in default namespace considered less than other names. Namespaces are compared by their URLs.\n *\n * @param first - First qualified name to compare.\n * @param second - Second qualified name to compare.\n *\n * @returns `-1` if the `first` name is less than the `second` one, `0` if they are equal, or `1` if the `first` name\n * is greater than the `second` one.\n */\nfunction compareNames(first, second) {\n    if (typeof first === 'string') {\n        if (typeof second === 'string') {\n            return compareStrings(first, second);\n        }\n        if (!second[1].url) {\n            return compareStrings(first, second[0]);\n        }\n        return -1;\n    }\n    const [firstName, { url: firstUrl }] = first;\n    if (typeof second === 'string') {\n        if (!firstUrl) {\n            return compareStrings(firstName, second);\n        }\n        return 1;\n    }\n    return compareStrings(firstUrl, second[1].url) || compareStrings(firstName, second[0]);\n}\n/**\n * @internal\n */\nfunction compareStrings(first, second) {\n    return first < second ? -1 : first > second ? 1 : 0;\n}\n\n/**\n * Creates a namespace aliaser.\n *\n * The returned function tries to find a registered alias for the given namespace. If not found then tries to use one\n * of its preferred aliases. If all of them are reserved already for another namespaces, generates a new unique alias.\n *\n * @returns New instance of namespace aliaser.\n */\nfunction newNamespaceAliaser() {\n    const aliasesByNs = new Map();\n    const nsNumPerAlias = new Map();\n    return function nsAlias(ns) {\n        const found = aliasesByNs.get(ns.url);\n        if (found) {\n            return found;\n        }\n        const mostPreferred = ns.alias;\n        let nsNumRegistered = 0;\n        for (const preferred of [mostPreferred, ...ns.aliases]) {\n            const ids = nsNumPerAlias.get(preferred);\n            if (!ids) {\n                aliasesByNs.set(ns.url, preferred);\n                nsNumPerAlias.set(preferred, 1);\n                return preferred;\n            }\n            if (!nsNumRegistered) {\n                // Use the first one\n                nsNumRegistered = ids;\n            }\n        }\n        const generated = `${mostPreferred}${++nsNumRegistered}`;\n        aliasesByNs.set(ns.url, generated);\n        nsNumPerAlias.set(mostPreferred, nsNumRegistered);\n        return generated;\n    };\n}\n\n/**\n * [MathML](https://www.w3.org/Math/) namespace definition.\n */\nconst MathML__NS = ( /*#__PURE__*/new NamespaceDef('http://www.w3.org/1998/Math/MathML', 'math', 'mathml'));\n/**\n * [SVG](https://www.w3.org/Graphics/SVG/) namespace definition.\n */\nconst SVG__NS = ( /*#__PURE__*/new NamespaceDef('http://www.w3.org/2000/svg', 'svg'));\n/**\n * [XHTML](https://www.w3.org/TR/xhtml1/) namespace definition.\n */\nconst XHTML__NS = ( /*#__PURE__*/new NamespaceDef('http://www.w3.org/1999/xhtml', 'xhtml'));\n/**\n * [XML](https://www.w3.org/XML/1998/namespace) namespace definition.\n *\n * It is always bound to `xml` alias.\n */\nconst XML__NS = ( /*#__PURE__*/new NamespaceDef('http://www.w3.org/XML/1998/namespace', 'xml'));\n/**\n * [XML Namespaces](https://www.w3.org/TR/xml-names/#ns-decl) namespace definition.\n *\n * It is always bound to `xmlns` alias and should never be declared.\n */\nconst XMLNS__NS = ( /*#__PURE__*/new NamespaceDef('http://www.w3.org/2000/xmlns/', 'xmlns'));\n/**\n * [XSL Transformations](https://www.w3.org/TR/1999/REC-xslt-19991116#xslt-namespace) namespace definition.\n */\nconst XSLT__NS = ( /*#__PURE__*/new NamespaceDef('http://www.w3.org/1999/XSL/Transform', 'xsl'));\n\nexport { DEFAULT__NS, MathML__NS, NamespaceDef, Naming, SVG__NS, XHTML__NS, XMLNS__NS, XML__NS, XSLT__NS, compareNames, css__naming, default__naming, html__naming, id__naming, isNameAndNamespace, isQualifiedName, nameAndNamespace, namesEqual, namespaceOf, newNamespaceAliaser, xml__naming };\n//# sourceMappingURL=namespace-aliaser.js.map\n","import { Supply, neverSupply } from '@proc7ts/supply';\nimport { noop } from '@proc7ts/primitives';\n\n/**\n * A key of {@link EventKeeper} method returning its {@link AfterEvent} instance.\n *\n * @category Core\n */\nconst AfterEvent__symbol = ( /*#__PURE__*/Symbol('after-event'));\n/**\n * Checks whether the given value implements an {@link EventKeeper} interface.\n *\n * @category Core\n * @typeParam TEvent - Expected event type.\n * @typeParam TOther - Another type the value may have.\n * @param value - A value to check.\n *\n * @returns `true` if the `value` contains an {@link AfterEvent__symbol} method, or `false` otherwise.\n */\nfunction isEventKeeper(value) {\n    return !!value\n        && (typeof value === 'object' || typeof value === 'function')\n        && typeof value[AfterEvent__symbol] === 'function';\n}\n\n/**\n * Converts arbitrary event receiver to generic form.\n *\n * The returned event receiver would never send events to original receiver after event supply is cut off.\n *\n * @category Core\n * @typeParam TEvent - An event type. This is a tuple of event receiver parameter types.\n * @param receiver - An event receiver to convert.\n *\n * @returns Event `receiver` in most generic form.\n */\nfunction eventReceiver(receiver) {\n    let supply;\n    let receive;\n    if (typeof receiver === 'function') {\n        supply = new Supply();\n        receive = (_context, ...event) => receiver(...event);\n    }\n    else {\n        supply = receiver.supply || new Supply();\n        receive = (context, ...event) => {\n            if (!supply.isOff) {\n                // Supply cut off callback may be called before the receiver disabled.\n                // Such callback may send an event that should not be received.\n                receiver.receive(context, ...event);\n            }\n        };\n    }\n    // Disable receiver when event supply is cut off. But see the comment above.\n    // For function receiver this callback is always the first one.\n    supply.whenOff(() => receive = EventReceiver$doDonReceive);\n    return {\n        supply,\n        receive: (context, ...event) => receive(context, ...event),\n    };\n}\nfunction EventReceiver$doDonReceive(_context, ..._event) {\n    // Do not receive event.\n}\n\n/**\n * Creates an event receiver function that dispatches events to each of the given event receivers.\n *\n * @internal\n * @param receivers - An iterable of event receivers to dispatch event to.\n *\n * @returns An event receiver function that does not utilize event processing context an thus can be called directly.\n */\nfunction receiveByEach(receivers) {\n    let send = sendNonRecurrent;\n    return (...event) => send(event);\n    function sendNonRecurrent(event) {\n        let actualReceivers = receivers;\n        const received = [];\n        send = (recurrent) => received.push(recurrent);\n        try {\n            for (;;) {\n                actualReceivers = processEvent(actualReceivers, event);\n                const recurrent = received.shift();\n                if (!recurrent) {\n                    break;\n                }\n                event = recurrent;\n            }\n        }\n        finally {\n            send = sendNonRecurrent;\n        }\n    }\n}\n/**\n * @internal\n */\nfunction processEvent(receivers, event) {\n    const recurrentReceivers = [];\n    for (const receiver of receivers) {\n        const idx = recurrentReceivers.length;\n        recurrentReceivers.push(receiver);\n        const context = {\n            onRecurrent(recurrentReceiver) {\n                recurrentReceivers[idx] = eventReceiver({\n                    supply: receiver.supply,\n                    receive(_context, ...recurrentEvent) {\n                        recurrentReceiver(...recurrentEvent);\n                    },\n                });\n            },\n        };\n        receiver.receive(context, ...event);\n    }\n    return recurrentReceivers;\n}\n\n/**\n * Event notifier can be used to register event receivers and send events to them.\n *\n * It does not implement an {@link EventSender} interface though. Use an {@link EventEmitter} if you need one.\n *\n * Manages a list of registered event receivers, and removes them from the list once their supplies\n * are {@link Supply.off cut off}.\n *\n * @category Core\n * @typeParam TEvent - An event type. This is a list of event receiver parameter types.\n */\nclass EventNotifier {\n    constructor() {\n        const rcs = this._rcs = new Set();\n        this.send = receiveByEach(rcs);\n        this.supply = new Supply(() => {\n            rcs.clear();\n            delete this._rcs;\n        });\n    }\n    /**\n     * The number of currently registered event receivers.\n     */\n    get size() {\n        return this._rcs ? this._rcs.size : 0;\n    }\n    /**\n     * Registers an event receiver.\n     *\n     * Receivers registered with this method will receive the {@link send emitted} events.\n     *\n     * @param receiver - A receiver of events to register.\n     *\n     * @returns A supply of events to the given `receiver`.\n     */\n    on(receiver) {\n        const generic = eventReceiver(receiver);\n        const supply = generic.supply.needs(this);\n        const receivers = this._rcs;\n        if (receivers && !supply.isOff) {\n            receivers.add(generic);\n            supply.whenOff(() => receivers.delete(generic));\n        }\n        return supply;\n    }\n}\n\n/**\n * A key of {@link EventSender} method returning its {@link OnEvent} instance.\n *\n * @category Core\n */\nconst OnEvent__symbol = ( /*#__PURE__*/Symbol('on-event'));\n/**\n * Checks whether the given value implements an {@link EventSender} interface.\n *\n * @category Core\n * @typeParam TEvent - Expected event type.\n * @typeParam TOther - Another type the value may have.\n * @param value - A value to check.\n *\n * @returns `true` if the `value` contains an {@link OnEvent__symbol} method, or `false` otherwise.\n */\nfunction isEventSender(value) {\n    return !!value\n        && (typeof value === 'object' || typeof value === 'function')\n        && typeof value[OnEvent__symbol] === 'function';\n}\n\n/**\n * An error indicating a failure to receive an expected event.\n *\n * This happens e.g. when receiver registered in {@link EventKeeper event keeper}, but the latter has no events to send.\n * This may happen when no fallback passed to {@link afterEventBy} function, while the given supplier did not send\n * any events.\n *\n * @category Core\n */\nclass NoEventsError extends TypeError {\n    /**\n     * Constructs an error.\n     *\n     * @param message - Error message.\n     */\n    constructor(message = 'No events to send') {\n        super(message);\n    }\n}\n\n/**\n * Creates an event sender targeted specific receiver.\n *\n * @category Core\n * @typeParam TEvent - An event type. This is a list of event receiver parameter types.\n *\n * @param receiver - Target event receiver.\n *\n * @returns A function accepting events and sending them to target `receiver`.\n */\nfunction sendEventsTo(receiver) {\n    const generic = eventReceiver(receiver);\n    let send = receiveByEach([generic]);\n    generic.supply.whenOff(() => send = noop);\n    return (...event) => send(...event);\n}\n\n/**\n * @internal\n */\nfunction AfterEvent$noFallback() {\n    throw new NoEventsError();\n}\n\n/**\n * @internal\n */\nfunction digEvents(input, extract) {\n    return ({ supply, receive }) => {\n        let nestedSupply = neverSupply();\n        input({\n            supply,\n            receive: (_context, ...event) => {\n                const prevSupply = nestedSupply;\n                const extracted = extract(...event);\n                nestedSupply = extracted\n                    ? extracted({\n                        supply: new Supply(reason => {\n                            if (reason !== digEvents) {\n                                supply.off(reason);\n                            }\n                        }).needs(supply),\n                        receive,\n                    })\n                    : neverSupply();\n                prevSupply.off(digEvents);\n            },\n        });\n    };\n}\n\n/**\n * @internal\n */\nfunction OnEvent$do(...processors) {\n    return processors.reduce((arg, action) => action(arg), this);\n}\n\n/**\n * @internal\n */\nfunction OnEvent$supplier() {\n    return this;\n}\n\n/**\n * @internal\n */\nfunction onceEvent(supplier) {\n    return ({ supply, receive }) => {\n        supplier({\n            supply,\n            receive: (context, ...event) => {\n                receive(context, ...event);\n                supply.off();\n            },\n        });\n    };\n}\n\n/**\n * @internal\n */\nfunction OnEvent$then(onEvent, onCutOff) {\n    return new Promise((resolve, reject) => {\n        onceEvent(this)({\n            supply: onCutOff\n                ? new Supply(reason => {\n                    try {\n                        resolve(onCutOff(reason));\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                })\n                : new Supply(reject),\n            receive: onEvent\n                ? (_ctx, ...event) => {\n                    try {\n                        resolve(onEvent(...event));\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                : ((_ctx, event) => resolve(event)),\n        });\n    });\n}\n\n/**\n * @internal\n */\nfunction shareEvents(supplier) {\n    const sharer = new EventSharer(supplier);\n    return sharer.on.bind(sharer);\n}\nclass EventSharer extends EventNotifier {\n    constructor(supplier) {\n        super();\n        this.supplier = supplier;\n        this._on = this._onInit();\n    }\n    on(receiver) {\n        this._on.on(receiver);\n        return receiver.supply;\n    }\n    /**\n     * Initial dispatcher applied when there are no receivers.\n     */\n    _onInit() {\n        return {\n            on: receiver => {\n                const initialEvents = [];\n                const sharedSupply = new Supply(() => this._on = this._onInit());\n                const onFirst = this._on = this._onFirst(sharedSupply, initialEvents);\n                try {\n                    onFirst.on(receiver);\n                    this.supplier({\n                        supply: sharedSupply,\n                        receive: (_ctx, ...event) => this._on.dispatch(...event),\n                    });\n                }\n                finally {\n                    if (this._on === onFirst) {\n                        this._on = this._onNext(sharedSupply, initialEvents);\n                    }\n                }\n            },\n            dispatch: null, // Initial dispatcher never dispatches events\n        };\n    }\n    /**\n     * A dispatcher applied while the first receiver is still registering, but not registered yet.\n     *\n     * Records emitted events to dispatch them to all receivers.\n     */\n    _onFirst(sharedSupply, initialEvents) {\n        return {\n            on: receiver => this._addReceiver(receiver, sharedSupply, initialEvents),\n            dispatch: (...event) => {\n                // Record initial event.\n                initialEvents.push(event);\n                this.send(...event);\n            },\n        };\n    }\n    /**\n     * A dispatcher applied after the first receiver registered.\n     *\n     * Dispatches initial events to new receivers until new event received.\n     */\n    _onNext(sharedSupply, initialEvents) {\n        return {\n            on: receiver => this._addReceiver(receiver, sharedSupply, initialEvents),\n            dispatch: (...event) => {\n                // An event received after initial ones.\n                // Stop dispatching initial events.\n                initialEvents.length = 0;\n                this.send(...event);\n            },\n        };\n    }\n    _addReceiver(receiver, sharedSupply, initialEvents) {\n        sharedSupply.cuts(receiver);\n        super.on(receiver).whenOff(reason => {\n            if (!this.size) {\n                sharedSupply.off(reason);\n            }\n        });\n        if (initialEvents.length) {\n            // Dispatch initial events.\n            const dispatch = sendEventsTo(receiver);\n            initialEvents.forEach(event => dispatch(...event));\n        }\n    }\n}\n\n/**\n * @internal\n */\nfunction supplyEvents(supplier, required, dependentSupply) {\n    return (receiver) => {\n        if (dependentSupply) {\n            supplier({\n                supply: new Supply().needs(required).cuts(dependentSupply),\n                receive: receiver.receive,\n            });\n        }\n        else {\n            receiver.supply.needs(required);\n            supplier(receiver);\n        }\n    };\n}\n\n/**\n * @internal\n */\nfunction translateEvents(supplier, translate) {\n    return receiver => {\n        const dispatch = sendEventsTo(receiver);\n        supplier({\n            supply: receiver.supply,\n            receive: (_ctx, ...event) => {\n                translate(dispatch, ...event);\n            },\n        });\n    };\n}\n\n/**\n * @internal\n */\nfunction alwaysReceiveValue(value) {\n    return receiver => {\n        try {\n            sendEventsTo(receiver)(value);\n            receiver.supply.off();\n        }\n        catch (e) {\n            receiver.supply.off(e);\n        }\n    };\n}\n\n/**\n * @internal\n */\nfunction neverReceiveBecause(reason) {\n    return ({ supply }) => supply.off(reason);\n}\n/**\n * @internal\n */\nfunction neverReceive({ supply }) {\n    supply.off();\n}\n\nexport { AfterEvent$noFallback as A, EventNotifier as E, NoEventsError as N, OnEvent__symbol as O, OnEvent$supplier as a, OnEvent$do as b, OnEvent$then as c, AfterEvent__symbol as d, eventReceiver as e, sendEventsTo as f, digEvents as g, isEventSender as h, isEventKeeper as i, alwaysReceiveValue as j, neverReceiveBecause as k, supplyEvents as l, neverReceive as n, onceEvent as o, shareEvents as s, translateEvents as t };\n//# sourceMappingURL=_fun-events.base.js.map\n","import { noop, valueProvider, asis, arraysAreEqual, countArgs } from '@proc7ts/primitives';\nimport { Supply, neverSupply, isAlwaysSupply } from '@proc7ts/supply';\nimport { O as OnEvent__symbol, a as OnEvent$supplier, b as OnEvent$do, c as OnEvent$then, e as eventReceiver, A as AfterEvent$noFallback, d as AfterEvent__symbol, s as shareEvents, f as sendEventsTo, o as onceEvent, n as neverReceive, i as isEventKeeper, g as digEvents, E as EventNotifier, h as isEventSender, j as alwaysReceiveValue, k as neverReceiveBecause, t as translateEvents, l as supplyEvents } from './_fun-events.base.js';\nexport { d as AfterEvent__symbol, E as EventNotifier, N as NoEventsError, O as OnEvent__symbol, e as eventReceiver, i as isEventKeeper, h as isEventSender, f as sendEventsTo } from './_fun-events.base.js';\n\n/**\n * Converts a plain event receiver registration function to {@link OnEvent} sender.\n *\n * @category Core\n * @typeParam TEvent - An event type. This is a list of event receiver parameter types.\n * @param register - Generic event receiver registration function. It will be called on each receiver registration,\n * unless the receiver's {@link EventReceiver.Generic.supply event supply} is cut off already.\n *\n * @returns An {@link OnEvent} sender registering event receivers with the given `register` function.\n */\nfunction onEventBy(register) {\n    const onEvent = ((receiver) => {\n        const generic = eventReceiver(receiver);\n        const { supply } = generic;\n        if (!supply.isOff) {\n            try {\n                register(generic);\n            }\n            catch (error) {\n                supply.off(error);\n            }\n        }\n        return supply;\n    });\n    onEvent[OnEvent__symbol] = OnEvent$supplier;\n    onEvent.do = OnEvent$do;\n    onEvent.then = OnEvent$then;\n    return onEvent;\n}\n/**\n * Checks whether the given value is an {@link OnEvent} sender.\n *\n * @category Core\n * @typeParam TEvent - Expected event type.\n * @typeParam TOther - Another type the value may have.\n * @param value - A value to check.\n *\n * @returns `true` if the `value` has been created by {@link onEventBy} function or in compatible way,\n * or `false` otherwise.\n */\nfunction isOnEvent(value) {\n    return typeof value === 'function'\n        && value[OnEvent__symbol] === OnEvent$supplier\n        && value.do === OnEvent$do\n        && value.then === OnEvent$then;\n}\n\n/**\n * Converts a plain event receiver registration function to {@link AfterEvent} keeper with a fallback.\n *\n * The event constructed by `fallback` will be sent to the registered first receiver, unless `register` function sends\n * one.\n *\n * @category Core\n * @typeParam TEvent - An event type. This is a list of event receiver parameter types.\n * @param register - Generic event receiver registration function. It will be called on each receiver registration,\n * unless the receiver's {@link EventReceiver.Generic.supply event supply} is cut off already.\n * @param fallback - A function creating fallback event. When omitted, the initial event is expected to be sent by\n * `register` function. A receiver registration would lead to an error otherwise.\n * @param cleanup - A function that will be called once all registered event supplies cut off.\n *\n * @returns An {@link AfterEvent} keeper registering event receivers with the given `register` function.\n */\nfunction afterEventBy(register, fallback = AfterEvent$noFallback, cleanup = AfterEvent$noCleanup) {\n    let lastEvent;\n    let numReceivers = 0;\n    const afterEvent = ((receiver) => {\n        let dest = noop;\n        const generic = eventReceiver(receiver);\n        if (generic.supply.isOff) {\n            return generic.supply;\n        }\n        const supply = new Supply(noop).needs(generic);\n        let reported = false;\n        ++numReceivers;\n        try {\n            register({\n                supply,\n                receive: (context, ...event) => {\n                    reported = true;\n                    lastEvent = event;\n                    dest(context, ...event);\n                },\n            });\n        }\n        catch (error) {\n            supply.off(error);\n        }\n        if (!supply.isOff || reported) {\n            if (!lastEvent) {\n                try {\n                    lastEvent = fallback();\n                }\n                catch (error) {\n                    supply.off(error);\n                }\n            }\n            if (lastEvent) {\n                generic.receive({\n                    onRecurrent(recurrent) {\n                        dest = (_context, ...event) => recurrent(...event);\n                    },\n                }, ...lastEvent);\n                dest = (context, ...event) => generic.receive(context, ...event);\n            }\n        }\n        return supply.whenOff(reason => {\n            if (!--numReceivers) {\n                lastEvent = undefined;\n            }\n            generic.supply.off(reason);\n            if (!numReceivers) {\n                cleanup(reason);\n            }\n        });\n    });\n    afterEvent[OnEvent__symbol] = OnEvent$supplier;\n    afterEvent.do = OnEvent$do;\n    afterEvent.then = OnEvent$then;\n    afterEvent[AfterEvent__symbol] = OnEvent$supplier;\n    return afterEvent;\n}\nfunction AfterEvent$noCleanup(_reason) {\n    // No-op `AfterEvent` cleanup\n}\n/**\n * Checks whether the given value is an {@link AfterEvent} keeper.\n *\n * @category Core\n * @typeParam TEvent - Expected event type.\n * @typeParam TOther - Another type the value may have.\n * @param value - A value to check.\n *\n * @returns `true` if the `value` has been created by {@link afterEventBy} function or in compatible way,\n * or `false` otherwise.\n */\nfunction isAfterEvent(value) {\n    return isOnEvent(value) && value[AfterEvent__symbol] === OnEvent$supplier;\n}\n\n/**\n * Builds an {@link AfterEvent} keeper of events sent by all event keepers in `sources` map.\n *\n * @category Core\n * @typeParam TSrcMap - A type of `sources` map.\n * @param sources - A map of named event keepers the events are originated from.\n *\n * @returns An event keeper sending a map of events received from each source keeper. Each event in this map has the\n * same key as its source keeper in `sources`.\n */\nfunction afterAll(sources) {\n    const keys = Object.keys(sources);\n    const registerReceiver = (receiver) => {\n        const { supply } = receiver;\n        const dispatch = sendEventsTo(receiver);\n        let send = noop;\n        const result = {};\n        keys.forEach((key) => {\n            supply.needs(sources[key][AfterEvent__symbol]()((...event) => {\n                result[key] = event;\n                send();\n            }).needs(supply));\n        });\n        if (!supply.isOff) {\n            send = () => dispatch(result);\n        }\n    };\n    const latestEvent = () => {\n        const result = {};\n        keys.forEach((key) => onceEvent(sources[key][AfterEvent__symbol]())({\n            supply: new Supply(),\n            receive: (_ctx, ...event) => result[key] = event,\n        }));\n        return [result];\n    };\n    return afterEventBy(shareEvents(afterEventBy(registerReceiver, latestEvent)));\n}\n\n/**\n * Builds an {@link AfterEvent} keeper of events sent by each of the `sources`.\n *\n * @category Core\n * @typeParam TEvent - A type of events sent by each source.\n * @param sources - An array of source event keepers.\n *\n * @returns An event keeper sending events received from each source keeper. Each event item is an event tuple\n * originated from source keeper under its index in `sources` array.\n */\nfunction afterEach(...sources) {\n    const registerReceiver = (receiver) => {\n        const { supply } = receiver;\n        const dispatch = sendEventsTo(receiver);\n        let send = noop;\n        const result = [];\n        sources.forEach((source, index) => {\n            supply.needs(source[AfterEvent__symbol]()((...event) => {\n                result[index] = event;\n                send();\n            }).needs(supply));\n        });\n        if (!supply.isOff) {\n            send = () => dispatch(...result);\n        }\n    };\n    const latestEvent = () => {\n        const result = [];\n        sources.forEach(source => onceEvent(source[AfterEvent__symbol]())({\n            supply: new Supply(),\n            receive: (_ctx, ...event) => result.push(event),\n        }));\n        return result;\n    };\n    return afterEventBy(shareEvents(afterEventBy(registerReceiver, latestEvent)));\n}\n\n/**\n * An {@link AfterEvent} keeper that never sends any events.\n *\n * @category Core\n */\nconst afterNever = ( /*#__PURE__*/afterEventBy(neverReceive));\n\n/**\n * Builds an {@link AfterEvent} keeper of events sent by the given `sender`.\n *\n * The event generated by `fallback` will be sent to the registered first receiver, unless `register` function sends\n * one.\n *\n * @category Core\n * @typeParam TEvent - An event type. This is a list of event receiver parameter types.\n * @param sender - An event sender.\n * @param fallback - A function creating fallback event. When omitted, the initial event is expected to be sent by\n * `register` function. A receiver registration would lead to an error otherwise.\n *\n * @returns An {@link AfterEvent} keeper of events either originated from the given `sender`, or `initial` one.\n */\nfunction afterSent(sender, fallback) {\n    return afterEventBy(receiver => sender[OnEvent__symbol]()(receiver), fallback);\n}\n\nfunction afterSupplied(supplier, fallback) {\n    return isEventKeeper(supplier) ? supplier[AfterEvent__symbol]() : afterSent(supplier, fallback);\n}\n\n/**\n * Builds an {@link AfterEvent} keeper of the given `event`.\n *\n * @category Core\n * @typeParam TEvent - An event type. This is a list of event receiver parameter types.\n * @param event - An event that will be sent to all receivers upon registration.\n *\n * @returns An {@link AfterEvent} keeper that always sends the given `event`.\n */\nfunction afterThe(...event) {\n    return afterEventBy(noop, valueProvider(event));\n}\n\nfunction afterValue(value) {\n    return isAfterEvent(value) ? value : afterThe(value);\n}\n\n/**\n * Creates an event processor that consumes incoming events.\n *\n * @category Event Processing\n * @typeParam TEvent - Incoming event type. This is a list of consumer function parameter types.\n * @param consume - A function consuming events. This function may return a {@link SupplyPeer peer of event supply},\n * e.g. when registers a nested event receiver. This supply will be cut off on new event, unless returned again.\n *\n * @returns A function accepting incoming event supplier and returning event supply that will stop consuming events once\n * cut off.\n */\nfunction consumeEvents(consume) {\n    return input => {\n        let consumerSupply = neverSupply();\n        // Do not use `.cuts()` here as `consumerSupply` is mutable\n        const supply = new Supply(reason => consumerSupply.off(reason));\n        input({\n            supply,\n            receive(_ctx, ...event) {\n                const prevSupply = consumerSupply;\n                try {\n                    consumerSupply = (consume(...event) || neverSupply()).supply;\n                }\n                finally {\n                    if (consumerSupply !== prevSupply) {\n                        prevSupply.off();\n                    }\n                }\n            },\n        });\n        return supply;\n    };\n}\n\n/**\n * A processor of events incoming from {@link AfterEvent} keeper that shares outgoing events supply among all registered\n * receivers.\n *\n * The created keeper receives events from this one and sends to registered receivers. The shared keeper registers\n * a receiver in this one only once, when first receiver registered. And cuts off original events supply once all\n * event supplies do.\n *\n * @category Event Processing\n * @typeParam TEvent - An event type. This is a list of event receiver parameter types.\n * @param supplier - Event keeper to share events from.\n *\n * @returns An {@link AfterEvent} keeper sharing a common supply of events.\n */\nfunction shareAfter(supplier) {\n    return afterEventBy(shareEvents(supplier));\n}\n\nlet deduplicateAfter$default;\nfunction deduplicateAfter(isSimilar, getCue) {\n    return isSimilar || getCue\n        ? deduplicateAfter$create(isSimilar, getCue)\n        : (deduplicateAfter$default || (deduplicateAfter$default = deduplicateAfter$create()));\n}\nfunction deduplicateAfter$create(isSimilar, getCue) {\n    const processor = deduplicateAfter_(isSimilar, getCue);\n    return input => shareAfter(processor(input));\n}\nlet deduplicateAfter_$default;\nfunction deduplicateAfter_(isSimilar, getCue) {\n    return isSimilar || getCue\n        ? deduplicateAfter_$create(isSimilar, getCue)\n        : (deduplicateAfter_$default || (deduplicateAfter_$default = deduplicateAfter_$create()));\n}\nconst deduplicateAfter$noPrior = { /* magic value meaning there is no cue */};\nfunction deduplicateAfter_$create(isSimilar = deduplicateAfter$isDuplicate, getCue = asis) {\n    return input => {\n        let prior = deduplicateAfter$noPrior;\n        return afterEventBy(({ supply, receive }) => input({\n            supply,\n            receive(ctx, ...nextEvent) {\n                const next = getCue(nextEvent);\n                if (prior === deduplicateAfter$noPrior || !isSimilar(prior, next)) {\n                    prior = next;\n                    receive(ctx, ...nextEvent);\n                }\n            },\n        }), undefined, _ => prior = deduplicateAfter$noPrior);\n    };\n}\nfunction deduplicateAfter$isDuplicate(prior, next) {\n    return arraysAreEqual(prior, next, Math.max(countArgs(prior), countArgs(next)));\n}\n\nfunction digAfter(extract, fallback) {\n    const processor = digAfter_(extract, fallback);\n    return input => shareAfter(processor(input));\n}\nfunction digAfter_(extract, fallback) {\n    const extractKeeper = (...events) => {\n        const extracted = extract(...events);\n        return extracted && afterSupplied(extracted);\n    };\n    return input => afterEventBy(digEvents(input, extractKeeper), fallback);\n}\n\n/**\n * Event emitter is a handy implementation of {@link OnEvent} sender.\n *\n * Extends {@link EventNotifier} by making its {@link EventNotifier.on} method implement an {@link OnEvent} interface.\n *\n * @category Core\n * @typeParam TEvent - An event type. This is a list of event receiver parameter types.\n */\nclass EventEmitter extends EventNotifier {\n    constructor() {\n        super(...arguments);\n        /**\n         * {@link OnEvent} sender of {@link send emitted} events.\n         *\n         * The `[OnEvent__symbol]` method is an alias of this one.\n         */\n        this.on = onEventBy(receiver => super.on(receiver));\n    }\n    [OnEvent__symbol]() {\n        return this.on;\n    }\n}\n\n/**\n * An {@link OnEvent} sender that never sends any events.\n *\n * @category Core\n */\nconst onNever = ( /*#__PURE__*/onEventBy(neverReceive));\n\n/**\n * Builds an {@link OnEvent} sender of events supplied by the given `supplier`.\n *\n * @category Core\n * @typeParam TEvent - An event type. This is a list of event receiver parameter types.\n * @param supplier - An event supplier.\n *\n * @returns An {@link OnEvent} sender of events originated from the given `supplier`.\n */\nfunction onSupplied(supplier) {\n    return isEventSender(supplier) ? supplier[OnEvent__symbol]() : supplier[AfterEvent__symbol]();\n}\n\n/**\n * Builds an {@link OnEvent} sender of events sent by any of the given `suppliers`.\n *\n * The resulting event supply is cut off as soon as all source supplies do.\n *\n * @category Core\n * @typeParam TEvent - An event type. This is a list of event receiver parameter types.\n * @param suppliers - Original event suppliers.\n *\n * @returns An {@link OnEvent} sender of all supplied events.\n */\nfunction onAny(...suppliers) {\n    if (!suppliers.length) {\n        return onNever;\n    }\n    return onEventBy(shareEvents(onEventBy(({ supply, receive }) => {\n        let remained = suppliers.length;\n        const removeSupplier = (reason) => {\n            if (!--remained) {\n                supply.off(reason);\n            }\n        };\n        suppliers.forEach(supplier => onSupplied(supplier)({\n            supply: new Supply(removeSupplier).needs(supply),\n            receive,\n        }));\n    })));\n}\n\n/**\n * Represents a promise as event sender.\n *\n * When the `promise` resolves successfully the resolved value is sent to registered event receivers. The events\n * supply is {@link Supply.off cut off} immediately after that without any reason specified.\n *\n * When the `promise` is rejected the events supply is {@link Supply.off cut off} with promise rejection reason.\n *\n * @category Core\n * @typeParam T - A type of value the promise is resolved to.\n * @param promise - The promise to represent as event sender.\n *\n * @returns An {@link OnEvent} sender of the given `promise` settlement event.\n */\nfunction onPromise(promise) {\n    let receive = (receiver) => {\n        promise.then(() => receive(receiver), () => receive(receiver));\n    };\n    promise.then(value => {\n        receive = alwaysReceiveValue(value);\n    }).catch(e => {\n        receive = neverReceiveBecause(e);\n    });\n    return onEventBy(receiver => receive(receiver));\n}\n\n/**\n * A processor of events incoming from {@link OnEvent} sender that shares outgoing events supply among all registered\n * receivers.\n *\n * The created sender receives events from this one and sends to registered receivers. The shared sender registers\n * a receiver in this one only once, when first receiver registered. And cuts off original events supply once all\n * supplies do.\n *\n * @category Event Processing\n * @typeParam TEvent - An event type. This is a list of event receiver parameter types.\n * @param supplier - Event sender to share events from.\n *\n * @returns An {@link OnEvent} sender sharing a common supply of events.\n */\nfunction shareOn(supplier) {\n    return onEventBy(shareEvents(supplier));\n}\n\n/**\n * Creates an event processor that extracts event senders from incoming events.\n *\n * The outgoing events supply is cut off once the incoming events supply do.\n *\n * @category Event Processing\n * @typeParam TInEvent - Incoming events type.\n * @typeParam TOutEvent - Extracted events type.\n * @param extract - A function extracting outgoing event supplier from incoming event. May return `undefined` when\n * nothing extracted.\n *\n * @returns New event processor.\n */\nfunction digOn(extract) {\n    const processor = digOn_(extract);\n    return input => shareOn(processor(input));\n}\n/**\n * Creates an event processor that extracts event senders from incoming events, and does not share the outgoing events\n * supply.\n *\n * The outgoing events supply is cut off once the incoming events supply do.\n *\n * @category Event Processing\n * @typeParam TInEvent - Incoming events type.\n * @typeParam TOutEvent - Extracted events type.\n * @param extract - A function extracting outgoing event supplier from incoming event. May return `undefined` when\n * nothing extracted.\n *\n * @returns New event processor.\n */\nfunction digOn_(extract) {\n    const extractSender = (...event) => {\n        const extracted = extract(...event);\n        return extracted && onSupplied(extracted);\n    };\n    return input => onEventBy(digEvents(input, extractSender));\n}\n\n/**\n * Creates an event processor that translates events incoming from {@link OnEvent} sender.\n *\n * The translated events expected to be sent by the given `translate` function.\n *\n * @category Event Processing\n * @typeParam TInEvent - Incoming event type.\n * @typeParam TOutEvent - Outgoing translated event type.\n * @param translate - Event translation function. Accepts an outgoing event sender function as first parameter,\n * and incoming event as the rest of them.\n *\n * @returns A mapping function of incoming event sender to another one.\n */\nfunction translateOn(translate) {\n    const mapper = translateOn_(translate);\n    return input => shareOn(mapper(input));\n}\n/**\n * Creates an event processor that translates events incoming from {@link OnEvent} sender, and does not share the\n * outgoing events supply.\n *\n * The translated events expected to be sent by the given `translate` function.\n *\n * @category Event Processing\n * @typeParam TInEvent - Incoming event type.\n * @typeParam TOutEvent - Outgoing translated event type.\n * @param translate - Event translation function. Accepts an outgoing event sender function as first parameter,\n * and incoming event as the rest of them.\n *\n * @returns A mapping function of incoming event sender to another one.\n */\nfunction translateOn_(translate) {\n    return input => onEventBy(translateEvents(input, translate));\n}\n\nfunction filterOn(test) {\n    const map = filterOn_(test);\n    return supplier => shareOn(map(supplier));\n}\nfunction filterOn_(// eslint-disable-line @typescript-eslint/naming-convention\ntest) {\n    return translateOn_((send, ...event) => test(...event) && send(...event));\n}\n\nfunction mapAfter(convert, fallback) {\n    const mapper = mapAfter_(convert, fallback);\n    return input => shareAfter(mapper(input));\n}\nfunction mapAfter_(// eslint-disable-line @typescript-eslint/naming-convention\nconvert, fallback) {\n    return input => afterEventBy(translateEvents(input, (send, ...event) => send(convert(...event))), fallback && (() => [fallback()]));\n}\n\n/**\n * Creates an event processor that converts events incoming from {@link OnEvent} sender with the given converter\n * function.\n *\n * @category Event Processing\n * @typeParam TEvent - Incoming events type.\n * @typeParam TResult - Outgoing events type.\n * @param convert - A converter function that accepts incoming event as parameters and returns converted outgoing event.\n *\n * @returns New event mapper.\n */\nfunction mapOn(convert) {\n    const mapper = mapOn_(convert);\n    return input => shareOn(mapper(input));\n}\n/**\n * Creates an event processor that converts events incoming from {@link OnEvent} sender with the given converter\n * function, and does not share the outgoing events supply.\n *\n * @category Event Processing\n * @typeParam TEvent - Incoming events type.\n * @typeParam TResult - Outgoing events type.\n * @param convert - A converter function that accepts incoming event as parameters and returns outgoing event value.\n *\n * @returns New event mapper.\n */\nfunction mapOn_(// eslint-disable-line @typescript-eslint/naming-convention\nconvert) {\n    return input => onEventBy(translateEvents(input, (send, ...event) => send(convert(...event))));\n}\n\n/**\n * A processor of the first event incoming from {@link AfterEvent} keeper.\n *\n * Cuts off the outgoing events supply after sending the first event.\n *\n * @category Event Processing\n * @typeParam TEvent - An event type. This is a list of event receiver parameter types.\n * @param supplier - Event keeper to receive an event from.\n *\n * @returns New keeper of the first event.\n */\nfunction onceAfter(supplier) {\n    return afterEventBy(onceEvent(supplier));\n}\n\n/**\n * A processor of the first event incoming from {@link OnEvent} sender.\n *\n * Cuts off the outgoing event supply after sending the first event.\n *\n * @category Event Processing\n * @typeParam TEvent - An event type. This is a list of event receiver parameter types.\n * @param supplier - Event sender to receive an event from.\n *\n * @returns New sender of the first event.\n */\nfunction onceOn(supplier) {\n    return onEventBy(onceEvent(supplier));\n}\n\n/**\n * A processor that asynchronously resolves incoming events and sends then in the order of their resolution.\n *\n * Receives events or their promises from the given event sender, and sends them once they are resolved. The original\n * order of events is not preserved. Instead each resolved event is sent along with its index in original order.\n *\n * The resulting events supply is cut off immediately once unresolved events supply is cut off, or some of incoming\n * event promises rejected. In the latter case the rejection reason is used as a reason to cut off.\n *\n * @category Event Processing\n * @typeParam T - A type of values the promises resolve to.\n * @param from - A sender of events or promise-like instances resolved to ones.\n *\n * @returns New `OnEvent` sender of resolved events and their indices in original order starting from `1`.\n */\nfunction resolveOn(from) {\n    return onEventBy(receiver => {\n        const { supply } = receiver;\n        const dispatch = sendEventsTo(receiver);\n        let lastIndex = 0;\n        from({\n            supply,\n            receive(_ctx, promise) {\n                const index = ++lastIndex;\n                Promise.resolve()\n                    .then(() => promise)\n                    .then(event => dispatch(event, index), reason => supply.off(reason));\n            },\n        });\n    });\n}\n\n/**\n * Creates an event processor that passes events incoming from {@link OnEvent} sender until the `required` supply is\n * cut off.\n *\n * The outgoing events supply will be cut off once incoming event supply does, unless a second supply passed in.\n * In the latter case that supply will be cut off instead.\n *\n * @category Event Processing\n * @typeParam TEvent - An event type. This is a list of event receiver parameter types.\n * @param required - A peer of required event supply. The returned processor does nothing when `alwaysSupply()`\n * specified.\n * @param dependentSupply - The supply to cut off on cutting off the incoming events supply.\n *\n * @returns New event mapper.\n */\nfunction supplyOn(required, dependentSupply) {\n    return isAlwaysSupply(required.supply)\n        ? asis\n        : (input) => onEventBy(supplyEvents(input, required, dependentSupply));\n}\n\n/**\n * A processor that asynchronously resolves incoming events and sends them in the order they are received.\n *\n * Receives events or their promises from the given event sender, and sends them once they are resolved in the same\n * order as they have been received. Mat send events in batches, e.g. when events resolved out of order.\n *\n * The resulting events supply is cut off if some of incoming event promises rejected. In this case the rejection reason\n * is used as a reason to cut off. If incoming events supply is cut off, then the resulting event supply will be cut off\n * too, but only after all incoming events resolved and sent.\n *\n * @category Event Processing\n * @typeParam TEvent - Resolved event type.\n * @param from - A sender of events or promise-like instances resolved to ones.\n *\n * @returns New `OnEvent` sender of resolved events.\n */\nfunction resolveOnOrdered(from) {\n    return onEventBy(receiver => {\n        const { supply } = receiver;\n        const dispatch = sendEventsTo(receiver);\n        const sourceSupply = new Supply();\n        let numInProcess = 0;\n        const source = from.do(supplyOn(supply, sourceSupply), mapOn(event => {\n            ++numInProcess;\n            return event;\n        }));\n        let received = [];\n        let numSent = 1;\n        let numReceived = 0;\n        sourceSupply.whenOff(reason => {\n            if (!numInProcess) {\n                supply.off(reason);\n            }\n        });\n        resolveOn(source)({\n            supply,\n            receive(_ctx, event, index) {\n                const i = index - numSent;\n                received[i] = event;\n                ++numReceived;\n                if (numReceived > i) {\n                    let toSend;\n                    if (numReceived === received.length) {\n                        // Can send all received events\n                        toSend = received;\n                        received = [];\n                    }\n                    else {\n                        // Can send events up to `i`\n                        toSend = received.splice(0, i + 1);\n                    }\n                    numSent += toSend.length;\n                    numReceived -= toSend.length;\n                    numInProcess -= toSend.length;\n                    dispatch(...toSend);\n                    if (!numInProcess && sourceSupply.isOff) {\n                        supply.needs(sourceSupply);\n                    }\n                }\n            },\n        });\n    });\n}\n\n/**\n * Creates an event processor that passes events incoming from {@link AfterEvent} keeper until the `required` supply\n * is cut off.\n *\n * The outgoing events supply will be cut off once incoming event supply does, unless a second supply passed in.\n * In the latter case that supply will be cut off instead.\n *\n * @category Event Processing\n * @typeParam TEvent - An event type. This is a list of event receiver parameter types.\n * @param required - A peer of required event supply. The returned processor does nothing when `alwaysSupply()`\n * specified.\n * @param dependentSupply - The supply to cut off on cutting off the incoming events supply.\n *\n * @returns New event mapper.\n */\nfunction supplyAfter(required, dependentSupply) {\n    return isAlwaysSupply(required.supply)\n        ? asis\n        : (input) => afterEventBy(supplyEvents(input, required, dependentSupply));\n}\n\nfunction translateAfter(translate, fallback) {\n    const mapper = translateAfter_(translate, fallback);\n    return input => shareAfter(mapper(input));\n}\n/**\n * Creates an event processor that translates events incoming from {@link OnEvent} sender with fallback, and does not\n * share the outgoing events supply.\n *\n * The translated events expected to be sent by the given `translate` function.\n *\n * The returned mapper does the same as the one created by {@link translateOn_} one, but returns an {@link AfterEvent}\n * keeper instead of {@link OnEvent} sender. This can not be always done without a `fallback`, as not every\n * transformation results to valid {@link EventKeeper}. E.g. when some events filtered out.\n *\n * @category Event Processing\n * @typeParam TInEvent - Incoming event type.\n * @typeParam TOutEvent - Outgoing translated event type.\n * @param translate - Event translation function. Accepts an outgoing event sender function as first parameter,\n * and incoming event as the rest of them.\n * @param fallback - A function creating fallback event. When omitted, the initial event is expected to be sent by\n * `translate` function. A receiver registration would lead to an error otherwise.\n *\n * @returns A mapping function of incoming event keeper to another one.\n */\nfunction translateAfter_(translate, fallback) {\n    return input => afterEventBy(translateEvents(input, translate), fallback);\n}\n\nfunction valueAfter(valueOf, fallback) {\n    const mapper = valueAfter_(valueOf, fallback);\n    return input => shareAfter(mapper(input));\n}\nfunction valueAfter_(// eslint-disable-line @typescript-eslint/naming-convention\nvalueOf, fallback) {\n    return translateAfter_((send, ...event) => {\n        const value = valueOf(...event);\n        if (value != null && value !== false) {\n            send(value);\n        }\n    }, (fallback && (() => [fallback()])));\n}\n\n/**\n * Creates an event processor that sends the values of incoming events.\n *\n * Events are valued by provided `value` function. The `null`, `undefined`, and `false` values are dropped.\n *\n * @category Event Processing\n * @typeParam TEvent - Incoming event type.\n * @typeParam TValue - Event value type.\n * @param valueOf - Event value detector function. Accepts incoming event as parameters and returns either its value,\n * or `false`/`null`/`undefined` to ignore it.\n *\n * @returns New event processor.\n */\nfunction valueOn(valueOf) {\n    const mapper = valueOn_(valueOf);\n    return input => shareOn(mapper(input));\n}\n/**\n * Creates an event processor that sends the values of incoming events, and does not share the outgoing events supply.\n *\n * @category Event Processing\n * @typeParam TEvent - Incoming event type.\n * @typeParam TValue - Event value type.\n * @param valueOf - Event value detector function. Accepts incoming event as parameters and returns either its value,\n * or `false`/`null`/`undefined` to ignore it.\n *\n * @returns New event processor.\n */\nfunction valueOn_(// eslint-disable-line @typescript-eslint/naming-convention\nvalueOf) {\n    return translateOn_((send, ...event) => {\n        const value = valueOf(...event);\n        if (value != null && value !== false) {\n            send(value);\n        }\n    });\n}\n\nfunction statePath(path) {\n    return (Array.isArray(path) ? path : [path]);\n}\n\n/**\n * @internal\n */\nclass PathEntry {\n    constructor(_drop) {\n        this._drop = _drop;\n        this.emitter = new EventEmitter();\n        this._nested = new Map();\n        this.emitter.on((path, newValue, oldValue) => {\n            const key = path[0];\n            const nested = this._nested.get(key);\n            if (nested) {\n                nested.emitter.send(path.slice(1), newValue, oldValue);\n            }\n        });\n    }\n    on(receiver) {\n        const supply = this.emitter.on(receiver);\n        return new Supply(reason => {\n            supply.off(reason);\n            this._dropIfEmpty();\n        }).needs(supply);\n    }\n    nest(key, dontCreateMissing) {\n        const found = this._nested.get(key);\n        if (found || dontCreateMissing) {\n            return found;\n        }\n        const created = new PathEntry(() => this._remove(key));\n        this._nested.set(key, created);\n        return created;\n    }\n    done(reason) {\n        for (const nested of this._nested.values()) {\n            nested.done(reason);\n        }\n        this.emitter.supply.off(reason);\n    }\n    _remove(key) {\n        this._nested.delete(key);\n        this._dropIfEmpty();\n    }\n    _dropIfEmpty() {\n        if (!this._nested.size && this.emitter.size <= 1) {\n            this._drop();\n        }\n    }\n}\n/**\n * @internal\n */\nclass Trackers {\n    constructor() {\n        this._root = new PathEntry(noop);\n    }\n    on(path, receiver) {\n        return this._entry(path).on(receiver);\n    }\n    send(path, newValue, oldValue) {\n        this._root.emitter.send(path, newValue, oldValue);\n    }\n    done(path, reason) {\n        const entry = this._entry(path, true);\n        if (entry) {\n            entry.done(reason);\n        }\n    }\n    _entry(path, dontCreateMissing) {\n        let entry = this._root;\n        for (const key of path) {\n            const nested = entry.nest(key, dontCreateMissing);\n            if (!nested) {\n                return;\n            }\n            entry = nested;\n        }\n        return entry;\n    }\n}\n/**\n * @internal\n */\nclass SubStateTracker {\n    constructor(_trackers, _path) {\n        this._trackers = _trackers;\n        this._path = _path;\n        this.onUpdate = onEventBy(receiver => this._trackers.on(this._path, receiver));\n        this.update = (path, newValue, oldValue) => {\n            this._trackers.send([...this._path, ...statePath(path)], newValue, oldValue);\n        };\n    }\n    get _tracker() {\n        return this;\n    }\n    [OnEvent__symbol]() {\n        return this.onUpdate;\n    }\n    track(path) {\n        path = statePath(path);\n        if (!path.length) {\n            return this; // Path to itself.\n        }\n        return new SubStateTracker(this._trackers, [...this._path, ...path]);\n    }\n    done(reason) {\n        this._trackers.done(this._path, reason);\n    }\n}\n/**\n * State changes tracker.\n *\n * A state is a tree-like structure of sub-states (nodes) available under {@link StatePath}.\n *\n * When node modified a {@link StateTracker.update} should be called. Then all state update receivers registered by\n * {@link StateTracker.onUpdate} will receive this update.\n *\n * @category State Tracking\n */\nclass StateTracker {\n    constructor() {\n        /**\n         * @internal\n         */\n        this._tracker = new SubStateTracker(new Trackers(), []);\n    }\n    /**\n     * {@link OnStateUpdate state updates sender}.\n     *\n     * A state update will be sent to it whenever an `update()` function is called.\n     *\n     * The `[OnEvent__symbol]` property is an alias of this one.\n     *\n     * @returns State updates sender.\n     */\n    get onUpdate() {\n        return this._tracker.onUpdate;\n    }\n    [OnEvent__symbol]() {\n        return this.onUpdate;\n    }\n    // noinspection JSCommentMatchesSignature\n    /**\n     * Updates the component state.\n     *\n     * All receivers registered with {@link onUpdate} will receive this update.\n     *\n     * @typeParam T - A type of changed value.\n     * @param key - Changed value key.\n     * @param newValue - New value.\n     * @param oldValue - Previous value.\n     */\n    get update() {\n        return this._tracker.update;\n    }\n    /**\n     * Starts tracking of partial state under the given path.\n     *\n     * @param path - A path to state part.\n     *\n     * @return New partial state tracker.\n     */\n    track(path) {\n        const subTracker = this._tracker.track(path);\n        return subTracker === this._tracker ? this : subTracker;\n    }\n    /**\n     * Unregisters updates receivers and cuts off their supplies.\n     *\n     * After this method call the updates receivers of this partial state and all nested states won't receive any updates.\n     *\n     * @param reason - An optional reason to stop tracking.\n     */\n    done(reason) {\n        this._tracker.done(reason);\n    }\n}\n\n/**\n * Value accessor and changes tracker.\n *\n * Implements an {@link EventSender} interface by sending value changes to registered receivers as a pair of new and old\n * values.\n *\n * Implements an {@link EventKeeper} interface by sending current value and its updates.\n *\n * @category Value Tracking\n * @typeParam T - Tracked value type.\n */\nclass ValueTracker {\n    constructor() {\n        /**\n         * @internal\n         */\n        this._by = neverSupply();\n        /**\n         * {@link AfterEvent} keeper of current value.\n         *\n         * The `[AfterEvent__symbol]` property is an alias of this one.\n         *\n         * @returns Current value keeper.\n         */\n        this.read = afterEventBy(receiver => this.on(receiveNewValue(receiver)), () => [this.it]);\n    }\n    [OnEvent__symbol]() {\n        return this.on;\n    }\n    [AfterEvent__symbol]() {\n        return this.read;\n    }\n    by(supplier, extract) {\n        const acceptValuesFrom = (sender) => {\n            const onValue = isEventKeeper(sender) ? sender[AfterEvent__symbol]() : sender[OnEvent__symbol]();\n            return onValue(value => this.it = value);\n        };\n        this.byNone();\n        if (!extract) {\n            const sender = supplier;\n            this._by = acceptValuesFrom(sender);\n        }\n        else {\n            const container = supplier;\n            this._by = onSupplied(container).do(consumeEvents((...event) => {\n                const sender = extract(...event);\n                if (sender) {\n                    return acceptValuesFrom(sender);\n                }\n                return;\n            }));\n        }\n        this._by.whenOff(() => this._by = neverSupply());\n        return this;\n    }\n    /**\n     * Unbinds the tracked value from any value supplier this tracker is {@link ValueTracker.by updated by}.\n     *\n     * If the tracker is not bound then does nothing.\n     *\n     * @param reason - Arbitrary reason of unbinding the value.\n     *\n     * @returns `this` instance.\n     */\n    byNone(reason) {\n        this._by.off(reason);\n        return this;\n    }\n}\n/**\n * @internal\n */\nfunction receiveNewValue(valueReceiver) {\n    return {\n        supply: valueReceiver.supply,\n        receive(context, newValue) {\n            valueReceiver.receive({\n                onRecurrent(recurrentReceiver) {\n                    context.onRecurrent(recurrentValue => recurrentReceiver(recurrentValue));\n                },\n            }, newValue);\n        },\n    };\n}\n\n/**\n * @internal\n */\nclass TrackedValue extends ValueTracker {\n    constructor(_it) {\n        super();\n        this._it = _it;\n        this._on = new EventEmitter();\n    }\n    get supply() {\n        return this._on.supply;\n    }\n    get on() {\n        return this._on.on;\n    }\n    get it() {\n        return this._it;\n    }\n    set it(value) {\n        const oldValue = this._it;\n        if (oldValue !== value) {\n            this._it = value;\n            this._on.send(value, oldValue);\n        }\n    }\n}\nfunction trackValue(initial) {\n    return new TrackedValue(initial);\n}\nfunction trackValueBy(supplier, extract) {\n    return trackValue().by(supplier, extract);\n}\n\n/**\n * Synchronizes tracked values with each other.\n *\n * Any change to any of the added tracked values would update all the others.\n *\n * @category Value Tracking\n */\nclass ValueSync extends ValueTracker {\n    constructor(initial) {\n        super();\n        /**\n         * @internal\n         */\n        this._on = new EventEmitter();\n        this._it = initial;\n    }\n    get on() {\n        return this._on.on;\n    }\n    get supply() {\n        return this._on.supply;\n    }\n    get it() {\n        return this._it;\n    }\n    set it(value) {\n        const old = this.it;\n        if (old !== value) {\n            this._it = value;\n            this._on.send(value, old);\n        }\n    }\n    sync(first, second, third) {\n        let syncWithTracker = (tracker) => syncTrackers(this, tracker);\n        let source;\n        let extract;\n        if (typeof first === 'string') {\n            if (first === 'in') {\n                syncWithTracker = tracker => syncTrackers(tracker, this);\n            }\n            source = second;\n            extract = third;\n        }\n        else {\n            source = first;\n            extract = second;\n        }\n        const extractTracker = extract;\n        if (!extractTracker) {\n            return syncWithTracker(source);\n        }\n        const supplier = source;\n        return (isEventKeeper(supplier) ? afterSupplied(supplier) : onSupplied(supplier)).do(consumeEvents((...event) => {\n            const tracker = extractTracker(...event);\n            return tracker && syncWithTracker(tracker);\n        }));\n        function syncTrackers(tracker1, tracker2) {\n            const supply1 = tracker1.read(value => {\n                tracker2.it = value;\n            });\n            const supply2 = tracker2.on(value => {\n                tracker1.it = value;\n            });\n            return new Supply(reason => {\n                supply2.off(reason);\n                supply1.off(reason);\n            }).needs(supply1).needs(supply2);\n        }\n    }\n}\n\nexport { EventEmitter, StateTracker, ValueSync, ValueTracker, afterAll, afterEach, afterEventBy, afterNever, afterSent, afterSupplied, afterThe, afterValue, consumeEvents, deduplicateAfter, deduplicateAfter_, digAfter, digAfter_, digOn, digOn_, filterOn, filterOn_, isAfterEvent, isOnEvent, mapAfter, mapAfter_, mapOn, mapOn_, onAny, onEventBy, onNever, onPromise, onSupplied, onceAfter, onceOn, resolveOn, resolveOnOrdered, shareAfter, shareOn, statePath, supplyAfter, supplyOn, trackValue, trackValueBy, translateAfter, translateAfter_, translateOn, translateOn_, valueAfter, valueAfter_, valueOn, valueOn_ };\n//# sourceMappingURL=fun-events.js.map\n","import { noop } from '@proc7ts/primitives';\nimport { Supply } from '@proc7ts/supply';\nimport { eventReceiver, OnEvent__symbol, onEventBy } from '@proc7ts/fun-events';\n\n/**\n * @internal\n * @hidden\n */\nconst OnDomEvent$sample = ( /*#__PURE__*/onEventBy(noop));\n/**\n * Converts a plain DOM event listener registration function to {@link OnDomEvent} sender.\n *\n * @typeParam TEvent - Supported DOM event type.\n * @param register - A generic DOM event listener registration function.\n *\n * @returns An {@link OnDomEvent} sender registering event listeners with the given `register` function.\n */\nfunction onDomEventBy(register) {\n    const onDomEvent = ((listener, opts) => {\n        const receiver = eventReceiver(listener);\n        const { supply } = receiver;\n        if (!supply.isOff) {\n            register(receiver, opts);\n        }\n        return supply;\n    });\n    onDomEvent[OnEvent__symbol] = OnDomEvent$sample[OnEvent__symbol];\n    onDomEvent.do = OnDomEvent$sample.do;\n    onDomEvent.then = OnDomEvent$sample.then;\n    return onDomEvent;\n}\n\n/**\n * @internal\n * @hidden\n */\nconst OnDomEvent$context = {\n    onRecurrent: noop,\n};\n/**\n * DOM event dispatcher can be used to register event listeners of particular event types and dispatch events.\n */\nclass DomEventDispatcher {\n    /**\n     * Constructs DOM event dispatcher for the given event target.\n     *\n     * @param target - Event target to construct event dispatcher for.\n     */\n    constructor(target) {\n        this.supply = new Supply();\n        this._target = target;\n    }\n    /**\n     * Returns a sender of DOM events of the given `type`.\n     *\n     * The returned DOM event sender calls an `EventTarget.addEventListener()` to register listeners.\n     * But, in contrast, it allows to register the same listener many times.\n     *\n     * The {@link Supply event supply} returned upon event listener registration unregisters it with\n     * `EventTarget.removeEventListener()` once {@link Supply.off cut off}.\n     *\n     * @typeParam TEvent - Supported DOM event type.\n     * @param type - DOM event type name.\n     *\n     * @returns {@link OnDomEvent} sender of DOM events of the given `type`.\n     */\n    on(type) {\n        return onDomEventBy((listener, opts) => {\n            const { supply } = listener;\n            supply.needs(this);\n            if (!supply.isOff) {\n                // Create unique DOM listener instance\n                const domListener = event => listener.receive(OnDomEvent$context, event);\n                this._target.addEventListener(type, domListener, opts);\n                listener.supply.whenOff(() => this._target.removeEventListener(type, domListener));\n            }\n        });\n    }\n    /**\n     * Dispatches the given DOM event to event target.\n     *\n     * Calls `EventTarget.dispatchEvent()` method.\n     *\n     * @param event - An event to dispatch.\n     *\n     * @returns `true` if either event's `cancelable` attribute value is `false` or its `preventDefault()` method was not\n     * invoked, or `false` otherwise. Also returns `false` when {@link supply} is cut off.\n     */\n    dispatch(event) {\n        return !this.supply.isOff && this._target.dispatchEvent(event);\n    }\n}\n\n/**\n * Creates an {@link OnDomEvent} sender that enables event capturing by default.\n *\n * This corresponds to specifying `true` or `{ capture: true }` as a second argument to\n * `EventTarget.addEventListener()`.\n *\n * @typeParam TEvent - DOM event type.\n * @param supplier - DOM events sender.\n *\n * @returns DOM events sender.\n */\nfunction captureDomEvents(supplier) {\n    return onDomEventBy((listener, opts) => {\n        if (opts == null) {\n            return supplier(listener, true);\n        }\n        if (typeof opts === 'object' && opts.capture == null) {\n            return supplier(listener, { ...opts, capture: true });\n        }\n        return supplier(listener, opts);\n    });\n}\n\n/**\n * Creates a DOM events processor that enables or disables default DOM event handlers.\n *\n * @typeParam TEvent - DOM event type.\n * @param enable - Whether to enable default handlers. `true` to enable (default value, corresponds to specifying\n * `{ passive: true }` as a second argument to `EventTarget.addEventListener()`), or `false` to disable\n * (causes listeners to invoke an `Event.preventDefault()` method prior to event handling).\n *\n * @returns {@link OnDomEvent} mapper function.\n */\nfunction handleDomEvents(enable = true) {\n    return enable ? listenDomEventsPassively : preventDefaultDomEventHandler;\n}\n/**\n * @internal\n * @hidden\n */\nfunction listenDomEventsPassively(supplier) {\n    return onDomEventBy((listener, opts) => {\n        if (opts == null) {\n            return supplier(listener, { passive: true });\n        }\n        if (typeof opts === 'boolean') {\n            return supplier(listener, { capture: opts, passive: true });\n        }\n        if (opts.passive == null) {\n            return supplier(listener, { ...opts, passive: true });\n        }\n        return supplier(listener, opts);\n    });\n}\n/**\n * @internal\n * @hidden\n */\nfunction preventDefaultDomEventHandler(supplier) {\n    return onDomEventBy((listener, opts) => {\n        const receiver = eventReceiver(listener);\n        return supplier({\n            supply: receiver.supply,\n            receive(context, event) {\n                event.preventDefault();\n                receiver.receive(context, event);\n            },\n        }, opts);\n    });\n}\n\n/**\n * Creates an {@link OnDomEvent} sender preventing other listeners of the same event from being called.\n *\n * Causes listeners to invoke an [Event.stopImmediatePropagation()] method prior to event handing.\n *\n * [Event.stopImmediatePropagation()]: https://developer.mozilla.org/en-US/docs/Web/API/Event/stopImmediatePropagation\n *\n * @typeParam TEvent - DOM event type.\n * @param supplier - DOM events sender.\n *\n * @returns DOM events sender.\n */\nfunction interceptDomEvents(supplier) {\n    return onDomEventBy((listener, opts) => {\n        const receiver = eventReceiver(listener);\n        return supplier({\n            supply: receiver.supply,\n            receive(context, event) {\n                event.stopImmediatePropagation();\n                receiver.receive(context, event);\n            },\n        }, opts);\n    });\n}\n\n/**\n * Creates an {@link OnDomEvent} sender preventing further propagation of events in the capturing and bubbling phases.\n *\n * Causes listeners to invoke an [Event.stopPropagation()] method prior to event handing.\n *\n * [Event.stopPropagation()]: https://developer.mozilla.org/en-US/docs/Web/API/Event/stopPropagation\n *\n * @typeParam TEvent - DOM event type.\n * @param supplier - DOM events sender.\n *\n * @returns DOM events sender.\n */\nfunction stopDomEvents(supplier) {\n    return onDomEventBy((listener, opts) => {\n        const receiver = eventReceiver(listener);\n        return supplier({\n            supply: receiver.supply,\n            receive(context, event) {\n                event.stopPropagation();\n                receiver.receive(context, event);\n            },\n        }, opts);\n    });\n}\n\nexport { DomEventDispatcher, captureDomEvents, handleDomEvents, interceptDomEvents, onDomEventBy, stopDomEvents };\n//# sourceMappingURL=dom-events.js.map\n","import { supplyAfter, trackValue, afterThe, digAfter_, afterEach, isAfterEvent, translateAfter, translateAfter_, shareAfter, digAfter, afterEventBy, mapAfter_, AfterEvent__symbol, onEventBy } from '@proc7ts/fun-events';\nimport { isPresent, noop, valueProvider, setOfElements, isDefined } from '@proc7ts/primitives';\nimport { mapIt, overIterator, itsElements, overElementsOf, filterIt, valueIt } from '@proc7ts/push-iterator';\nimport { Supply, neverSupply } from '@proc7ts/supply';\nimport { ContextKey, ContextSeedKey, ContextSupply, isContextual, Contextual__symbol, ContextKeyError, ContextKey__symbol, ContextBuilder__symbol } from './context-values.js';\n\n/**\n * Creates a function that throws a context destruction reason.\n *\n * This may be handy when {@link ContextSupply context supply} is cut off.\n *\n * @param reason - Context destruction reason.\n */\nfunction contextDestroyed(reason = new TypeError('Context destroyed')) {\n    return () => {\n        throw reason;\n    };\n}\n\n/**\n * @internal\n */\nconst flatUpSources = (\n/*#__PURE__*/ translateAfter((send, ...sources) => send(...itsElements(overElementsOf(...sources)))));\n/**\n * @internal\n */\nclass ContextUpSeeder {\n    constructor() {\n        this._providers = trackValue([new Map()]);\n    }\n    provide(provider) {\n        const [providers] = this._providers.it;\n        const supply = new Supply();\n        providers.set(supply, provider);\n        this._providers.it = [providers];\n        return supply.whenOff(() => {\n            const [providers] = this._providers.it;\n            providers.delete(supply);\n            this._providers.it = [providers];\n        });\n    }\n    seed(context, initial = afterThe()) {\n        return this.combine(initial, upSrcKeepers(context, this._providers));\n    }\n    isEmpty() {\n        return false;\n    }\n    combine(first, second) {\n        return afterEach(first, second).do(flatUpSources);\n    }\n}\n/**\n * @internal\n */\nfunction upSrcKeepers(context, providersTracker) {\n    return providersTracker.read.do(digAfter_(([providers]) => !providers.size\n        ? afterThe()\n        : afterEach(...mapIt(mapIt(overIterator(() => providers.values()), prov => prov(context)), toUpSrcKeeper))), flatUpSources);\n}\n/**\n * @internal\n */\nfunction toUpSrcKeeper(src) {\n    return isAfterEvent(src)\n        ? src\n        : (src != null ? afterThe(src) : afterThe());\n}\n/**\n * @internal\n */\nclass ContextSeed$UpKey extends ContextSeedKey {\n    get upKey() {\n        return this;\n    }\n    seeder() {\n        return new ContextUpSeeder();\n    }\n}\n/**\n * @internal\n */\nclass ContextUpKey$UpKey extends ContextKey {\n    constructor(_key, grow) {\n        super(_key.name + ':up');\n        this._key = _key;\n        this.grow = slot => {\n            const value = slot.fillBy(grow);\n            if (value != null) {\n                slot.insert(value.do(supplyAfter(slot.context.get(ContextSupply))));\n            }\n        };\n    }\n    get seedKey() {\n        return this._key.seedKey;\n    }\n    get upKey() {\n        return this;\n    }\n}\n/**\n * Abstract implementation of updatable context value key.\n *\n * Accepts a {@link ContextUpKey.Source} instances as source values.\n *\n * Collects value sources into `AfterEvent` keeper of source values.\n *\n * @typeParam TValue - Context value type.\n * @typeParam TSrc - Source value type.\n */\nclass ContextUpKey extends ContextKey {\n    /**\n     * Constructs simple context value key.\n     *\n     * @param name - Human-readable key name.\n     * @param seedKey - Value seed key. A new one will be constructed when omitted.\n     */\n    constructor(name, { seedKey, } = {}) {\n        super(name);\n        this.seedKey = seedKey || new ContextSeed$UpKey(this);\n    }\n    /**\n     * Creates a key of context value containing an `AfterEvent` keeper of updates to the value of this key.\n     *\n     * @typeParam TUpdate - Context value update type.\n     * @param grow - A function that grows an updates keeper of context value out of its seed.\n     *\n     * @returns New updates keeper key.\n     */\n    createUpKey(grow) {\n        return new ContextUpKey$UpKey(this, grow);\n    }\n}\n\n/**\n * Creates an event processor that {@link applyContextTo} applies context to values and their {@link Contextual\n * contextual references} incoming from {@link AfterEvent} keeper.\n *\n * This function is applicable to updatable context value {@link ContextUpKey.Source sources} potentially containing\n * contextual references.\n *\n * @typeParam T - Value type.\n * @typeParam TCtx - Supported context type.\n * @param context - A context to apply.\n *\n * @returns A mapping function of `AfterEvent` keeper of values, their contextual references, or `null`/`undefined`\n * elements to `AfterEvent` keeper of resolved values.\n */\nfunction applyContextAfter(context) {\n    const processor = applyContextAfter_(context);\n    return source => shareAfter(processor(source));\n}\n/**\n * Creates an event processor that {@link applyContextTo} applies context to values and their {@link Contextual\n * contextual references} incoming from {@link AfterEvent} keeper, and does not share the outgoing events supply.\n *\n * This function is applicable to updatable context value {@link ContextUpKey.Source sources} potentially containing\n * contextual references to resolve the latter before providing to context.\n *\n * @typeParam T - Value type.\n * @typeParam TCtx - Supported context type.\n * @param context - A context to apply.\n *\n * @returns A mapping function of `AfterEvent` keeper of values, their contextual references, or `null`/`undefined`\n * elements to `AfterEvent` keeper of resolved values.\n */\nfunction applyContextAfter_(context) {\n    return translateAfter_((send, ...values) => send(...filterIt(mapIt(values, (value) => isContextual(value)\n        ? value[Contextual__symbol](context)\n        : value), isPresent)));\n}\n\n/**\n * Converts an `AfterEvent` keeper of values or their {@link Contextual contextual references} to context value\n * {@link ContextValueProvider provider} of `AfterEvent` keeper of resolved values.\n *\n * This function is applicable to updatable context value {@link ContextUpKey.Source sources} potentially containing\n * contextual references to resolve the latter before providing to context.\n *\n * @typeParam T - Value type.\n * @typeParam TCtx - Supported context type.\n * @param source - An `AfterEvent` keeper of values, their contextual references, or `null`/`undefined` elements.\n *\n * @returns Context value provider.\n */\nfunction applyContextUp(source) {\n    return context => applyContextAfter(context)(source);\n}\n\n/**\n * A key of updatable context function value.\n *\n * The value associated with this key is a function that delegates to the last provided function. The target function\n * may be updated.\n *\n * The value is always present. But if the function to delegate is not provided, and no default/fallback function\n * provided, an attempt to call the delegate would throw an {@link ContextKeyError}.\n *\n * It is an error to provide a `null` or `undefined` {@link ContextRequest.Opts.or fallback value} when requesting\n * an associated value. Use an `afterThe()` result as a fallback instead.\n *\n * @typeParam TArgs - Function arguments tuple type.\n * @typeParam TRet - Function return value type.\n */\nclass FnContextKey extends ContextUpKey {\n    /**\n     * Constructs updatable context function key.\n     *\n     * @param name - Human-readable key name.\n     * @param seedKey - Value seed key. A new one will be constructed when omitted.\n     * @param byDefault - Constructs a default function to call. If unspecified then the default function would raise\n     * an error.\n     */\n    constructor(name, { seedKey, byDefault = noop, } = {}) {\n        super(name, seedKey);\n        this.byDefault = (context, key) => byDefault(context, key)\n            || (() => {\n                throw new ContextKeyError(this);\n            });\n        this.upKey = this.createUpKey(slot => slot.insert(slot.seed.do(digAfter((...fns) => {\n            if (fns.length) {\n                return afterThe(fns[fns.length - 1]);\n            }\n            if (slot.hasFallback && slot.or) {\n                return slot.or;\n            }\n            return afterThe(this.byDefault(slot.context, this));\n        }))));\n    }\n    grow(slot) {\n        let delegated;\n        slot.context.get(this.upKey, slot.hasFallback ? { or: slot.or != null ? afterThe(slot.or) : slot.or } : undefined)(fn => delegated = fn).whenOff(reason => delegated = contextDestroyed(reason));\n        slot.insert((...args) => delegated(...args));\n    }\n}\n\n/**\n * Multiple updatable context values key.\n *\n * The associated value is an `AfterEvent` keeper of the source values. It is always present, even though\n * the array can be empty.\n *\n * It is an error to provide a `null` or `undefined` {@link ContextRequest.Opts.or fallback value} when requesting\n * an associated value. Use an `afterThe()` result as a fallback instead.\n *\n * @typeParam TSrc - Source value type.\n */\nclass MultiContextUpKey extends ContextUpKey {\n    /**\n     * Constructs multiple updatable context value key.\n     *\n     * @param name - Human-readable key name.\n     * @param seedKey - Value seed key. A new one will be constructed when omitted.\n     * @param byDefault - Optional default value provider. If unspecified or `undefined` the key has no default\n     * value.\n     */\n    constructor(name, { seedKey, byDefault = noop, } = {}) {\n        super(name, seedKey);\n        this.byDefault = byDefault;\n    }\n    get upKey() {\n        return this;\n    }\n    grow(slot) {\n        const value = slot.seed.do(digAfter((...sources) => {\n            if (sources.length) {\n                // Sources present. Use them.\n                return afterThe(...sources);\n            }\n            // Sources absent. Attempt to detect the backup value.\n            let backup;\n            if (slot.hasFallback) {\n                backup = slot.or;\n            }\n            else {\n                const defaultValue = this.byDefault(slot.context, this);\n                backup = defaultValue != null ? afterThe(...defaultValue) : afterThe();\n            }\n            if (backup) {\n                return backup; // Backup value found.\n            }\n            // Backup value is absent. Construct an error response.\n            return afterEventBy(({ supply }) => {\n                supply.off(new ContextKeyError(this));\n            });\n        }));\n        slot.insert(value.do(supplyAfter(slot.context.get(ContextSupply))));\n    }\n}\n\n/**\n * Single updatable context value key.\n *\n * The associated value is an `AfterEvent` keeper of the last source value. It is always present,\n * but signals an {@link ContextKeyError} error on attempt to receive an absent value.\n *\n * It is an error to provide a `null` or `undefined` {@link ContextRequest.Opts.or fallback value} when requesting\n * an associated value. Use an `afterThe()` result as a fallback instead.\n *\n * @typeParam TValue - Context value type.\n */\nclass SingleContextUpKey extends ContextUpKey {\n    /**\n     * Constructs single updatable context value key.\n     *\n     * @param name - Human-readable key name.\n     * @param seedKey - Value seed key. A new one will be constructed when omitted.\n     * @param byDefault - Optional default value provider. If unspecified or `undefined` the key has no default\n     * value.\n     */\n    constructor(name, { seedKey, byDefault = noop, } = {}) {\n        super(name, seedKey);\n        this.byDefault = byDefault;\n    }\n    get upKey() {\n        return this;\n    }\n    grow(slot) {\n        const value = slot.seed.do(digAfter((...sources) => {\n            if (sources.length) {\n                // Sources present. Take the last one.\n                return afterThe(sources[sources.length - 1]);\n            }\n            // Sources absent. Attempt to detect a backup value.\n            let backup;\n            if (slot.hasFallback) {\n                backup = slot.or;\n            }\n            else {\n                const defaultValue = this.byDefault(slot.context, this);\n                if (defaultValue != null) {\n                    backup = afterThe(defaultValue);\n                }\n            }\n            if (backup) {\n                return backup; // Backup value found.\n            }\n            // Backup value is absent. Construct an error response.\n            return afterEventBy(({ supply }) => {\n                supply.off(new ContextKeyError(this));\n            });\n        }));\n        slot.insert(value.do(supplyAfter(slot.context.get(ContextSupply))));\n    }\n}\n\n/**\n * An error indicating context module dependency load failure.\n */\nclass ContextModuleDependencyError extends Error {\n    /**\n     * Constructs context module dependency load error.\n     *\n     * @param module - A module failed to load.\n     * @param reasons - An array of dependency/reason pairs caused the load failure.\n     * @param message - An error message.\n     */\n    constructor(module, reasons = [], message = contextModuleDependencyErrorMessage(module, reasons)) {\n        super(message);\n        this.module = module;\n        this.reasons = reasons;\n        this.message = message;\n    }\n}\n/**\n * @internal\n */\nfunction contextModuleDependencyErrorMessage(module, dependencies) {\n    const reasons = dependencies.reduce((out, [dep, reason]) => {\n        if (out) {\n            out += ', ';\n        }\n        else {\n            out = ': ';\n        }\n        if (reason !== undefined) {\n            out += `${dep} failed to load (${reason})`;\n        }\n        else {\n            out += `${dep} not loaded`;\n        }\n        return out;\n    }, '');\n    return `Failed to load ${module}${reasons}`;\n}\n\n/**\n * @internal\n */\nclass ContextModuleUsage {\n    constructor(context, module) {\n        this.module = module;\n        this._useCounter = 0;\n        this._impl = trackValue();\n        this._rev = trackValue({\n            status: {\n                module: this.module,\n                provided: false,\n                used: false,\n                settled: false,\n                ready: false,\n            },\n            supply: neverSupply(),\n        });\n        const contextSupply = context.get(ContextSupply);\n        contextSupply.cuts(this._impl);\n        contextSupply.cuts(this._rev);\n        this._impl.read(module => {\n            const prevSupply = this._rev.it.supply;\n            if (module) {\n                this._load(module);\n            }\n            prevSupply.off();\n        });\n    }\n    createHandle() {\n        const read = this._rev.read.do(mapAfter_(({ status }) => status));\n        const handle = {\n            read,\n            [AfterEvent__symbol]: valueProvider(read),\n            use: (user) => this._use(handle, user),\n        };\n        return handle;\n    }\n    setup(context, registry) {\n        this._setup = () => {\n            const rev = this._rev.it;\n            const { status: { module }, supply } = rev;\n            if (module !== this.module) {\n                // Load implementation module instead.\n                // The implementation module expected to be provided already.\n                context.get(module).use(supply).read({\n                    supply,\n                    receive: (_ctx, { settled, ready, error }) => {\n                        this._updateStatus(rev, settled, ready, error);\n                    },\n                });\n            }\n            else {\n                loadContextModule(context, registry, rev)\n                    .then(({ whenReady }) => {\n                    this._updateStatus(rev, true, false);\n                    return whenReady;\n                })\n                    .then(() => this._updateStatus(rev, true, true))\n                    .catch(error => rev.supply.off(error));\n            }\n        };\n    }\n    implementBy(impl) {\n        this._impl.by(impl);\n    }\n    _updateStatus(rev, settled, ready, error) {\n        // Ensure updating the correct revision.\n        if (this._rev.it.supply !== rev.supply) {\n            // If revision changed, then drop the obsolete one.\n            rev.supply.off();\n        }\n        else {\n            this._rev.it = rev = {\n                status: {\n                    module: rev.status.module,\n                    provided: rev.status.provided,\n                    used: true,\n                    settled,\n                    ready,\n                    error,\n                },\n                supply: rev.supply,\n            };\n        }\n    }\n    _load(module) {\n        const supply = new Supply(noop).needs(this._rev).whenOff(error => {\n            const rev = this._rev.it;\n            if (rev.supply === supply) {\n                this._rev.it = {\n                    status: {\n                        ...this._rev.it.status,\n                        provided: false,\n                        settled: false,\n                        ready: false,\n                        error,\n                    },\n                    supply,\n                };\n            }\n        });\n        const used = !!this._useCounter;\n        this._rev.it = {\n            status: {\n                module,\n                provided: true,\n                used,\n                settled: false,\n                ready: false,\n            },\n            supply,\n        };\n        if (used) {\n            this._setup();\n        }\n    }\n    _use(handle, user) {\n        const supply = new Supply(noop);\n        if (user) {\n            supply.needs(user);\n        }\n        const read = handle.read.do(supplyAfter(supply));\n        const use = {\n            ...handle,\n            read,\n            whenSettled: ContextModule$Use$when(read, isContextModuleSettled),\n            whenReady: ContextModule$Use$when(read, isContextModuleReady),\n            supply,\n        };\n        if (!supply.isOff) {\n            supply.whenOff(error => {\n                if (!--this._useCounter) {\n                    const rev = this._rev.it;\n                    this._rev.it = {\n                        status: {\n                            ...rev.status,\n                            used: false,\n                            settled: false,\n                            ready: false,\n                            error,\n                        },\n                        supply: new Supply(noop).off(error),\n                    };\n                    rev.supply.off(error);\n                }\n            });\n            if (!this._useCounter++) {\n                // Mark the module used and set it up.\n                const rev = this._rev.it;\n                this._rev.it = {\n                    status: {\n                        ...rev.status,\n                        used: true,\n                    },\n                    supply: rev.supply,\n                };\n                this._setup();\n            }\n        }\n        return use;\n    }\n}\n/**\n * @internal\n */\nasync function loadContextModule(context, registry, { status: { module }, supply }) {\n    const moduleInit = new ContextModuleInit(module);\n    await module.setup({\n        module,\n        supply,\n        get(request) {\n            return context.get(request);\n        },\n        provide(spec) {\n            return registry.provide(spec).needs(supply);\n        },\n        initBy(init) {\n            moduleInit.initBy(init);\n        },\n    });\n    return moduleInit;\n}\nclass ContextModuleInit {\n    constructor(_module) {\n        this._module = _module;\n        this._whenDone = Promise.resolve();\n        this.whenReady = new Promise(resolve => this._ready = resolve);\n    }\n    initBy(init) {\n        const rev = this._whenDone = this._whenDone\n            .then(init)\n            .finally(() => this._done(rev));\n    }\n    _done(rev) {\n        if (this._whenDone === rev) {\n            this._ready(rev);\n            this.initBy = _init => {\n                throw new TypeError(`${this._module} initialized already, and does not accept new initializers`);\n            };\n        }\n    }\n}\nfunction ContextModule$Use$when(status, test) {\n    return onEventBy(receiver => status({\n        supply: receiver.supply,\n        receive: (context, status) => {\n            if (test(status)) {\n                receiver.receive(context, status);\n                receiver.supply.off();\n            }\n            else if (status.error) {\n                receiver.supply.off(status.error);\n            }\n        },\n    }));\n}\nfunction isContextModuleSettled({ settled }) {\n    return settled;\n}\nfunction isContextModuleReady({ ready }) {\n    return ready;\n}\n\n/**\n * @internal\n */\nclass ContextModuleKey extends ContextUpKey {\n    constructor(name, _module) {\n        super(name);\n        this._module = _module;\n    }\n    get upKey() {\n        return this;\n    }\n    grow(slot) {\n        const usage = new ContextModuleUsage(slot.context, this._module);\n        slot.insert(usage.createHandle());\n        slot.setup(({ context, registry }) => usage.setup(context, registry));\n        usage.implementBy(implementContextModule(this._module, slot.seed));\n    }\n}\n/**\n * @internal\n */\nfunction implementContextModule(module, impls) {\n    return impls.do(mapAfter_((...candidates) => {\n        let impl;\n        for (let i = candidates.length - 1; i >= 0; --i) {\n            impl = candidates[i];\n            if (impl !== module) {\n                break;\n            }\n        }\n        return impl;\n    }));\n}\n\n/**\n * @internal\n */\nconst ContextModule$impl__symbol = ( /*#__PURE__*/Symbol('ContextModule.impl'));\n/**\n * @internal\n */\nclass ContextModule$ {\n    constructor(module, name, options) {\n        this.name = name;\n        this.options = options;\n        this.key = new ContextModuleKey(`${name}:module`, module);\n        const { needs, has, setup } = options;\n        this.has = setOfElements(has).add(module);\n        this.needs = setOfElements(needs);\n        this._setup = setup ? setup.bind(options) : noop;\n    }\n    replace(module, registry, supply) {\n        for (const replaced of module.has) {\n            if (replaced !== module) {\n                registry.provide({ a: replaced, is: module }).needs(supply);\n            }\n        }\n    }\n    async setup(setup) {\n        const deps = contextModuleDeps(setup);\n        // Await for module dependencies to be settled.\n        if (!await loadContextModuleDeps(setup, deps, whenContextModuleSettled)) {\n            return;\n        }\n        setup.initBy(async () => {\n            // Initialize module dependencies.\n            await loadContextModuleDeps(setup, deps, whenContextModuleReady);\n        });\n        await this._setup(setup);\n    }\n}\nfunction contextModuleDeps(setup) {\n    const { module, supply } = setup;\n    return itsElements(valueIt(module.needs, dep => dep !== module\n        && setup.provide(dep).needs(supply)\n        && {\n            dep,\n            use: setup.get(dep).use(setup),\n        }));\n}\nfunction loadContextModuleDeps(setup, deps, whenLoaded) {\n    const { module, supply } = setup;\n    const notLoaded = valueProvider(false);\n    const whenDone = supply.whenDone().then(notLoaded, notLoaded);\n    return Promise.race([\n        whenDone,\n        Promise\n            .all(deps\n            .map(({ dep, use }) => whenLoaded(use).then(noop, error => [dep, error])))\n            .then((results) => {\n            const failures = results.filter(isDefined);\n            return failures.length\n                ? new ContextModuleDependencyError(module, failures) // Prevent unhandled promise rejection\n                : true;\n        }),\n    ]).then(result => {\n        if (typeof result !== 'boolean') {\n            // Fail to load module if at leas one of its dependencies failed.\n            return Promise.reject(result);\n        }\n        return result;\n    });\n}\nfunction whenContextModuleSettled(use) {\n    return use.whenSettled;\n}\nfunction whenContextModuleReady(use) {\n    return use.whenReady;\n}\n\n/**\n * Context module.\n *\n * Modules intended to extend the context dynamically.\n *\n * The module is a context value reference that can be used to provide module instance and access its\n * {@link ContextModule.Handle handle}.\n *\n * Usage example:\n * ```typescript\n * // Construct new module.\n * const myModule = new ContextModule('my module', {\n *   setup(setup) {\n *     // Provide the values\n *     setup.provide({ a: Foo, is: 'foo' });\n *   },\n * });\n *\n * // Load the module\n * const myModuleSupply = contextRegistry.provide(myModule);\n *\n * // Start using the module\n * const myModuleUse = await context.get(myModule).use();\n *\n * // Await for the module to load\n * await myModuleUse.whenReady;\n *\n * // Access the value provided by module.\n * console.log(context.get(Foo));\n *\n * // Stop using the module\n * myModuleUse.supply.off();\n *\n * // Unload the module declaration.\n * myModuleSupply.off();\n * ```\n */\nclass ContextModule {\n    /**\n     * Constructs context module.\n     *\n     * @param name - Human-readable module name.\n     * @param options - Module construction options.\n     */\n    constructor(name, options = {}) {\n        this[ContextModule$impl__symbol] = new ContextModule$(this, name, options);\n    }\n    /**\n     * A key of context module.\n     */\n    get [ContextKey__symbol]() {\n        return this[ContextModule$impl__symbol].key;\n    }\n    /**\n     * Human-readable module name.\n     */\n    get name() {\n        return this[ContextModule$impl__symbol].name;\n    }\n    /**\n     * The modules this one requires.\n     *\n     * Assigned by {@link ContextModule.Options.needs} option.\n     */\n    get needs() {\n        return this[ContextModule$impl__symbol].needs;\n    }\n    /**\n     * The modules this one provides.\n     *\n     * Assigned by {@link ContextModule.Options.has} option.\n     *\n     * Always contains the module itself.\n     */\n    get has() {\n        return this[ContextModule$impl__symbol].has;\n    }\n    /**\n     * Provides this module and {@link has module replacements}.\n     */\n    [ContextBuilder__symbol](registry) {\n        const supply = registry.provide({ a: this, is: this });\n        this[ContextModule$impl__symbol].replace(this, registry, supply);\n        return supply;\n    }\n    /**\n     * Sets up the module.\n     *\n     * This method is called when loading the module. It is used e.g. to provide more values for the context.\n     *\n     * By default:\n     *\n     * 1. Satisfies module {@link needs dependencies} by setting them up.\n     *\n     *    The dependency considered satisfied when it is {@link ContextModule.Status.settled settled}.\n     *\n     * 2. {@link ContextModule.Setup.initBy Initializes} the module by initializing the dependencies.\n     *\n     *    The dependency considered initialized when it is {@link ContextModule.Status.ready ready for use}.\n     *\n     * 3. Performs the module setup by invoking the {@link ContextModule.Options.setup} method.\n     *\n     * @param setup - Context module setup.\n     *\n     * @returns A promise resolved when the module is set up asynchronously.\n     */\n    setup(setup) {\n        return this[ContextModule$impl__symbol].setup(setup);\n    }\n    toString() {\n        return `ContextModule(${this.name})`;\n    }\n}\n\nexport { ContextModule, ContextModuleDependencyError, ContextUpKey, FnContextKey, MultiContextUpKey, SingleContextUpKey, applyContextAfter, applyContextAfter_, applyContextUp, contextDestroyed };\n//# sourceMappingURL=context-values.updatable.js.map\n","/**\n * Returns a document of the given DOM node.\n *\n * @param node - Source node.\n *\n * @returns Either an `ownerDocument`, or a node itself if it is a document.\n */\nfunction nodeDocument(node) {\n    return node.ownerDocument || node;\n}\n\n/**\n * Checks whether the given DOM node is an [element](https://developer.mozilla.org/en-US/docs/Web/API/Element).\n *\n * @param node - A node to check.\n *\n * @returns `true` for `Element`, or `false` everything else.\n */\nfunction isElementNode(node) {\n    return node.nodeType === 1 /* Node.ELEMENT_NODE */;\n}\n/**\n * Checks whether the given DOM node is an [attribute](https://developer.mozilla.org/en-US/docs/Web/API/Attr).\n *\n * @param node - A node to check.\n *\n * @returns `true` for `Attr`, or `false` everything else.\n */\nfunction isAttributeNode(node) {\n    return node.nodeType === 2 /* Node.ATTRIBUTE_NODE */;\n}\n/**\n * Checks whether the given DOM node is a [text](https://developer.mozilla.org/en-US/docs/Web/API/Text).\n *\n * @param node - A node to check.\n *\n * @returns `true` for `Text`, or `false` everything else.\n */\nfunction isTextNode(node) {\n    return node.nodeType === 3 /* Node.TEXT_NODE */;\n}\n/**\n * Checks whether the given DOM node is a [CDATA section](https://developer.mozilla.org/en-US/docs/Web/API/CDATASection).\n *\n * @param node - A node to check.\n *\n * @returns `true` for `CDATASection`, or `false` everything else.\n */\nfunction isCDATASectionNode(node) {\n    return node.nodeType === 4 /* Node.CDATA_SECTION_NODE */;\n}\n/**\n * Checks whether the given DOM node is a [processing instruction](https://developer.mozilla.org/en-US/docs/Web/API/ProcessingInstruction).\n *\n * @param node - A node to check.\n *\n * @returns `true` for `ProcessingInstruction`, or `false` everything else.\n */\nfunction isProcessingInstructionNode(node) {\n    return node.nodeType === 7 /* Node.PROCESSING_INSTRUCTION_NODE */;\n}\n/**\n * Checks whether the given DOM node is a [comment](https://developer.mozilla.org/en-US/docs/Web/API/Comment).\n *\n * @param node - A node to check.\n *\n * @returns `true` for `Comment`, or `false` everything else.\n */\nfunction isCommentNode(node) {\n    return node.nodeType === 8 /* Node.COMMENT_NODE */;\n}\n/**\n * Checks whether the given DOM node is a [document](https://developer.mozilla.org/en-US/docs/Web/API/Document).\n *\n * @param node - A node to check.\n *\n * @returns `true` for `Document`, or `false` everything else.\n */\nfunction isDocumentNode(node) {\n    return node.nodeType === 9 /* Node.DOCUMENT_NODE */;\n}\n/**\n * Checks whether the given DOM node is a [document type](https://developer.mozilla.org/en-US/docs/Web/API/DocumentType).\n *\n * @param node - A node to check.\n *\n * @returns `true` for `DocumentType`, or `false` everything else.\n */\nfunction isDocumentTypeNode(node) {\n    return node.nodeType === 10 /* Node.DOCUMENT_TYPE_NODE */;\n}\n/**\n * Checks whether the given DOM node is a [document fragment](https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment).\n *\n * @param node - A node to check.\n *\n * @returns `true` for `DocumentFragment`, or `false` everything else.\n */\nfunction isDocumentFragmentNode(node) {\n    return node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */;\n}\n/**\n * Checks whether the given DOM node is a [shadow root](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot).\n *\n * Note that shadow root is a kind of {@link isDocumentFragmentNode document fragment}.\n *\n * @param node - A node to check.\n *\n * @returns `true` for `ShadowRoot`, or `false` everything else.\n */\nfunction isShadowRootNode(node) {\n    return isDocumentFragmentNode(node) && !!node.host;\n}\n\nfunction importNode(from, to, beforeOrImport, importContent = importNodeContent) {\n    let before;\n    if (typeof beforeOrImport === 'function') {\n        importContent = beforeOrImport;\n        before = null;\n    }\n    else {\n        before = beforeOrImport || null;\n    }\n    const doc = nodeDocument(to);\n    if (isElementNode(from)) {\n        const elementClone = doc.createElement(from.tagName.toLowerCase());\n        from.getAttributeNames().forEach(attr => elementClone.setAttribute(attr, from.getAttribute(attr)));\n        importContent(from, elementClone);\n        to.insertBefore(elementClone, before);\n        return elementClone;\n    }\n    const nodeClone = doc.importNode(from, false);\n    to.insertBefore(nodeClone, before);\n    return nodeClone;\n}\n/**\n * Imports DOM node contents from one document to another.\n *\n * @param from - The node which contents to import.\n * @param to - The node to append imported nodes to.\n */\nfunction importNodeContent(from, to) {\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < from.childNodes.length; ++i) {\n        importNode(from.childNodes[i], to);\n    }\n}\n\n/**\n * Finds a host element of the given DOM node. I.e. an enclosing element.\n *\n * Crosses shadow DOM bounds.\n *\n * @param node - Target DOM node.\n *\n * @returns Either parent element of the given node, or `undefined` when not found.\n */\nfunction nodeHost(node) {\n    const { parentNode } = node;\n    return parentNode && isElementNode(parentNode) && parentNode\n        || node.getRootNode().host // Inside shadow DOM?\n        || undefined;\n}\n\n/**\n * Returns an owner window of the given DOM node.\n *\n * @param node - Source node.\n *\n * @returns Either a `defaultView` of the {@link nodeDocument node document}, or `window` instance if there is no one.\n */\nfunction nodeWindow(node) {\n    return nodeDocument(node).defaultView || window;\n}\n\n/**\n * Removes all child nodes from the given one.\n *\n * @param node - DOM node to remove the content of.\n */\nfunction removeNodeContent(node) {\n    node.textContent = null;\n}\n\nexport { importNode, importNodeContent, isAttributeNode, isCDATASectionNode, isCommentNode, isDocumentFragmentNode, isDocumentNode, isDocumentTypeNode, isElementNode, isProcessingInstructionNode, isShadowRootNode, isTextNode, nodeDocument, nodeHost, nodeWindow, removeNodeContent };\n//# sourceMappingURL=dom-primitives.js.map\n","import { Supply } from '@proc7ts/supply';\nimport { nodeWindow } from '@frontmeans/dom-primitives';\n\n/**\n * Creates a render schedule mapped from another one.\n *\n * The mapped schedule may support a render execution of another type.\n *\n * @typeParam TFromExecution - A type of render shot execution context supported by original schedule.\n * @typeParam TToExecution - A type of render shot execution context supported by mapped schedule.\n * @param schedule - A schedule to map from.\n * @param execute - Executes a render shot in mapped execution context.\n *\n * @returns Mapped render schedule instance.\n */\nfunction mapRenderSchedule(schedule, execute) {\n    return shot => schedule((fromExec) => {\n        let toExec;\n        const draft = {\n            postpone(postponed) {\n                fromExec.postpone(_exec => postponed(toExec));\n            },\n        };\n        execute(fromExec, draft, exec => shot(toExec = exec));\n    });\n}\n\nconst RenderScheduleConfig = {\n    /**\n     * Constructs a configuration of render schedule by its options.\n     *\n     * @param options - Render scheduler options the configuration should be base on.\n     *\n     * @returns Render schedule configuration.\n     */\n    by(options = {}) {\n        let win;\n        const { error = console.error } = options;\n        return {\n            get node() {\n                return options.node;\n            },\n            get window() {\n                return win || (win = options.window || (options.node ? nodeWindow(options.node) : window));\n            },\n            error,\n        };\n    },\n};\n\n/**\n * Creates an abortable render schedule.\n *\n * @typeParam TExecution - A type of supported render shot execution context.\n * @typeParam TOptions - A type of accepted render schedule options.\n * @param scheduler - A render scheduler to schedule rendering by.\n * @param supply - Schedule supply. Once cut off, stops rendering in all schedules created by new scheduler.\n * A new supply will be created if omitted.\n *\n * @returns New abortable render scheduler instance.\n */\nfunction newAbortableRenderScheduler(scheduler, supply = new Supply()) {\n    const abortableScheduler = ((options) => {\n        const scheduleSupply = (options === null || options === void 0 ? void 0 : options.supply) || new Supply();\n        scheduleSupply.needs(supply);\n        let execute = (exec, draft, shot) => shot({\n            ...exec,\n            ...draft,\n            supply: scheduleSupply,\n        });\n        let schedule = mapRenderSchedule(scheduler(options), (exec, draft, shot) => execute(exec, draft, shot));\n        const abortableSchedule = ((shot) => schedule(shot));\n        abortableSchedule.supply = scheduleSupply;\n        scheduleSupply.whenOff(reason => {\n            execute = AbortableRenderSchedule$doNotExecute;\n            schedule = AbortableRenderSchedule$abort(reason, options);\n        });\n        return abortableSchedule;\n    });\n    abortableScheduler.supply = supply;\n    return abortableScheduler;\n}\nfunction AbortableRenderSchedule$abort(reason, options) {\n    const { error } = RenderScheduleConfig.by(options);\n    return _shot => {\n        error('Rendering aborted', reason);\n    };\n}\nfunction AbortableRenderSchedule$doNotExecute(_exec, _draft, _shot) {\n    // Do not execute in aborted schedule\n}\n\nconst RenderQ__symbol = ( /*#__PURE__*/Symbol('render-q'));\nclass RenderQ {\n    constructor(q, ref) {\n        this.q = q;\n        this.schedule = this.doSchedule;\n        this.ref = ref || [this, this];\n        this.execute = q.recur ? this.execRecurring : this.execNonRecurring;\n    }\n    static by(queue, ref) {\n        return queue[RenderQ__symbol]\n            || (queue[RenderQ__symbol] = new RenderQ(queue, ref));\n    }\n    add(shot) {\n        this.q.add(shot);\n    }\n    doSchedule(config) {\n        // At most one execution at a time.\n        this.schedule = RenderQ$doNotSchedule;\n        const postponed = [];\n        const execution = {\n            get config() {\n                return config;\n            },\n            postpone(shot) {\n                postponed.unshift(shot);\n            },\n        };\n        this.q.schedule(() => {\n            const next = this.reset();\n            const done = () => {\n                // Activate next queue.\n                this.ref[1] = this.ref[0];\n                // Schedule postponed shots (in reverse order).\n                postponed.forEach(shot => this.q.add(shot));\n                // Recurrently postponed shots are executed immediately after their initiators.\n                execution.postpone = shot => this.q.post(shot);\n                // Execute postponed shots.\n                this.exec(execution);\n                next.resume();\n            };\n            next.suspend();\n            this.execute(execution, done);\n        });\n    }\n    exec(execution) {\n        for (;;) {\n            const shot = this.q.pull();\n            if (!shot) {\n                break;\n            }\n            shot(execution);\n        }\n    }\n    execNonRecurring(execution, done) {\n        this.exec(execution);\n        done();\n    }\n    execRecurring(execution, done) {\n        const execute = () => {\n            this.exec(execution);\n            if (!this.q.recur(execute)) {\n                done();\n            }\n        };\n        execute();\n    }\n    reset() {\n        // Update next queue. Current queue remains active\n        return this.ref[0] = RenderQ.by(this.q.reset(), this.ref);\n    }\n    suspend() {\n        this.schedule = config => {\n            // Remember execution to schedule.\n            // It will be scheduled on resume.\n            this.scheduled = config;\n            // No need to remember more than one execution to schedule.\n            this.schedule = RenderQ$doNotSchedule;\n        };\n    }\n    resume() {\n        if (this.scheduled) {\n            // There is an execution to schedule.\n            this.doSchedule(this.scheduled);\n        }\n        else {\n            // Resume normal execution scheduling.\n            this.schedule = this.doSchedule;\n        }\n    }\n}\nfunction RenderQ$doNotSchedule(_config) {\n    // Do not schedule.\n}\n/**\n * Builds custom render scheduler.\n *\n * @param options - Render scheduler options.\n *\n * @returns New render scheduler.\n */\nfunction customRenderScheduler(options) {\n    return (scheduleOptions) => {\n        const config = RenderScheduleConfig.by(scheduleOptions);\n        const queueRef = RenderQ.by(options.newQueue(config)).ref;\n        let enqueued = [];\n        return (shot) => {\n            const [lastQueue, , executed] = enqueued;\n            const [nextQueue, activeQueue] = queueRef;\n            let queue = lastQueue || activeQueue;\n            if ((lastQueue === activeQueue && !executed) || lastQueue === nextQueue) {\n                // Replace the shot in active queue, unless executed already.\n                // Replace the shot in the next queue unconditionally.\n                enqueued[1] = shot;\n            }\n            else {\n                // Add to active queue if no shot executed in this schedule yet, or the queue recurrent.\n                // Add to the next queue otherwise.\n                const nextEnqueued = enqueued = [\n                    queue = !executed || queue.q.recur ? activeQueue : nextQueue,\n                    shot,\n                ];\n                queue.add((execution) => {\n                    nextEnqueued[2] = true; // Switch to the next queue.\n                    try {\n                        nextEnqueued[1]({\n                            get config() {\n                                return config;\n                            },\n                            postpone(postponed) {\n                                execution.postpone(postponed);\n                            },\n                        });\n                    }\n                    catch (e) {\n                        config.error(e);\n                    }\n                });\n            }\n            queue.schedule(config);\n        };\n    };\n}\n\nconst RenderQueue = {\n    /**\n     * Builds the default implementation of render queue.\n     *\n     * @param options - Render queue options.\n     *\n     * @returns New render queue.\n     */\n    by(options) {\n        const { schedule, recur } = options;\n        let { replace = RenderQueue$doNotReplace } = options;\n        let scheduled = [];\n        let executed = scheduled;\n        let scheduleRecurrent;\n        if (recur) {\n            scheduleRecurrent = task => {\n                if (!scheduled.length) {\n                    // No recurrent shots.\n                    // The upcoming shots are non-recurrent.\n                    scheduled = executed;\n                    return false;\n                }\n                executed = scheduled;\n                scheduled = [];\n                recur(task);\n                return true;\n            };\n            const replaceQueue = replace;\n            replace = next => {\n                scheduled = [];\n                replaceQueue(next);\n            };\n        }\n        return {\n            add(shot) {\n                scheduled.push(shot);\n            },\n            post(shot) {\n                scheduled.unshift(shot);\n            },\n            pull() {\n                return executed.shift();\n            },\n            schedule,\n            recur: scheduleRecurrent,\n            reset() {\n                const next = RenderQueue.by(options);\n                replace(next);\n                return next;\n            },\n        };\n    },\n};\nfunction RenderQueue$doNotReplace(_replacement) {\n    // Do not replace queue\n}\n\n/**\n * @internal\n */\nconst animationRenderQueues = ( /*#__PURE__*/new WeakMap());\n/**\n * A render scheduler that executes scheduled render shots within animation frame.\n *\n * Utilizes [requestAnimationFrame()] function for that.\n *\n * The render shots scheduled by different schedules created for the same window are all executed in the same animation\n * frame. The {@link RenderExecution.postpone postponed} render shots are executed only after all scheduled ones\n * complete.\n *\n * [requestAnimationFrame()]: https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame\n */\nconst animationRenderScheduler = ( /*#__PURE__*/customRenderScheduler({\n    newQueue({ window }) {\n        const existing = animationRenderQueues.get(window);\n        if (existing) {\n            return existing;\n        }\n        const newQueue = RenderQueue.by({\n            schedule: task => window.requestAnimationFrame(task),\n            replace: replacement => animationRenderQueues.set(window, replacement),\n        });\n        animationRenderQueues.set(window, newQueue);\n        return newQueue;\n    },\n}));\n\nfunction asyncRenderQueue$schedule(task) {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(task);\n}\nlet asyncRenderQueue = ( /*#__PURE__*/RenderQueue.by({\n    schedule: asyncRenderQueue$schedule,\n    recur: asyncRenderQueue$schedule,\n    replace: replacement => asyncRenderQueue = replacement,\n}));\n/**\n * A render scheduler that executes scheduled render shots asynchronously.\n *\n * Recurrent render shots are also executed asynchronously.\n */\nconst asyncRenderScheduler = ( /*#__PURE__*/customRenderScheduler({\n    newQueue: () => asyncRenderQueue,\n}));\n\n/**\n * Creates a render scheduler that delegates scheduling to the given one.\n *\n * @typeParam TExecution - A type of supported render shot execution context.\n * @typeParam TOptions - A type of accepted render schedule options.\n * @param scheduler - A render scheduler to schedule rendering by.\n *\n * @returns New delegating render scheduler instance.\n */\nfunction newDelegateRenderScheduler(scheduler) {\n    const result = ((options) => {\n        let usedScheduler = scheduler;\n        let schedule = scheduler(options);\n        return shot => {\n            if (usedScheduler !== scheduler) {\n                usedScheduler = scheduler;\n                schedule = scheduler(options);\n            }\n            schedule(shot);\n        };\n    });\n    result.scheduleBy = newScheduler => {\n        scheduler = newScheduler;\n        return result;\n    };\n    return result;\n}\n\n/**\n * Render scheduler that executes render shots immediately.\n *\n * @param options\n */\nconst immediateRenderScheduler = (options) => {\n    const config = RenderScheduleConfig.by(options);\n    return (shot) => {\n        const postponed = [];\n        const execution = {\n            get config() {\n                return config;\n            },\n            postpone(shot) {\n                postponed.push(shot);\n            },\n        };\n        execute(shot);\n        for (;;) {\n            const last = postponed.pop();\n            if (!last) {\n                break;\n            }\n            execute(last);\n        }\n        function execute(shot) {\n            try {\n                shot(execution);\n            }\n            catch (e) {\n                config.error(e);\n            }\n        }\n    };\n};\n\n/**\n * Creates new render scheduler that executes scheduled render shots on request.\n *\n * A {@link ManualRenderScheduler.render} method should be called to execute scheduled render shots.\n *\n * @returns New manual render scheduler.\n */\nfunction newManualRenderScheduler() {\n    const emptyTask = () => false;\n    let pendingTask = emptyTask;\n    let queue = RenderQueue.by({\n        // Called at most once until reset\n        schedule: task => pendingTask = () => {\n            task();\n            return true;\n        },\n        replace: replacement => {\n            pendingTask = emptyTask;\n            queue = replacement;\n        },\n    });\n    const scheduler = customRenderScheduler({\n        newQueue: () => queue,\n    });\n    scheduler.render = () => pendingTask();\n    return scheduler;\n}\n\n/**\n * @internal\n */\nfunction noopRenderSchedule(_shot) {\n    // Do not schedule\n}\n\n/**\n * A render scheduler that neither schedules, nor executes render shots.\n */\nconst noopRenderScheduler = _options => noopRenderSchedule;\n\n/**\n * @internal\n */\nlet immediateRenderQueue = ( /*#__PURE__*/RenderQueue.by({\n    schedule: task => task(),\n    replace: replacement => immediateRenderQueue = replacement,\n}));\n/**\n * A render scheduler that schedules render shots for immediate execution.\n *\n * In contrast to {@link immediateRenderScheduler} this one utilizes {@link RenderQueue render queue}. So it acts\n * similarly to other schedulers, such as {@link animationRenderScheduler}. In particular, it adds recurrent\n * render shots to render queue instead of executing them immediately.\n */\nconst queuedRenderScheduler = ( /*#__PURE__*/customRenderScheduler({\n    newQueue: () => immediateRenderQueue,\n}));\n\n/**\n * @internal\n */\nlet defaultRenderScheduler = animationRenderScheduler;\n/**\n * Assigns or resets the default render scheduler.\n *\n * An {@link animationRenderScheduler animation frame render scheduler} is used bu default.\n *\n * @param scheduler - New default render scheduler. {@link animationRenderScheduler animation frame render scheduler}\n * will be used if `null`, `undefined`, or omitted.\n *\n * @returns New default render scheduler.\n */\nfunction setRenderScheduler(scheduler) {\n    return defaultRenderScheduler = scheduler || animationRenderScheduler;\n}\n/**\n * Constructs {@link RenderSchedule render schedule} using {@link setRenderScheduler default render scheduler}.\n *\n * @param options - Options of constructed render schedule.\n *\n * @returns New render schedule.\n */\nfunction newRenderSchedule(options) {\n    return defaultRenderScheduler(options);\n}\n\nexport { RenderQueue, RenderScheduleConfig, animationRenderScheduler, asyncRenderScheduler, customRenderScheduler, immediateRenderScheduler, mapRenderSchedule, newAbortableRenderScheduler, newDelegateRenderScheduler, newManualRenderScheduler, newRenderSchedule, noopRenderScheduler, queuedRenderScheduler, setRenderScheduler };\n//# sourceMappingURL=render-scheduler.js.map\n","import { newNamespaceAliaser, css__naming, NamespaceDef } from '@frontmeans/namespace-aliaser';\nimport { Supply } from '@proc7ts/supply';\nimport { isDocumentNode, nodeHost, isElementNode, removeNodeContent } from '@frontmeans/dom-primitives';\nimport { onEventBy, onceOn, AfterEvent__symbol, afterThe, trackValue, EventEmitter, translateAfter_ } from '@proc7ts/fun-events';\nimport { valueProvider } from '@proc7ts/primitives';\nimport { newRenderSchedule, queuedRenderScheduler } from '@frontmeans/render-scheduler';\n\nlet DrekContext$registrar = DrekContext$autoRegister;\n/**\n * @internal\n */\nfunction DrekContext$register(context) {\n    DrekContext$registrar(context);\n}\n/**\n * @internal\n */\nfunction DrekContext$setRegistrar(registrar) {\n    const priorRegistrar = DrekContext$registrar;\n    DrekContext$registrar = registrar;\n    return priorRegistrar === DrekContext$autoRegister\n        ? () => {\n            DrekContext$registrar = priorRegistrar;\n            return DrekContext$dontRegister;\n        }\n        : () => DrekContext$registrar = priorRegistrar;\n}\nfunction DrekContext$dontRegister(_context) {\n    // Do not auto-register the context already failed to lift.\n}\nlet DrekContext$autoRegistrar = DrekContext$autoRegisterFirst;\nfunction DrekContext$autoRegister(context) {\n    DrekContext$autoRegistrar(context);\n}\nfunction DrekContext$autoRegisterFirst(context) {\n    const registered = [context];\n    DrekContext$autoRegistrar = DrekContext$createAutoRegistrar(registered);\n    Promise.resolve().then(() => {\n        DrekContext$autoRegistrar = DrekContext$autoRegisterFirst;\n        for (const context of registered) {\n            context.lift();\n        }\n    }).catch(console.error);\n}\nfunction DrekContext$createAutoRegistrar(registered) {\n    return context => registered.push(context);\n}\n\n/**\n * Executes a DOM builder function and then {@link DrekContext.lift lifts} all unrooted rendering contexts created by\n * it.\n *\n * This helps to track a {@link DrekContext.whenConnected document connection} or {@link DrekContext.whenSettled\n * settlement} of any unrooted rendering contexts that created before its node added to document or\n * {@link DrekFragment rendered fragment}. This may happen e.g. when the rendering context {@link drekContextOf\n * accessed} from inside a custom element constructor when calling `document.createElement('custom-element')`.\n *\n * @typeParam TResult - DOM builder result type.\n * @param builder - A DOM builder function to call.\n *\n * @returns The value returned from DOM `builder` function.\n */\nfunction drekBuild(builder) {\n    const registered = [];\n    const resetRegistrar = DrekContext$setRegistrar(context => registered.push(context));\n    try {\n        return builder();\n    }\n    finally {\n        const registrar = resetRegistrar();\n        for (const context of registered) {\n            const lifted = context.lift();\n            if (lifted === context) {\n                // Not lifted.\n                // Try next time.\n                registrar(context);\n            }\n        }\n    }\n}\n\n/**\n * @internal\n */\nconst DrekPlacement$Status__symbol = ( /*#__PURE__*/Symbol('DrekPlacement.status'));\n/**\n * @internal\n */\nclass DrekPlacement$Status {\n    constructor(placement) {\n        this.placement = placement;\n    }\n    onceConnected() {\n        return (this.onceConnected = valueProvider(this.placement.readStatus.do(DrekPlacement$once(({ connected }) => connected))))();\n    }\n    whenConnected() {\n        return (this.whenConnected = valueProvider(this.onceConnected().do(onceOn)))();\n    }\n}\nfunction DrekPlacement$once(test) {\n    return input => onEventBy(receiver => {\n        let value = false;\n        input({\n            supply: receiver.supply,\n            receive(eventCtx, ...status) {\n                const newValue = test(...status);\n                if (newValue || value !== newValue) {\n                    value = newValue;\n                    receiver.receive(eventCtx, ...status);\n                }\n            },\n        });\n    });\n}\n\n/**\n * A rendered content placement.\n *\n * @typeParam TStatus - A type of the tuple containing a rendered content status as its first element.\n */\nclass DrekPlacement {\n    constructor() {\n        this[DrekPlacement$Status__symbol] = new DrekPlacement$Status(this);\n    }\n    /**\n     * An alias of {@link readStatus}.\n     *\n     * @returns An `AfterEvent` keeper of content placement status.\n     */\n    [AfterEvent__symbol]() {\n        return this.readStatus;\n    }\n    /**\n     * An `OnEvent` sender of placed content connection event.\n     *\n     * The registered receiver is called when placed content is {@link DrekContentStatus.connected connected}.\n     * If connected already the receiver is called immediately.\n     */\n    get onceConnected() {\n        return this[DrekPlacement$Status__symbol].onceConnected();\n    }\n    /**\n     * An `OnEvent` sender of single placed content connection event.\n     *\n     * The registered receiver is called when placed content is {@link DrekContentStatus.connected connected}.\n     * If connected already the receiver is called immediately.\n     *\n     * In contrast to {@link onceConnected}, cuts off the event supply after sending the first event.\n     */\n    get whenConnected() {\n        return this[DrekPlacement$Status__symbol].whenConnected();\n    }\n}\n\n/**\n * Document rendering context.\n *\n * Can be obtained by {@link drekContextOf} function, or {@link DrekFragment.innerContext provided} by rendered\n * fragment.\n *\n * There are three kinds of rendering contexts:\n *\n * 1. Document rendering context.\n *\n *    Such context is always available in document and returned by {@link drekContextOf} function for any DOM node\n *    connected to the document.\n *\n * 2. Fragment content rendering context.\n *\n *    It is created for each rendered fragment and is available via {@link DrekFragment.innerContext} property.\n *    The {@link drekContextOf} function returns this context for fragment's {@link DrekContext.content content},\n *    as well as for each DOM node added to it.\n *\n * 3. Unrooted rendering context.\n *\n *    When a DOM node is neither connected to a document, nor part of a rendered fragment's {@link DrekFragment.content\n *    content}, the {@link drekContextOf} function creates an unrooted context for the [root node] of that node.\n *\n *    Unrooted context tracks a {@link whenConnected document connection} and {@link whenSettled settlement}\n *    semi-automatically. A {@link lift} method can be used to forcibly update them.\n *\n *    Semi-automatic tracking means that each time an unrooted context {@link drekContextOf created}, it is registered\n *    for automatic lifting. The lifting happens either asynchronously, or synchronously right before the\n *    {@link drekBuild} function exit.\n *\n *    Alternatively, a {@link drekLift} function can be used to lift a context of the [root node] after adding it to\n *    another one.\n *\n * [root node]: https://developer.mozilla.org/en-US/docs/Web/API/Node/getRootNode\n *\n * @typeParam TStatus - A type of the tuple containing a context content status as its first element.\n */\nclass DrekContext extends DrekPlacement {\n    /**\n     * An `OnEvent` sender of a settlement event.\n     *\n     * Such event can be sent by {@link DrekFragment.settle rendered fragment}.\n     *\n     * The same as {@link whenConnected} by default.\n     *\n     * Cuts off the event supply after sending the first event.\n     */\n    get whenSettled() {\n        return this.whenConnected;\n    }\n}\n\n/**\n * @internal\n */\nconst DrekContext__symbol = ( /*#__PURE__*/Symbol('DrekContext'));\n/**\n * @internal\n */\nclass DrekContext$State {\n    constructor({ nsAlias, scheduler }) {\n        this._nsAlias = nsAlias;\n        this.nsAlias = ns => this._nsAlias(ns);\n        this._scheduler = scheduler;\n        this.scheduler = options => {\n            let scheduler = this._scheduler;\n            let schedule = scheduler(options);\n            return shot => {\n                if (scheduler !== this._scheduler) {\n                    scheduler = this._scheduler;\n                    schedule = scheduler(options);\n                }\n                return schedule(shot);\n            };\n        };\n    }\n    set({ nsAlias, scheduler }) {\n        this._nsAlias = nsAlias;\n        this._scheduler = scheduler;\n    }\n}\n\n/**\n * @internal\n */\nfunction DrekContext$ofDocument(document) {\n    const existing = document[DrekContext__symbol];\n    if (existing) {\n        return existing;\n    }\n    const state = new DrekContext$State({\n        nsAlias: newNamespaceAliaser(),\n        scheduler: newRenderSchedule,\n    });\n    const view = document.defaultView || window;\n    const scheduler = (options) => state.scheduler({\n        window: view,\n        ...options,\n    });\n    const readStatus = afterThe({ connected: true });\n    class DrekContext$OfDocument extends DrekContext {\n        get fragment() {\n            return;\n        }\n        get window() {\n            return view;\n        }\n        get document() {\n            return document;\n        }\n        get nsAlias() {\n            return state.nsAlias;\n        }\n        get scheduler() {\n            return scheduler;\n        }\n        get readStatus() {\n            return readStatus;\n        }\n        lift() {\n            return this;\n        }\n        update({ nsAlias = state._nsAlias, scheduler = state._scheduler, }) {\n            state.set({ nsAlias, scheduler });\n            return this;\n        }\n    }\n    return document[DrekContext__symbol] = new DrekContext$OfDocument();\n}\n\n/**\n * @internal\n */\nfunction DrekContext$ofRootNode(root) {\n    return isDocumentNode(root) ? DrekContext$ofDocument(root) : DrekContext$unrooted(root);\n}\nfunction DrekContext$unrooted(root) {\n    const existing = root[DrekContext__symbol];\n    if (existing) {\n        return existing.lift();\n    }\n    const status = trackValue({ connected: false });\n    const settled = new EventEmitter();\n    let derivedCtx = DrekContext$ofDocument(root.ownerDocument /* Not a document, so `ownerDocument` is set */);\n    const scheduler = new DrekContext$State(derivedCtx);\n    let getFragment = () => derivedCtx.fragment;\n    let lift = (ctx) => {\n        const newRoot = root.getRootNode({ composed: true });\n        if (newRoot === root) {\n            return ctx;\n        }\n        const lifted = DrekContext$ofRootNode(newRoot);\n        root[DrekContext__symbol] = undefined;\n        getFragment = () => lifted.fragment;\n        scheduler.set(lifted);\n        lifted.whenSettled(status => settled.send(status)).cuts(settled);\n        status.by(lifted);\n        lift = _ctx => lifted;\n        derivedCtx = lifted;\n        return lifted;\n    };\n    class DrekContext$Unrooted extends DrekContext {\n        get fragment() {\n            return getFragment();\n        }\n        get window() {\n            return derivedCtx.window;\n        }\n        get document() {\n            return derivedCtx.document;\n        }\n        get nsAlias() {\n            return derivedCtx.nsAlias;\n        }\n        get scheduler() {\n            return scheduler.scheduler;\n        }\n        get readStatus() {\n            return status.read;\n        }\n        get whenSettled() {\n            return settled.on;\n        }\n        lift() {\n            return lift(this);\n        }\n    }\n    const context = root[DrekContext__symbol] = new DrekContext$Unrooted();\n    DrekContext$register(context);\n    return context;\n}\n\nfunction drekContextOf(node) {\n    for (;;) {\n        const root = node.getRootNode({ composed: true });\n        if (root === node) {\n            return DrekContext$ofRootNode(node);\n        }\n        node = root;\n    }\n}\n\nconst DrekCssClasses__symbol = ( /*#__PURE__*/Symbol('DrekCssClasses'));\nfunction drekCssClassesOf(element) {\n    return element[DrekCssClasses__symbol]\n        || (element[DrekCssClasses__symbol] = new DrekCssClasses$(element));\n}\nclass DrekCssClasses$ {\n    constructor(_element) {\n        this._element = _element;\n        this._uses = new Map();\n        this._context = drekContextOf(_element);\n    }\n    add(className, user) {\n        return this._add(this._context, className, user);\n    }\n    _add({ nsAlias, scheduler, }, className, user) {\n        const supply = user ? user.supply : new Supply();\n        if (supply.isOff) {\n            return supply;\n        }\n        const name = css__naming.name(className, nsAlias);\n        const schedule = scheduler({ node: this._element });\n        const use = this._use(name);\n        const render = () => {\n            if (use.n) {\n                if (!use.s) {\n                    this._element.classList.add(name);\n                    use.s = 1;\n                }\n            }\n            else {\n                if (use.s && !use.i) { // Do not remove the class if it present initially.\n                    this._element.classList.remove(name);\n                    use.s = 0;\n                }\n                this._uses.delete(name);\n            }\n        };\n        if (use.n === 1) {\n            schedule(render);\n        }\n        return supply.whenOff(() => {\n            if (!--use.n) {\n                schedule(render);\n            }\n        });\n    }\n    _use(name) {\n        let use = this._uses.get(name);\n        if (use) {\n            ++use.n;\n        }\n        else {\n            if (this._element.classList.contains(name)) {\n                use = {\n                    i: 1,\n                    n: 1,\n                    s: 1,\n                };\n            }\n            else {\n                use = {\n                    i: 0,\n                    n: 1,\n                    s: 0,\n                };\n            }\n            this._uses.set(name, use);\n        }\n        return use;\n    }\n    has(className) {\n        return this._has(this._context, className);\n    }\n    _has({ nsAlias }, className) {\n        const name = css__naming.name(className, nsAlias);\n        const use = this._uses.get(name);\n        return use\n            ? !!use.n || !!use.i\n            : this._element.classList.contains(name);\n    }\n    renderIn(context) {\n        return context !== this._context\n            ? {\n                add: className => this._add(context, className),\n                has: className => this._has(context, className),\n                renderIn: newContext => this.renderIn(newContext),\n            }\n            : this;\n    }\n}\n\n/**\n * Creates a rendering context based on another one.\n *\n * @typeParam TStatus - A type of the tuple containing a context content status as its first element.\n * @param base - Base rendering context.\n * @param update - Context update.\n *\n * @returns Updated rendering context, or the `base` one if nothing to update.\n */\nfunction deriveDrekContext(base, update = {}) {\n    const { nsAlias: initialNsAlias = base.nsAlias, scheduler: initialScheduler = base.scheduler, } = update;\n    if (initialNsAlias === base.nsAlias && initialScheduler === base.scheduler) {\n        return base;\n    }\n    const state = new DrekContext$State({\n        nsAlias: initialNsAlias,\n        scheduler: initialScheduler,\n    });\n    let lift = (derived) => {\n        const lifted = base.lift();\n        if (lifted === base) {\n            return derived;\n        }\n        state.set(lifted);\n        lift = _derived => lifted;\n        return lifted;\n    };\n    class DrekContext$Derived extends DrekContext {\n        get fragment() {\n            return base.fragment;\n        }\n        get window() {\n            return base.window;\n        }\n        get document() {\n            return base.document;\n        }\n        get nsAlias() {\n            return state.nsAlias;\n        }\n        get scheduler() {\n            return state.scheduler;\n        }\n        get readStatus() {\n            return base.readStatus;\n        }\n        lift() {\n            return lift(this);\n        }\n    }\n    return new DrekContext$Derived();\n}\n\n/**\n * Finds a host element of the given DOM node with respect to rendering targets.\n *\n * Crosses shadow DOM and {@link DrekFragment rendered fragment} bounds. In the latter case returns a\n * {@link DrekTarget.host rendering target host} instead of the document fragment.\n *\n * @param node - Target DOM element.\n *\n * @returns Either parent element of the given node, or `undefined` when not found.\n */\nfunction drekHost(node) {\n    var _a, _b;\n    const host = nodeHost(node);\n    if (host) {\n        return host;\n    }\n    const parent = node.parentNode || node;\n    const renderHost = (_b = (_a = parent[DrekContext__symbol]) === null || _a === void 0 ? void 0 : _a.fragment) === null || _b === void 0 ? void 0 : _b.target.host;\n    return !renderHost || isElementNode(renderHost)\n        ? renderHost\n        : drekHost(renderHost);\n}\n\nfunction drekLift(node) {\n    var _a;\n    (_a = node[DrekContext__symbol]) === null || _a === void 0 ? void 0 : _a.lift();\n    return node;\n}\n\n/**\n * Default Drek namespace definition.\n */\nconst Drek__NS = ( /*#__PURE__*/new NamespaceDef('https://frontmeans.github.io/ns/drek', 'drek'));\n\n/**\n * @internal\n */\nconst DrekFragment$Context__symbol = ( /*#__PURE__*/Symbol('DrekFragment.context'));\n/**\n * @internal\n */\nclass DrekFragment$Context extends DrekContext {\n    constructor(_fragment, _target, _content, nsAlias, scheduler) {\n        super();\n        this._fragment = _fragment;\n        this._target = _target;\n        this._content = _content;\n        this._status = trackValue([{ connected: false, withinFragment: 'added' }]);\n        this._settled = new EventEmitter();\n        this._rendered = new EventEmitter();\n        this._getFragment = () => _fragment;\n        this._lift = this;\n        this.readStatus = this._status.read.do(translateAfter_((send, status) => send(...status)));\n        this._state = new DrekContext$State({ nsAlias, scheduler });\n        this.scheduler = this._createSchedule.bind(this);\n        this.whenConnected((...status) => {\n            // `whenSettled` is the same as `whenConnected` now.\n            this._whenSettled = this.whenConnected;\n            // Send a settlement event one last time.\n            this._settled.send(...status);\n        });\n    }\n    static attach(fragment, target, { nsAlias = target.context.nsAlias, scheduler = queuedRenderScheduler, content, }) {\n        if (!content) {\n            content = target.context.document.createDocumentFragment();\n        }\n        else if (content.getRootNode({ composed: true }) !== content) {\n            throw new TypeError('Not a standalone DocumentFragment');\n        }\n        else if (content[DrekContext__symbol]) {\n            throw new TypeError('Can not render content of another fragment');\n        }\n        return content[DrekContext__symbol] = new DrekFragment$Context(fragment, target, content, nsAlias, scheduler);\n    }\n    get fragment() {\n        return this._getFragment();\n    }\n    get window() {\n        return this._target.context.window;\n    }\n    get document() {\n        return this._target.context.document;\n    }\n    get nsAlias() {\n        return this._state.nsAlias;\n    }\n    get whenSettled() {\n        return this._whenSettled || (this._whenSettled = this._settled.on.do(onceOn));\n    }\n    lift() {\n        return this._lift;\n    }\n    _settle() {\n        this.scheduler()(_ => {\n            this._settled.send(...this._status.it);\n        });\n    }\n    _render() {\n        // Make the `.lift()` method return the target context.\n        this._lift = this._target.context;\n        // Signal the rendering started.\n        this._status.it = [{ connected: false, withinFragment: 'rendered' }];\n        const schedule = this._state._scheduler();\n        this._state.set(this._target.context);\n        schedule(({ postpone }) => {\n            // Await for all scheduled shots to render.\n            postpone(() => {\n                this._target.context.scheduler()(() => {\n                    // Place the rendered content within target's scheduler.\n                    const placement = this._target.placeContent(this._content);\n                    // Update target fragment.\n                    this._getFragment = () => placement.fragment;\n                    // Reset the inner context.\n                    this._content[DrekContext__symbol] = this._fragment[DrekFragment$Context__symbol] = new DrekFragment$Context(this._fragment, this._target, this._content, this.nsAlias, this.scheduler);\n                    // Derive the status from the target context.\n                    this._status.by(placement, (...status) => afterThe(status));\n                    // Send `whenRendered` event.\n                    this._rendered.send(placement);\n                });\n            });\n        });\n        return this;\n    }\n    _whenRendered() {\n        return (this._whenRendered = valueProvider(this._rendered.on.do(onceOn)))();\n    }\n    _createSchedule(options = {}) {\n        const schedule = this._state.scheduler({\n            ...options,\n            window: this.window,\n        });\n        return shot => schedule(execution => shot(this._createExecution(execution)));\n    }\n    _createExecution(execution) {\n        const fragmentExecution = {\n            ...execution,\n            fragment: this._fragment,\n            content: this._content,\n            postpone(postponed) {\n                execution.postpone(_execution => postponed(fragmentExecution));\n            },\n        };\n        return fragmentExecution;\n    }\n}\n\n/**\n * A fragment of DOM tree, which content is to be {@link DrekTarget.placeContent placed} to the document once rendered.\n *\n * Provides separate {@link DrekContext rendering context} for its nodes.\n *\n * @typeParam TStatus - A type of the tuple containing a rendered content status as its first element.\n */\nclass DrekFragment {\n    /**\n     * Construct rendered fragment.\n     *\n     * @param target - Rendering target to place the\n     * @param options - Fragment rendering options.\n     */\n    constructor(target, options = {}) {\n        this[DrekFragment$Context__symbol] = DrekFragment$Context.attach(this, target, options);\n    }\n    /**\n     * Rendering target.\n     *\n     * When the fragment is {@link render rendered}, the rendered content is placed to this target.\n     */\n    get target() {\n        return this[DrekFragment$Context__symbol]._target;\n    }\n    /**\n     * Inner rendering context of the fragment.\n     *\n     * This context as available to the {@link content} nodes.\n     *\n     * This context updated each time the fragment is {@link render rendered}.\n     */\n    get innerContext() {\n        return this[DrekFragment$Context__symbol];\n    }\n    /**\n     * The content of the fragment.\n     */\n    get content() {\n        return this[DrekFragment$Context__symbol]._content;\n    }\n    /**\n     * An `OnEvent` sender of fragment rendering event.\n     *\n     * Sends a fragment content {@link DrekTarget.placeContent placement} to {@link target} when the fragment is actually\n     * {@link render rendered}.\n     *\n     * Cuts off the event supply after sending the first event.\n     */\n    get whenRendered() {\n        return this[DrekFragment$Context__symbol]._whenRendered();\n    }\n    /**\n     * Settles previously rendered content.\n     *\n     * A {@link whenSettled} event sender notifies its receivers once settled.\n     *\n     * @returns `this` instance.\n     */\n    settle() {\n        this[DrekFragment$Context__symbol]._settle();\n        return this;\n    }\n    /**\n     * Renders this fragment by {@link DrekTarget.placeContent placing} its {@link DrekFragmentRenderExecution.content\n     * content} to {@link target rendering target}.\n     *\n     * Once rendered the fragment {@link content} becomes empty and can be reused. Its rendering context is updated.\n     *\n     * @returns Content {@link DrekTarget.placeContent placement} to {@link target}.\n     */\n    render() {\n        return this[DrekFragment$Context__symbol]._render();\n    }\n}\n\n/**\n * Creates a rendering target that appends content to parent node.\n *\n * @param host - A node to append content to.\n * @param context - Custom rendering context. Defaults to `host` node context.\n *\n * @returns Rendering target.\n */\nfunction drekAppender(host, context = drekContextOf(host)) {\n    return {\n        context,\n        host,\n        placeContent(content) {\n            host.appendChild(content);\n            return context;\n        }\n    };\n}\n\n/**\n * Creates a rendering target that charges rendered content prior to placing it to another target.\n *\n * @typeParam TStatus - A tuple type reflecting a content {@link DrekContentStatus placement status}.\n * @param target - Rendering target of charged content.\n * @param spec - Content charging options.\n *\n * @returns Rendering target.\n */\nfunction drekCharger(target, spec) {\n    const charger = DrekCharger$custom(target, spec);\n    return {\n        context: target.context,\n        host: target.host,\n        placeContent(content) {\n            return charger.charge(content, target);\n        },\n    };\n}\nfunction DrekCharger$custom(target, spec) {\n    if (typeof spec === 'function') {\n        return DrekCharger$custom(target, spec(target));\n    }\n    if (typeof spec === 'string') {\n        return DrekCharger$commentWrapper(target, spec);\n    }\n    if (spec) {\n        return spec;\n    }\n    return DrekCharger$commentWrapper(target, Math.random().toString(32).substr(2));\n}\nfunction DrekCharger$commentWrapper({ context: { document } }, rem) {\n    let wrapContent = (content, target) => {\n        const start = document.createComment(` [[ ${rem} [[ `);\n        const end = document.createComment(` ]] ${rem} ]] `);\n        let placement;\n        wrapContent = (content, _target) => {\n            const range = document.createRange();\n            range.setStartAfter(start);\n            range.setEndBefore(end);\n            range.deleteContents();\n            range.insertNode(content);\n            return placement;\n        };\n        const fragment = document.createDocumentFragment();\n        fragment.append(start, content, end);\n        return placement = target.placeContent(fragment);\n    };\n    return {\n        charge: (content, target) => wrapContent(content, target),\n    };\n}\n\n/**\n * Creates a rendering target that inserts content to parent node at particular position.\n *\n * @param host - A node to insert content to.\n * @param before - A child node of `host` one to insert the content before, or `null` to append it as the last child\n * of `host` node.\n * @param context - Custom rendering context. Defaults to `host` node context.\n *\n * @returns Rendering target.\n */\nfunction drekInserter(host, before, context = drekContextOf(host)) {\n    return {\n        context,\n        host,\n        placeContent(content) {\n            host.insertBefore(content, before);\n            return context;\n        }\n    };\n}\n\n/**\n * Creates a rendering target that replaces content of the `host` node.\n *\n * @param host - A node to replace the content of.\n * @param context - Custom rendering context. Defaults to `host` node context.\n *\n * @returns Rendering target.\n */\nfunction drekReplacer(host, context = drekContextOf(host)) {\n    return {\n        context,\n        host,\n        placeContent(content) {\n            removeNodeContent(host);\n            host.appendChild(content);\n            return context;\n        },\n    };\n}\n\nexport { DrekContext, DrekFragment, DrekPlacement, Drek__NS, deriveDrekContext, drekAppender, drekBuild, drekCharger, drekContextOf, drekCssClassesOf, drekHost, drekInserter, drekLift, drekReplacer };\n//# sourceMappingURL=drek.js.map\n","import { noop, valueProvider } from '@proc7ts/primitives';\nimport { alwaysSupply, Supply } from '@proc7ts/supply';\n\n/**\n * An error indicating the work is already done.\n */\nclass WorkDoneError extends TypeError {\n    /**\n     * Constructs a work done error.\n     *\n     * @param workload - A workload the work is done for.\n     * @param work - The work already done, if any.\n     * @param reason - The reason of work failure, or `undefined` if the work completed successfully.\n     * @param message - Custom error message.\n     */\n    constructor(workload, work, reason, message = workload.workName(work) + (reason !== undefined\n        ? ` already terminated (${reason})`\n        : ' already done')) {\n        super(message);\n        this.workload = workload;\n        this.work = work;\n        this.reason = reason;\n    }\n}\n\n/**\n * A workload able to perform a work within a workbench.\n *\n * The work specific to workload is represented by work instances. Such instances are available in {@link Workbench.work\n * workbench} and can be used e.g. to run workload-specific tasks.\n *\n * The same workload instance can be used in different workbenches.\n *\n * @typeParam TWork - A work type performed by this workload.\n */\nclass Workload {\n    /**\n     * Constructs a workload.\n     *\n     * @param name - Human-readable workload name.\n     * @param allocator - A work allocator specific to constructed workload.\n     */\n    constructor(name, allocator) {\n        this.name = name;\n        this.allocator = allocator;\n    }\n    /**\n     * Builds a human-readable name of the work performed by this workload.\n     *\n     * This is used e.g. to construct a default error message for {@link WorkDoneError}.\n     *\n     * @param _work - Target work.\n     *\n     * @returns A string containing work name.\n     */\n    workName(_work) {\n        return `The work of ${this.name}`;\n    }\n    toString() {\n        return `Workload(${this.name})`;\n    }\n}\n\n/**\n * @internal\n */\nclass OrderedTasks {\n    constructor(_allotment) {\n        this._allotment = _allotment;\n        this._queues = new Map();\n    }\n    runAfter(workload, task) {\n        let queue = this._queues.get(workload);\n        if (!queue) {\n            queue = new TaskQueue(this._allotment);\n            this._queues.set(workload, queue);\n        }\n        return queue.enqueue(task);\n    }\n}\nclass TaskQueue {\n    constructor(_allotment) {\n        this._allotment = _allotment;\n        /**\n         * Enqueued tasks.\n         *\n         * The subsequent tasks are waiting for preceding ones. The very first one is always running.\n         */\n        this._tasks = [];\n    }\n    enqueue(task) {\n        return new Promise(resolve => {\n            const entry = {\n                task,\n                run: () => {\n                    resolve(this._allotment.run(task).finally(() => {\n                        // Remove from the queue.\n                        this._tasks.shift();\n                        // Run next.\n                        this._runNext();\n                    }));\n                },\n            };\n            this._tasks.push(entry);\n            if (this._tasks.length === 1) {\n                // The first task is just enqueued.\n                // Run it immediately, as there is nothing to wait for.\n                this._runNext();\n            }\n        });\n    }\n    _runNext() {\n        const [first] = this._tasks;\n        if (first) {\n            first.run();\n        }\n    }\n}\n\n/**\n * @internal\n */\nclass WorkOrdering extends Workload {\n    constructor() {\n        super('ordering', {\n            start(allotment) {\n                return new OrderedTasks(allotment);\n            },\n        });\n    }\n}\nWorkOrdering.$ = new WorkOrdering();\n\nclass WorkStage extends Workload {\n    constructor(name, allocator = {}) {\n        super(name, {\n            start(allotment) {\n                const { workbench, workload, supply } = allotment;\n                const runner = new WorkStageRunner(allotment, allocator);\n                return {\n                    workbench,\n                    stage: workload,\n                    supply,\n                    async run(task) {\n                        return await runner.run(this, task);\n                    },\n                };\n            },\n        });\n    }\n    workName(_work) {\n        return `The ${this.name} stage`;\n    }\n    toString() {\n        return `WorkStage(${this.name})`;\n    }\n}\nclass WorkStageRunner {\n    constructor(allotment, allocator) {\n        this.allotment = allotment;\n        this.allocator = allocator;\n        this._whenTaskDone = Promise.resolve();\n        const { supply } = allotment;\n        this._whenAllDone = new Promise(resolve => this._end = resolve)\n            .then(() => supply.off())\n            .catch(error => supply.off(error));\n        supply.whenOff(reason => {\n            if (reason === undefined) {\n                this._end();\n            }\n            else {\n                this._end(Promise.reject(reason));\n            }\n            // Stop accepting new tasks.\n            this.run = (work, _task) => Promise.reject(new WorkDoneError(allotment.workload, work, reason));\n        });\n    }\n    run(work, task) {\n        const promise = this._start(work).then(() => this.allotment.run(task));\n        this._addTask(promise);\n        return promise;\n    }\n    _addTask(taskPromise) {\n        const taskDone = this._whenTaskDone = Promise.all([\n            this._whenTaskDone,\n            taskPromise.catch(noop),\n        ]);\n        taskDone.finally(() => {\n            if (taskDone === this._whenTaskDone) {\n                this._end(taskDone);\n            }\n        });\n    }\n    _start(work) {\n        let whenStarted = this._awaitDeps();\n        if (this.allocator.start) {\n            whenStarted = whenStarted.then(async () => {\n                await this.allocator.start(work);\n            });\n        }\n        // Start only once!\n        this._start = valueProvider(whenStarted);\n        this._addTask(whenStarted);\n        return whenStarted;\n    }\n    _awaitDeps() {\n        const deps = [];\n        const addDep = (dep) => {\n            deps.push(new Promise(resolve => {\n                this.allotment\n                    .workbench\n                    .work(WorkOrdering.$)\n                    .runAfter(dep, () => {\n                    resolve();\n                    return this._whenAllDone;\n                })\n                    .catch(noop);\n            }));\n        };\n        const { after } = this.allocator;\n        if (after) {\n            addDep(after);\n        }\n        addDep(this.allotment.workload);\n        return Promise.all(deps);\n    }\n}\n\n/**\n * @internal\n */\nconst Workbench$impl__symbol = ( /*#__PURE__*/Symbol('Workbench.impl'));\n/**\n * @internal\n */\nclass Workbench$ {\n    constructor(workbench, options) {\n        this.workbench = workbench;\n        this._works = new Map();\n        const { supply = alwaysSupply(), run } = options;\n        this.supply = new Supply(reason => {\n            // Reject new work.\n            this.work = workload => {\n                throw new WorkDoneError(workload, undefined, reason, 'The workbench is stopped');\n            };\n        }).as(supply);\n        this._run = run ? run.bind(options) : Workbench$run;\n    }\n    work(workload) {\n        if (this._works.has(workload)) {\n            return this._works.get(workload);\n        }\n        let ensureWorking = noop;\n        const runWorkTask = async (work, task) => {\n            const result = await this._run(task, work, workload);\n            ensureWorking();\n            return result;\n        };\n        const supply = new Supply().needs(this.supply);\n        let setWork;\n        let work;\n        let runTask;\n        const whenWork = new Promise(resolve => {\n            setWork = newWork => {\n                work = newWork;\n                this._works.set(workload, newWork);\n                runTask = async (task) => await runWorkTask(newWork, task);\n                resolve(newWork);\n                return newWork;\n            };\n        });\n        runTask = async (task) => await runWorkTask(await whenWork, task);\n        supply.whenOff(reason => {\n            runTask = ensureWorking = () => {\n                throw new WorkDoneError(workload, work, reason);\n            };\n            this._works.delete(workload);\n        });\n        return setWork(workload.allocator.start({\n            workbench: this.workbench,\n            workload,\n            supply,\n            async run(task) {\n                return await runTask(task);\n            },\n        }));\n    }\n}\nasync function Workbench$run(task, _work, _workload) {\n    return await task();\n}\n\n/**\n * A workbench for coordinated {@link Workload workloads}.\n *\n * Performs a work by running tasks specific to each kind of workload.\n */\nclass Workbench {\n    /**\n     * Constructs a workbench.\n     *\n     * @param options - Constructed workbench options.\n     */\n    constructor(options = {}) {\n        this[Workbench$impl__symbol] = new Workbench$(this, options);\n    }\n    /**\n     * Workbench supply.\n     *\n     * Once cut off the workbench terminates all current works, and no longer accepts new ones.\n     */\n    get supply() {\n        return this[Workbench$impl__symbol].supply;\n    }\n    /**\n     * Obtains a work of the given workload.\n     *\n     * Caches the work previously obtained work of the same workload, until the work is {@link Workload.Allotment.supply\n     * disposed}. Creates a new work instance after that.\n     *\n     * @typeParam TWork - A work type.\n     * @param workload - Target workload.\n     *\n     * @returns A work instance.\n     */\n    work(workload) {\n        return this[Workbench$impl__symbol].work(workload);\n    }\n}\n\nexport { WorkDoneError, WorkStage, Workbench, Workload };\n//# sourceMappingURL=workbench.js.map\n","/**\n * Decodes URL component.\n *\n * In contrast to standard [decodeURIComponent] function this one decodes `+` signs as spaces.\n *\n * [decodeURIComponent]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\n *\n * @param url - URL component to decode.\n *\n * @returns Decoded URL component.\n */\nfunction decodeURLComponent(url) {\n    return decodeURIComponent(url.replace(/\\+/g, ' '));\n}\n\n/**\n * Escapes CSS identifier accordingly to the rules defined for [CSS.escape()](https://drafts.csswg.org/cssom/#the-css.escape%28%29-method)\n * utility method.\n *\n * Can be applied to CSS values as well, although it escapes characters that don't strictly need to be escaped.\n * A {@link escapeCSSVal} is a better alternative for that.\n *\n * @param text - A text to escape.\n *\n * @returns A string safe to be used as CSS identifier, e.g. as CSS selector.\n */\nfunction escapeCSS(text) {\n    const len = text.length;\n    const first = text.charCodeAt(0);\n    let out = '';\n    let i = 0;\n    if (first === 0x2d) {\n        // If the first character is a \"-\" (U+002D)\n        const second = text.charCodeAt(1);\n        // ... and the second character is in the range [0-9] (U+0030 to U+0039).\n        if (second > 0x2f && second < 0x3a) {\n            // then '-' followed by the character escaped as code point.\n            out += `-\\\\${second.toString(16)} `;\n            i = 2;\n        }\n        else {\n            out = '-';\n            i = 1;\n        }\n        if (len === 1) {\n            // ... and there is no second character, then the escaped character.\n            return '\\\\-';\n        }\n    }\n    else if (first > 0x2f && first < 0x3a) {\n        // If the first character is in the range [0-9] (U+0030 to U+0039),\n        // then the character escaped as code point.\n        out += `\\\\${first.toString(16)} `;\n        i = 1;\n    }\n    for (; i < len; ++i) {\n        const c = text.charCodeAt(i);\n        if (\n        // Is in range [a-z] (U+0061 to U+007A),\n        (c > 0x60 && c < 0x7b)\n            // or is \"-\" (U+002D),\n            || c === 0x2d\n            // or is \"_\" (U+005F)\n            || c === 0x5f\n            // or is in range [0-9] (U+0030 to U+0039),\n            || (c > 0x2f && c < 0x3a)\n            // or is in range [A-Z] (U+0041 to U+005A)\n            || (c > 0x40 && c < 0x5b)) {\n            // then the character itself.\n            out += text[i];\n        }\n        else if (c > 0x7e) {\n            out += c === 0x7f\n                // If the character is U+007F\n                // then the character escaped as code point.\n                ? `\\\\${c.toString(16)} `\n                // If the character is greater than or equal to U+0080,\n                // then the character itself\n                : text[i];\n        }\n        else if (c < 0x20) {\n            out += c\n                // If the character is in the range [\\1-\\1f] (U+0001 to U+001F)\n                // then the character escaped as code point.\n                ? `\\\\${c.toString(16)} `\n                // If the character is NULL (U+0000)\n                // then the REPLACEMENT CHARACTER (U+FFFD).\n                : '\\uFFFD';\n        }\n        else {\n            // Otherwise, the escaped character.\n            out += `\\\\${text[i]}`;\n        }\n    }\n    return out;\n}\n\n/**\n * Escapes CSS value to be included into CSS string.\n *\n * Escapes accordingly to [serialize a string] algorithm.\n *\n * [serialize a string]: https://drafts.csswg.org/cssom/#serialize-a-string\n *\n * @param text - A text to escape.\n *\n * @returns A string safe to be included into CSS value, e.g. within CSS string.\n */\nfunction escapeCSSVal(text) {\n    let out = '';\n    const len = text.length;\n    for (let i = 0; i < len; ++i) {\n        const c = text.charCodeAt(i);\n        out += c < 0x20 || c === 0x7f\n            ? (c\n                // If the character is in the range [\\1-\\1f] (U+0001 to U+001F),\n                // the character escaped as code point.\n                ? `\\\\${c.toString(16)} `\n                // If the character is NULL (U+0000), then the REPLACEMENT CHARACTER (U+FFFD).;\n                : '\\uFFFD')\n            : (c === 0x22 || c === 0x5c\n                // If the character is '\"' (U+0022) or \"\\\" (U+005C),\n                // the escaped character.\n                ? `\\\\${text[i]}`\n                // Otherwise, the character itself.\n                : text[i]);\n    }\n    return out;\n}\n\n/**\n * @internal\n */\nconst xmlPredef = {\n    '\"': '&#34;',\n    '&': '&amp;',\n    '\\'': '&#39;',\n    '<': '&lt;',\n    '>': '&gt;',\n};\n/**\n * @internal\n */\nfunction replaceXMLPredef(char) {\n    return xmlPredef[char];\n}\n\n/**\n * Replaces XML-unsafe characters with corresponding [predefined XML entities](https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML).\n *\n * Uses the shortest possible entities representation. I.e. `&#34;` instead of `&quot;`, and `&#39;' instead of\n * `&apos;`.\n *\n * @param text - A text to escape.\n *\n * @returns XML-safe text.\n */\nfunction escapeXML(text) {\n    return text.replace(/[&<>'\"]/g, replaceXMLPredef);\n}\n\n/**\n * @internal\n */\nconst uppercasePattern = /[A-Z]+/g;\n/**\n * @internal\n */\nfunction toHyphenLower(letters, offset, str) {\n    const lowerCase = letters.toLowerCase();\n    if ((lowerCase.length > 1) && (offset + lowerCase.length < str.length)) {\n        // More than one subsequent upper-case letters, unless at the end of the string.\n        return `-${lowerCase.slice(0, -1)}-${lowerCase.slice(-1)}`;\n    }\n    return '-' + lowerCase;\n}\n/**\n * @internal\n */\nconst hyphenateCSSName$cache = ( /*#__PURE__*/new Map());\n\n/**\n * Hyphenates a camel-cased name.\n *\n * Applicable to CSS property names.\n *\n * Converts:\n *\n * - `backgroundColor` to `background-color`.\n *\n *    Uppercase letters converted to lower case and prepended by hyphen,\n *\n * - `MozTransition` to `-moz-transition`.\n *\n *   The very first uppercase letter is prepended by hyphen too.\n *\n * - `MSTransition` to `-ms-transition`.\n *\n *   Subsequent upper-case letters converted to lower case. The first and the last ones prepended by hyphen.\n *\n * - `someURL` to `some-url`\n *\n *   Subsequent upper-case letters in the very end of the string converted to lower case and prepended by hyphen.\n *\n * - `color` to `color`.\n *\n *   All lower-case names remain as is.\n *\n * - `padding-left` to `padding-left`\n *\n *   Hyphens remain in place.\n *\n * @param name - Camel-cased name to hyphenate.\n *\n * @returns Hyphenated name.\n */\nfunction hyphenateName(name) {\n    return name.replace(uppercasePattern, toHyphenLower);\n}\n/**\n * De-capitalizes a camel-cased name and hyphenates it.\n *\n * Calls {@link hyphenateName}, then removes the leading hyphen.\n *\n * Thus, e.g. `MozTransition` would be converted to `moz-transition` rather to `-moz-transition`.\n *\n * @param name - Camel-cased name to hyphenate.\n *\n * @returns Hyphenated name.\n */\nfunction hyphenateDecapName(name) {\n    const hyphenated = hyphenateName(name);\n    return hyphenated.startsWith('-') ? hyphenated.substr(1) : hyphenated;\n}\n/**\n * Hyphenates a camel-cased CSS property key.\n *\n * Applicable to the names of `HTMLElement.style` properties, including vendor-specific ones.\n *\n * Calls {@link hyphenateName}, then replaces `ms-` prefix with `-ms-` one. Other vendor-specific prefixes are\n * capitalized, so the hyphen prefix is added already.\n *\n * Caches hyphenated names for the sake of speed.\n *\n * @param name - Camel-cased CSS property name to hyphenate.\n *\n * @returns Hyphenated CSS property name.\n */\nfunction hyphenateCSSName(name) {\n    const found = hyphenateCSSName$cache.get(name);\n    if (found) {\n        return found;\n    }\n    let hyphenated = hyphenateName(name);\n    if (hyphenated.startsWith('ms-')) {\n        hyphenated = '-' + hyphenated;\n    }\n    hyphenateCSSName$cache.set(name, hyphenated);\n    return hyphenated;\n}\n\nexport { decodeURLComponent, escapeCSS, escapeCSSVal, escapeXML as escapeHTML, escapeXML, hyphenateCSSName, hyphenateDecapName, hyphenateName };\n//# sourceMappingURL=httongue.js.map\n","import { SingleContextKey, ContextValues, ContextKey__symbol, ContextRegistry, SimpleContextKey } from '@proc7ts/context-values';\nimport { hasOwnProperty, superClassOf, elementOrArray, extendSetOfElements, setOfElements, mergeFunctions, noop, valueProvider, asis, newPromiseResolver, valueByRecipe } from '@proc7ts/primitives';\nimport { amend, allAmender, AeClass, newAmendTarget, isAmendatory, AeMember } from '@proc7ts/amend';\nimport { Supply, neverSupply } from '@proc7ts/supply';\nimport { isQualifiedName, NamespaceDef, html__naming, newNamespaceAliaser } from '@frontmeans/namespace-aliaser';\nimport { DomEventDispatcher } from '@frontmeans/dom-events';\nimport { ContextUpKey, ContextModule, FnContextKey } from '@proc7ts/context-values/updatable';\nimport { digAfter, afterThe, statePath, trackValue, mapAfter, digOn_, onceOn, AfterEvent__symbol, onEventBy, supplyOn, EventEmitter, valueOn, onAny, mapAfter_, filterOn_, translateOn, mapOn_, valueOn_, onPromise, StateTracker, ValueTracker, isEventSender, onSupplied, translateOn_ } from '@proc7ts/fun-events';\nimport { asyncRenderScheduler, newRenderSchedule } from '@frontmeans/render-scheduler';\nimport { nodeDocument } from '@frontmeans/dom-primitives';\nimport { drekContextOf, drekBuild } from '@frontmeans/drek';\nimport { Workbench, WorkStage } from '@proc7ts/workbench';\nimport { hyphenateDecapName } from '@frontmeans/httongue';\n\n/**\n * @internal\n */\nconst BootstrapContext__key = ( /*#__PURE__*/new SingleContextKey('bootstrap-context'));\n\n/**\n * Components bootstrap context.\n *\n * An instance of this class is passed to {@link FeatureDef.init} method so that the feature can configure\n * itself.\n *\n * Extends `BootstrapValues` interface. The values could be {@link BootstrapSetup.provide pre-configured} in feature\n * definitions.\n *\n * @category Core\n */\nclass BootstrapContext extends ContextValues {\n    /**\n     * A key of bootstrap context value containing the bootstrap context itself.\n     */\n    static get [ContextKey__symbol]() {\n        return BootstrapContext__key;\n    }\n}\n\n/**\n * Provides a default value for bootstrap context key.\n *\n * @category Core\n * @typeParam TValue - Context value type.\n * @typeParam TKey - Context key type.\n * @param provide - A function accepting bootstrap context and target key as parameters, and returning either a default\n * value, or `null`/`undefined` if unknown.\n *\n * @returns A provider of default value for bootstrap context value key.\n */\nfunction bootstrapDefault(provide) {\n    return (context, key) => {\n        const bootstrapContext = context.get(BootstrapContext);\n        return context === bootstrapContext\n            ? provide(bootstrapContext, key)\n            : bootstrapContext.get(key);\n    };\n}\n\n/**\n * @internal\n */\nfunction mergeInitMethods(target1, method1, target2, method2) {\n    const m1 = method1 && method1.bind(target1);\n    const m2 = method2 && method2.bind(target2);\n    if (!m2) {\n        return m1;\n    }\n    if (!m1) {\n        return m2;\n    }\n    return async (...args) => {\n        await m1(...args);\n        await m2(...args);\n    };\n}\n\n/**\n * @category Utility\n */\nclass MetaAccessor {\n    constructor(symbol) {\n        this.symbol = symbol;\n    }\n    own(type, receiver) {\n        return hasOwnProperty(type, this.symbol)\n            ? Reflect.get(type, this.symbol, receiver)\n            : undefined;\n    }\n    of(type, receiver = type) {\n        const ownDef = this.own(type, receiver);\n        const superType = superClassOf(type);\n        const superDef = superType && this.of(superType, receiver);\n        return ownDef ? (superDef ? this.merge([superDef, ownDef]) : ownDef) : superDef;\n    }\n    define(type, metas) {\n        const prevMeta = this.own(type);\n        const newMeta = this.merge(prevMeta ? [prevMeta, ...metas] : metas);\n        Reflect.defineProperty(type, this.symbol, {\n            configurable: true,\n            value: newMeta,\n        });\n        return type;\n    }\n}\n\n/**\n * A key of a property holding a feature definition within its class constructor.\n *\n * @category Core\n */\nconst FeatureDef__symbol = ( /*#__PURE__*/Symbol('FeatureDef'));\n/**\n * @internal\n */\nclass FeatureMeta extends MetaAccessor {\n    constructor() {\n        super(FeatureDef__symbol);\n    }\n    merge(defs) {\n        return defs.reduce((prev, def) => ({\n            needs: elementOrArray(extendSetOfElements(setOfElements(prev.needs), def.needs)),\n            has: elementOrArray(extendSetOfElements(setOfElements(prev.has), def.has)),\n            setup: mergeInitMethods(prev, prev.setup, def, def.setup),\n            init: mergeInitMethods(prev, prev.init, def, def.init),\n        }), {});\n    }\n}\n/**\n * @internal\n */\nconst featureMeta = ( /*#__PURE__*/new FeatureMeta());\n/**\n * @category Core\n */\nconst FeatureDef = {\n    /**\n     * Extracts feature definition options from its type.\n     *\n     * @param featureType - Target feature class constructor.\n     *\n     * @returns Feature definition options. May be empty when there is no feature definition found in the given\n     * `featureType`.\n     */\n    of(featureType) {\n        return featureMeta.of(amend(featureType)) || {};\n    },\n    /**\n     * Merges multiple feature definition options.\n     *\n     * @param defs - Feature definition options to merge.\n     *\n     * @returns Merged feature definition options.\n     */\n    merge(...defs) {\n        return featureMeta.merge(defs);\n    },\n    /**\n     * Defines a feature.\n     *\n     * Either creates new or extends an existing feature definition and stores it under `[FeatureDef__symbol]` key.\n     *\n     * @typeParam TClass - Feature type.\n     * @param featureType - Feature class constructor.\n     * @param defs - Feature definitions.\n     *\n     * @returns The `type` instance.\n     */\n    define(featureType, ...defs) {\n        return featureMeta.define(featureType, defs);\n    },\n};\n\n/**\n * Creates a feature class amendment (and decorator).\n *\n * Decorate a class with this decorator to define it as a feature like this:\n * ```TypeScript\n * @Feature({ needs: [OtherFeature, MyComponent] })\n * class MyFeature {\n *   // ...\n * }\n * ```\n *\n * Such feature can be passed to {@link bootstrapComponents} function or referenced by other features.\n *\n * This is an alternative to direct call to {@link FeatureDef.define} method.\n *\n * @category Core\n * @typeParam TClass - Amended feature class type.\n * @typeParam TAmended - Amended feature entity type.\n * @param amendments - Feature definitions or amendments to apply.\n *\n * @returns Feature class amendment and decorator.\n */\nfunction Feature(...amendments) {\n    const amender = Feature$toAmender(amendments);\n    return AeClass(baseTarget => {\n        let result = {};\n        amender(newAmendTarget({\n            base: {\n                ...baseTarget,\n                featureDef: {},\n            },\n            amend(_base, request = {}) {\n                const { featureDef: defRequest = {}, ...baseRequest } = request;\n                const createBaseTarget = baseTarget.amend(baseRequest);\n                const featureDef = result = FeatureDef.merge(result, defRequest);\n                return () => ({\n                    ...createBaseTarget(),\n                    featureDef,\n                });\n            },\n        }));\n        FeatureDef.define(baseTarget.amendedClass, result);\n    });\n}\nfunction Feature$toAmender(amendments) {\n    const featureDefs = [];\n    const featureAmendments = [];\n    for (const amendment of amendments) {\n        if (isFeatureAmendment(amendment)) {\n            featureAmendments.push(amendment);\n        }\n        else {\n            featureDefs.push(amendment);\n        }\n    }\n    if (featureDefs.length) {\n        featureAmendments.push(FeatureDef$toAmender(featureDefs));\n    }\n    return allAmender(featureAmendments);\n}\nfunction isFeatureAmendment(amendment) {\n    return typeof amendment === 'function' || isAmendatory(amendment);\n}\nfunction FeatureDef$toAmender(defs) {\n    return ({ amend }) => amend({\n        featureDef: FeatureDef.merge(...defs),\n    });\n}\n\n/**\n * @internal\n */\nconst FeatureContext__key = ( /*#__PURE__*/new SingleContextKey('feature-context'));\n/**\n * Feature initialization context.\n *\n * @category Core\n */\nclass FeatureContext extends BootstrapContext {\n    /**\n     * A key of feature context value containing the feature context itself.\n     */\n    static get [ContextKey__symbol]() {\n        return FeatureContext__key;\n    }\n    whenDefined(componentType) {\n        return this.get(BootstrapContext).whenDefined(componentType);\n    }\n    load(feature, user) {\n        return this.get(BootstrapContext).load(feature, user ? new Supply().needs(this).needs(user) : this);\n    }\n}\n\n/**\n * @internal\n */\nconst BootstrapWorkbench = ( /*#__PURE__*/new SingleContextKey('bootstrap-workbench', {\n    byDefault: bootstrapDefault(() => new Workbench()),\n}));\n/**\n * @internal\n */\nconst featureSetupStage = ( /*#__PURE__*/new WorkStage('feature setup'));\n/**\n * @internal\n */\nconst featureInitStage = ( /*#__PURE__*/new WorkStage('feature init', { after: featureSetupStage }));\n/**\n * @internal\n */\nconst componentDefStage = ( /*#__PURE__*/new WorkStage('component definition', { after: featureInitStage }));\n\n/**\n * A key of a property holding a component definition within its class constructor.\n *\n * @category Core\n */\nconst ComponentDef__symbol = ( /*#__PURE__*/Symbol('ComponentDef'));\n/**\n * @internal\n */\nclass ComponentMeta extends MetaAccessor {\n    constructor() {\n        super(ComponentDef__symbol);\n    }\n    merge(defs) {\n        return defs.reduce((prev, meta) => {\n            const def = this.meta(meta);\n            return ({\n                ...prev,\n                ...def,\n                setup: mergeFunctions(prev.setup, def.setup),\n                define: mergeFunctions(prev.define, def.define),\n                feature: prev.feature\n                    ? def.feature ? FeatureDef.merge(prev.feature, def.feature) : prev.feature\n                    : def.feature,\n            });\n        }, {});\n    }\n    meta(source) {\n        if (isQualifiedName(source)) {\n            return { name: source };\n        }\n        return source;\n    }\n}\n/**\n * @internal\n */\nconst componentMeta = ( /*#__PURE__*/new ComponentMeta());\n/**\n * @category Core\n */\nconst ComponentDef = {\n    /**\n     * Extracts component definition options from its type.\n     *\n     * @typeParam T - A type of component.\n     * @param componentType - Target component class constructor.\n     *\n     * @returns Component definition options. May be empty if there is not definition attached to component type.\n     */\n    of(componentType) {\n        return componentMeta.of(amend(componentType)) || {};\n    },\n    /**\n     * Merges multiple component definition options.\n     *\n     * @typeParam T - A type of component.\n     * @param defs - Component definition options to merge.\n     *\n     * @returns Merged component definition options.\n     */\n    merge(...defs) {\n        return componentMeta.merge(defs);\n    },\n    /**\n     * Defines a component.\n     *\n     * Either assigns new or extends existing component definition and stores it under {@link ComponentDef__symbol} key.\n     *\n     * Each component can be passed directly to {@link bootstrapComponents} function or added as a requirement\n     * of another feature.\n     *\n     * @typeParam TClass - A type of component class.\n     * @param componentType - Component class constructor.\n     * @param defs - Component definitions.\n     *\n     * @returns The `type` instance.\n     */\n    define(componentType, ...defs) {\n        return componentMeta.define(componentType, defs);\n    },\n};\n\n/**\n * Creates a component class amendment (and decorator).\n *\n * Decorated class becomes component:\n * ```TypeScript\n * @Component({ name: 'my-element' })\n * class MyComponent {\n *   // ...\n * }\n * ```\n *\n * Such component can be registered with {@link FeatureContext.define} method or used as a feature, e.g. passed to\n * {@link bootstrapComponents} function, or added to {@link FeatureDef.needs} property of another feature.\n *\n * This is an alternative to direct call to {@link ComponentDef.define} method.\n *\n * @category Core\n * @typeParam TClass - Amended component class type.\n * @typeParam TAmended - Amended component entity type.\n * @param amendments - Component definitions, qualified name od component's element, or amendments to apply.\n *\n * @returns Component class amendment and decorator.\n */\nfunction Component(...amendments) {\n    const amender = Component$toAmender(amendments);\n    return Feature(baseTarget => {\n        let result = {};\n        amender(newAmendTarget({\n            base: {\n                ...baseTarget,\n                componentDef: {},\n            },\n            amend(_base, request = {}) {\n                const { componentDef: defRequest = {}, ...baseRequest } = request;\n                const createBaseTarget = baseTarget.amend(baseRequest);\n                const componentDef = result = ComponentDef.merge(result, defRequest);\n                return () => ({\n                    ...createBaseTarget(),\n                    componentDef,\n                });\n            },\n        }));\n        ComponentDef.define(baseTarget.amendedClass, result);\n    });\n}\nfunction Component$toAmender(amendments) {\n    const componentDefs = [];\n    const componentAmendments = [];\n    for (const amendment of amendments) {\n        if (isComponentAmendment(amendment)) {\n            componentAmendments.push(amendment);\n        }\n        else {\n            componentDefs.push(amendment);\n        }\n    }\n    if (componentDefs.length) {\n        componentAmendments.push(ComponentDef$toAmender(componentDefs));\n    }\n    return allAmender(componentAmendments);\n}\nfunction isComponentAmendment(amendment) {\n    return typeof amendment === 'function' || isAmendatory(amendment);\n}\nfunction ComponentDef$toAmender(defs) {\n    return ({ amend }) => amend({\n        componentDef: ComponentDef.merge(...defs),\n    });\n}\n\n/**\n * @internal\n */\nconst ComponentContext__key = ( /*#__PURE__*/new SingleContextKey('component-context'));\n\n/**\n * @internal\n */\nconst ComponentEventDispatcher__key = ( /*#__PURE__*/new SingleContextKey('component-event-dispatcher', {\n    byDefault(values) {\n        const context = values.get(ComponentContext__key);\n        const dispatcher = new DomEventDispatcher(context.element);\n        dispatcher.supply.needs(context);\n        return {\n            dispatch(event) {\n                return dispatcher.dispatch(event);\n            },\n            on(type) {\n                return dispatcher.on(type);\n            },\n        };\n    },\n}));\n\n/**\n * A key of component context value containing a component root element.\n *\n * This is an element itself by default. But can be overridden e.g. by {@link AttachShadow @AttachShadow} decorator.\n *\n * @category Core\n */\nconst ContentRoot = ( /*#__PURE__*/new SingleContextKey('content-root', {\n    byDefault(ctx) {\n        return ctx.get(ComponentContext__key).element;\n    },\n}));\n\n/**\n * @internal\n */\nclass StateUpdaterKey extends ContextUpKey {\n    constructor() {\n        super('state-updater');\n        this.upKey = this.createUpKey(slot => slot.insert(slot.seed.do(digAfter((...fns) => {\n            if (fns.length) {\n                const combined = fns.reduce((prev, fn) => mergeFunctions(fn, prev), noop);\n                return afterThe((path, newValue, oldValue) => combined(statePath(path), newValue, oldValue));\n            }\n            if (slot.hasFallback && slot.or) {\n                return slot.or;\n            }\n            return afterThe(noop);\n        }))));\n    }\n    grow(slot) {\n        let delegated;\n        slot.context.get(this.upKey, slot.hasFallback ? { or: slot.or != null ? afterThe(slot.or) : slot.or } : undefined)(fn => delegated = fn).whenOff(() => delegated = noop);\n        slot.insert((path, newValue, oldValue) => delegated(path, newValue, oldValue));\n    }\n}\n/**\n * A key of component context value containing a component {@link StateUpdater state updater} function.\n *\n * Features are calling this function by default when component state changes, e.g. attribute value or DOM property\n * modified.\n *\n * Does nothing by default and after component destruction.\n *\n * When multiple state updaters provided, they all will be called on each state update, in reverse order.\n *\n * @category Core\n */\nconst StateUpdater = ( /*#__PURE__*/new StateUpdaterKey());\n\n/**\n * A key of component instance method returning its component context.\n *\n * @category Core\n */\nconst ComponentContext__symbol = ( /*#__PURE__*/Symbol('ComponentContext'));\n/**\n * Component context.\n *\n * Passed to component constructor as its only parameter.\n *\n * Extends `ContextValues` interface. The values are provided by corresponding providers registered with\n * {@link BootstrapSetup.perComponent} and {@link DefinitionSetup.perComponent} methods.\n *\n * @category Core\n * @typeParam T - A type of component.\n */\nclass ComponentContext extends ContextValues {\n    constructor() {\n        super();\n        this.updateState = (key, newValue, oldValue) => {\n            this.get(StateUpdater)(key, newValue, oldValue);\n        };\n    }\n    /**\n     * A key of component context value containing the component context instance itself.\n     */\n    static get [ContextKey__symbol]() {\n        return ComponentContext__key;\n    }\n    /**\n     * Extracts component context from the given component instance.\n     *\n     * @param component - Target component instance.\n     *\n     * @return Component context reference returned by {@link ComponentContext__symbol} method.\n     *\n     * @throws TypeError  When the given `component` does not contain component context reference.\n     */\n    static of(component) {\n        if (typeof component[ComponentContext__symbol] !== 'function') {\n            throw new TypeError(`No component context found in ${String(component)}`);\n        }\n        return component[ComponentContext__symbol]();\n    }\n    /**\n     * Component content root.\n     *\n     * This is a shorthand for requesting a {@link ContentRoot content root} from component context.\n     */\n    get contentRoot() {\n        return this.get(ContentRoot);\n    }\n    /**\n     * Returns DOM event producer for the given event type.\n     *\n     * Retrieves an event producer from {@link ComponentEventDispatcher component event dispatcher} available in this\n     * context.\n     *\n     * @typeParam TEvent - DOM event type.\n     * @param type - An event type to listen for.\n     *\n     * @returns A producer of DOM event events of the given type.\n     */\n    on(type) {\n        return this.get(ComponentEventDispatcher__key).on(type);\n    }\n    /**\n     * Dispatches an event to component element.\n     *\n     * Dispatches using a {@link ComponentEventDispatcher component event dispatcher} available in this context.\n     *\n     * @param event - An event to dispatch.\n     */\n    dispatchEvent(event) {\n        this.get(ComponentEventDispatcher__key).dispatch(event);\n    }\n}\n\n/**\n * A key of component context value containing component event dispatcher.\n *\n * @category Core\n */\nconst ComponentEventDispatcher = ComponentEventDispatcher__key;\n\n/**\n * Creates an amendment (and decorator) for the component instance member.\n *\n * @category Core\n * @typeParam TValue - Amended member value type.\n * @typeParam TClass - Amended component class type.\n * @typeParam TUpdate - Amended member update type accepted by its setter.\n * @typeParam TAmended - Amended component member entity type.\n * @param amendments - Amendments to apply.\n *\n * @returns New component member amendment instance.\n */\nfunction ComponentMember(...amendments) {\n    return AeMember(Component(allAmender(amendments)));\n}\n\nconst ComponentSlot$empty = {\n    get: noop,\n    unbind: noop,\n    rebind: noop,\n    drop: noop,\n};\n/**\n * @internal\n */\nclass ComponentSlot$ {\n    constructor() {\n        this._provider = trackValue(ComponentSlot$empty);\n        this.read = this._provider.read.do(mapAfter(provider => provider.get()));\n        this.whenReady = this.read.do(digOn_(ctx => ctx && ctx.whenReady), onceOn);\n    }\n    get context() {\n        return this._provider.it.get();\n    }\n    [AfterEvent__symbol]() {\n        return this.read;\n    }\n    bind(context) {\n        this._provider.it.drop();\n        this._provider.it = ComponentSlot$known(this, context);\n    }\n    bindBy(binder) {\n        this._provider.it.drop();\n        this._provider.it = ComponentSlot$bound(this, binder);\n    }\n    unbind() {\n        this._provider.it.unbind();\n    }\n    rebind() {\n        return this.context || this._provider.it.rebind();\n    }\n}\nfunction ComponentSlot$known(slot, context) {\n    context.supply.whenOff(() => {\n        if (slot.context === context) {\n            slot.unbind();\n        }\n    });\n    const get = () => context;\n    return {\n        get,\n        unbind() {\n            slot._provider.it = ComponentSlot$empty;\n        },\n        rebind: get,\n        drop: noop,\n    };\n}\nfunction ComponentSlot$bound(slot, binder) {\n    let supply = neverSupply();\n    let getContext = noop;\n    const get = () => getContext();\n    const newSupply = () => supply = new Supply(() => {\n        getContext = noop;\n    });\n    let bind = (context) => {\n        getContext = valueProvider(context);\n        context.supply.whenOff(() => {\n            if (slot.context === context) {\n                slot.unbind();\n            }\n        });\n        return newSupply();\n    };\n    const drop = () => {\n        bind = _ => neverSupply();\n        supply.off();\n    };\n    const unbind = () => {\n        supply.off();\n        slot._provider.it = {\n            get,\n            unbind,\n            rebind,\n            drop,\n        };\n    };\n    const bindContext = () => binder({\n        bind: context => bind(context),\n    });\n    getContext = () => {\n        bindContext();\n        // Subsequent bind calls update the component provider\n        bind = context => {\n            supply.off();\n            getContext = valueProvider(context);\n            slot._provider.it = {\n                get,\n                unbind,\n                rebind,\n                drop,\n            };\n            return newSupply();\n        };\n        return getContext();\n    };\n    const rebind = () => {\n        bindContext();\n        return getContext();\n    };\n    return {\n        get,\n        unbind,\n        rebind,\n        drop,\n    };\n}\n\n/**\n * A key of component element property containing a reference to component slot.\n *\n * @category Core\n */\nconst ComponentSlot__symbol = ( /*#__PURE__*/Symbol('ComponentSlot'));\n/**\n * @category Core\n */\nconst ComponentSlot = {\n    /**\n     * Accesses a component slot of the given element. Attaches a new slot if necessary.\n     *\n     * @param element - Target element.\n     *\n     * @returns A component slot instance attached to the element.\n     */\n    of(element) {\n        const found = element[ComponentSlot__symbol];\n        if (found) {\n            return found;\n        }\n        return element[ComponentSlot__symbol] = new ComponentSlot$();\n    },\n};\n\nconst BootstrapContextRegistry__key = (\n/*#__PURE__*/ new SingleContextKey('bootstrap-context-registry'));\n/**\n * @internal\n */\nclass BootstrapContextRegistry extends ContextRegistry {\n    constructor() {\n        super();\n        this.provide({ a: BootstrapContextRegistry, is: this });\n        this.values = this.newValues();\n    }\n    static get [ContextKey__symbol]() {\n        return BootstrapContextRegistry__key;\n    }\n    static create() {\n        return new BootstrapContextRegistry();\n    }\n}\n\nconst PerComponentRegistry = (\n/*#__PURE__*/ new SingleContextKey('per-component-registry', {\n    byDefault: bootstrapDefault(() => new ComponentContextRegistry()),\n}));\n/**\n * @internal\n */\nclass ComponentContextRegistry extends ContextRegistry {\n}\n\n/**\n * @internal\n */\nconst PerDefinitionRegistry = (\n/*#__PURE__*/ new SingleContextKey('per-definition-registry', {\n    byDefault: bootstrapDefault(bsContext => new DefinitionContextRegistry(bsContext)),\n}));\n/**\n * @internal\n */\nclass DefinitionContextRegistry extends ContextRegistry {\n}\n\n/**\n * @internal\n */\nfunction onPostDefSetup(componentType, supply) {\n    const { on } = postDefSetup(componentType);\n    return onEventBy(receiver => {\n        on({\n            supply: receiver.supply.needs(supply),\n            receive(ctx, setup) {\n                const whenReady = setup.whenReady.do(supplyOn(supply));\n                const whenComponent = setup.whenComponent.do(supplyOn(supply));\n                receiver.receive(ctx, {\n                    get componentType() {\n                        return setup.componentType;\n                    },\n                    get whenReady() {\n                        return whenReady;\n                    },\n                    get whenComponent() {\n                        return whenComponent;\n                    },\n                    perDefinition(spec) {\n                        return setup.perDefinition(spec).needs(supply);\n                    },\n                    perComponent(spec) {\n                        return setup.perComponent(spec).needs(supply);\n                    },\n                });\n            },\n        });\n    });\n}\nconst PostDefSetup__symbol = ( /*#__PURE__*/Symbol('PostDefSetup'));\n/**\n * @internal\n */\nfunction postDefSetup(componentType) {\n    if (hasOwnProperty(componentType, PostDefSetup__symbol)) {\n        return componentType[PostDefSetup__symbol];\n    }\n    const tracker = trackValue();\n    const emitter = new EventEmitter();\n    const onSetup = tracker.read.do(valueOn(asis));\n    const on = onAny(onSetup, emitter);\n    const superType = superClassOf(componentType, type => ComponentDef__symbol in type);\n    if (superType) {\n        const superPostDefSetup = postDefSetup(superType);\n        on(setup => superPostDefSetup.send(setup));\n    }\n    const result = {\n        on,\n        send(setup) {\n            emitter.send(setup);\n        },\n        setup(setup) {\n            tracker.it = setup;\n        },\n    };\n    Reflect.defineProperty(componentType, PostDefSetup__symbol, { value: result });\n    return result;\n}\n\n/**\n * A key of bootstrap context value containing a window instance the bootstrap is performed against.\n *\n * Target value defaults to current window.\n *\n * @category Core\n */\nconst BootstrapWindow = ( /*#__PURE__*/new SingleContextKey('window', {\n    byDefault() {\n        return window;\n    },\n}));\n\n/**\n * A key of bootstrap context value containing a bootstrap root.\n *\n * Target value defaults to document body of {@link BootstrapWindow}.\n *\n * @category Core\n */\nconst BootstrapRoot = ( /*#__PURE__*/new SingleContextKey('bootstrap-root', {\n    byDefault(ctx) {\n        return ctx.get(BootstrapWindow).document.body;\n    },\n}));\n\n/**\n * A key of bootstrap context value containing the default namespace aliaser.\n *\n * @category Core\n */\nconst DefaultNamespaceAliaser = (\n/*#__PURE__*/ new SingleContextKey('default-namespace-aliaser'));\n\n/**\n * @internal\n */\nclass RenderScheduler$Key extends ContextUpKey {\n    constructor(name, byDefault) {\n        super(name);\n        this.upKey = this.createUpKey(slot => slot.insert(slot.seed.do(digAfter((...fns) => {\n            if (fns.length) {\n                return afterThe(RenderScheduler$adopt(slot.context, fns[fns.length - 1]));\n            }\n            if (slot.hasFallback && slot.or) {\n                return slot.or;\n            }\n            return afterThe(RenderScheduler$adopt(slot.context, byDefault));\n        }))));\n    }\n    grow(slot) {\n        const { context } = slot;\n        const bsContext = context.get(BootstrapContext);\n        if (context !== bsContext) {\n            return slot.insert(bsContext.get(this, slot.hasFallback ? slot : undefined));\n        }\n        let delegated;\n        context.get(this.upKey, slot.hasFallback ? { or: slot.or != null ? afterThe(slot.or) : slot.or } : undefined)(scheduler => delegated = RenderScheduler$adopt(context, scheduler));\n        slot.insert((...args) => delegated(...args));\n    }\n}\nfunction RenderScheduler$adopt(context, scheduler) {\n    return (options = {}) => scheduler({\n        ...options,\n        window: options.window || context.get(BootstrapWindow),\n    });\n}\n\n/**\n * A key of bootstrap context value containing {@link DefaultPreRenderScheduler} instance.\n *\n * Uses asynchronous `RenderScheduler` (`asyncRenderScheduler`) for {@link BootstrapWindow bootstrap window} by default.\n *\n * @category Core\n */\nconst DefaultPreRenderScheduler = (\n/*#__PURE__*/ new RenderScheduler$Key('default-pre-render-scheduler', asyncRenderScheduler));\n\n/**\n * A key of bootstrap context value containing {@link DefaultRenderScheduler} instance.\n *\n * Uses the default `RenderScheduler` (`newRenderSchedule()`) for {@link BootstrapWindow bootstrap window} by default.\n *\n * @category Core\n */\nconst DefaultRenderScheduler = (\n/*#__PURE__*/ new RenderScheduler$Key('default-render-scheduler', newRenderSchedule));\n\n/**\n * A key of bootstrap context value containing {@link DocumentRenderKit} instance.\n *\n * @category Core\n */\nconst DocumentRenderKit = (\n/*#__PURE__*/ new SingleContextKey('document-render-kit', {\n    byDefault: bootstrapDefault(DocumentRenderKit$create),\n}));\nfunction DocumentRenderKit$create(bsContext) {\n    const docs = new WeakMap();\n    const initDoc = (doc) => {\n        if (!docs.get(doc)) {\n            docs.set(doc, 1);\n            drekContextOf(doc).update({\n                nsAlias: bsContext.get(DefaultNamespaceAliaser),\n                scheduler: bsContext.get(DefaultRenderScheduler),\n            });\n        }\n    };\n    return {\n        contextOf(node) {\n            initDoc(nodeDocument(node));\n            return drekContextOf(node);\n        },\n    };\n}\n\n/**\n * Default Wesib namespace definition.\n *\n * @category Core\n */\nconst Wesib__NS = ( /*#__PURE__*/new NamespaceDef('https://wesib.github.io/ns', 'b', 'wesib'));\n\n/**\n * @internal\n */\nconst DefinitionContext__symbol = ( /*#__PURE__*/Symbol('DefinitionContext'));\n/**\n * @internal\n */\nfunction definitionContextOf(componentType) {\n    if (!hasOwnProperty(componentType, DefinitionContext__symbol)) {\n        throw new TypeError(`Component is not defined: ${componentType}`);\n    }\n    return componentType[DefinitionContext__symbol];\n}\n\n/**\n * @internal\n */\nconst CustomElements__key = ( /*#__PURE__*/new SingleContextKey('custom-elements', {\n    byDefault: bootstrapDefault(createCustomElements),\n}));\n/**\n * Custom elements registry.\n *\n * This is used to register custom elements.\n *\n * Typically implemented by `window.customElements`.\n *\n * @category Core\n */\nclass CustomElements {\n    /**\n     * A key of bootstrap context value containing a `CustomElements` instance used to register custom\n     * elements.\n     *\n     * Target value defaults to `window.customElements` from the window provided under `[BootstrapWindow.key]`.\n     */\n    static get [ContextKey__symbol]() {\n        return CustomElements__key;\n    }\n}\n/**\n * @internal\n */\nfunction createCustomElements(bsContext) {\n    const customElements = bsContext.get(BootstrapWindow).customElements;\n    const nsAlias = bsContext.get(DefaultNamespaceAliaser);\n    class CustomElements$ extends CustomElements {\n        define(componentTypeOrName, elementType) {\n            if (isQualifiedName(componentTypeOrName)) {\n                customElements.define(html__naming.name(componentTypeOrName, nsAlias), elementType);\n                return;\n            }\n            const defContext = definitionContextOf(componentTypeOrName);\n            const { tagName, extend } = defContext.elementDef;\n            if (!tagName) {\n                componentResolver(componentTypeOrName).resolve(undefined);\n                return; // Anonymous component.\n            }\n            if (extend && extend.name) {\n                customElements.define(tagName, elementType, {\n                    extends: extend.name,\n                });\n            }\n            else {\n                customElements.define(tagName, elementType);\n            }\n        }\n        whenDefined(componentTypeOrName) {\n            if (isQualifiedName(componentTypeOrName)) {\n                return customElements.whenDefined(html__naming.name(componentTypeOrName, nsAlias));\n            }\n            const defContext = definitionContextOf(componentTypeOrName);\n            const { name } = defContext.elementDef;\n            if (!name) {\n                return componentResolver(componentTypeOrName).promise();\n            }\n            return customElements.whenDefined(html__naming.name(name, nsAlias));\n        }\n    }\n    return new CustomElements$();\n}\n/**\n * @internal\n */\nconst ComponentResolver__symbol = ( /*#__PURE__*/Symbol('ComponentResolver'));\n/**\n * @internal\n */\nfunction componentResolver(componentType) {\n    if (hasOwnProperty(componentType, ComponentResolver__symbol)) {\n        return componentType[ComponentResolver__symbol];\n    }\n    return componentType[ComponentResolver__symbol] = newPromiseResolver();\n}\n\n/**\n * @internal\n */\nconst DefinitionContext__key = ( /*#__PURE__*/new SingleContextKey('definition-context'));\n\n/**\n * Component definition context.\n *\n * Extends `ContextValues` interface. The values are provided by corresponding providers registered with\n * {@link BootstrapSetup.perDefinition} and {@link DefinitionSetup.perDefinition} methods. All {@link BootstrapContext}\n * values are available too.\n *\n * @category Core\n * @typeParam T - A type of component.\n */\nclass DefinitionContext extends ContextValues {\n    /**\n     * A key of definition context value containing the definition context itself.\n     */\n    static get [ContextKey__symbol]() {\n        return DefinitionContext__key;\n    }\n}\n\n/**\n * A key of bootstrap context value containing an element naming service instance.\n */\nconst ElementNaming = ( /*#__PURE__*/new SingleContextKey('element-naming', {\n    byDefault: bootstrapDefault(newElementNaming),\n}));\nfunction newElementNaming(bsContext) {\n    const bsWindow = bsContext.get(BootstrapWindow);\n    const nsAlias = bsContext.get(DefaultNamespaceAliaser);\n    return {\n        elementOf(componentType) {\n            const { name, extend } = ComponentDef.of(componentType);\n            let tagName;\n            const elementExtend = {\n                get type() {\n                    return extend && extend.type || bsWindow.HTMLElement;\n                },\n                get name() {\n                    return extend && extend.name;\n                },\n            };\n            return {\n                get name() {\n                    return name;\n                },\n                get tagName() {\n                    return tagName || (name && (tagName = html__naming.name(name, nsAlias)));\n                },\n                get extend() {\n                    return elementExtend;\n                },\n            };\n        },\n    };\n}\n\nconst ComponentConstructor__symbol = ( /*#__PURE__*/Symbol('newComponent'));\n/**\n * @internal\n */\nfunction newComponent(context) {\n    const componentType = context.componentType;\n    if (!componentType[ComponentConstructor__symbol]) {\n        componentType[ComponentConstructor__symbol] = newComponentConstructor(componentType);\n    }\n    return componentType[ComponentConstructor__symbol](context);\n}\nfunction newComponentConstructor(componentType) {\n    // Component context reference specific to component class.\n    const context__symbol = Symbol('ComponentContext');\n    let defaultContext;\n    componentType.prototype[ComponentContext__symbol] = function () {\n        return this[context__symbol] || (this[context__symbol] = defaultContext);\n    };\n    return function (context) {\n        const prevContext = defaultContext;\n        // Ensure the component context is available in component constructor.\n        defaultContext = context;\n        try {\n            const component = new this(context);\n            component[context__symbol] = context;\n            return component;\n        }\n        finally {\n            defaultContext = prevContext;\n        }\n    };\n}\n\n/**\n * @internal\n */\nclass ComponentStatus {\n    constructor(_ctx) {\n        this._ctx = _ctx;\n        this._val = trackValue(0 /* Building */);\n        this._canSettle = 0;\n    }\n    get supply() {\n        return this._val.supply;\n    }\n    read() {\n        return (this.read = valueProvider(this._val.read.do(mapAfter_(valueProvider(this._ctx)))))();\n    }\n    isReady() {\n        return !!this._val.it && !this._val.supply.isOff;\n    }\n    onceReady() {\n        return (this.onceReady = valueProvider(this.read().do(ComponentStatus$once(({ ready }) => ready))))();\n    }\n    whenReady() {\n        return (this.whenReady = valueProvider(this.onceReady().do(onceOn)))();\n    }\n    isSettled() {\n        return this._val.it >= 2 /* Settled */ && !this._val.supply.isOff;\n    }\n    onceSettled() {\n        return (this.onceSettled = valueProvider(this.read().do(ComponentStatus$once(({ settled }) => settled))))();\n    }\n    whenSettled() {\n        return (this.whenSettled = valueProvider(this.onceSettled().do(onceOn)))();\n    }\n    isConnected() {\n        return this._val.it >= 3 /* Connected */ && !this._val.supply.isOff;\n    }\n    onceConnected() {\n        return (this.onceConnected = valueProvider(this.read().do(\n        // Filtering is enough, as there is no status after \"connected\"\n        filterOn_(({ connected }) => connected))))();\n    }\n    whenConnected() {\n        return (this.whenConnected = valueProvider(this.onceConnected().do(onceOn)))();\n    }\n    ready() {\n        this._val.it = 1 /* Ready */;\n    }\n    settle() {\n        if (this._canSettle && this._val.it < 2 /* Settled */) {\n            // Prevent settling until exiting custom element constructor\n            this._val.it = 2 /* Settled */;\n        }\n    }\n    connect() {\n        this._val.it = 3 /* Connected */;\n    }\n    create() {\n        this._canSettle = 1; // Can settle now\n    }\n}\nfunction ComponentStatus$once(test) {\n    return input => onEventBy(receiver => {\n        let value = false;\n        input({\n            supply: receiver.supply,\n            receive(eventCtx, componentCtx) {\n                const newValue = test(componentCtx);\n                if (newValue && !value) {\n                    value = newValue;\n                    receiver.receive(eventCtx, componentCtx);\n                }\n            },\n        });\n    });\n}\n\n/**\n * @internal\n */\nclass ComponentContext$ extends ComponentContext {\n    constructor(_definitionContext, element) {\n        super();\n        this._definitionContext = _definitionContext;\n        this.element = element;\n        const registry = _definitionContext._newComponentRegistry();\n        registry.provide({ a: ComponentContext, is: this });\n        this.get = registry.newValues().get;\n        this._status = new ComponentStatus(this);\n        this.supply.whenOff(() => {\n            delete this.component[ComponentContext__symbol];\n            this._component = componentDestroyed;\n        });\n    }\n    get componentType() {\n        return this._definitionContext.componentType;\n    }\n    get component() {\n        return this._component();\n    }\n    get supply() {\n        return this._status.supply;\n    }\n    get ready() {\n        return this._status.isReady();\n    }\n    get onceReady() {\n        return this._status.onceReady();\n    }\n    get whenReady() {\n        return this._status.whenReady();\n    }\n    get settled() {\n        return this._status.isSettled();\n    }\n    get onceSettled() {\n        return this._status.onceSettled();\n    }\n    get whenSettled() {\n        return this._status.whenSettled();\n    }\n    get connected() {\n        return this._status.isConnected();\n    }\n    get onceConnected() {\n        return this._status.onceConnected();\n    }\n    get whenConnected() {\n        return this._status.whenConnected();\n    }\n    get readStatus() {\n        return this._status.read();\n    }\n    _component() {\n        throw new TypeError('Component is not constructed yet. Consider to use a `whenReady()` callback');\n    }\n    settle() {\n        this._status.settle();\n    }\n    _createComponent() {\n        const whenComponent = this._definitionContext._whenComponent;\n        let lastRev = 0;\n        whenComponent.readNotifier.do(onceOn)(notifier => lastRev = notifier(this, lastRev));\n        this.whenConnected(() => {\n            whenComponent.readNotifier({\n                supply: new Supply().needs(this),\n                receive: (_, notifier) => {\n                    lastRev = notifier(this, lastRev);\n                },\n            });\n        });\n        this._definitionContext._elementBuilder.components.send(this);\n        const component = newComponent(this);\n        this._component = valueProvider(component);\n        this._status.ready();\n        return this;\n    }\n    _connect() {\n        this._status.connect();\n    }\n    _created() {\n        this._status.create();\n    }\n}\n/**\n * @internal\n */\nclass ComponentContext$Mounted extends ComponentContext$ {\n    get mounted() {\n        return true;\n    }\n}\nfunction componentDestroyed() {\n    throw new TypeError('Component destroyed already');\n}\n\nclass ComponentContext$Custom extends ComponentContext$ {\n    get mounted() {\n        return false;\n    }\n}\n/**\n * @internal\n */\nfunction customElementType(defContext) {\n    const { elementDef } = defContext;\n    const renderKit = defContext.get(DocumentRenderKit);\n    class CustomElement$ extends elementDef.extend.type {\n        constructor() {\n            super();\n            const slot = ComponentSlot.of(this);\n            // Ignore immediate settlement, as is typically leads to DOM manipulations prohibited inside constructor.\n            let settle = noop;\n            slot.bindBy(({ bind }) => {\n                const context = new ComponentContext$Custom(defContext, this);\n                const supply = bind(context);\n                context._createComponent();\n                context._created();\n                context.supply.needs(supply).whenOff(() => {\n                    renderKit.contextOf(this).whenSettled(_ => settle());\n                });\n            });\n            renderKit.contextOf(this).whenSettled(_ => settle());\n            // Assume settlement happens after constructor completion.\n            settle = () => slot.rebind().settle();\n        }\n        connectedCallback() {\n            var _a;\n            (_a = super.connectedCallback) === null || _a === void 0 ? void 0 : _a.call(this);\n            ComponentSlot.of(this).rebind()._connect();\n        }\n        disconnectedCallback() {\n            var _a;\n            ComponentSlot.of(this).context.supply.off();\n            (_a = super.disconnectedCallback) === null || _a === void 0 ? void 0 : _a.call(this);\n        }\n    }\n    return CustomElement$;\n}\n\nclass WhenComponent {\n    constructor() {\n        const currentRev = trackValue(0);\n        const created = new EventEmitter();\n        this.onCreated = onEventBy(receiver => {\n            const receiverRev = currentRev.it + 1;\n            created.on({\n                supply: receiver.supply,\n                receive: (eventContext, componentContext, notifiedRev) => {\n                    if (notifiedRev < receiverRev) {\n                        // Notify only receivers added after the last notification\n                        receiver.receive({\n                            onRecurrent(recurrentReceiver) {\n                                eventContext.onRecurrent(recurrentContext => recurrentReceiver(recurrentContext));\n                            },\n                        }, componentContext);\n                    }\n                },\n            });\n            ++currentRev.it;\n        });\n        this.readNotifier = currentRev.read.do(mapAfter_(rev => (context, notifiedRev) => {\n            created.send(context, notifiedRev);\n            return rev;\n        }));\n    }\n}\n\n/**\n * @internal\n */\nclass DefinitionContext$ extends DefinitionContext {\n    constructor(_bsContext, _elementBuilder, componentType) {\n        var _a, _b;\n        super();\n        this._bsContext = _bsContext;\n        this._elementBuilder = _elementBuilder;\n        this.componentType = componentType;\n        this._whenComponent = new WhenComponent();\n        this._ready = trackValue(false);\n        this._whenReady = this._ready.read.do(translateOn((send, ready) => ready && send()));\n        this._def = ComponentDef.of(componentType);\n        this.elementDef = _bsContext.get(ElementNaming).elementOf(componentType);\n        const definitionContextRegistry = new DefinitionContextRegistry(_bsContext.get(PerDefinitionRegistry).seeds());\n        definitionContextRegistry.provide({ a: DefinitionContext, is: this });\n        this.get = definitionContextRegistry.newValues().get;\n        const parentPerComponentRegistry = _bsContext.get(PerComponentRegistry).append(seedKey => this.get(seedKey));\n        this._perComponentRegistry = new ComponentContextRegistry(parentPerComponentRegistry.seeds());\n        this.whenReady = this._whenReady.do(mapOn_(valueProvider(this)), onceOn);\n        const definitionSetup = {\n            get componentType() {\n                return componentType;\n            },\n            whenReady: this.whenReady,\n            whenComponent: this.whenComponent,\n            perDefinition: spec => definitionContextRegistry.provide(spec),\n            perComponent: spec => this._perComponentRegistry.provide(spec),\n        };\n        (_b = (_a = this._def).setup) === null || _b === void 0 ? void 0 : _b.call(_a, definitionSetup);\n        postDefSetup(componentType).setup(definitionSetup);\n    }\n    get elementType() {\n        return this._elementType();\n    }\n    get whenComponent() {\n        return this._whenComponent.onCreated;\n    }\n    mountTo(element) {\n        const context = new ComponentContext$Mounted(this, element);\n        ComponentSlot.of(element).bind(context);\n        context._createComponent();\n        const drekContext = context.get(DocumentRenderKit).contextOf(element);\n        drekContext.whenSettled(_ => context.settle()).needs(context);\n        drekContext.whenConnected(_ => context._connect()).needs(context);\n        context._created();\n        return context;\n    }\n    perComponent(spec) {\n        return this._perComponentRegistry.provide(spec);\n    }\n    _newComponentRegistry() {\n        return new ComponentContextRegistry(this._perComponentRegistry.seeds());\n    }\n    _elementType() {\n        throw new Error('Custom element class is not constructed yet. Consider to use a `whenReady()` callback');\n    }\n    _define() {\n        var _a, _b;\n        (_b = (_a = this._def).define) === null || _b === void 0 ? void 0 : _b.call(_a, this);\n        this._elementBuilder.definitions.send(this);\n        this._elementType = valueProvider(customElementType(this));\n        this.componentType[DefinitionContext__symbol] = this;\n        this._ready.it = true;\n    }\n}\n\n/**\n * @internal\n */\nconst ElementBuilder = ( /*#__PURE__*/new SingleContextKey('element-builder', {\n    byDefault: bootstrapDefault(newElementBuilder),\n}));\nfunction newElementBuilder(bsContext) {\n    return {\n        definitions: new EventEmitter(),\n        components: new EventEmitter(),\n        buildElement(componentType) {\n            const definitionContext = new DefinitionContext$(bsContext, this, componentType);\n            definitionContext._define();\n            return definitionContext;\n        },\n    };\n}\n\n/**\n * @internal\n */\nclass ComponentRegistry {\n    constructor(_setup) {\n        this._setup = _setup;\n        this._components = undefined;\n    }\n    define(componentType) {\n        if (this._components) {\n            this._components.push(componentType);\n        }\n        else {\n            this._components = [componentType];\n            this._defineAll(this._components);\n        }\n    }\n    _defineAll(components) {\n        const workbench = this._setup.get(BootstrapWorkbench);\n        const whenDefined = workbench.work(componentDefStage).run(() => {\n            const customElements = this._setup.get(CustomElements);\n            const elementBuilder = this._setup.get(ElementBuilder);\n            components.forEach(componentType => {\n                const defContext = elementBuilder.buildElement(componentType);\n                customElements.define(componentType, defContext.elementType);\n            });\n            this._components = undefined;\n        });\n        this._setup.initBy(valueProvider(whenDefined));\n    }\n}\n\n/**\n * @internal\n */\nclass FeatureContext$ extends FeatureContext {\n    constructor(feature, _setup) {\n        super();\n        this.feature = feature;\n        this._setup = _setup;\n        this._bsContext = _setup.get(BootstrapContext);\n        const handle = _setup.get(_setup.module);\n        const registry = new ContextRegistry(this._bsContext);\n        registry.provide({ a: FeatureContext, is: this });\n        this.get = registry.newValues().get;\n        this.whenReady = handle.read.do(valueOn_(({ ready }) => ready && this), onceOn);\n        this._componentRegistry = new ComponentRegistry(this._setup);\n    }\n    get supply() {\n        return this._setup.supply;\n    }\n    get onDefinition() {\n        return this._onDefinition\n            || (this._onDefinition = this._setup.get(ElementBuilder).definitions.on.do(supplyOn(this)));\n    }\n    get onComponent() {\n        return this._onComponent\n            || (this._onComponent = this._setup.get(ElementBuilder).components.on.do(supplyOn(this)));\n    }\n    provide(spec) {\n        return this._bsContext.get(BootstrapContextRegistry).provide(spec).needs(this);\n    }\n    perDefinition(spec) {\n        return this._bsContext.get(PerDefinitionRegistry).provide(spec).needs(this);\n    }\n    perComponent(spec) {\n        return this._bsContext.get(PerComponentRegistry).provide(spec).needs(this);\n    }\n    setupDefinition(componentType) {\n        return onPostDefSetup(componentType, this.supply);\n    }\n    define(componentType) {\n        this._componentRegistry.define(componentType);\n    }\n}\n\nconst FeatureModule__symbol = ( /*#__PURE__*/Symbol('FeatureModule'));\n/**\n * @internal\n */\nclass FeatureModule extends ContextModule {\n    constructor(feature) {\n        super(feature.name, FeatureModule$options(feature));\n        this.feature = feature;\n    }\n    static of(feature) {\n        if (hasOwnProperty(feature, FeatureModule__symbol)) {\n            return feature[FeatureModule__symbol];\n        }\n        return feature[FeatureModule__symbol] = new FeatureModule(feature);\n    }\n    async setup(setup) {\n        const workbench = setup.get(BootstrapWorkbench);\n        await workbench.work(featureSetupStage).run(() => super.setup(setup));\n    }\n}\nfunction FeatureModule$options(feature) {\n    const def = featureDef(feature);\n    const has = [];\n    const needs = [];\n    for (const replaced of setOfElements(def.has)) {\n        has.push(FeatureModule.of(replaced));\n    }\n    for (const required of setOfElements(def.needs)) {\n        needs.push(FeatureModule.of(required));\n    }\n    return {\n        needs,\n        has,\n        async setup(setup) {\n            var _a;\n            const workbench = setup.get(BootstrapWorkbench);\n            const featureContext = new FeatureContext$(feature, setup);\n            if (def.init) {\n                const whenInit = workbench.work(featureInitStage).run(async () => {\n                    await def.init(featureContext);\n                });\n                setup.initBy(valueProvider(whenInit));\n            }\n            await ((_a = def.setup) === null || _a === void 0 ? void 0 : _a.call(def, featureContext));\n        },\n    };\n}\nfunction featureDef(featureType) {\n    let def = FeatureDef.of(featureType);\n    if (ComponentDef__symbol in featureType) {\n        def = FeatureDef.merge(def, {\n            init(context) {\n                context.define(featureType);\n            },\n        });\n        const { feature } = ComponentDef.of(featureType);\n        if (feature) {\n            def = FeatureDef.merge(def, feature);\n        }\n    }\n    return def;\n}\n\n/**\n * @internal\n */\nconst WhenDefined__symbol = ( /*#__PURE__*/Symbol('WhenDefined'));\n/**\n * @internal\n */\nfunction whenDefined(bsContext, componentType) {\n    if (hasOwnProperty(componentType, WhenDefined__symbol)) {\n        return componentType[WhenDefined__symbol];\n    }\n    const result = onPromise(Promise.resolve(bsContext.whenReady)\n        .then(() => bsContext.get(CustomElements).whenDefined(componentType))\n        .then(() => definitionContextOf(componentType)));\n    return componentType[WhenDefined__symbol] = result;\n}\n\n/**\n * Bootstraps components.\n *\n * Both features and components can be passed as parameters to this function.\n *\n * @category Core\n * @param features - Features and components to enable.\n *\n * @returns Bootstrap context instance.\n */\nfunction bootstrapComponents(...features) {\n    const bootstrapContextRegistry = BootstrapContextRegistry.create();\n    const { bootstrapContext, complete } = initBootstrap(bootstrapContextRegistry);\n    const feature = features.length === 1 ? features[0] : bootstrapFeature(features);\n    bootstrapContext.load(feature)\n        .read\n        .do(valueOn_(({ ready }) => ready), onceOn)\n        .then(complete)\n        .catch(console.error);\n    return bootstrapContext;\n}\n/**\n * @internal\n */\nfunction bootstrapFeature(needs) {\n    return FeatureDef.define(class BootstrapFeature {\n    }, { needs });\n}\n/**\n * @internal\n */\nfunction initBootstrap(bootstrapContextRegistry) {\n    const stage = trackValue(0 /* Init */);\n    const values = bootstrapContextRegistry.values;\n    class BootstrapContext$ extends BootstrapContext {\n        constructor() {\n            super();\n            this.get = values.get;\n            this.whenReady = stage.read.do(valueOn(bsStage => !!bsStage && this), onceOn);\n            bootstrapContextRegistry.provide({ a: DefaultNamespaceAliaser, by: newNamespaceAliaser });\n            bootstrapContextRegistry.provide({ a: BootstrapContext, is: this });\n        }\n        whenDefined(componentType) {\n            return whenDefined(this, componentType);\n        }\n        load(feature, user) {\n            const module = FeatureModule.of(feature);\n            const supply = bootstrapContextRegistry.provide(module);\n            if (user) {\n                supply.needs(user);\n            }\n            else {\n                user = supply;\n            }\n            const use = this.get(module).use(user);\n            const read = FeatureRef$read(feature, use);\n            return {\n                read,\n                whenReady: read.do(valueOn_(status => status.ready && status), onceOn),\n                [AfterEvent__symbol]: valueProvider(read),\n                supply,\n            };\n        }\n    }\n    const bootstrapContext = new BootstrapContext$();\n    return {\n        bootstrapContext,\n        complete() {\n            stage.it = 1 /* Ready */;\n        },\n    };\n}\nfunction FeatureRef$read(feature, use) {\n    const status = trackValue({ feature, ready: false });\n    use.read(({ module, ready }) => {\n        const feature = module.feature;\n        const lastStatus = status.it;\n        if (!lastStatus || lastStatus.feature !== feature || lastStatus.ready !== ready) {\n            status.it = {\n                feature,\n                ready,\n            };\n        }\n    }).needs(use);\n    status.supply.needs(use);\n    return status.read;\n}\n\n/**\n * A path to sub-state containing element an attributes.\n *\n * Thus, an attribute state path is always something like `[AttributePath__root, 'attribute-name']`.\n *\n * @category Feature\n */\nconst AttributePath__root = ( /*#__PURE__*/Symbol('attribute'));\n/**\n * Constructs a named attribute state path.\n *\n * @category Feature\n * @param name - Target attribute name.\n *\n * @return Attribute state path.\n */\nfunction attributePathTo(name) {\n    return [AttributePath__root, name];\n}\n\n/**\n * @internal\n */\nfunction attributeStateUpdate(name, updateState = true) {\n    if (updateState === false) {\n        return noop;\n    }\n    if (updateState === true || typeof updateState === 'function') {\n        const path = attributePathTo(name);\n        const update = updateState === true ? updateAttributeState : updateState;\n        return (component, newValue, oldValue) => update(component, path, newValue, oldValue);\n    }\n    return (component, newValue, oldValue) => updateAttributeState(component, updateState, newValue, oldValue);\n}\nfunction updateAttributeState(component, path, newValue, oldValue) {\n    ComponentContext.of(component).updateState(path, newValue, oldValue);\n}\n\n/**\n * @internal\n */\nfunction parseAttributeDescriptor(target, propertyKey, def) {\n    let name;\n    let change;\n    if (typeof def === 'string') {\n        name = hyphenateDecapName(def);\n        change = attributeStateUpdate(name);\n    }\n    else {\n        if (def && def.name) {\n            name = hyphenateDecapName(def.name);\n        }\n        else if (typeof propertyKey !== 'string') {\n            throw new TypeError('Attribute name is required as property key is not a string: '\n                + `${target.constructor.name}.prototype.${String(propertyKey)}`);\n        }\n        else {\n            name = hyphenateDecapName(propertyKey);\n        }\n        change = attributeStateUpdate(name, def && def.updateState);\n    }\n    return { name, change };\n}\n\n/**\n * A key of component definition context value containing {@link AttributeRegistry attribute registry}.\n *\n * @category Feature\n */\nconst AttributeRegistry = (\n/*#__PURE__*/ new SingleContextKey('attribute-registry', {\n    byDefault(context) {\n        return new AttributeRegistry$(context.get(DefinitionContext));\n    },\n}));\n/**\n * @internal\n */\nclass AttributeRegistry$ {\n    constructor(_context) {\n        this._context = _context;\n        this.attrs = new Map();\n        _context.whenReady(({ elementType }) => this.define(elementType));\n        _context.whenComponent(context => {\n            if (context.mounted) {\n                // Mount element attributes\n                this.mount(context);\n            }\n        });\n    }\n    declareAttribute({ name, change }) {\n        this.attrs.set(name, mergeFunctions(this.attrs.get(name), change));\n    }\n    define(elementType) {\n        const { attrs } = this;\n        if (!attrs.size) {\n            return; // No attributes defined\n        }\n        Reflect.defineProperty(elementType, 'observedAttributes', {\n            configurable: true,\n            enumerable: true,\n            value: observedAttributes(elementType, [...attrs.keys()]),\n        });\n        Reflect.defineProperty(elementType.prototype, 'attributeChangedCallback', {\n            configurable: true,\n            enumerable: true,\n            value: attributeChangedCallback(elementType, attrs),\n        });\n    }\n    mount(context) {\n        const { element } = context;\n        const { attrs } = this;\n        const attributeFilter = [...attrs.keys()];\n        if (!attributeFilter.length) {\n            return; // No attributes defined\n        }\n        const MutationObserver = this._context.get(BootstrapWindow).MutationObserver;\n        const observer = new MutationObserver(records => records.forEach(record => {\n            const attributeName = record.attributeName;\n            return attrs.get(attributeName)(context.component, element.getAttribute(attributeName), record.oldValue);\n        }));\n        observer.observe(element, {\n            attributes: true,\n            attributeFilter,\n            attributeOldValue: true,\n        });\n    }\n}\n/**\n * @internal\n */\nfunction observedAttributes(elementType, attrs) {\n    const alreadyObserved = elementType.observedAttributes;\n    if (Array.isArray(alreadyObserved)) {\n        const newAttrs = new Set(alreadyObserved);\n        attrs.forEach(attr => newAttrs.add(attr));\n        attrs = [...newAttrs];\n    }\n    return attrs;\n}\n/**\n * @internal\n */\nfunction attributeChangedCallback(elementType, attrs) {\n    const prevCallback = elementType.prototype.attributeChangedCallback;\n    if (!prevCallback) {\n        return function (name, oldValue, newValue) {\n            ComponentSlot.of(this).whenReady(({ component }) => {\n                attrs.get(name)(component, newValue, oldValue);\n            });\n        };\n    }\n    return function (name, oldValue, newValue) {\n        const attrChanged = attrs.get(name);\n        if (attrChanged) {\n            ComponentSlot.of(this).whenReady(({ component }) => attrChanged(component, newValue, oldValue));\n        }\n        else {\n            prevCallback.call(this, name, oldValue, newValue);\n        }\n    };\n}\n\n/**\n * Creates an amendment (and decorator) of component property that accesses custom element's attribute.\n *\n * The amended property accesses corresponding attribute on read, and updates it on setting. `null` value corresponds\n * to absent attribute. Setting to `null` or `undefined` removes corresponding attribute.\n *\n * @category Feature\n * @typeParam TClass - Amended component class type.\n * @typeParam TAmended - Amended component member entity type.\n * @param def - Attribute definition or just an attribute name (either _camelCase_ or _dash-style_).\n *\n * @return New component property amendment.\n */\nfunction Attribute(def) {\n    return ComponentMember(({ amendedClass, key, set: setValue, amend, }) => {\n        const { name, change } = parseAttributeDescriptor(amendedClass.prototype, key, def);\n        amend({\n            componentDef: {\n                define(defContext) {\n                    defContext.get(AttributeRegistry).declareAttribute({\n                        name,\n                        change(component, newValue, oldValue) {\n                            setValue(component, newValue);\n                            change(component, newValue, oldValue);\n                        },\n                    });\n                },\n            },\n            get(component) {\n                return ComponentContext.of(component).element.getAttribute(name);\n            },\n            set(component, newValue) {\n                const { element } = ComponentContext.of(component);\n                if (newValue != null) {\n                    element.setAttribute(name, newValue);\n                }\n                else {\n                    element.removeAttribute(name);\n                }\n                setValue(component, newValue);\n            },\n        });\n    });\n}\n\n/**\n * Creates a component method amendment (and decorator) for custom element attribute {@link AttributeDef.ChangeMethod\n * change callback}.\n *\n * Example:\n * ```TypeScript\n * @Component('my-component')\n * class MyComponent {\n *\n *   @AttributeChanged('my-attribute')\n *   myAttributeChanged(newValue: string, oldValue: string | null) {\n *     console.log(`my-attribute value changed from ${oldValue} to ${newValue}`);\n *   }\n *\n * }\n * ```\n *\n * @category Feature\n * @typeParam TClass - Amended component class type.\n * @typeParam TAmended - Amended component member entity type.\n * @param def - Attribute definition or just an attribute name.\n *\n * @return New component method amendment.\n */\nfunction AttributeChanged(def) {\n    return ComponentMember(({ amendedClass, get, key, amend }) => {\n        const { name, change } = parseAttributeDescriptor(amendedClass.prototype, key, def);\n        amend({\n            componentDef: {\n                define(defContext) {\n                    defContext.get(AttributeRegistry).declareAttribute({\n                        name,\n                        change(component, newValue, oldValue) {\n                            const callback = get(component);\n                            callback.call(component, newValue, oldValue);\n                            change(component, newValue, oldValue);\n                        },\n                    });\n                },\n            },\n        });\n    });\n}\n\n/**\n * Creates a component amendment (and decorator) that declares supported attributes of component's element.\n *\n * @category Feature\n * @typeParam TClass - Amended component class type.\n * @typeParam TAmended - Amended component entity type.\n * @param items - Attributes definition options.\n *\n * @returns New component amendment and decorator.\n */\nfunction Attributes(...items) {\n    return Component({\n        define(defContext) {\n            const registry = defContext.get(AttributeRegistry);\n            for (const item of items) {\n                if (typeof item === 'string') {\n                    const name = hyphenateDecapName(item);\n                    registry.declareAttribute({\n                        name,\n                        change: attributeStateUpdate(name),\n                    });\n                }\n                else {\n                    for (const [key, updateState] of Object.entries(item)) {\n                        const name = hyphenateDecapName(key);\n                        registry.declareAttribute({\n                            name,\n                            change: attributeStateUpdate(name, updateState),\n                        });\n                    }\n                }\n            }\n        },\n    });\n}\n\nclass ComponentStateKey extends SimpleContextKey {\n    constructor() {\n        super('component-state');\n    }\n    grow(slot) {\n        const provided = slot.seed();\n        let state;\n        if (provided != null) {\n            state = provided;\n            slot.insert(state);\n        }\n        else if (slot.hasFallback) {\n            return;\n        }\n        else {\n            state = new ComponentState();\n            slot.context.get(ComponentContext).supply.whenOff(reason => state.done(reason));\n            slot.insert(state);\n        }\n        slot.setup(({ registry }) => {\n            registry.provide({ a: StateUpdater, is: state.update });\n        });\n    }\n}\n/**\n * @internal\n */\nconst ComponentState__key = ( /*#__PURE__*/new ComponentStateKey());\n/**\n * Component state tracker.\n *\n * @category Feature\n */\nclass ComponentState extends StateTracker {\n    static get [ContextKey__symbol]() {\n        return ComponentState__key;\n    }\n}\n\n/**\n * A path to sub-state containing component state properties.\n *\n * Thus a property state path is always something like `[StatePropertyPath__root, 'property-name']`.\n *\n * @category Feature\n */\nconst StatePropertyPath__root = ( /*#__PURE__*/Symbol('StateProperty'));\n/**\n * Constructs a named component property state path.\n *\n * @category Feature\n * @typeParam TKey - Target property key type.\n * @param key - Target property key.\n *\n * @return DOM property state path.\n */\nfunction statePropertyPathTo(key) {\n    return [StatePropertyPath__root, key];\n}\n\n/**\n * @internal\n */\nfunction statePropertyUpdate(propertyKey, updateState = true) {\n    if (updateState === true || typeof updateState === 'function') {\n        const path = statePropertyPathTo(propertyKey);\n        const update = updateState === true ? updateStatePropertyState : updateState;\n        return (component, newValue, oldValue) => update(component, path, newValue, oldValue);\n    }\n    return (component, newValue, oldValue) => {\n        if (newValue !== oldValue) {\n            ComponentContext.of(component).updateState(updateState, newValue, oldValue);\n        }\n    };\n}\nfunction updateStatePropertyState(component, path, newValue, oldValue) {\n    if (newValue !== oldValue) {\n        ComponentContext.of(component).updateState(path, newValue, oldValue);\n    }\n}\n\n/**\n * Creates an amendment (and decorator) of component member representing a property of component state.\n *\n * Once such property updated, the component state is {@link ComponentContext.updateState also updated}.\n *\n * @category Feature\n * @typeParam TValue - Amended member value type\n * @typeParam TClass - Amended component class type.\n * @typeParam TUpdate - Amended member update type accepted by its setter.\n * @typeParam TAmended - Amended component member entity type.\n * @param def - Custom element property definition.\n *\n * @returns New component member decorator.\n */\nfunction StateProperty({ updateState } = {}) {\n    return ComponentMember(({ key, get, set, amend }) => {\n        if (updateState !== false) {\n            const update = statePropertyUpdate(key, updateState);\n            amend({\n                get,\n                set(component, newValue) {\n                    const oldValue = get(component);\n                    set(component, newValue);\n                    update(component, newValue, oldValue);\n                },\n            });\n        }\n    });\n}\n\nclass StatePropertyTracker extends ValueTracker {\n    constructor(_context, key, path) {\n        super();\n        this._context = _context;\n        this.supply = new Supply();\n        this._key = key;\n        this.on = _context.get(ComponentState).track(path).onUpdate.do(translateOn((send, _path, newValue, oldValue) => send(newValue, oldValue)), supplyOn(this));\n    }\n    get it() {\n        return this._context.component[this._key];\n    }\n    set it(value) {\n        if (!this.supply.isOff) {\n            this._context.component[this._key] = value;\n        }\n    }\n}\n/**\n * Creates a tracker of component state value.\n *\n * @category Feature\n * @typeParam T - A type of state property value.\n * @param context - Target component context.\n * @param key - Property key.\n * @param path - Property state path.\n *\n * @returns New state property value tracker.\n */\nfunction trackStateProperty(context, key, path = statePropertyPathTo(key)) {\n    return new StatePropertyTracker(context, key, path);\n}\n\nclass AttributeTracker extends ValueTracker {\n    constructor(_context, _name, path) {\n        super();\n        this._context = _context;\n        this._name = _name;\n        this.supply = new Supply();\n        this.on = this._context.get(ComponentState).track(path).onUpdate.do(translateOn((send, _path, newValue, oldValue) => send(newValue, oldValue)), supplyOn(this));\n    }\n    get it() {\n        return this._context.element.getAttribute(this._name);\n    }\n    set it(value) {\n        if (!this.supply.isOff) {\n            if (value == null) {\n                this._context.element.removeAttribute(this._name);\n            }\n            else {\n                this._context.element.setAttribute(this._name, value);\n            }\n        }\n    }\n}\n/**\n * Creates a tracker of custom element's attribute value.\n *\n * Requires attribute to be defined. E.g. with {@link Attribute @Attribute}, {@link AttributeChanged @AttributeChanged},\n * or {@link Attributes @Attributes} decorator.\n *\n * @category Feature\n * @param context - Target component context.\n * @param name - Attribute name.\n * @param path - Custom attribute state path.\n *\n * @returns New attribute value tracker.\n */\nfunction trackAttribute(context, name, path = attributePathTo(name)) {\n    return new AttributeTracker(context, name, path);\n}\n\n/**\n * @internal\n */\nfunction domPropertyDescriptor(amended, { propertyKey: key = amended.key, configurable = amended.configurable, enumerable = amended.enumerable, writable = amended.writable, }) {\n    const componentMemberKey = amended.key;\n    const descriptor = {\n        configurable,\n        enumerable,\n        get: function () {\n            var _a;\n            return (_a = ComponentSlot.of(this).rebind()) === null || _a === void 0 ? void 0 : _a.component[componentMemberKey];\n        },\n        set: writable\n            ? function (value) {\n                ComponentSlot.of(this).whenReady(({ component, }) => component[componentMemberKey] = value);\n            }\n            : undefined,\n    };\n    return { key, descriptor };\n}\n\n/**\n * A key of component definition context value containing {@link DomPropertyRegistry DOM property registry}.\n *\n * @category Feature\n */\nconst DomPropertyRegistry = (\n/*#__PURE__*/ new SingleContextKey('dom-property-registry', {\n    byDefault(context) {\n        return new DomPropertyRegistry$(context.get(DefinitionContext));\n    },\n}));\n/**\n * @internal\n */\nclass DomPropertyRegistry$ {\n    constructor(defContext) {\n        this.props = new Map();\n        defContext.whenReady(({ elementType }) => this.define(elementType));\n        defContext.whenComponent(context => {\n            if (context.mounted) {\n                // Mount element properties\n                this.mount(context);\n            }\n        });\n    }\n    declareDomProperty({ key, descriptor }) {\n        this.props.set(key, descriptor);\n    }\n    define(elementType) {\n        const prototype = elementType.prototype;\n        this.props.forEach((desc, key) => {\n            Reflect.defineProperty(prototype, key, desc);\n        });\n    }\n    mount({ element }) {\n        this.props.forEach((desc, key) => {\n            Reflect.defineProperty(element, key, desc);\n        });\n    }\n}\n\n/**\n * A path to sub-state containing DOM properties.\n *\n * Thus a property state path is always something like `[DomPropertyPath__root, 'property-name']`.\n *\n * @category Feature\n */\nconst DomPropertyPath__root = ( /*#__PURE__*/Symbol('DomProperty'));\n/**\n * Constructs a named DOM property state path.\n *\n * @category Feature\n * @typeParam TKey - Property key type.\n * @param key - Target property key.\n *\n * @return DOM property state path.\n */\nfunction domPropertyPathTo(key) {\n    return [DomPropertyPath__root, key];\n}\n\n/**\n * @internal\n */\nfunction domPropertyUpdate(propertyKey, updateState = true) {\n    if (updateState === true || typeof updateState === 'function') {\n        const path = domPropertyPathTo(propertyKey);\n        const update = updateState === true ? updateDomPropertyState : updateState;\n        return (component, newValue, oldValue) => update(component, path, newValue, oldValue);\n    }\n    return (component, newValue, oldValue) => {\n        if (newValue !== oldValue) {\n            ComponentContext.of(component).updateState(updateState, newValue, oldValue);\n        }\n    };\n}\nfunction updateDomPropertyState(component, path, newValue, oldValue) {\n    if (newValue !== oldValue) {\n        ComponentContext.of(component).updateState(path, newValue, oldValue);\n    }\n}\n\n/**\n * Creates component member amendment (and decorator) that declares a property to add to component's element.\n *\n * The value of declared element's property will be read from and written to decorated member.\n *\n * By default does not update component state if property value didn't change.\n *\n * @category Feature\n * @typeParam TValue - Amended member value type\n * @typeParam TClass - Amended component class type.\n * @typeParam TUpdate - Amended member update type accepted by its setter.\n * @typeParam TAmended - Amended component member entity type.\n * @param def - Custom element property definition.\n *\n * @returns New component member decorator.\n */\nfunction DomProperty(def = {}) {\n    return ComponentMember((target) => {\n        const { key, get, amend } = target;\n        let { set } = target;\n        const domDescriptor = domPropertyDescriptor(target, def);\n        if (def.updateState !== false) {\n            const updateState = domPropertyUpdate(key, def.updateState);\n            const setValue = set;\n            set = (component, newValue) => {\n                const oldValue = get(component);\n                setValue(component, newValue);\n                updateState(component, newValue, oldValue);\n            };\n        }\n        amend({\n            componentDef: {\n                define(defContext) {\n                    defContext.get(DomPropertyRegistry).declareDomProperty(domDescriptor);\n                },\n            },\n            get,\n            set,\n        });\n    });\n}\n\n/**\n * @internal\n */\nclass DomPropertyTracker extends ValueTracker {\n    constructor(_context, key, _path) {\n        super();\n        this._context = _context;\n        this._path = _path;\n        this.supply = new Supply();\n        this._key = key;\n        this.on = this._context.get(ComponentState).track(this._path).onUpdate.do(translateOn((send, _path, newValue, oldValue) => send(newValue, oldValue)), supplyOn(this));\n    }\n    get it() {\n        return this._context.element[this._key];\n    }\n    set it(value) {\n        if (!this.supply.isOff) {\n            this._context.element[this._key] = value;\n        }\n    }\n}\n/**\n * Creates a tracker of custom element's DOM property value.\n *\n * Requires property to be defined. E.g. with {@link DomProperty @DomProperty} decorator.\n *\n * @category Feature\n * @typeParam T - A type of DOM property value.\n * @param context - Target component context.\n * @param key - Property key.\n * @param path - Custom property state path.\n *\n * @returns New DOM property value tracker.\n */\nfunction trackDomProperty(context, key, path = domPropertyPathTo(key)) {\n    return new DomPropertyTracker(context, key, path);\n}\n\n/**\n * A root path to sub-states updates to which will be ignored by default.\n *\n * This can be used to create sub-states that won't trigger rendering occasionally, but only when requested explicitly.\n *\n * @category Feature\n */\nconst RenderPath__root = ( /*#__PURE__*/Symbol('render'));\n/**\n * @category Feature\n */\nconst RenderDef = {\n    /**\n     * Builds a trigger issuing rendering updates.\n     *\n     * @param context - Rendered component context.\n     * @param spec - Rendering specifier.\n     *\n     * @returns `OnEvent` sender that sends an event each time the rendering required.\n     */\n    trigger(context, spec = {}) {\n        const { on = [] } = spec;\n        if ((typeof on === 'object' || typeof on === 'function') && isEventSender(on)) {\n            return onSupplied(on).do(supplyOn(context));\n        }\n        const trigger = context\n            .get(ComponentState)\n            .track(on)\n            .onUpdate.do(supplyOn(context));\n        if (Array.isArray(on) && !on.length) {\n            return trigger.do(translateOn_((send, path) => path[0] !== RenderPath__root && send()));\n        }\n        return trigger;\n    },\n};\n\n/**\n * @internal\n */\nclass ComponentRenderCtl$ {\n    constructor(_context) {\n        this._context = _context;\n        const { element } = _context;\n        this._scheduler = _context.get(DocumentRenderKit).contextOf(element).scheduler;\n    }\n    renderBy(renderer, def) {\n        return new ComponentRenderer$State(this, renderer, def).render();\n    }\n    preRenderBy(preRenderer, def) {\n        return new ComponentPreRenderer$State(this, preRenderer, def).render();\n    }\n}\nclass ComponentRenderer$BaseState {\n    constructor(_ctl, _renderer, def = {}) {\n        this._ctl = _ctl;\n        this._renderer = _renderer;\n        this._status = 1 /* Pending */;\n        this._spec = valueByRecipe(def, _ctl._context);\n    }\n    render() {\n        const context = this._ctl._context;\n        const trigger = RenderDef.trigger(context, this._spec);\n        let schedule = shot => {\n            schedule = this._createSchedule();\n            schedule(shot);\n        };\n        const whenConnected = this._spec.when === 'connected';\n        const startRendering = () => this._status /* there is an update to render */\n            && this._scheduleRenderer(schedule);\n        const onUpdate = whenConnected\n            ? () => context.connected && this._scheduleRenderer(schedule)\n            : () => context.settled && this._scheduleRenderer(schedule);\n        this._supply = trigger(onUpdate)\n            .needs(context)\n            .whenOff(() => this._cancel(schedule));\n        (whenConnected ? context.whenConnected : context.whenSettled)(startRendering);\n        return this._supply;\n    }\n    _scheduleRenderer(schedule) {\n        this._status = 2 /* Scheduled */;\n        schedule(execution => this._render(execution));\n    }\n    _createSchedule() {\n        return this._scheduleBy(this._ctl._scheduler);\n    }\n    _scheduleBy(scheduler) {\n        const node = this._ctl._context.element;\n        const schedule = scheduler({ ...this._spec, node });\n        return shot => schedule(execution => drekBuild(() => shot(execution)));\n    }\n    _render(execution) {\n        const rendererExecution = this._createExecution(execution);\n        this._status = 0 /* Complete */;\n        do {\n            const currentRenderer = this._renderer;\n            currentRenderer(rendererExecution);\n            if (this._renderer === currentRenderer) {\n                this._over();\n                break; // The renderer is not updated. Current renderer execution is over.\n            }\n        } while (this._status >= 0); // The rendering could be cancelled by the renderer itself.\n    }\n    _over() {\n        // Renderer execution is over.\n    }\n    _cancel(schedule) {\n        if (this._status === 2 /* Scheduled */) { // Scheduled, but not rendered yet.\n            schedule(noop);\n        }\n        this._status = -1 /* Cancelled */;\n    }\n}\nclass ComponentRenderer$State extends ComponentRenderer$BaseState {\n    _createExecution(execution) {\n        const rendererExecution = {\n            ...execution,\n            postpone(postponed) {\n                execution.postpone(() => postponed(rendererExecution));\n            },\n            supply: this._supply,\n            renderBy: (renderer) => {\n                this._renderer = renderer;\n            },\n        };\n        return rendererExecution;\n    }\n}\nconst ComponentPreRenderer$done = {};\nclass ComponentPreRenderer$State extends ComponentRenderer$BaseState {\n    constructor() {\n        super(...arguments);\n        this._nextRenderer = null;\n    }\n    render() {\n        this._preSupply = new Supply();\n        super.render().needs(this._preSupply).whenOff(reason => {\n            if (reason === ComponentPreRenderer$done) {\n                // Pre-rendering is over.\n                // Delegate to component renderer.\n                this._preSupply.as(this._ctl.renderBy(this._nextRenderer));\n            }\n            else {\n                // Pre-rendering aborted.\n                this._preSupply.off(reason);\n            }\n        });\n        return this._preSupply;\n    }\n    _createSchedule() {\n        const preScheduler = this._ctl._context.get(DefaultPreRenderScheduler);\n        return this._scheduleBy(preScheduler);\n    }\n    _over() {\n        if (this._nextRenderer) {\n            // Signal the pre-rendering is over.\n            this._supply.off(ComponentPreRenderer$done);\n        }\n    }\n    _createExecution(execution) {\n        const preRendererExecution = {\n            ...execution,\n            postpone: postponed => {\n                execution.postpone(() => {\n                    postponed(preRendererExecution);\n                    this._over();\n                });\n            },\n            supply: this._preSupply,\n            renderBy: (renderer) => {\n                this._renderer = renderer;\n                this._nextRenderer = renderer;\n            },\n            preRenderBy: (preRenderer) => {\n                this._renderer = preRenderer;\n            },\n        };\n        return preRendererExecution;\n    }\n}\n\n/**\n * A key of component context value containing {@link ComponentRenderCtl component render control}.\n *\n * @category Feature\n */\nconst ComponentRenderCtl = (\n/*#__PURE__*/ new SingleContextKey('component-render-ctl', {\n    byDefault(values) {\n        const context = values.get(ComponentContext);\n        return new ComponentRenderCtl$(context);\n    },\n}));\n\n/**\n * @internal\n */\nfunction ComponentRenderScheduler$create(context) {\n    const renderCtl = context.get(ComponentRenderCtl);\n    return (opts = {}) => {\n        const recentShot = trackValue(noop);\n        const renderer = execution => {\n            recentShot.it(execution);\n        };\n        renderCtl.renderBy(renderer, { ...opts, on: recentShot.on });\n        return (shot) => {\n            recentShot.it = execution => shot(execution); // Ensure render shot always updated\n        };\n    };\n}\n/**\n * A key of component context value containing {@link ComponentRenderScheduler component render scheduler}.\n *\n * @category Feature\n */\nconst ComponentRenderScheduler = (\n/*#__PURE__*/ new SingleContextKey('component-render-scheduler', {\n    byDefault: ComponentRenderScheduler$create,\n}));\n\n/**\n * Creates a {@link ComponentPreRenderer component pre-renderer} method amendment (and decorator).\n *\n * Enables pre-rendering with {@link ComponentRenderCtl.preRenderBy component render control}.\n *\n * The decorated method accepts a {@link ComponentPreRendererExecution component rendering context} as its only\n * parameter.\n *\n * @category Feature\n * @typeParam TClass - Amended component class type.\n * @typeParam TAmended - Amended component member entity type.\n * @param def - Non-mandatory render definition.\n *\n * @returns New component method amendment.\n */\nfunction PreRender(def) {\n    return ComponentMember(({ get, amend }) => amend({\n        componentDef: {\n            define(defContext) {\n                defContext.whenComponent(context => {\n                    context.whenReady(() => {\n                        const { component } = context;\n                        const preRenderer = get(component).bind(component);\n                        context.get(ComponentRenderCtl).preRenderBy(preRenderer, def);\n                    });\n                });\n            },\n        },\n    }));\n}\n\n/**\n * Creates a {@link ComponentRenderer component renderer} method amendment (and decorator).\n *\n * Enables rendering with {@link ComponentRenderCtl.renderBy component render control}.\n *\n * The decorated method accepts a {@link ComponentRendererExecution component rendering context} as its only parameter.\n *\n * @category Feature\n * @typeParam TClass - Amended component class type.\n * @typeParam TAmended - Amended component member entity type.\n * @param def - Non-mandatory render definition.\n *\n * @returns New component method amendment.\n */\nfunction Render(def) {\n    return ComponentMember(({ get, amend }) => amend({\n        componentDef: {\n            define(defContext) {\n                defContext.whenComponent(context => {\n                    context.whenReady(() => {\n                        const { component } = context;\n                        const renderer = get(component).bind(component);\n                        context.get(ComponentRenderCtl).renderBy(renderer, def);\n                    });\n                });\n            },\n        },\n    }));\n}\n\n/**\n * A key of component context value containing a shadow content root instance.\n *\n * This is only available when the component is decorated with {@link AttachShadow @AttachShadow} decorator.\n *\n * @category Feature\n */\nconst ShadowContentRoot = (\n/*#__PURE__*/ new SingleContextKey('shadow-content-root'));\n\n/**\n * A key of component context value containing a shadow root builder instance.\n *\n * @category Feature\n */\nconst ShadowRootBuilder = (\n/*#__PURE__*/ new FnContextKey('shadow-root-builder', {\n    byDefault() {\n        return attachShadow;\n    },\n}));\nfunction attachShadow(context, init) {\n    return shadowRootOf(context.element, init);\n}\nfunction shadowRootOf(element, init) {\n    const existing = element.shadowRoot;\n    if (existing) {\n        // Shadow root already attached. Using it.\n        return existing;\n    }\n    if ('attachShadow' in element) {\n        return element.attachShadow(init);\n    }\n    return; // Unable to attach shadow root.\n}\n\n/**\n * @internal\n */\nconst defaultShadowContentDef = { mode: 'open' };\n/**\n * Creates a component amendment (and decorator) that attaches shadow root to decorated component instance.\n *\n * @category Feature\n * @typeParam TClass - Amended component class type.\n * @typeParam TAmended - Amended component entity type.\n * @param def - Shadow content root definition. Uses `mode: 'open'` by default.\n *\n * @returns New component amendment and decorator.\n */\nfunction AttachShadow(def = defaultShadowContentDef) {\n    return Component({\n        setup(setup) {\n            setup.perComponent({\n                a: ShadowContentRoot,\n                by(ctx) {\n                    return ctx.get(ShadowRootBuilder)(ctx, def);\n                },\n            });\n            setup.perComponent({\n                a: ContentRoot,\n                by(context) {\n                    return context.get(ShadowContentRoot, { or: null });\n                },\n            });\n        },\n    });\n}\n\nexport { AttachShadow, Attribute, AttributeChanged, AttributePath__root, AttributeRegistry, Attributes, BootstrapContext, BootstrapRoot, BootstrapWindow, Component, ComponentContext, ComponentContext__symbol, ComponentDef, ComponentDef__symbol, ComponentEventDispatcher, ComponentMember, ComponentRenderCtl, ComponentRenderScheduler, ComponentSlot, ComponentSlot__symbol, ComponentState, ContentRoot, CustomElements, DefaultNamespaceAliaser, DefaultPreRenderScheduler, DefaultRenderScheduler, DefinitionContext, DocumentRenderKit, DomProperty as DomMethod, DomProperty, DomPropertyPath__root, DomPropertyRegistry, ElementNaming, Feature, FeatureContext, FeatureDef, FeatureDef__symbol, PreRender, Render, RenderDef, RenderPath__root, ShadowContentRoot, ShadowRootBuilder, StateProperty, StatePropertyPath__root, StateUpdater, Wesib__NS, attributePathTo, bootstrapComponents, bootstrapDefault, domPropertyPathTo, statePropertyPathTo, trackAttribute, trackDomProperty, trackStateProperty };\n//# sourceMappingURL=wesib.js.map\n","import { ContextUpKey, contextDestroyed, FnContextKey, applyContextAfter } from '@proc7ts/context-values/updatable';\nimport { digAfter, afterThe, onSupplied, onEventBy, EventEmitter, onceOn, trackValue, isAfterEvent, translateAfter, deduplicateAfter_, afterAll, digAfter_, translateAfter_, deduplicateAfter, afterEventBy, sendEventsTo, shareAfter, afterValue, AfterEvent__symbol, trackValueBy } from '@proc7ts/fun-events';\nimport { BootstrapWindow, bootstrapDefault, ComponentContext, ComponentRenderCtl, DefaultPreRenderScheduler, ComponentMember, DefaultNamespaceAliaser, BootstrapContext, ComponentSlot } from '@wesib/wesib';\nimport { DomEventDispatcher } from '@frontmeans/dom-events';\nimport { Supply } from '@proc7ts/supply';\nimport { DrekFragment, drekCharger, drekAppender } from '@frontmeans/drek';\nimport { SingleContextKey, ContextKey__symbol, applyContextTo, ContextBuilder__symbol, Contextual__symbol, isContextual } from '@proc7ts/context-values';\nimport { valueByRecipe, lazyValue, arrayOfElements, valueRecipe, noop, valueProvider, valuesProvider } from '@proc7ts/primitives';\nimport { nodeHost } from '@frontmeans/dom-primitives';\nimport { html__naming } from '@frontmeans/namespace-aliaser';\nimport { allAmender, newAmendTarget } from '@proc7ts/amend';\n\nclass FetchAgentKey extends ContextUpKey {\n    constructor(name) {\n        super(name);\n        this.upKey = this.createUpKey(slot => slot.insert(slot.seed.do(digAfter((...agents) => {\n            if (agents.length) {\n                return afterThe(combineFetchAgents(agents));\n            }\n            if (slot.hasFallback && slot.or) {\n                return slot.or;\n            }\n            return afterThe(defaultFetchAgent);\n        }))));\n    }\n    grow(slot) {\n        let delegated;\n        slot.context.get(this.upKey, slot.hasFallback ? { or: slot.or != null ? afterThe(slot.or) : slot.or } : undefined)(agent => delegated = agent).whenOff(reason => delegated = contextDestroyed(reason));\n        slot.insert((next, request) => delegated(next, request));\n    }\n}\nfunction defaultFetchAgent(next, request) {\n    return next(request);\n}\nfunction combineFetchAgents(agents) {\n    return (next, request) => {\n        const fetch = (agentIdx, agentRequest) => {\n            const agent = agents[agentIdx];\n            if (!agent) {\n                return next(agentRequest);\n            }\n            return onSupplied(agent((nextRequest = agentRequest) => fetch(agentIdx + 1, nextRequest), agentRequest));\n        };\n        return fetch(0, request);\n    };\n}\n\n/**\n * A key of context value containing an {@link HttpFetchAgent} instance.\n *\n * The agent returned combines all registered agents into one. If no agent registered it just performs the fetch.\n */\nconst HttpFetchAgent = (\n/*#__PURE__*/ new FetchAgentKey('http-fetch-agent'));\n\nconst HttpFetchAborted = {};\n/**\n * @internal\n */\nfunction newHttpFetch(context) {\n    const window = context.get(BootstrapWindow);\n    const agent = context.get(HttpFetchAgent);\n    return (input, init) => agent(fetch, new Request(input, init));\n    function fetch(request) {\n        return onEventBy(receiver => {\n            const responseEmitter = new EventEmitter();\n            let supply;\n            if ('AbortController' in window) {\n                const abortController = new window.AbortController();\n                const { signal } = abortController;\n                supply = new Supply(reason => {\n                    if (reason === HttpFetchAborted) {\n                        abortController.abort();\n                    }\n                });\n                receiver.supply.whenOff(() => supply.off(HttpFetchAborted)).needs(supply);\n                responseEmitter.on({\n                    supply,\n                    receive(ctx, response) {\n                        receiver.receive(ctx, response);\n                    },\n                });\n                const customSignal = request.signal;\n                if (customSignal) {\n                    new DomEventDispatcher(customSignal)\n                        .on('abort')\n                        .do(onceOn)(() => abortController.abort());\n                    if (customSignal.aborted) {\n                        abortController.abort();\n                    }\n                }\n                request = new Request(request, { signal });\n            }\n            else {\n                supply = responseEmitter.on(receiver);\n            }\n            window.fetch(request)\n                .then(response => {\n                responseEmitter.send(response);\n                supply.off();\n            })\n                .catch(reason => supply.off(reason));\n        });\n    }\n}\n\n/**\n * A key of bootstrap context value containing an {@link HttpFetch} instance.\n */\nconst HttpFetch = (\n/*#__PURE__*/ new FnContextKey('http-fetch', {\n    byDefault: bootstrapDefault(newHttpFetch),\n}));\n\n/**\n * A key of component context value containing {@link FragmentRenderCtl fragment render control}.\n */\nconst FragmentRenderCtl = (\n/*#__PURE__*/ new SingleContextKey('fragment-render-ctl', {\n    byDefault(context) {\n        return new FragmentRenderCtl$(context.get(ComponentContext));\n    },\n}));\nconst RenderFragment$done = {};\nclass FragmentRenderCtl$ {\n    constructor(_context) {\n        this._context = _context;\n    }\n    renderFragmentBy(renderer, def = {}) {\n        const spec = valueByRecipe(def, this._context);\n        const doRenderFragment = spec.settle === false\n            ? RenderFragment$justRender\n            : RenderFragment$settleThenRender;\n        const renderFragment = (fragment, retainContent) => {\n            if (!retainContent) {\n                doRenderFragment(fragment);\n            }\n        };\n        const { target = RenderFragment$defaultTarget } = spec;\n        const getTarget = lazyValue(() => target(this._context));\n        const renderCtl = this._context.get(ComponentRenderCtl);\n        const scheduler = this._context.get(DefaultPreRenderScheduler);\n        const supply = new Supply();\n        const renderSupply = renderCtl.preRenderBy(preExec => {\n            const fragment = new DrekFragment(getTarget(), { scheduler });\n            let retainContent = false;\n            const exec = {\n                ...preExec,\n                supply,\n                fragment,\n                content: fragment.content,\n                postpone(postponed) {\n                    preExec.postpone(() => postponed(exec));\n                },\n                renderBy(renderer) {\n                    preExec.renderBy(renderExec => {\n                        renderExec.renderBy(renderer);\n                    });\n                },\n                retainContent(retain = true) {\n                    retainContent = retain;\n                },\n                done() {\n                    preExec.renderBy(({ supply }) => {\n                        renderSupply.as(supply).off(RenderFragment$done);\n                    });\n                },\n            };\n            renderer(exec);\n            renderFragment(fragment, retainContent);\n        }, spec).needs(supply).whenOff(reason => {\n            if (reason !== RenderFragment$done) {\n                supply.off(reason);\n            }\n        });\n        return supply;\n    }\n}\nfunction RenderFragment$defaultTarget({ contentRoot }) {\n    return drekCharger(drekAppender(contentRoot));\n}\nfunction RenderFragment$settleThenRender(fragment) {\n    const { innerContext } = fragment;\n    const { window } = innerContext;\n    innerContext.scheduler()(() => {\n        window.customElements.upgrade(fragment.content);\n    });\n    fragment.settle();\n    fragment.render();\n}\nfunction RenderFragment$justRender(fragment) {\n    fragment.render();\n}\n\n/**\n * Creates a {@link RenderFragmentDef.Method fragment renderer method} amendment (amd decorator).\n *\n * @typeParam TClass - Amended component class type.\n * @typeParam TAmended - Amended component member entity type.\n * @param def - Non-mandatory rendering definition.\n *\n * @returns New component method amendment.\n */\nfunction RenderFragment(def) {\n    return ComponentMember(({ key, get, amend }) => amend({\n        componentDef: {\n            define(defContext) {\n                defContext.whenComponent(context => {\n                    context.whenReady(() => {\n                        const { component } = context;\n                        const renderer = get(component).bind(component);\n                        context.get(FragmentRenderCtl).renderFragmentBy(renderer, RenderFragment$def(context, key, def));\n                    });\n                });\n            },\n        },\n    }));\n}\nfunction RenderFragment$def(context, key, def = {}) {\n    const spec = valueByRecipe(def, context);\n    const { target = ({ contentRoot }) => drekCharger(drekAppender(contentRoot), RenderFragment$defaultRem(key)) } = spec;\n    return { ...spec, target };\n}\nfunction RenderFragment$defaultRem(key) {\n    const rem = String(key);\n    return rem.startsWith('render') ? rem.substr(6) : rem;\n}\n\n/**\n * A key of {@link ShareRef component share reference} property containing a {@link Share component\n * share} instance.\n */\nconst Share__symbol = ( /*#__PURE__*/Symbol('Share'));\n/**\n * Checks whether the given value is a {@link ShareRef component share reference}.\n *\n * @typeParam T - Shared value type.\n * @typeParam TOther - Another type the value may have.\n * @param value - A value to check.\n *\n * @returns `true` if the value has a {@link Share__symbol} property, or `false` otherwise.\n */\nfunction isShareRef(value) {\n    return !!value\n        && (typeof value === 'object' || typeof value === 'function')\n        && !!value[Share__symbol];\n}\n\nconst ShareRegistry__key = ( /*#__PURE__*/new SingleContextKey('share-registry', {\n    byDefault: bootstrapDefault(bsContext => new ShareRegistry(bsContext.get(DefaultNamespaceAliaser))),\n}));\n/**\n * @internal\n */\nclass ShareRegistry {\n    constructor(nsAlias) {\n        this.nsAlias = nsAlias;\n        this._sharers = new Map();\n    }\n    static get [ContextKey__symbol]() {\n        return ShareRegistry__key;\n    }\n    addSharer(share, componentType, elementName, supply) {\n        let sharers = this._sharers.get(share);\n        if (!sharers) {\n            sharers = Sharers$new();\n            this._sharers.set(share, sharers);\n            Sharers$addSharer(sharers, componentType, supply);\n            Sharers$addName(sharers, elementName, supply);\n        }\n        else {\n            Sharers$addSharer(sharers, componentType, supply);\n            Sharers$addName(sharers, elementName, supply);\n            sharers.it = { ...sharers.it };\n        }\n    }\n    sharers(share) {\n        let sharers = this._sharers.get(share);\n        if (!sharers) {\n            sharers = Sharers$new();\n            this._sharers.set(share, sharers);\n        }\n        return sharers;\n    }\n}\nfunction Sharers$new() {\n    return trackValue({ names: new Map(), sharers: new Map() });\n}\nfunction Sharers$addName(tracker, name, supply) {\n    if (!name) {\n        return;\n    }\n    const sharers = tracker.it;\n    const counter = sharers.names.get(name) || 0;\n    sharers.names.set(name, counter + 1);\n    supply.whenOff(() => {\n        const counter = sharers.names.get(name) - 1;\n        if (counter > 0) {\n            sharers.names.set(name, counter);\n        }\n        else {\n            sharers.names.delete(name);\n        }\n        tracker.it = { ...sharers };\n    });\n}\nfunction Sharers$addSharer(tracker, componentType, supply) {\n    const sharers = tracker.it;\n    const counter = sharers.sharers.get(componentType) || 0;\n    sharers.sharers.set(componentType, counter + 1);\n    supply.whenOff(() => {\n        const counter = sharers.sharers.get(componentType) - 1;\n        if (counter > 0) {\n            sharers.sharers.set(componentType, counter);\n        }\n        else {\n            sharers.sharers.delete(componentType);\n        }\n        tracker.it = { ...sharers };\n    });\n}\n\n/**\n * @internal\n */\nclass ShareKey extends ContextUpKey {\n    constructor(name, _share) {\n        super(`${name}:share`);\n        this._share = _share;\n    }\n    get upKey() {\n        return this;\n    }\n    grow(slot) {\n        slot.insert(slot.seed.do(digAfter((...values) => this._share.selectValue(...values))));\n    }\n}\n\n/**\n * @internal\n */\nconst Share$impl__symbol = ( /*#__PURE__*/Symbol('Share.impl'));\n/**\n * @internal\n */\nclass Share$ {\n    constructor(_share, name, options) {\n        this._share = _share;\n        this.name = name;\n        this.key = new ShareKey(name, _share);\n        this._aliases = arrayOfElements(options.as).map(alias => alias[Share__symbol]);\n    }\n    addSharer(defContext, options = {}) {\n        const { local, name = defContext.elementDef.name } = options;\n        const registry = defContext.get(BootstrapContext).get(ShareRegistry);\n        const supply = new Supply();\n        const { componentType } = defContext;\n        const elementName = local\n            ? undefined\n            : name && html__naming.name(name, registry.nsAlias).toLowerCase();\n        registry.addSharer(this._share, componentType, elementName, supply);\n        for (const alias of this._aliases) {\n            registry.addSharer(alias, componentType, elementName, supply);\n        }\n        return supply;\n    }\n    shareValue(registrar) {\n        registrar.shareAs(this._share);\n        const priorityOffset = registrar.priority + 1;\n        this._aliases.forEach((alias, index) => {\n            alias.shareValue(registrar.withPriority(priorityOffset + index));\n        });\n    }\n}\n\n/**\n * A key of the {@link SharedValue.Detailed detailed shared value descriptor} containing the\n * {@link SharedValue.Details shared value details}.\n */\nconst SharedValue__symbol = ( /*#__PURE__*/Symbol('SharedValue'));\nconst SharedValue = {\n    /**\n     * Checks whether the given value shared by component is has details.\n     *\n     * @typeParam T - Shared value type.\n     * @param value - Shared value to check.\n     *\n     * @returns `true` if the given value is an object implementing a {@link SharedValue.Detailed} interface.\n     */\n    hasDetails(value) {\n        return !!value\n            && typeof value === 'object'\n            && typeof value[SharedValue__symbol] === 'object';\n    },\n};\n\n/**\n * @internal\n */\nfunction SharedValue$ContextBuilder(share, provider) {\n    return {\n        [ContextBuilder__symbol]: registry => {\n            const registrar = share.createRegistrar(registry, provider);\n            share.shareValue(registrar);\n            return registrar.supply;\n        },\n    };\n}\n/**\n * @internal\n */\nfunction SharedValue$Registrar(registry, provider) {\n    return SharedValue$BoundRegistrar(registry, SharedValue$bindProvider(provider));\n}\nfunction SharedValue$BoundRegistrar(registry, provider) {\n    const { priority, supply, provide } = provider;\n    return {\n        priority,\n        supply,\n        shareAs: (alias, newPriority = priority) => {\n            newPriority = Math.max(0, newPriority);\n            registry.provide({\n                a: alias[Share__symbol],\n                by: newPriority\n                    ? SharedValue$detailedProvider(provide, newPriority)\n                    : SharedValue$bareProvider(provide),\n            }).as(supply);\n        },\n        withPriority: newPriority => SharedValue$BoundRegistrar(registry, { ...provider, priority: Math.max(0, newPriority) }),\n    };\n}\nfunction SharedValue$bindProvider(provider) {\n    const priority = provider.priority ? Math.max(0, provider.priority) : 0;\n    const { supply = new Supply() } = provider;\n    return {\n        priority,\n        supply,\n        provide: (context) => {\n            const value = provider.provide(context);\n            if (isAfterEvent(value)) {\n                return value.do(applyContextAfter(context));\n            }\n            return applyContextTo(value)(context);\n        },\n    };\n}\nfunction SharedValue$bareProvider(provider) {\n    return context => {\n        const value = provider(context);\n        if (isAfterEvent(value)) {\n            return value.do(translateAfter((send, value) => value !== undefined ? send(value) : send()));\n        }\n        return value;\n    };\n}\nfunction SharedValue$detailedProvider(provider, priority) {\n    return context => ({\n        [SharedValue__symbol]: {\n            priority,\n            get: () => provider(context),\n        },\n    });\n}\n\n/**\n * A kind of the value a component shares with the nested ones.\n *\n * The sharing implies the following:\n *\n * - The sharer component {@link addSharer registers} its element name as the one bound to sharer.\n * - The sharer component {@link shareValue provides} an (updatable) shared value within its context.\n * - The consumer component {@link valueFor obtains} the shared value by searching the parent element with a sharer\n *   bound to it.\n *\n * A share instance is used as an identifier in all these steps.\n *\n * A {@link Shared @Shared} component property decorator may be used to automate this.\n *\n * @typeParam T - Shared value type.\n */\nclass Share {\n    /**\n     * Constructs new component share.\n     *\n     * @param name - A human-readable name of the share.\n     * @param options - Constructed share options.\n     */\n    constructor(name, options = {}) {\n        this[Share$impl__symbol] = new Share$(this, name, options);\n    }\n    /**\n     * Refers to itself.\n     */\n    get [Share__symbol]() {\n        return this;\n    }\n    /**\n     * A human-readable name of the name.\n     */\n    get name() {\n        return this[Share$impl__symbol].name;\n    }\n    /**\n     * A key of the sharer component context value containing an `AfterEvent` keeper of the shared value.\n     */\n    get [ContextKey__symbol]() {\n        return this[Share$impl__symbol].key;\n    }\n    /**\n     * Registers a sharer component.\n     *\n     * The registration is necessary for consumers to be able to find the element bound to sharer by that element's name.\n     *\n     * @param defContext - The definition context of the sharer component.\n     * @param options - Value sharing options.\n     *\n     * @returns Sharer registration supply. Revokes the sharer registration once cut off.\n     */\n    addSharer(defContext, options) {\n        return this[Share$impl__symbol].addSharer(defContext, options);\n    }\n    /**\n     * Shares a value by providing it for the sharer component context.\n     *\n     * @param registrar - Shared value registrar.\n     *\n     * @return A builder of shared value for component context.\n     */\n    shareValue(registrar) {\n        this[Share$impl__symbol].shareValue(registrar);\n    }\n    /**\n     * Creates a shared value registrar that shares a value created by the given provider.\n     *\n     * @typeParam TSharer - Sharer component type.\n     * @param registry - Target component context registry.\n     * @param provider - Shared value provider.\n     *\n     * @returns New shared value registrar.\n     */\n    createRegistrar(registry, provider) {\n        return SharedValue$Registrar(registry, provider);\n    }\n    /**\n     * Locates a shared value for the consuming component.\n     *\n     * Searches among parent elements for the one bound to the sharer component, then obtains the shared value from\n     * the sharer's context.\n     *\n     * @param consumer - Consumer component context.\n     * @param options - Location options.\n     *\n     * @returns An `AfterEvent` keeper of the shared value and its sharer context, if found.\n     */\n    valueFor(consumer, options = {}) {\n        const { host = nodeHost, local } = options;\n        const sharers = consumer.get(BootstrapContext).get(ShareRegistry).sharers(this);\n        const status = consumer.readStatus.do(deduplicateAfter_((a, b) => a === b, Share$consumerStatus));\n        return afterAll({\n            sharers,\n            status,\n        }).do(digAfter_(({ sharers: [sharers] }) => {\n            if (local) {\n                if (sharers.sharers.has(consumer.componentType)) {\n                    return Share$sharedValue(this, consumer);\n                }\n                if (local === true) {\n                    return afterThe();\n                }\n            }\n            let element = host(consumer.element);\n            while (element) {\n                if (sharers.names.has(element.tagName.toLowerCase())) {\n                    return ComponentSlot.of(element).read.do(digAfter_(sharer => sharer ? Share$sharedValue(this, sharer) : afterThe()));\n                }\n                element = host(element);\n            }\n            return afterThe();\n        }), deduplicateAfter());\n    }\n    /**\n     * Selects a shared value among candidates.\n     *\n     * It is especially useful when the value shared by multiple sharers.\n     *\n     * By default:\n     *\n     * - Prefers bare value.\n     * - Prefers the value from {@link SharedValue.Detailed detailed specifier} with higher priority\n     *   (i.e. lesser {@link SharedValue.Details.priority priority value}).\n     * - Prefers the value declared last.\n     *\n     * @param values - The values shared by sharers. May contain a {@link SharedValue.Detailed detailed value\n     * specifiers} in addition to pure values.\n     *\n     * @returns An `AfterEvent` keeper of selected value, if present.\n     */\n    selectValue(...values) {\n        let selected;\n        for (let i = values.length - 1; i >= 0; --i) {\n            const value = values[i];\n            if (!SharedValue.hasDetails(value)) {\n                return afterThe(value);\n            }\n            const details = value[SharedValue__symbol];\n            if (!selected || selected.priority > details.priority) {\n                selected = details;\n            }\n        }\n        if (!selected) {\n            return afterThe();\n        }\n        return afterEventBy(receiver => {\n            const value = selected.get();\n            if (isAfterEvent(value)) {\n                value(receiver);\n            }\n            else {\n                sendEventsTo(receiver)(value);\n            }\n        }).do(shareAfter);\n    }\n}\nfunction Share$consumerStatus([{ settled, connected }]) {\n    return connected ? 2 : settled ? 1 : 0;\n}\nfunction Share$sharedValue(share, sharer) {\n    return sharer.get(share).do(translateAfter_((send, value) => value ? send(value, sharer) : send()));\n}\n\nfunction shareLocator(locator, defaultSpec = {}) {\n    if (isShareRef(locator)) {\n        const share = locator[Share__symbol];\n        return (consumer, options = {}) => {\n            const { host = defaultSpec.host, local = defaultSpec.local } = options;\n            return share.valueFor(consumer, { host, local });\n        };\n    }\n    if (typeof locator === 'function') {\n        const { host: hostByDefault = nodeHost, local: localByDefault = false, share: shareByDefault, } = defaultSpec;\n        return (consumer, options = {}) => {\n            const { share = shareByDefault, host = hostByDefault, local = localByDefault, } = options;\n            return locator(consumer, { share, host, local });\n        };\n    }\n    const { share: shareRef = defaultSpec.share, host: hostByDefault = defaultSpec.host, local: localByDefault = defaultSpec.local, } = locator || {};\n    const share = shareRef[Share__symbol];\n    return (consumer, options = {}) => {\n        const { host = hostByDefault, local = localByDefault } = options;\n        return share.valueFor(consumer, { host, local });\n    };\n}\n\nconst Shareable$Internals__symbol = ( /*#__PURE__*/Symbol('Shareable.internals'));\n/**\n * Abstract implementation of value shareable by component.\n *\n * Shareable instance contains a {@link body} that become usable only when bound to sharer component.\n *\n * @typeParam TBody - Shareable body type.\n * @typeParam TSharer - Sharer component type.\n */\nclass Shareable {\n    /**\n     * Constructs shareable instance.\n     *\n     * @param body - Either shareable body, or its provider.\n     */\n    constructor(body) {\n        this[Shareable$Internals__symbol] = new Shareable$Internals(this, body);\n    }\n    /**\n     * Converts shareable body or its provider to provider that always returns an `AfterEvent` keeper of shareable body.\n     *\n     * @typeParam TBody - Shareable body type.\n     * @typeParam TSharer - Sharer component type.\n     * @param body - Either shareable body, or its provider.\n     *\n     * @returns Shareable body provider.\n     */\n    static provider(body) {\n        const provider = valueRecipe(body);\n        return context => afterValue(provider(context));\n    }\n    /**\n     * Sharer component context.\n     *\n     * Accessing it throws an exception until bound to sharer.\n     */\n    get sharer() {\n        return this[Shareable$Internals__symbol].sharer();\n    }\n    /**\n     * An `AfterEvent` keeper of shareable body.\n     *\n     * An `[AfterEvent__symbol]` method always returns this value.\n     */\n    get read() {\n        return this[Shareable$Internals__symbol].get().read;\n    }\n    /**\n     * Binds this shareable instance to sharer component.\n     *\n     * @param sharer - Sharer component context.\n     *\n     * @returns `this` instance.\n     */\n    [Contextual__symbol](sharer) {\n        this[Shareable$Internals__symbol].bind(sharer);\n        return this;\n    }\n    [AfterEvent__symbol]() {\n        return this.read;\n    }\n    /**\n     * Shareable body.\n     *\n     * Accessing is throws an exception until bound to sharer.\n     */\n    get body() {\n        return this[Shareable$Internals__symbol].get().it;\n    }\n}\nclass Shareable$Internals {\n    constructor(_source, body) {\n        this._source = _source;\n        this._get = Shareable.provider(body);\n    }\n    sharer() {\n        this._notBound();\n    }\n    get() {\n        this._notBound();\n    }\n    bind(sharer) {\n        this.bind = noop;\n        this.sharer = valueProvider(sharer);\n        this.get = () => {\n            const tracker = trackValueBy(this._get(sharer));\n            this.get = valueProvider(tracker);\n            return tracker;\n        };\n    }\n    _notBound() {\n        throw new TypeError(`${String(this._source)} is not properly shared yet`);\n    }\n}\n\n/**\n * @internal\n */\nclass ShareAccessor {\n    constructor(target, component) {\n        this._get = target.get.bind(undefined, component);\n        this._set = target.writable ? target.set.bind(undefined, component) : noop;\n        this._ctx = ComponentContext.of(component);\n        const value = this._get();\n        let dynSync = false;\n        if (isAfterEvent(value)) {\n            dynSync = true;\n            this.val = trackValueBy(value);\n        }\n        else {\n            this.val = trackValue(value);\n        }\n        this.val.supply.needs(this._ctx);\n        // Bind to context as the very first operation\n        this.val.read(value => isContextual(value) && value[Contextual__symbol](this._ctx));\n        if (dynSync) {\n            this._syncDyn();\n        }\n        else {\n            this._syncVal();\n        }\n    }\n    get() {\n        return (this._valSupply ? this.val.it : this.val.read);\n    }\n    set(value) {\n        if (isAfterEvent(value)) {\n            this.val.by(value);\n            this._syncDyn();\n        }\n        else {\n            this.val.it = value;\n            this._syncVal();\n        }\n    }\n    _syncVal() {\n        if (!this._valSupply) {\n            this._valSupply = this.val.read(value => this._set(value));\n        }\n    }\n    _syncDyn() {\n        if (this._valSupply) {\n            this._valSupply.off();\n            this._valSupply = undefined;\n            this._set(this.val.read);\n        }\n    }\n}\n\n/**\n * Converts arbitrary {@link TargetShare target component share} to its detailed {@link TargetShare.Spec specifier}.\n *\n * @typeParam T - Share value type.\n * @param target\n */\nfunction targetShare(target) {\n    return isShareRef(target) ? { share: target } : target;\n}\n\n/**\n * Creates an amendment (and decorator) of component member that {@link Share shares} its value.\n *\n * The amended member should contain either a static value, or its `AfterEvent` keeper.\n *\n * Applies current component context to {@link Contextual} shared values.\n *\n * @typeParam T - Shared value type.\n * @typeParam TClass - A type of decorated component class.\n * @param share - Target component share.\n * @param amendments - Amendments to apply.\n *\n * @returns New shared member amendment.\n */\nfunction Shared(share, ...amendments) {\n    const { share: { [Share__symbol]: share$default }, local: localShare$default = false } = targetShare(share);\n    return ComponentMember(baseTarget => {\n        const accessorKey = Symbol(`${String(baseTarget.key)}:shared`);\n        let lastTarget = baseTarget;\n        const accessorOf = (component) => component[accessorKey]\n            || (component[accessorKey] = new ShareAccessor(lastTarget, component));\n        const getShared = (component) => accessorOf(component).val.read;\n        const lastAmender = (target) => {\n            lastTarget = target;\n            target.amend({\n                get: component => accessorOf(component).get(),\n                set: target.writable\n                    ? (component, value) => accessorOf(component).set(value)\n                    : undefined,\n                componentDef: {\n                    setup(setup) {\n                        setup.perComponent(SharedValue$ContextBuilder(target.share, {\n                            provide: context => context.onceReady.do(digAfter_(({ component }) => accessorOf(component).val, valuesProvider())),\n                        }));\n                    },\n                    define(defContext) {\n                        target.share.addSharer(defContext, { local: target.localShare });\n                    },\n                },\n            });\n        };\n        allAmender([...amendments, lastAmender])(newAmendTarget({\n            base: {\n                ...baseTarget,\n                share: share$default,\n                localShare: localShare$default,\n                getShared,\n            },\n            amend(base, request = {}) {\n                const { share = base.share, localShare = base.localShare, getShared: $getShared, ...baseRequest } = request;\n                const createBaseTarget = baseTarget.amend(baseRequest);\n                return () => ({\n                    ...createBaseTarget(),\n                    share,\n                    localShare,\n                    getShared,\n                });\n            },\n        }));\n    });\n}\n\nexport { FetchAgentKey, FragmentRenderCtl, HttpFetch, HttpFetchAgent, RenderFragment, Share, Share__symbol, Shareable, Shared, SharedValue, SharedValue__symbol, isShareRef, shareLocator, targetShare };\n//# sourceMappingURL=wesib.generic.js.map\n","/**\n * A `Set` implementation that keeps a delta of changes made to it.\n *\n * @typeParam T - A type of elements of delta set.\n */\nclass DeltaSet extends Set {\n    /**\n     * Constructs new delta set.\n     *\n     * @param values - An iterable of elements be add to constructed delta set. Or `null` to add nothing.\n     */\n    constructor(values) {\n        super();\n        this._added = new Set(values);\n        this._removed = new Set();\n        this._added.forEach(value => this.add(value));\n    }\n    /**\n     * Appends a new element with a specified value to the end of this delta set. Unless the set contains this element\n     * already.\n     *\n     * Records element addition and forgets its removal unless the set contains it already.\n     *\n     * @param value - The value of the element to add.\n     *\n     * @returns `this` delta set.\n     */\n    add(value) {\n        if (!this.has(value)) {\n            this._added.add(value);\n            this._removed.delete(value);\n            super.add(value);\n        }\n        return this;\n    }\n    /**\n     * Removes the specified element from this delta set.\n     *\n     * Records element removal and forgets its addition if removal succeed.\n     *\n     * @param value - The value of the element to remove.\n     *\n     * @returns `true` if element removed successfully; or `false` if this set did not contain the element.\n     */\n    delete(value) {\n        if (super.delete(value)) {\n            this._added.delete(value);\n            this._removed.add(value);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Removes all elements from this delta set.\n     *\n     * Records all elements removal and forgets all elements additions.\n     */\n    clear() {\n        this._added.clear();\n        this.forEach(value => this._removed.add(value));\n        super.clear();\n    }\n    /**\n     * Applies changes to this delta set.\n     *\n     * First removes elements to `remove`. Then appends elements to `add`.\n     *\n     * Records all changes made.\n     *\n     * @param add - An iterable of elements to add.\n     * @param remove - An iterable of elements to remove.\n     *\n     * @returns `this` delta set.\n     */\n    delta(add, remove = []) {\n        deltaSetDeltaReceiver(this)(add, remove);\n        return this;\n    }\n    /**\n     * Replays the changes made to this set in target receiver.\n     *\n     * @param receiver - A receiver of changes delta. E.g. another `Set`.\n     *\n     * @returns `this` delta set.\n     */\n    redelta(receiver) {\n        const receive = typeof receiver === 'function' ? receiver : deltaSetDeltaReceiver(receiver);\n        receive([...this._added], [...this._removed]);\n        return this;\n    }\n    /**\n     * Forgets all changes made to this set.\n     *\n     * Does not alter the set contents.\n     *\n     * @returns `this` delta set.\n     */\n    undelta() {\n        this._added.clear();\n        this._removed.clear();\n        return this;\n    }\n}\n/**\n * @internal\n */\nfunction deltaSetDeltaReceiver(receiver) {\n    return (add, remove) => {\n        for (const removed of remove) {\n            receiver.delete(removed);\n        }\n        for (const added of add) {\n            receiver.add(added);\n        }\n    };\n}\n\nexport { DeltaSet };\n//# sourceMappingURL=delta-set.js.map\n","import { valueProvider, noop, isPresent, arrayOfElements, asis, valuesProvider, isDefined } from '@proc7ts/primitives';\nimport { NamespaceDef, newNamespaceAliaser, isQualifiedName, css__naming } from '@frontmeans/namespace-aliaser';\nimport { newRenderSchedule } from '@frontmeans/render-scheduler';\nimport { AfterEvent__symbol, trackValue, mapAfter_, ValueTracker, EventEmitter, OnEvent__symbol, mapAfter, digAfter, afterAll, translateAfter, translateOn, afterSupplied, isEventKeeper, supplyAfter, afterThe, afterEach, afterSent, mapOn, digAfter_, onceAfter, afterEventBy, shareAfter, EventNotifier } from '@proc7ts/fun-events';\nimport { Supply, neverSupply } from '@proc7ts/supply';\nimport { overElementsOf, filterArray, itsReduction, itsElements, itsEach, overEntries, mapIt, overIterator, PushIterator__symbol, iteratorOf, mapArray, flatMapIt, overNone, overArray, flatMapArray, filterIt, itsEvery, valueArray, reverseArray } from '@proc7ts/push-iterator';\nimport { DomEventDispatcher } from '@frontmeans/dom-events';\nimport { DeltaSet } from '@proc7ts/delta-set';\n\nconst nullInAspect$ = {\n    instance: null,\n    convertTo: noop,\n};\n/**\n * Creates an aspect applied to control with `null` instance value.\n *\n * @category Aspect\n * @typeParam TValue - Input value type.\n * @typeParam TInstance - Aspect instance type.\n *\n * @returns Applied input aspect.\n */\nfunction nullInAspect() {\n    return nullInAspect$;\n}\n/**\n * Creates an aspect applied to control with known instance.\n *\n * An instance remains as is when converted to another control.\n *\n * @category Aspect\n * @typeParam TValue - Input value type.\n * @typeParam TInstance - Aspect instance type.\n * @typeParam instance - Known aspect instance type.\n *\n * @returns Applied input aspect.\n */\nfunction knownInAspect(instance) {\n    return {\n        instance,\n        convertTo(_target) {\n            return this;\n        },\n    };\n}\n/**\n * Creates an aspect applied to control with known inconvertible instance.\n *\n * When converted to another control with the same value, an aspect instance remains as is.\n *\n * When converted to another control with another value, an aspect instance replaced by `null`.\n *\n * @category Aspect\n * @typeParam TValue - Input value type.\n * @typeParam TInstance - Aspect instance type.\n * @typeParam TKind - Aspect application kind.\n * @param control - Target control to apply an aspect to.\n * @param aspectKey - Applied aspect key.\n * @param instance - Known aspect instance type. Defaults to `null`.\n *\n * @returns Applied input aspect.\n */\nfunction inconvertibleInAspect(control, aspectKey, instance = null) {\n    return builtInAspect$(control, aspectKey, valueProvider(null), instance);\n}\n/**\n * Creates an aspect applied to control with built instance.\n *\n * When converted to another control with the same value, an aspect instance remains as is.\n *\n * When converted to another control with another value, an aspect instance is built again with original control\n * passed to the builder as a second parameter.\n *\n * @category Aspect\n * @typeParam TValue - Input value type.\n * @typeParam TInstance - Aspect instance type.\n * @typeParam TKind - Aspect application kind.\n * @param control - Target control to apply an aspect to.\n * @param aspectKey - Applied aspect key.\n * @param build - Aspect instance builder function. Accepts target control and optionally an original one as parameters.\n *\n * @returns Applied input aspect.\n */\nfunction builtInAspect(control, aspectKey, build) {\n    return builtInAspect$(control, aspectKey, build);\n}\nfunction builtInAspect$(control, aspectKey, build, instance, origin) {\n    if (instance === undefined) {\n        instance = build(control, origin);\n    }\n    return {\n        instance,\n        convertTo(target) {\n            return builtInAspect$(target, aspectKey, build, undefined, control);\n        },\n        attachTo(target) {\n            return builtInAspect$(target, aspectKey, build, control.aspect(aspectKey) || build(target));\n        },\n    };\n}\n\n/**\n * A symbol of aspect key property containing a reference to aspect.\n *\n * @category Aspect\n */\nconst InAspect__symbol = ( /*#__PURE__*/Symbol('in-aspect'));\n\n/**\n * Default input-aspects namespace definition.\n *\n * @category Aspect\n */\nconst InputAspects__NS = ( /*#__PURE__*/new NamespaceDef('https://surol.github.io/input-aspects/ns', 'inasp', 'input-aspects'));\n/**\n * @internal\n */\nconst InNamespaceAliaser__aspect = {\n    applyTo() {\n        return knownInAspect(newNamespaceAliaser());\n    },\n};\n/**\n * @category Aspect\n */\nconst InNamespaceAliaser = {\n    get [InAspect__symbol]() {\n        return InNamespaceAliaser__aspect;\n    },\n    /**\n     * Creates input control aspect converter that assigns the given namespace aliaser to converted control.\n     *\n     * @typeParam TValue - Converted control value type.\n     * @param nsAlias - Target namespace aliaser.\n     *\n     * @returns Input control aspect converter.\n     */\n    to(nsAlias) {\n        return {\n            applyAspect(aspect) {\n                return aspect === InNamespaceAliaser__aspect\n                    ? knownInAspect(nsAlias)\n                    : undefined;\n            },\n        };\n    },\n};\n\n/**\n * @internal\n */\nconst InRenderScheduler__aspect = {\n    applyTo() {\n        return knownInAspect(newRenderSchedule);\n    },\n};\n/**\n * @category Aspect\n */\nconst InRenderScheduler = {\n    get [InAspect__symbol]() {\n        return InRenderScheduler__aspect;\n    },\n    /**\n     * Creates input control aspect converter that assigns the given render scheduler to converted control.\n     *\n     * @typeParam TValue - Converted control value type.\n     * @param scheduler - Target DOM render scheduler.\n     *\n     * @returns Input control aspect converter.\n     */\n    to(scheduler) {\n        return {\n            applyAspect(aspect) {\n                return aspect === InRenderScheduler__aspect\n                    ? knownInAspect(scheduler)\n                    : undefined;\n            },\n        };\n    },\n};\n\nconst InRole__aspect = {\n    applyTo(control) {\n        return {\n            instance: new InControlRole(control),\n            convertTo: noop,\n        };\n    },\n};\n/**\n * A role of input control.\n *\n * Contains arbitrary named roles. A special role `'default'` considered active when no other roles activated.\n *\n * Roles may be used to conditionally activate other input aspects of the control.\n *\n * @typeParam TValue - Input value type.\n */\nclass InRole {\n    static get [InAspect__symbol]() {\n        return InRole__aspect;\n    }\n    [AfterEvent__symbol]() {\n        return this.read;\n    }\n}\nclass InRole$Active {\n    constructor(roles) {\n        this.roles = roles;\n        this._activate = noop;\n        this.active = {\n            [Symbol.iterator]() {\n                return roles.keys();\n            },\n            has(role) {\n                return roles.has(role);\n            },\n        };\n    }\n    static create() {\n        const result = new InRole$Active(new Map());\n        result.add('default', true);\n        return result;\n    }\n    modify() {\n        const result = new InRole$Active(this.roles);\n        result._defaultSupply = this._defaultSupply;\n        return result;\n    }\n    add(role, isDefault) {\n        const named = this.roles.get(role);\n        if (named) {\n            // Already active.\n            ++named.active;\n            return;\n        }\n        const supply = new Supply();\n        this.roles.set(role, {\n            active: 1,\n            supply,\n        });\n        if (isDefault) {\n            this._defaultSupply = supply.whenOff(() => {\n                const toRemove = this.roles.get(role);\n                if (!--toRemove.active) {\n                    this.roles.delete(role);\n                }\n            });\n        }\n        else {\n            const defaultSupply = this._defaultSupply;\n            this.activateBy(() => defaultSupply.off());\n        }\n        return supply;\n    }\n    remove(role, reason) {\n        const named = this.roles.get(role);\n        if (--named.active) {\n            // Still active.\n            return;\n        }\n        this.roles.delete(role);\n        this.activateBy(() => named.supply.off(reason));\n    }\n    activateBy(activator) {\n        const prevActivator = this._activate;\n        this._activate = () => {\n            prevActivator();\n            activator();\n        };\n    }\n    activate() {\n        const activator = this._activate;\n        this._activate = noop;\n        activator();\n    }\n}\nclass InControlRole extends InRole {\n    constructor(_control) {\n        super();\n        this._control = _control;\n        this._active = trackValue(InRole$Active.create());\n        this._activators = new Map();\n        this._active.on(active => active.activate());\n        this._active.supply.needs(_control);\n        this.read = this._active.read.do(mapAfter_(({ active }) => active));\n    }\n    add(role) {\n        const active = this._active.it.modify();\n        this._add(active, role);\n        this._active.it = active;\n        return new Supply(reason => {\n            const active = this._active.it.modify();\n            active.remove(role, reason);\n            if (!active.roles.size) {\n                // No more active roles left.\n                // Enable `default` role.\n                this._add(active, 'default', true);\n            }\n            this._active.it = active;\n        });\n    }\n    when(role, activator) {\n        let activators = this._activators.get(role);\n        if (!activators) {\n            activators = new Map();\n            this._activators.set(role, activators);\n        }\n        const supply = new Supply().needs(this._control);\n        activators.set(supply, (control, role, active) => activator(control, role, active).supply.needs(supply));\n        supply.whenOff(() => {\n            activators.delete(supply);\n            if (!activators.size) {\n                this._activators.delete(role);\n            }\n        });\n        const named = this._active.it.roles.get(role);\n        if (named) {\n            // The role already active.\n            // Issue activator immediately.\n            named.supply.cuts(activator(this._control, role, this._active.it.active));\n        }\n        return supply;\n    }\n    _add(active, role, isDefault = false) {\n        const activatedSupply = active.add(role, isDefault);\n        if (activatedSupply) {\n            // Role activated\n            const activators = this._activators.get(role);\n            if (activators) {\n                // Issue activators\n                for (const activator of activators.values()) {\n                    activatedSupply.cuts(activator(this._control, role, this._active.it.active));\n                }\n            }\n        }\n    }\n}\n\n/**\n * @internal\n */\nfunction isAspectKey(value) {\n    return InAspect__symbol in value;\n}\n\n/**\n * @internal\n */\nconst noopInConversion = {\n    applyAspect(_aspect) {\n        return;\n    },\n};\n/**\n * @internal\n */\nfunction noopInConverter() {\n    return noopInConversion;\n}\n\nfunction intoConvertedBy(valueOrAspectConverter, ...converters) {\n    if (!valueOrAspectConverter) {\n        return noopInConverter;\n    }\n    const converter = inConverter(valueOrAspectConverter);\n    if (!converters.length) {\n        return converter;\n    }\n    const aspectConverters = converters.map(inConverter);\n    return (from, to) => {\n        const conversion = converter(from, to);\n        const conversions = overElementsOf([conversion], filterArray(aspectConverters.map(acf => acf(from, to)), isPresent));\n        const applyAspect = itsReduction(conversions, (prev, cv) => cv.applyAspect\n            ? (aspect => prev(aspect) || cv.applyAspect(aspect))\n            : prev, noop);\n        if ( /*#__INLINE__*/isInAspectConversion(conversion)) {\n            return {\n                applyAspect,\n            };\n        }\n        return {\n            set: conversion.set.bind(conversion),\n            get: conversion.get.bind(conversion),\n            applyAspect,\n        };\n    };\n}\n/**\n * Creates converter that combines input aspect converters.\n *\n * @category Converter\n * @typeParam TValue - Input value type.\n * @param aspects - Input aspect converter(s) to combine.\n *\n * @returns Input aspect conversion factory.\n */\nfunction intoConvertedAspects(aspects) {\n    return aspects\n        ? intoConvertedBy(...arrayOfElements(aspects))\n        : intoConvertedBy();\n}\n/**\n * Checks whether the given input control converter converts aspect only.\n *\n * @category Converter\n * @param conversion - Input control conversion to check.\n *\n * @returns `false` if the given conversion has a {@link InConverter.Value.Conversion.set set} method,\n * or `true` if there is no one.\n */\nfunction isInAspectConversion(conversion) {\n    return !conversion.set;\n}\nfunction inConverter(converter) {\n    return typeof converter === 'function' ? converter : valueProvider(converter);\n}\n\n/**\n * @internal\n */\nconst InBuilder$Impl__symbol = ( /*#__PURE__*/Symbol('InBuilder.impl'));\n/**\n * @internal\n */\nclass InBuilder$Impl {\n    constructor() {\n        this._aspectsByKey = new Map();\n        this._commonAspects = undefined;\n        this._setup = undefined;\n    }\n    addAspect(aspect, converter) {\n        const prev = this._aspectsByKey.get(aspect);\n        this._aspectsByKey.set(aspect, prev ? intoConvertedBy(prev, converter) : intoConvertedBy(converter));\n    }\n    addAspects(aspects) {\n        this._commonAspects = this._commonAspects\n            ? intoConvertedBy(this._commonAspects, ...aspects)\n            : intoConvertedBy(...aspects);\n    }\n    setup(setup) {\n        const prev = this._setup;\n        if (prev) {\n            this._setup = control => {\n                prev(control);\n                setup(control);\n            };\n        }\n        else {\n            this._setup = setup;\n        }\n    }\n    build(factory) {\n        const control = factory({ aspects: this._aspects() });\n        // Control setup\n        if (this._setup) {\n            control.setup(this._setup);\n        }\n        return control;\n    }\n    _aspects() {\n        if (this._aspectsByKey.size) {\n            const byKey = intoConvertedByKey(this._aspectsByKey);\n            return this._commonAspects ? intoConvertedBy(byKey, this._commonAspects) : byKey;\n        }\n        return this._commonAspects;\n    }\n}\nfunction intoConvertedByKey(byKey) {\n    return (from, to) => ({\n        applyAspect(aspect) {\n            const converter = byKey.get(aspect);\n            return converter && converter(from, to).applyAspect(aspect);\n        },\n    });\n}\n\nvar _a;\n/**\n * User input control builder.\n *\n * @category Control\n * @typeParam TControl - Control type.\n * @typeParam TValue - Input value type.\n */\nclass InBuilder {\n    constructor() {\n        /**\n         * @internal\n         */\n        this[_a] = new InBuilder$Impl();\n    }\n    /**\n     * Registers an aspect to add to the built control.\n     *\n     * @param aspectKey - A key of aspect to add.\n     * @param converter - An aspect converter to the built control from the {@link inValueOf same-valued one}.\n     *\n     * @returns `this` builder instance.\n     */\n    addAspect(aspectKey, converter) {\n        this[InBuilder$Impl__symbol].addAspect(aspectKey[InAspect__symbol], converter);\n        return this;\n    }\n    /**\n     * Registers arbitrary aspects to add to the built control.\n     *\n     * These aspects always applied after {@link addAspect concrete} ones.\n     *\n     * @param aspects - Input aspects to add. These are aspect converters to the built control from the {@link inValueOf\n     * same-valued one}.\n     *\n     * @returns `this` builder instance.\n     */\n    addAspects(...aspects) {\n        if (aspects.length) {\n            this[InBuilder$Impl__symbol].addAspects(aspects);\n        }\n        return this;\n    }\n    setup(aspectKeyOrSetup, aspectSetup) {\n        if (isAspectKey(aspectKeyOrSetup)) {\n            this[InBuilder$Impl__symbol].setup(control => control.setup(aspectKeyOrSetup, aspectSetup));\n        }\n        else {\n            this[InBuilder$Impl__symbol].setup(aspectKeyOrSetup);\n        }\n        return this;\n    }\n    /**\n     * Builds control.\n     *\n     * @param factory - Control factory.\n     *\n     * @returns New user input control constructed by the given `factory` and set up with configured aspects and setup\n     * procedures.\n     */\n    build(factory) {\n        return this[InBuilder$Impl__symbol].build(factory);\n    }\n}\n_a = InBuilder$Impl__symbol;\n\n/**\n * @internal\n */\nconst InControl$Aspects__symbol = ( /*#__PURE__*/Symbol('InControl.aspects'));\n/**\n * @internal\n */\nclass InControl$Aspects {\n    constructor(control, aspects) {\n        this.control = control;\n        this.aspects = aspects;\n        this._byKey = new Map();\n    }\n    aspect(aspect) {\n        const applied = this._byKey.get(aspect);\n        if (applied) {\n            // Aspect applied already.\n            // Return it.\n            return applied;\n        }\n        const application = this.control._applyAspect(aspect)\n            || aspect.applyTo(this.control);\n        this._byKey.set(aspect, application);\n        return application;\n    }\n}\n\n/**\n * User input control.\n *\n * Maintains input value and various aspects of the user input, such as input focus, validity, etc.\n *\n * @category Control\n * @typeParam TValue - Input value type.\n */\nclass InControl extends ValueTracker {\n    /**\n     * Constructs user input control.\n     *\n     * @param aspects - Input aspects applied by default. These are aspect converters to constructed control from the\n     * {@link inValueOf same-valued one}.\n     */\n    constructor({ aspects, } = {}) {\n        super();\n        const aspectList = arrayOfElements(aspects);\n        this[InControl$Aspects__symbol] = new InControl$Aspects(this, aspectList.length\n            ? intoConvertedAspects(aspectList)(inValueOf(this), this)\n            : noopInConversion);\n    }\n    /**\n     * Retrieves an aspect instance applied to this control.\n     *\n     * If the given `aspect` is not applied yet, then applies it first.\n     *\n     * @typeParam TInstance - Aspect instance type.\n     * @typeParam TKind - Aspect application kind.\n     * @param aspectKey - A key of aspect to apply to this control.\n     *\n     * @returns An applied aspect instance.\n     */\n    aspect(aspectKey) {\n        return this[InControl$Aspects__symbol].aspect(aspectKey[InAspect__symbol]).instance;\n    }\n    setup(aspectKeyOrSetup, aspectSetup) {\n        if (isAspectKey(aspectKeyOrSetup)) {\n            aspectSetup(this.aspect(aspectKeyOrSetup), this);\n        }\n        else {\n            aspectKeyOrSetup(this);\n        }\n        return this;\n    }\n    convert(by, ...and) {\n        return new InControl$Converted(this, intoConvertedBy(by, ...and));\n    }\n    /**\n     * Applies the given aspect to this control in a custom way.\n     *\n     * @typeParam TInstance - Aspect instance type.\n     * @typeParam TKind - Aspect application kind.\n     * @param aspect - An aspect to apply.\n     *\n     * @returns Either applied aspect instance or `undefined` to apply the aspect in standard way (i.e. using\n     * `InAspect.applyTo()` method).\n     */\n    _applyAspect(aspect) {\n        return this[InControl$Aspects__symbol].aspects.applyAspect(aspect);\n    }\n}\n/**\n * @internal\n */\nclass InControl$SameValued extends InControl {\n    constructor(_control) {\n        super();\n        this._control = _control;\n    }\n    get supply() {\n        return this._supply || (this._supply = new Supply(noop).needs(this._control));\n    }\n    get it() {\n        return this._control.it;\n    }\n    set it(value) {\n        this._control.it = value;\n    }\n    get on() {\n        return this._control.on;\n    }\n}\n/**\n * Constructs input control with the same value as another one.\n *\n * The constructed control does not inherit any aspects from original one.\n *\n * @category Control\n * @typeParam TValue - Input value type.\n * @param control - Original control containing the value.\n *\n * @returns New input control that accesses the value of original `control`.\n */\nfunction inValueOf(control) {\n    return new InControl$SameValued(control);\n}\nclass InControl$Converted extends InControl {\n    constructor(src, by) {\n        super();\n        this._on = new EventEmitter();\n        this.supply = new Supply().needs(src);\n        let lastRev = 0;\n        let backward;\n        const conversion = by(src, this);\n        let set;\n        let get;\n        let convertAspect;\n        if ( /*#__INLINE__*/isInAspectConversion(conversion)) {\n            set = asis;\n            get = asis;\n            convertAspect = (aspect) => {\n                const fallback = src[InControl$Aspects__symbol].aspect(aspect);\n                return fallback.attachTo ? fallback.attachTo(this) : fallback.convertTo(this);\n            };\n        }\n        else {\n            set = conversion.set;\n            get = conversion.get;\n            convertAspect = (aspect) => {\n                const fallback = src[InControl$Aspects__symbol].aspect(aspect);\n                return fallback.convertTo(this);\n            };\n        }\n        this._applyAspect = aspect => { var _a; return ((_a = conversion.applyAspect) === null || _a === void 0 ? void 0 : _a.call(conversion, aspect)) || convertAspect(aspect); };\n        this._it = trackValue([set(src.it), 0]);\n        this._it.supply.needs(this.supply);\n        this._it.on(([newValue], [oldValue]) => {\n            if (newValue !== oldValue) {\n                this._on.send(newValue, oldValue);\n            }\n        }).cuts(this._on);\n        src.on(value => {\n            if (value !== backward) {\n                this._it.it = [set(value), ++lastRev];\n            }\n        }).cuts(this);\n        this._it.on(([value, rev]) => {\n            if (rev !== lastRev) {\n                lastRev = rev;\n                backward = get(value);\n                try {\n                    src.it = backward;\n                }\n                finally {\n                    backward = undefined;\n                }\n            }\n        });\n    }\n    get it() {\n        return this._it.it[0];\n    }\n    set it(value) {\n        const [prevValue, prevRev] = this._it.it;\n        if (value !== prevValue) {\n            this._it.it = [value, prevRev + 1];\n        }\n    }\n    get on() {\n        return this._on.on;\n    }\n}\n\n/**\n * @internal\n */\nconst InContainer__aspect = {\n    applyTo(control) {\n        return inconvertibleInAspect(control, InContainer);\n    },\n};\n/**\n * An input control containing other controls.\n *\n * Container is available as an aspect of itself and converted controls with the same value.\n *\n * @category Control\n * @typeParam TValue - Input value type.\n */\nclass InContainer extends InControl {\n    static get [InAspect__symbol]() {\n        return InContainer__aspect;\n    }\n    _applyAspect(aspect) {\n        return aspect === InContainer__aspect\n            ? inconvertibleInAspect(this, InContainer, this)\n            : super._applyAspect(aspect);\n    }\n}\n/**\n * Controls of input container.\n *\n * Allows to track container contents. I.e. nested controls, their additions and removal.\n *\n * Implements `EventSender` interface by sending arrays of added and removed control entries.\n *\n * Implements `EventKeeper` interface by sending container contents instance each time it is changed.\n *\n * @category Control\n */\nclass InContainerControls {\n    [OnEvent__symbol]() {\n        return this.on;\n    }\n    [AfterEvent__symbol]() {\n        return this.read;\n    }\n}\n\n/**\n * @internal\n */\nconst InParents__aspect = {\n    applyTo(control) {\n        return knownInAspect(new InControlParents(control));\n    },\n};\n/**\n * Parents of input control.\n *\n * Reflects all containers the control belongs to. Note that component may belong to multiple containers. Or even\n * to the same container multiple times.\n *\n * Implements `EventSender` interface by sending arrays of parent entries the control is added to and removed from.\n *\n * Implements `EventKeeper` interface by sending a snapshot of all parents each time it is updated.\n *\n * @category Aspect\n */\nclass InParents {\n    static get [InAspect__symbol]() {\n        return InParents__aspect;\n    }\n    [OnEvent__symbol]() {\n        return this.on;\n    }\n    [AfterEvent__symbol]() {\n        return this.read;\n    }\n}\n/**\n * @internal\n */\nclass InControlParents extends InParents {\n    constructor(_control) {\n        super();\n        this._control = _control;\n        this._map = new Map();\n        this._on = new EventEmitter();\n        this._on.supply.needs(this._control);\n        const allParents = () => ({\n            [Symbol.iterator]: () => this._map.keys(),\n        });\n        this.read = this.on.do(mapAfter(allParents, allParents));\n    }\n    add(entry) {\n        const existingSupply = this._map.get(entry);\n        if (existingSupply) {\n            // Parent entry already added. Doing nothing\n            return existingSupply;\n        }\n        // Adding new entry\n        const supply = new Supply(() => {\n            this._map.delete(entry);\n            this._on.send([], [entry]);\n        });\n        this._map.set(entry, supply);\n        this._on.send([entry], []);\n        return supply\n            .needs(this._control)\n            .needs(entry.parent);\n    }\n    get on() {\n        return this._on.on;\n    }\n}\n\n/**\n * @internal\n */\nconst InElement__aspect = {\n    applyTo(control) {\n        return inconvertibleInAspect(control, InElement);\n    },\n};\n/**\n * HTML input element control.\n *\n * It is also available as aspect of itself and converted controls with the same value.\n *\n * @category Control\n * @typeParam TValue - Input value type.\n * @typeParam TElt - A type of input HTML element.\n */\nclass InElement extends InControl {\n    static get [InAspect__symbol]() {\n        return InElement__aspect;\n    }\n    _applyAspect(aspect) {\n        return aspect === InElement__aspect\n            ? inconvertibleInAspect(this, InElement, this)\n            : super._applyAspect(aspect);\n    }\n}\n\n/**\n * @internal\n */\nconst InMode__aspect = {\n    applyTo(control) {\n        return builtInAspect(control, InMode, ctrl => new InControlMode(ctrl));\n    },\n};\n/**\n * Input mode aspect of control.\n *\n * Control can be either enabled, disabled, or readonly.\n *\n * Each control maintains its own state, while nested controls respect container ones. I.e. when container is disabled\n * all nested ones are also disabled. When container is readonly, all nested ones are also readonly, unless explicitly\n * disabled.\n *\n * When applied to input element this aspect maintains its `disabled` and `readonly` attributes (not properties!).\n *\n * Implements `EventSender` interface by sending new and old mode values on each update.\n *\n * Implements `EventKeeper` interface by sending actual mode value.\n *\n * @category Aspect\n */\nclass InMode {\n    static get [InAspect__symbol]() {\n        return InMode__aspect;\n    }\n    [OnEvent__symbol]() {\n        return this.on;\n    }\n    [AfterEvent__symbol]() {\n        return this.read;\n    }\n    /**\n     * Checks whether control in the given `mode` has data to submit.\n     *\n     * @param mode - Input control mode to check.\n     *\n     * @returns `true` if control in the given `mode` has data to submit, or `false` otherwise.\n     */\n    static hasData(mode) {\n        return mode !== 'off' && mode[0] !== '-';\n    }\n    /**\n     * Unregisters all receivers.\n     *\n     * @param reason - Optional reason.\n     *\n     * @returns `this` instance.\n     */\n    done(reason) {\n        this.own.supply.off(reason);\n        return this;\n    }\n}\n/**\n * @internal\n */\nclass OwnModeTracker extends ValueTracker {\n    constructor(element) {\n        super();\n        this._tracker = trackValue(element ? initialInMode(element.element) : 'on');\n    }\n    get supply() {\n        return this._tracker.supply;\n    }\n    get it() {\n        return this._tracker.it;\n    }\n    set it(value) {\n        switch (value) {\n            case 'off':\n            case 'ro':\n            case '-on':\n            case '-ro':\n                break;\n            default:\n                value = 'on'; // Correct the value.\n        }\n        this._tracker.it = value;\n    }\n    get on() {\n        return this._tracker.on;\n    }\n}\n/**\n * @internal\n */\nclass DerivedInModes {\n    constructor() {\n        this._all = new Set();\n        this._on = new EventEmitter();\n        const sources = afterSent(this._on.on.do(mapOn(() => this._all)), valuesProvider(this._all));\n        this.read = sources.do(digAfter_((set) => afterEach(...set)), mapAfter(mergeInModes));\n    }\n    add(source) {\n        const supply = new Supply(() => {\n            this._all.delete(source);\n            this._on.send();\n        });\n        this._all.add(source);\n        this._on.send();\n        return supply;\n    }\n}\n/**\n * @internal\n */\nclass InControlMode extends InMode {\n    constructor(_control) {\n        super();\n        this._control = _control;\n        this._derived = new DerivedInModes();\n        const element = _control.aspect(InElement);\n        this.own = new OwnModeTracker(element);\n        this.own.supply.needs(_control);\n        this.derive(_control.aspect(InParents).read.do(digAfter(parentsInMode)));\n        let last = 'on';\n        this.read = afterAll({\n            derived: this._derived.read,\n            own: this.own,\n        }).do(translateAfter((send, { derived: [derived], own: [own], }) => {\n            let next;\n            if (own === 'off' || derived === 'off') {\n                next = 'off';\n            }\n            else {\n                let off = false;\n                if (own[0] === '-') {\n                    off = true;\n                    own = own.substring(1);\n                }\n                if (derived[0] === '-') {\n                    off = true;\n                    derived = derived.substring(1);\n                }\n                next = derived === 'ro' ? 'ro' : own;\n                if (off) {\n                    next = '-' + next;\n                }\n            }\n            if (last !== next) {\n                send(last = next);\n            }\n        }, valuesProvider(last)));\n        let lastUpdate = 'on';\n        this.on = this.read.do(translateOn((send, value) => {\n            const old = lastUpdate;\n            if (old !== value) {\n                send(lastUpdate = value, old);\n            }\n        }));\n        if (element) {\n            this.read(value => applyInMode(element.element, value));\n        }\n    }\n    derive(source) {\n        return this._derived.add(afterSupplied(isEventKeeper(source) ? source : source(this._control)).do(supplyAfter(this._control))).needs(this._control);\n    }\n}\n/**\n * @internal\n */\nfunction initialInMode(element) {\n    return element.getAttribute('disabled') != null\n        ? 'off'\n        : (element.getAttribute('readonly') != null ? 'ro' : 'on');\n}\n/**\n * @internal\n */\nfunction applyInMode(element, value) {\n    switch (value) {\n        case 'off':\n            element.setAttribute('disabled', '');\n            break;\n        case 'ro':\n        case '-ro':\n            // Workaround of https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n            element.setAttribute('disabled', '');\n            element.removeAttribute('disabled');\n            element.setAttribute('readonly', '');\n            break;\n        default:\n            // Workaround of https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n            element.setAttribute('disabled', '');\n            element.removeAttribute('disabled');\n            // Workaround of https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n            element.setAttribute('readonly', '');\n            element.removeAttribute('readonly');\n    }\n}\n/**\n * @internal\n */\nfunction parentsInMode(parents) {\n    const parentList = itsElements(parents);\n    if (!parentList.length) {\n        return afterThe('on');\n    }\n    const parentModes = parentList.map(({ parent }) => parent.aspect(InMode));\n    return afterEach(...parentModes).do(mapAfter(mergeInModes));\n}\n/**\n * @internal\n * @param modes\n */\nfunction mergeInModes(...modes) {\n    return inModeValue(...overElementsOf(...modes));\n}\n/**\n * Merges multiple input mode values.\n *\n * @category Aspect\n * @param modes - Input mode values to merge.\n *\n * @returns Merged input mode value.\n */\nfunction inModeValue(...modes) {\n    let ro = false;\n    let off = false;\n    for (const mode of modes) {\n        switch (mode) {\n            case 'off':\n                return 'off';\n            case 'ro':\n                ro = true;\n                break;\n            case '-on':\n                off = true;\n                break;\n            case '-ro':\n                off = true;\n                ro = true;\n                break;\n        }\n    }\n    return off ? (ro ? '-ro' : '-on') : (ro ? 'ro' : 'on');\n}\n\n/**\n * @internal\n */\nconst InData__aspect = {\n    applyTo(control) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return builtInAspect(control, InData, (ctrl) => afterAll({\n            value: ctrl,\n            mode: ctrl.aspect(InMode),\n        }).do(mapAfter(({ value: [value], mode: [mode] }) => InMode.hasData(mode)\n            ? value\n            : undefined)));\n    },\n};\n/**\n * @category Aspect\n */\nconst InData = {\n    get [InAspect__symbol]() {\n        return InData__aspect;\n    },\n};\n\n/**\n * @internal\n */\nconst InGroup__aspect = {\n    applyTo(control) {\n        return inconvertibleInAspect(control, InGroup);\n    },\n};\n/**\n * A group of input controls.\n *\n * Nested controls are identified by keys and can be added and removed via `controls` property.\n *\n * Group value (called model) is an object formed by nested control values. The model property value is the one of the\n * control with the same key, if present. When model is updated corresponding controls are also updated.\n *\n * Group is available as an aspect of itself and converted controls with the same value.\n *\n * @category Control\n * @typeParam TModel - Group model type, i.e. its value type.\n */\nclass InGroup extends InContainer {\n    static get [InAspect__symbol]() {\n        return InGroup__aspect;\n    }\n    _applyAspect(aspect) {\n        return aspect === InGroup__aspect\n            ? inconvertibleInAspect(this, InGroup, this)\n            : super._applyAspect(aspect);\n    }\n}\n/**\n * Input group controls.\n *\n * @category Control\n * @typeParam TModel - Group model type, i.e. its value type.\n */\nclass InGroupControls extends InContainerControls {\n    /**\n     * Removes input control with the given key.\n     *\n     * Calling this method is the same as calling `set(key, undefined)`\n     *\n     * @param key - A key of input control to remove. I.e. corresponding model property key.\n     */\n    remove(key) {\n        this.set(key, undefined);\n    }\n}\n/**\n * @internal\n */\nconst inControlReplacedReason$1 = {};\n/**\n * @internal\n */\nclass InGroupSnapshot {\n    constructor(_map) {\n        this._map = _map;\n        this._it = mapIt(overIterator(() => this._map.values()), ([control]) => control);\n        this._entriesIt = mapIt(this._map, ([key, [control]]) => [key, control]);\n    }\n    get(key) {\n        const entry = this._map.get(key);\n        return entry && entry[0];\n    }\n    [Symbol.iterator]() {\n        return this[PushIterator__symbol]();\n    }\n    [PushIterator__symbol](accept) {\n        return this._it[PushIterator__symbol](accept);\n    }\n    entries() {\n        return iteratorOf(this._entriesIt);\n    }\n}\n/**\n * @internal\n */\nclass InGroupMap {\n    constructor(_controls) {\n        this._controls = _controls;\n        this._supply = new Supply();\n        this._map = new Map();\n    }\n    set(key, control, added, removed) {\n        const replaced = this._map.get(key);\n        let supply;\n        if (control) {\n            supply = new Supply();\n            const entry = this.newEntry(key, control, supply);\n            let sendUpdate = true;\n            if (replaced) {\n                if (replaced[0] === control) {\n                    // Do not send update when replacing control with itself\n                    sendUpdate = false;\n                }\n                else {\n                    removed.push([key, replaced]);\n                }\n            }\n            if (sendUpdate) {\n                this.modify().set(key, entry);\n                added.push([key, entry]);\n            }\n            else {\n                this._map.set(key, entry);\n            }\n        }\n        else {\n            supply = neverSupply();\n            if (replaced) {\n                removed.push([key, replaced]);\n                this.modify().delete(key);\n            }\n        }\n        if (replaced) {\n            replaced[1].off(inControlReplacedReason$1);\n        }\n        return supply;\n    }\n    newEntry(key, control, supply) {\n        return [\n            control,\n            new Supply(reason => {\n                if (reason !== inControlReplacedReason$1) {\n                    this._controls.remove(key);\n                }\n            })\n                .needs(this._supply)\n                .needs(supply)\n                .whenOff(reason => supply.off(reason === inControlReplacedReason$1 ? undefined : reason)),\n        ];\n    }\n    modify() {\n        if (this._shot) {\n            const map = new Map();\n            itsEach(this._map.entries(), ([k, e]) => map.set(k, e));\n            this._shot = undefined;\n            this._map = map;\n        }\n        return this._map;\n    }\n    snapshot() {\n        return this._shot || (this._shot = new InGroupSnapshot(this._map));\n    }\n    clear() {\n        const added = [];\n        const removed = [];\n        itsEach(this._map.keys(), key => this.set(key, undefined, added, removed));\n        return removed;\n    }\n}\n/**\n * @internal\n */\nclass InGroupControlControls extends InGroupControls {\n    constructor(_group) {\n        super();\n        this._group = _group;\n        this._updates = new EventEmitter();\n        const applyModelToControls = (model) => {\n            this.read.do(onceAfter)(snapshot => {\n                const withValues = new Set();\n                itsEach(overEntries(model), ([key, value]) => {\n                    withValues.add(key);\n                    const control = snapshot.get(key);\n                    if (control) {\n                        control.it = value;\n                    }\n                });\n                itsEach(snapshot.entries(), ([key, control]) => {\n                    if (!withValues.has(key)) {\n                        control.it = undefined;\n                    }\n                });\n            });\n        };\n        this._map = new InGroupMap(this);\n        this.on = this._updates.on.do(translateOn((send, added, removed) => send(added.map(controlEntryToGroupEntry), removed.map(controlEntryToGroupEntry))));\n        const takeSnapshot = this._map.snapshot.bind(this._map);\n        this.read = this._updates.on.do(mapAfter(takeSnapshot, takeSnapshot));\n        this._map._supply.needs(_group.read(applyModelToControls));\n    }\n    set(keyOrControls, newControl) {\n        const group = this._group;\n        const added = [];\n        const removed = [];\n        let supply;\n        if (typeof keyOrControls === 'object') {\n            supply = new Supply();\n            itsEach(overEntries(keyOrControls), ([key, value]) => {\n                this._map.set(key, value, added, removed).needs(supply);\n            });\n        }\n        else {\n            supply = this._map.set(keyOrControls, newControl, added, removed);\n        }\n        if (added.length || removed.length) {\n            this._updates.send(added, removed);\n            if (added.length) {\n                applyControlsToModel();\n            }\n        }\n        return supply;\n        function applyControlsToModel() {\n            let newModel;\n            added.forEach((keyAndEntry) => {\n                const [key, [control, supply]] = keyAndEntry;\n                control.aspect(InParents).add({ parent: group }).as(supply);\n                const value = control.it;\n                if (newModel) {\n                    newModel[key] = value;\n                }\n                else {\n                    const model = group.it;\n                    if (model[key] !== value) {\n                        newModel = { ...model, [key]: value };\n                    }\n                }\n            });\n            if (newModel) {\n                group.it = newModel;\n            }\n            added.forEach((keyAndEntry) => {\n                const [key, [control, supply]] = keyAndEntry;\n                control.read.do(supplyAfter(supply))(value => {\n                    if (group.it[key] !== value) {\n                        group.it = {\n                            ...group.it,\n                            [key]: value,\n                        };\n                    }\n                }).cuts(supply);\n            });\n        }\n    }\n    clear() {\n        const removed = this._map.clear();\n        if (removed.length) {\n            this._updates.send([], removed);\n        }\n    }\n}\n/**\n * @internal\n */\nfunction controlEntryToGroupEntry([key, [control]]) {\n    return [key, control];\n}\n/**\n * @internal\n */\nclass InGroupControl extends InGroup {\n    constructor(model, opts) {\n        super(opts);\n        this._model = trackValue(model);\n        this.controls = new InGroupControlControls(this);\n        this.supply.whenOff(() => this.controls.clear());\n    }\n    get supply() {\n        return this._model.supply;\n    }\n    get it() {\n        return this._model.it;\n    }\n    set it(value) {\n        this._model.it = value;\n    }\n    get on() {\n        return this._model.on;\n    }\n    _applyAspect(aspect) {\n        if (aspect === InData[InAspect__symbol]) {\n            return {\n                instance: inGroupData(this),\n                convertTo: noop,\n            };\n        }\n        return super._applyAspect(aspect);\n    }\n}\n/**\n * @internal\n */\nfunction inGroupData(group) {\n    return afterAll({\n        cs: group.controls,\n        model: group,\n        mode: group.aspect(InMode),\n    }).do(digAfter_(readInGroupData));\n}\n/**\n * @internal\n */\nfunction readInGroupData({ cs: [controls], model: [model], mode: [mode], }) {\n    if (!InMode.hasData(mode)) {\n        return afterThe();\n    }\n    const csData = {};\n    itsEach(controls.entries(), ([key, control]) => {\n        csData[key] = control.aspect(InData);\n    });\n    return afterAll(csData).do(mapAfter(controlsData => {\n        const data = { ...model };\n        itsEach(overEntries(controlsData), (keyAndControlData) => {\n            const [key, [controlData]] = keyAndControlData;\n            data[key] = controlData;\n        });\n        return data;\n    }));\n}\n/**\n * Constructs input controls group.\n *\n * @category Control\n * @typeParam TModel - Group model type, i.e. its value type.\n * @param model - Initial model of the group.\n * @param aspects - Input aspects applied by default. These are aspect converters to constructed control\n * from {@link inValueOf same-valued one}.\n *\n * @returns New input controls group.\n */\nfunction inGroup(model, { aspects, } = {}) {\n    return new InGroupControl(model, { aspects });\n}\n\n/**\n * @internal\n */\nclass InValueControl extends InControl {\n    constructor(initial, opts) {\n        super(opts);\n        this._it = trackValue(initial);\n    }\n    get supply() {\n        return this._it.supply;\n    }\n    get it() {\n        return this._it.it;\n    }\n    set it(value) {\n        this._it.it = value;\n    }\n    get on() {\n        return this._it.on;\n    }\n}\n/**\n * Constructs simple input control.\n *\n * This control does not handle actual user input. Instead, it maintains the value set programmatically.\n *\n * @category Control\n * @typeParam TValue - Input value type.\n * @param initial - Initial input value.\n * @param aspects - Input aspects applied by default. These are aspect converters to constructed control\n * from the {@link inValueOf same-valued one}.\n *\n * @returns New input control.\n */\nfunction inValue(initial, { aspects, } = {}) {\n    return new InValueControl(initial, { aspects });\n}\n\n/**\n * @internal\n */\nconst InList__aspect = {\n    applyTo(control) {\n        return inconvertibleInAspect(control, InList);\n    },\n};\n/**\n * An indexed list of input controls.\n *\n * Nested controls can be added and removed via `controls` property.\n *\n * List value (called model) is an array object formed by nested control values. The item property value is the one\n * of the control with the same index, if present. When model is updated corresponding controls are also updated.\n *\n * List is available as an aspect of itself and converted controls with the same value.\n *\n * @category Control\n * @typeParam TItem - Model item type.\n */\nclass InList extends InContainer {\n    static get [InAspect__symbol]() {\n        return InList__aspect;\n    }\n    _applyAspect(aspect) {\n        return aspect === InList__aspect\n            ? inconvertibleInAspect(this, InList, this)\n            : super._applyAspect(aspect);\n    }\n}\n/**\n * Input list controls.\n *\n * @category Control\n * @typeParam TItem - Model item type.\n */\nclass InListControls extends InContainerControls {\n    /**\n     * Sets input control with the given index.\n     *\n     * Replaces existing control if already present.\n     *\n     * @param index - An index of input control to set. I.e. corresponding model item index.\n     * @param control - Input control to add.\n     *\n     * @returns A supply of just added control that removes it once cut off.\n     */\n    set(index, control) {\n        return this.splice(index, 1, control);\n    }\n    /**\n     * Inserts input controls at the given position.\n     *\n     * @param index - An index to insert controls at.\n     * @param controls - Input controls to add after the last one.\n     *\n     * @returns A supply of just inserted controls that removes them once cut off. Cut off supply when no controls\n     * inserted.\n     */\n    insert(index, ...controls) {\n        return this.splice(index, 0, ...controls);\n    }\n    /**\n     * Removes input controls starting at the given index.\n     *\n     * @param start - An index of the first control to remove.\n     * @param end - An index of the control next to the last one to remove. Only one control will be removed if omitted.\n     */\n    remove(start, end) {\n        this.splice(start, end == null ? 1 : end - start);\n    }\n    /**\n     * Removes all input controls.\n     */\n    clear() {\n        this.splice(0);\n    }\n}\n/**\n * @internal\n */\nclass InListSnapshot {\n    constructor(_entries) {\n        this._entries = _entries;\n        this._it = mapArray(this._entries, ([control]) => control);\n        this._entriesIt = overIterator(() => iteratorOf(this._entries.map(([entry], index) => [index, entry])));\n    }\n    get length() {\n        return this._entries.length;\n    }\n    [Symbol.iterator]() {\n        return this[PushIterator__symbol]();\n    }\n    [PushIterator__symbol](accept) {\n        return this._it[PushIterator__symbol](accept);\n    }\n    entries() {\n        return iteratorOf(this._entriesIt);\n    }\n    item(index) {\n        const entry = this._entries[index];\n        return entry && entry[0];\n    }\n}\n/**\n * @internal\n */\nconst inControlReplacedReason = {};\n/**\n * @internal\n */\nclass InListEntries {\n    constructor(_controls, initial) {\n        this._controls = _controls;\n        this._supply = new Supply();\n        this._entries = initial.map(control => inListEntry(this, control));\n    }\n    splice(start, deleteCount, controls, added, removed) {\n        let supply = controls.length > 1 ? new Supply() : undefined;\n        const modify = () => {\n            if (this._shot) {\n                this._shot = undefined;\n                this._entries = this._entries.slice();\n            }\n            return this._entries;\n        };\n        const extracted = deleteCount == null\n            ? modify().splice(start)\n            : modify().splice(start, deleteCount, ...controls.map((control, index) => {\n                const entry = inListEntry(this, control);\n                added.push([start + index, entry]);\n                if (supply) {\n                    entry[1].needs(supply);\n                }\n                else {\n                    supply = entry[1];\n                }\n                return entry;\n            }));\n        removed.push(...extracted.map((entry, index) => {\n            entry[1].off(inControlReplacedReason);\n            return [start + index, entry];\n        }));\n        if (!supply) {\n            return neverSupply();\n        }\n        const result = new Supply();\n        supply.needs(result).whenOff(reason => result.off(reason !== inControlReplacedReason ? reason : undefined));\n        return result;\n    }\n    snapshot() {\n        return this._shot || (this._shot = new InListSnapshot(this._entries));\n    }\n}\n/**\n * @internal\n */\nfunction inListEntry(entries, control) {\n    const entry = [\n        control,\n        new Supply(reason => {\n            if (reason !== inControlReplacedReason) {\n                entries._controls.remove(entries._entries.findIndex(e => e === entry));\n            }\n        }).needs(entries._supply),\n    ];\n    return entry;\n}\n/**\n * @internal\n */\nfunction readControlValue(controls, [control, supply]) {\n    control.aspect(InParents).add({ parent: controls._list }).as(supply);\n    control.read({\n        supply,\n        receive: (_ctx, value) => {\n            const index = controls._entries._entries.findIndex(([ctrl]) => ctrl === control);\n            const model = controls._list.it;\n            if (model[index] !== value) {\n                const newModel = controls._list.it.slice();\n                newModel[index] = control.it;\n                controls._list.it = newModel;\n            }\n        },\n    });\n}\n/**\n * @internal\n */\nclass InListControlControls extends InListControls {\n    constructor(_list) {\n        super();\n        this._list = _list;\n        this._updates = new EventEmitter();\n        this._entries = new InListEntries(this, inListControlsByModel(_list.it, 0));\n        const applyModelToControls = {\n            receive: (context, model) => {\n                context.onRecurrent(noop);\n                const entries = this._entries._entries;\n                model.forEach((item, index) => {\n                    const entry = entries[index];\n                    if (entry) {\n                        entry[0].it = item;\n                    }\n                });\n                if (model.length < entries.length) {\n                    // Remove controls without values in model\n                    this.splice(model.length);\n                }\n                else if (model.length > entries.length) {\n                    // Create missing value controls\n                    this.add(...inListControlsByModel(model, entries.length));\n                }\n            },\n        };\n        this._entries._supply.needs(_list.read(applyModelToControls))\n            .needs(this._list)\n            .cuts(this._updates);\n        this.on = this._updates.on.do(translateOn((send, added, removed) => send(added.map(toInListEntry), removed.map(toInListEntry))));\n        const takeSnapshot = this._entries.snapshot.bind(this._entries);\n        this.read = this._updates.on.do(mapAfter(takeSnapshot, takeSnapshot));\n        this._entries._entries.forEach(entry => readControlValue(this, entry));\n    }\n    add(...controls) {\n        return this.splice(this._entries._entries.length, 0, ...controls);\n    }\n    splice(start, deleteCount, ...controls) {\n        const list = this._list;\n        const added = [];\n        const removed = [];\n        const supply = this._entries.splice(start, deleteCount, controls, added, removed);\n        if (added.length || removed.length) {\n            const updated = list.it.slice();\n            updated.splice(start, removed.length, ...added.map(([, [control]]) => control.it));\n            list.it = updated;\n            this._updates.send(added, removed);\n            added.forEach(([, entry]) => readControlValue(this, entry));\n        }\n        return supply;\n    }\n}\n/**\n * @internal\n */\nfunction inListControlsByModel(model, start) {\n    const controls = [];\n    for (let i = start; i < model.length; ++i) {\n        controls.push(inValue(model[i]));\n    }\n    return controls;\n}\n/**\n * @internal\n */\nfunction toInListEntry([key, [control]]) {\n    return [key, control];\n}\n/**\n * @internal\n */\nclass InListControl extends InList {\n    constructor(model, opts) {\n        super(opts);\n        this._model = trackValue(model);\n        this.controls = new InListControlControls(this);\n        this.supply.whenOff(() => this.controls.clear());\n    }\n    get supply() {\n        return this._model.supply;\n    }\n    get it() {\n        return this._model.it;\n    }\n    set it(value) {\n        this._model.it = value;\n    }\n    get on() {\n        return this._model.on;\n    }\n    _applyAspect(aspect) {\n        if (aspect === InData[InAspect__symbol]) {\n            return {\n                instance: inListData(this),\n                convertTo: noop,\n            };\n        }\n        return super._applyAspect(aspect);\n    }\n}\n/**\n * @internal\n */\nfunction inListData(list) {\n    return afterAll({\n        cs: list.controls,\n        mode: list.aspect(InMode),\n    }).do(digAfter_(readInListData));\n}\n/**\n * @internal\n */\nfunction readInListData({ cs: [controls], mode: [mode], }) {\n    if (!InMode.hasData(mode)) {\n        return afterThe();\n    }\n    const csData = mapIt(controls, control => control.aspect(InData));\n    return afterEach(...csData).do(mapAfter((...controlsData) => controlsData.map(([d]) => d).filter(isDefined)));\n}\n/**\n * Constructs input controls list.\n *\n * @category Control\n * @typeParam TItem - Model item type.\n * @param model - Initial model of the list.\n * @param aspects - Input aspects applied by default. These are aspect converters to constructed control\n * from {@link inValueOf same-valued one}.\n *\n * @returns New input controls group.\n */\nfunction inList(model, { aspects, } = {}) {\n    return new InListControl(model, { aspects });\n}\n\n/**\n * Creates a converter that converts an input control to the one replacing `undefined` value with fallback one.\n *\n * Treats `null` values as `undefined`. Despite the signature does not allow nulls they are often used instead.\n * E.g. when receiving JSON from server.\n *\n * @category Converter\n * @typeParam TValue - Input value type.\n * @param fallback - A fallback value that is used instead of original one when `undefined` (or`null`) is assigned\n * to converted control.\n */\nfunction intoFallback(fallback) {\n    return () => ({\n        set: asis,\n        get(value) {\n            return value != null ? value : fallback;\n        },\n    });\n}\n\n/**\n * @internal\n */\nconst RequireNothing$ = ( /*#__PURE__*/afterThe());\n/**\n * Input validator that requires nothing.\n *\n * @category Validation\n */\nfunction requireNothing() {\n    return RequireNothing$;\n}\n\n/**\n * Converts arbitrary input validator to normalized form.\n *\n * @category Validation\n * @typeParam TValue - Input value type.\n * @param validator - Validator to convert.\n *\n * @returns A function accepting input control as its only parameter and returning an `AfterEvent` keeper of validation\n * messages.\n */\nfunction inValidator(validator) {\n    if (isEventKeeper(validator)) {\n        return valueProvider(afterSupplied(validator));\n    }\n    if (typeof validator === 'function') {\n        return control => afterSupplied(validator(control));\n    }\n    return control => control.read.do(translateAfter(send => send(...arrayOfElements(validator.validate(control)))));\n}\n\nconst dontRemove = {};\n/**\n * @internal\n */\nclass InValidationMessages {\n    constructor(control) {\n        const emitter = new EventEmitter();\n        const validators = new Map();\n        const validatorMessages = new Map();\n        // Sends validation messages\n        let send = noop;\n        // Validates using the given validator\n        let validate = noop;\n        this._messages = afterEventBy(receiver => {\n            // Validation messages supply\n            const resultSupply = afterSupplied(emitter, valuesProvider())(receiver).whenOff(() => {\n                send = noop; // Disable message sending\n                validate = noop; // Disable validation\n            });\n            // Enable validation using the given validator\n            validate = (validator, validatorSupply) => {\n                const supply = validator((...messages) => {\n                    if (messages.length) {\n                        // Replace messages reported by validator.\n                        validatorMessages.set(validator, messages);\n                    }\n                    else if (!validatorMessages.delete(validator)) {\n                        // Nothing removed. No need to send messages\n                        return;\n                    }\n                    send(); // Send all messages.\n                })\n                    .needs(validatorSupply)\n                    .whenOff(reason => {\n                    if (reason !== dontRemove) {\n                        validatorSupply.off(reason);\n                    }\n                    if (validatorMessages.delete(validator)) {\n                        // Send all messages only if the removed validator reported some messages earlier\n                        send();\n                    }\n                });\n                resultSupply.whenOff(() => supply.off(dontRemove));\n            };\n            // Enable each validator\n            itsEach(validators.entries(), ([validator, validatorSupply]) => validate(validator, validatorSupply));\n            // Enable message sending\n            send = () => {\n                emitter.send(...allMessages());\n            };\n            // Send messages if present already\n            if (validatorMessages.size) {\n                send();\n            }\n        }).do(shareAfter, supplyAfter(control));\n        this.from = validator => {\n            const source = inValidator(validator)(control);\n            const validatorSupply = new Supply(() => {\n                validators.delete(source);\n            });\n            validators.set(source, validatorSupply);\n            validate(source, validatorSupply); // Start validation using validator\n            return validatorSupply.needs(control);\n        };\n        function allMessages() {\n            return flatMapIt(validatorMessages.values());\n        }\n    }\n    [AfterEvent__symbol]() {\n        return this._messages;\n    }\n}\n\n/**\n * Creates input validator that validates using all listed validators.\n *\n * @category Validation\n * @typeParam TValue - Input value type.\n * @param validators - Validators to validate the input with.\n *\n * @returns Validator that requires all the given `validators`. Or just the given validator if it is the only one given.\n */\nfunction requireAll(...validators) {\n    const numValidators = validators.length;\n    if (numValidators === 1) {\n        return validators[0];\n    }\n    if (!numValidators) {\n        return requireNothing;\n    }\n    return (control) => {\n        const messages = new InValidationMessages(control);\n        validators.forEach(validator => messages.from(validator));\n        return messages;\n    };\n}\n\n/**\n * Creates input validator that applies requirements on input text length.\n *\n * Ignores empty input. Reports too short values with `incomplete` and `tooShort` message codes. Reports too long values\n * with `invalid` and `tooLong` message codes.\n *\n * @category Validation\n * @param min - Required minimum length. Not checked if omitted.\n * @param max - Required maximum length. Not checked if omitted.\n *\n * @returns Element validator applicable to text input control.\n */\nfunction requireLength(min, max) {\n    return {\n        validate({ it: { length } }) {\n            if (length) {\n                if (min && length < min) {\n                    return { incomplete: 'tooShort', tooShort: min };\n                }\n                if (max != null && length > max) {\n                    return { invalid: 'tooLong', tooLong: max };\n                }\n            }\n            return;\n        },\n    };\n}\n\n/**\n * @internal\n */\nconst InValidation__aspect = {\n    applyTo(control) {\n        return builtInAspect(control, InValidation, (ctrl, origin) => {\n            const validation = new InControlValidation(ctrl);\n            if (origin) {\n                validation.by(origin.aspect(InValidation).read.do(translateAfter((send, result) => send(...result.messages()))));\n            }\n            return validation;\n        });\n    },\n};\n/**\n * Validation aspect of the input.\n *\n * Reports validation messages sent by registered validators. To register validator call a `InValidation.by()` method.\n *\n * Implements an `EventKeeper` interface by sending validation result whenever validation messages reported.\n *\n * A validation aspect of converted control reports all messages from original control in addition to its own.\n *\n * A validation aspect of input controls container reports all messages from nested controls in addition to its own.\n *\n * @category Aspect\n * @typeParam TValue - Input value type.\n */\nclass InValidation {\n    /**\n     * Input validation aspect.\n     */\n    static get [InAspect__symbol]() {\n        return InValidation__aspect;\n    }\n    [AfterEvent__symbol]() {\n        return this.read;\n    }\n}\n/**\n * @internal\n */\nconst noInValidationErrors = {\n    get ok() {\n        return true;\n    },\n    messages() {\n        return [];\n    },\n    has() {\n        return false;\n    },\n    hasBut() {\n        return false;\n    },\n    [Symbol.iterator]() {\n        return overNone();\n    },\n    [PushIterator__symbol](_accept) {\n        return overNone();\n    },\n};\n/**\n * @internal\n */\nclass InValidationErrors {\n    constructor(messages) {\n        this._byCode = new Map();\n        this._all = [];\n        this._it = overArray(this._all);\n        messages.forEach(message => {\n            let nonEmpty = false;\n            itsEach(overEntries(message), ([code, codePresent]) => {\n                if (codePresent) {\n                    nonEmpty = true;\n                    const prev = this._byCode.get(code);\n                    if (prev) {\n                        prev.push(message);\n                    }\n                    else {\n                        this._byCode.set(code, [message]);\n                    }\n                }\n            });\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n            if (nonEmpty) {\n                this._all.push(message);\n            }\n        });\n    }\n    get ok() {\n        return !this._all.length;\n    }\n    messages(code) {\n        return code == null ? this._all : this._byCode.get(code) || [];\n    }\n    has(code) {\n        return code == null || this._byCode.has(code);\n    }\n    hasBut(...codes) {\n        return this._all.some(message => codes.every(code => !message[code]));\n    }\n    [Symbol.iterator]() {\n        return this[PushIterator__symbol]();\n    }\n    [PushIterator__symbol](accept) {\n        return this._it[PushIterator__symbol](accept);\n    }\n}\nfunction inValidationResult(...messages) {\n    return messages.length ? new InValidationErrors(messages) : noInValidationErrors;\n}\n/**\n * @internal\n */\nclass InControlValidation extends InValidation {\n    constructor(control) {\n        super();\n        this._messages = new InValidationMessages(control);\n        this.read = afterSupplied(this._messages).do(mapAfter(inValidationResult));\n        const container = control.aspect(InContainer);\n        if (container) {\n            this._messages.from(nestedInValidationMessages(container));\n        }\n    }\n    by(...validators) {\n        return this._messages.from(requireAll(...validators));\n    }\n}\n/**\n * @internal\n */\nfunction nestedInValidationMessages(container) {\n    return container.controls.read.do(digAfter_(controls => afterEach(...mapIt(controls, control => control.aspect(InValidation)))), translateAfter((send, ...results) => send(...flatMapArray(results, ([result]) => result))));\n}\n\n/**\n * Constructs input validator that filters validation messages from the given `validators` according to their codes.\n *\n * The validation messages reported by `validators` are filtered according to the following rules:\n * - If at least one message with `missing` code is reported, then strip out the ones with `incomplete` and `invalid`\n *   codes, except the ones with `despiteMissing` code.\n * - Otherwise, if at least one message with `incomplete` code is reported, then strip out the ones with `invalid`\n *   code, except the ones with `despiteIncomplete` code.\n * - Otherwise report all messages.\n *\n * @category Validation\n * @typeParam TValue - Input value type.\n * @param validators - Validators to validate the input with.\n *\n * @returns Validator that requires all the given `validators` and filters their output.\n */\nfunction requireNeeded(...validators) {\n    const validate = inValidator(requireAll(...validators));\n    return (control) => validate(control).do(translateAfter(nextRequireNeededMessages));\n}\n/**\n * @internal\n */\nfunction nextRequireNeededMessages(send, ...messages) {\n    const result = inValidationResult(...messages);\n    let filtered = result;\n    if (result.has('missing')) {\n        filtered = filterIt(result, \n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        message => !message.incomplete && !message.invalid || message.despiteMissing);\n    }\n    else if (result.has('incomplete')) {\n        filtered = filterIt(result, \n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        message => !message.invalid || message.despiteIncomplete);\n    }\n    return send(...filtered);\n}\n\nfunction requirePresent(control) {\n    return control\n        ? control.read.do(translateAfter((send, value) => value ? send() : send({ missing: 'missing' })))\n        : requirePresent;\n}\n\n/**\n * Creates input validator that applies requirements to numeric value range.\n *\n * Ignores NaN input. Reports too small values with `invalid` and `tooSmall` message codes. Reports too large values\n * with `invalid` and `tooLarge` message codes.\n *\n * @category Validation\n * @param min - Minimum allowed value, inclusive. Not checked if omitted.\n * @param max - Maximum allowed value, inclusive. Not checked if omitted.\n *\n * @returns Element validator applicable to numeric input control.\n */\nfunction requireRange(min, max) {\n    return {\n        validate({ it }) {\n            if (!isNaN(it)) {\n                if (min != null && it < min) {\n                    return { invalid: 'tooSmall', tooSmall: min };\n                }\n                if (max != null && it > max) {\n                    return { invalid: 'tooLarge', tooLarge: max };\n                }\n            }\n            return;\n        },\n    };\n}\n\n/**\n * @category Converter\n */\nconst InParser = {\n    /**\n     * Creates input control converter out of input text parser.\n     *\n     * @typeParam TValue - Parsed input value type.\n     * @param parser - A parser to convert.\n     *\n     * @returns An input control converter that parses and formats text input.\n     */\n    converter(parser) {\n        return (from, to) => {\n            const [parse, format = String] = parser(from, to);\n            const parseValidator = new EventEmitter();\n            to.aspect(InValidation).by(afterSupplied(parseValidator, valuesProvider()));\n            return {\n                set(text) {\n                    const errorList = [];\n                    const parserErrors = {\n                        report(...errors) {\n                            errorList.push(...errors);\n                        },\n                    };\n                    const result = parse(text, parserErrors);\n                    parseValidator.send(...errorList);\n                    return result;\n                },\n                get(value) {\n                    const text = String(format(value));\n                    parseValidator.send();\n                    return text;\n                },\n            };\n        };\n    },\n};\n/**\n * Creates text input control converter that parses and formats input text with the given functions.\n *\n * @category Converter\n * @typeParam TValue - Parsed input value type.\n * @param parse - Text parser function. Accepts input text and parse errors as its parameters and returns parsed value.\n * @param format - Text formatter. Accepts value is its only parameter and returns formatted text. Standard to string\n * conversion is used if omitted.\n *\n * @returns New input converter.\n */\nfunction intoParsedBy(parse, format) {\n    return InParser.converter(valueProvider([parse, format]));\n}\n\n/**\n * @internal\n */\nconst notInteger = 'notInteger';\nfunction intoInteger(radixOrFrom = 10, optTo) {\n    if (typeof radixOrFrom !== 'number') {\n        return intoInteger()(radixOrFrom, optTo);\n    }\n    return InParser.converter((_from, to) => [\n        (text, errors) => {\n            const result = parseInt(text, radixOrFrom);\n            if (isNaN(result)) {\n                errors.report({ invalid: notInteger, NaN: notInteger, notInteger });\n            }\n            return result;\n        },\n        value => (to.it = Math.floor(value)).toString(radixOrFrom),\n    ]);\n}\n\nfunction intoTrimmed(_from, to) {\n    if (!to) {\n        return intoTrimmed;\n    }\n    return {\n        set(value) {\n            return value.trim();\n        },\n        get(value) {\n            return to.it = value.trim();\n        },\n    };\n}\n\n/**\n * @internal\n */\nconst InSubmit__aspect = {\n    applyTo(control) {\n        return builtInAspect(control, InSubmit, ctrl => new InControlSubmit(ctrl));\n    },\n};\n/**\n * Input submit error.\n *\n * Contains submit messages as validation result.\n *\n * @category Aspect\n */\nclass InSubmitError extends Error {\n    /**\n     * Constructs input submit error.\n     *\n     * @param errors - Input submit error messages. A `submit` code will be added to each of them, unless already present.\n     */\n    constructor(...errors) {\n        super();\n        this.errors = inValidationResult(...errors.map(message => message.submit ? message : { ...message, submit: true }));\n    }\n}\n/**\n * Input submit rejection error.\n *\n * Raised if submit is not ready or in process already.\n *\n * @category Aspect\n */\nclass InSubmitRejectedError extends InSubmitError {\n    /**\n     * Constructs input submit rejection error.\n     *\n     * @param reason - A reason code.\n     */\n    constructor(reason) {\n        super({ submit: 'rejected', rejected: reason, [reason]: true });\n    }\n}\n/**\n * Input submit aspect.\n *\n * Allows to submit {@link InData input data} and reports submit status.\n *\n * Implements an `EventKeeper` interface by sending submit status flags to registered receivers.\n *\n * @category Aspect\n * @typeParam TValue - Input value type.\n */\nclass InSubmit {\n    static get [InAspect__symbol]() {\n        return InSubmit__aspect;\n    }\n    [AfterEvent__symbol]() {\n        return this.read;\n    }\n}\nclass InControlSubmit extends InSubmit {\n    constructor(_control) {\n        super();\n        this._control = _control;\n        this._flags = trackValue({ submitted: false, busy: false });\n        this._errors = trackValue([]);\n        this.read = afterAll({\n            flags: this._flags,\n            data: this._control.aspect(InData),\n            messages: this._control.aspect(InValidation),\n        }).do(supplyAfter(this._control), mapAfter(({ flags: [flags], data: [data], messages: [messages], }) => ({\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            ready: data !== undefined && (messages.ok || itsEvery(messages, message => message.submit)),\n            submitted: flags.submitted,\n            busy: flags.busy,\n        })));\n        const validation = _control.aspect(InValidation);\n        validation.by(this._errors.read.do(translateAfter((send, messages) => send(...messages))));\n    }\n    async submit(submitter) {\n        if (this._control.supply.isOff) {\n            throw new InSubmitRejectedError('noInput');\n        }\n        if (this._flags.it.busy) {\n            throw new InSubmitRejectedError('busy');\n        }\n        const submit = this;\n        const control = this._control;\n        let errors;\n        this._flags.it = { ...this._flags.it, submitted: true, busy: true };\n        try {\n            if (this._errors.it.length) {\n                this._errors.it = [];\n            }\n            return await submitter(await submitData(), control);\n        }\n        catch (error) {\n            errors = toInSubmitMessages(error);\n            throw error;\n        }\n        finally {\n            this._flags.it = { ...this._flags.it, busy: false };\n            if (errors) {\n                this._errors.it = errors;\n            }\n        }\n        async function submitData() {\n            const { data: [d], flags: [{ ready }] } = await afterAll({\n                data: control.aspect(InData),\n                flags: submit,\n            });\n            return ready\n                ? d\n                : Promise.reject(new InSubmitRejectedError('notReady'));\n        }\n    }\n    reset() {\n        const flags = this._flags.it;\n        if (flags.submitted) {\n            this._flags.it = { ...flags, submitted: false };\n        }\n        if (this._errors.it.length) {\n            this._errors.it = [];\n        }\n    }\n}\n/**\n * @internal\n */\nfunction toInSubmitMessages(error) {\n    if (error instanceof InSubmitError) {\n        return [...error.errors];\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    return [{ submit: error }];\n}\n\n/**\n * Creates an {@link InMode input mode} source depending on the given `form` control status.\n *\n * This can be applied e.g. to {@link InSubmitButton submit button}, to {@link InFormElement form element},\n * or to input controls. The defaults best suit the latter.\n *\n * @category Aspect\n * @param form - Form control the evaluated mode depends on. Should not be the same as the target control!\n * @param notReady - Input mode to set when submit is not ready. E.g. when input is invalid.\n * `on` (enabled) by default. An `off` (disable) value is a better choice for submit button.\n * @param invalid - Input mode to set when submit is not ready _and_ the form is submitted.\n * `on` (enabled) by default. An `off` (disable) value is a better choice for submit button.\n * @param busy - Input mode to set while submitting. `ro` (read-only) by default. An `off` (disabled) value is a better\n * choice for submit button.\n *\n * @returns A source of input mode.\n */\nfunction inModeByForm(form, { notReady = 'on', invalid = 'on', busy = 'ro', } = {}) {\n    const submit = form.aspect(InSubmit);\n    return submit.read.do(mapAfter(flags => inModeValue(flags.busy ? busy : 'on', flags.ready ? 'on' : (flags.submitted ? invalid : notReady))));\n}\n\n/**\n * Creates an {@link InMode input mode} source depending on control's {@link InValidation validity}.\n *\n * This can be applied to form control to prevent submission of invalid input.\n *\n * @category Aspect\n * @param invalid - Input mode to set when the input is invalid. `-on` (not submittable) by default. This\n * should not be set to disabled, as the latter would make it impossible to fix input errors.\n * @param ignore - Ignored message codes. If all validation messages have this code the form is not marked as invalid.\n * `submit` by default, as this code intended to be server-side.\n *\n * @returns A source of input mode.\n */\nfunction inModeByValidity({ invalid = '-on', ignore = 'submit', } = {}) {\n    return control => control.aspect(InValidation).read.do(mapAfter(validity => validity.hasBut(...(typeof ignore === 'string' ? [ignore] : ignore)) ? invalid : 'on'));\n}\n\n/**\n * Abstract implementation of {@link InElement input HTML element control}.\n *\n * @category Control\n * @typeParam TValue - Input value type.\n * @typeParam TElt - A type of input HTML element.\n */\nclass AbstractInElement extends InElement {\n    /**\n     * Constructs HTML input element control.\n     *\n     * @param element - HTML input element the constructed control is based on.\n     * @param aspects - Input aspects applied by default. These are aspect converters to constructed control\n     * from the {@link inValueOf same-valued one}.\n     * @param get - Input value getter.\n     * @param set - Input value setter.\n     */\n    constructor(element, { aspects, get, set, }) {\n        super({ aspects });\n        this.element = element;\n        this._input = new EventEmitter();\n        const self = this;\n        this._get = get;\n        this._set = set;\n        this._value = this.it;\n        const doUpdate = this._update = (value, oldValue) => update({ value }, oldValue);\n        this.events = new DomEventDispatcher(element);\n        this.events.supply.needs(this);\n        this.listenForInput(input => update(input, this._value));\n        this.on = this._input.on.do(translateOn((send, { value: newValue }, oldValue) => newValue !== oldValue && send(newValue, oldValue)));\n        this.input = this._input.on.do(mapAfter(asis, () => ({ value: this.it })));\n        function update(input, oldValue) {\n            for (;;) {\n                self._value = input.value;\n                // Corrections are value updates performed by update event receivers\n                // The last correction is recorded and sent later, when all receivers receive current update\n                let correction;\n                // Record corrections\n                self._update = (newValue, old) => {\n                    // Corrections retain the event instance\n                    correction = [{ ...input, value: newValue }, old];\n                };\n                try {\n                    self._input.send(input, oldValue);\n                }\n                finally {\n                    self._update = doUpdate;\n                }\n                if (!correction) {\n                    break; // No more corrections\n                }\n                // Apply last correction\n                // noinspection JSUnusedAssignment\n                [input, oldValue] = correction;\n            }\n        }\n    }\n    get supply() {\n        return this._input.supply;\n    }\n    get it() {\n        return this._get();\n    }\n    set it(value) {\n        const oldValue = this.it;\n        if (value !== oldValue) {\n            this._set(value);\n            this._update(this._get(), oldValue);\n        }\n    }\n    /**\n     * Enables reaction to input input.\n     *\n     * By default listens for `input` and `change` events.\n     *\n     * @param update - Updates current value by user input and sends update event. This function is to be called by\n     * input event listeners.\n     */\n    listenForInput(update) {\n        const onInput = (event) => update({ value: this.it, event });\n        this.events.on('input')(onInput);\n        this.events.on('change')(onInput);\n    }\n}\n\nfunction inCheckbox(element, { checked = true, unchecked = false, intermediate = undefined, aspects, } = {}) {\n    return new AbstractInElement(element, {\n        get() {\n            return this.element.intermediate\n                ? intermediate\n                : this.element.checked ? checked : unchecked;\n        },\n        set(value) {\n            this.element.checked = value === checked;\n            this.element.intermediate = value !== checked && value !== unchecked;\n        },\n        aspects,\n    });\n}\n\n/**\n * @internal\n */\nclass InRadioControl extends AbstractInElement {\n    constructor(element, { checked = true, aspects, } = {}) {\n        super(element, {\n            aspects,\n            get() {\n                return this.element.checked ? checked : undefined;\n            },\n            set(value) {\n                this.element.checked = value === checked;\n            },\n        });\n    }\n    _applyAspect(aspect) {\n        if (aspect === InMode[InAspect__symbol]) {\n            return applyRadioInMode(this);\n        }\n        return super._applyAspect(aspect);\n    }\n}\n/**\n * @internal\n */\nfunction applyRadioInMode(radio) {\n    const { instance: mode } = InMode[InAspect__symbol].applyTo(radio);\n    mode.derive(radio.read.do(mapAfter(value => value !== undefined ? 'on' : '-on')));\n    return knownInAspect(mode);\n}\nfunction inRadio(element, values) {\n    return new InRadioControl(element, values);\n}\n\n/**\n * @internal\n */\nclass InRadioGroupControl extends InControl {\n    constructor(_buttons, { unchecked, aspects, } = {}) {\n        super({ aspects });\n        this._buttons = _buttons;\n        this._unchecked = unchecked;\n        const read = afterAll(_buttons).do(mapAfter(values => checkedInValue(values, unchecked)));\n        this._it = trackValue(unchecked).by(read);\n        this._it.on(value => {\n            itsEach(overEntries(_buttons), ([key, button]) => {\n                button.it = value === key || undefined;\n            });\n        });\n    }\n    get supply() {\n        return this._it.supply;\n    }\n    get it() {\n        return this._it.it;\n    }\n    set it(value) {\n        this._it.it = value != null && this._buttons[value] ? value : this._unchecked;\n    }\n    get on() {\n        return this._it.on;\n    }\n}\n/**\n * @internal\n */\nfunction checkedInValue(values, unchecked) {\n    let checked = unchecked;\n    itsEvery(overEntries(values), ([key, [value]]) => {\n        if (value === undefined) {\n            return true;\n        }\n        checked = key;\n        return false;\n    });\n    return checked;\n}\nfunction inRadioGroup(buttons, values) {\n    return new InRadioGroupControl(buttons, values);\n}\n\n/**\n * Creates input control for the given select element.\n *\n * The value of this control is an array of selected option values. This is particularly useful for `<select multiple>`\n * elements. Consider to use `inText()` for single-selects.\n *\n * @category Control\n * @param element - Target select element.\n * @param aspects - Input aspects applied by default. These are aspect converters to constructed control\n * from the {@link inValueOf same-valued one}.\n *\n * @return New select input control instance.\n */\nfunction inSelect(element, { aspects, } = {}) {\n    return new AbstractInElement(element, {\n        aspects,\n        get() {\n            return itsElements(valueArray(this.element.options, option => option.selected && option.value));\n        },\n        set(value) {\n            const selected = new Set(value);\n            // Iterate in reverse order to ensure the first matching option is selected\n            // when `multiple` attribute isn't set.\n            itsEach(reverseArray(this.element.options), option => option.selected = selected.has(option.value));\n        },\n    });\n}\n\n/**\n * Creates control for the given textual input element.\n *\n * Note that this won't work for files, checkboxes, or radio buttons.\n *\n * For `<select multiple>` this would only reflect the first option. Consider to use `inSelect()` for multi-selects.\n *\n * @category Control\n * @param element - Target text input element.\n * @param aspects - Input aspects applied by default. These are aspect converters to constructed control\n * from the {@link inValueOf same-valued one}.\n *\n * @return New textual input control instance.\n */\nfunction inText(element, { aspects, } = {}) {\n    return new AbstractInElement(element, {\n        get() {\n            return this.element.value;\n        },\n        set(value) {\n            this.element.value = value;\n        },\n        aspects,\n    });\n}\n\n/**\n * @internal\n */\nconst InFocus__aspect = {\n    applyTo(control) {\n        return builtInAspect(control, InFocus, ctrl => {\n            const element = ctrl.aspect(InElement);\n            return element && new InControlFocus(element);\n        });\n    },\n};\n/**\n * Input focus aspect.\n *\n * This is a value tracker of element focus flag. Or `null` when {@link InElement} aspect is absent.\n *\n * @category Aspect\n */\nclass InFocus extends ValueTracker {\n    static get [InAspect__symbol]() {\n        return InFocus__aspect;\n    }\n}\n/**\n * @internal\n */\nclass InControlFocus extends InFocus {\n    constructor(inElement) {\n        super();\n        const { element, events } = inElement;\n        const owner = element.getRootNode\n            ? element.getRootNode()\n            : element.ownerDocument;\n        this._it = trackValue(owner.activeElement === element);\n        this.supply.needs(inElement);\n        events.on('focus')(() => this._it.it = true);\n        events.on('blur')(() => this._it.it = false);\n        this.on({\n            receive(ctx, newValue) {\n                ctx.onRecurrent(noop);\n                if (newValue) {\n                    element.focus();\n                }\n                else {\n                    element.blur();\n                }\n            },\n        });\n    }\n    get supply() {\n        return this._it.supply;\n    }\n    get it() {\n        return this._it.it;\n    }\n    set it(value) {\n        this._it.it = value;\n    }\n    get on() {\n        return this._it.on;\n    }\n}\n\n/**\n * @internal\n */\nconst InStatus__aspect = {\n    applyTo(control) {\n        return builtInAspect(control, InStatus, ctrl => {\n            const container = ctrl.aspect(InContainer);\n            return container != null ? new InContainerStatus(container) : new InControlStatus(ctrl);\n        });\n    },\n};\n/**\n * Aggregate status aspect of user input.\n *\n * Collects and reports input status flags. Like whether the input ever had focus or being altered.\n *\n * Supports input elements and containers. For the rest of input controls always sends default status flags.\n *\n * Implements `EventKeeper` interface by sending collected status flags to receivers.\n *\n * @category Aspect\n */\nclass InStatus {\n    static get [InAspect__symbol]() {\n        return InStatus__aspect;\n    }\n    [AfterEvent__symbol]() {\n        return this.read;\n    }\n}\n/**\n * @internal\n */\nconst defaultInStatusFlags = {\n    hasFocus: false,\n    touched: false,\n    edited: false,\n};\n/**\n * @internal\n */\nclass InControlStatus extends InStatus {\n    constructor(control) {\n        super();\n        this._flags = trackValue(defaultInStatusFlags);\n        this._flags.supply.needs(control);\n        this._flags.by(elementInStatusFlags(this._flags, control));\n    }\n    get read() {\n        return this._flags.read;\n    }\n    markTouched(touched = true) {\n        const flags = this._flags.it;\n        if (!touched) {\n            if (flags.touched) {\n                // Try to reset touched.\n                // Still touched if in focus. Not edited anyway.\n                this._flags.it = { ...flags, touched: flags.hasFocus, edited: false };\n            }\n        }\n        else if (!flags.touched) {\n            // Do not modify if already touched.\n            this._flags.it = { ...flags, touched };\n        }\n        return this;\n    }\n    markEdited(edited = true) {\n        const flags = this._flags.it;\n        if (edited) {\n            if (!flags.edited) {\n                // Touched if edited\n                this._flags.it = { ...flags, touched: true, edited };\n            }\n        }\n        else if (flags.edited) {\n            // Assume not edited\n            this._flags.it = { ...flags, edited };\n        }\n        return this;\n    }\n}\n/**\n * @internal\n */\nfunction elementInStatusFlags(origin, control) {\n    const element = control.aspect(InElement);\n    const focus = control.aspect(InFocus);\n    return afterAll({\n        hasFocus: focus || afterThe(false),\n        edited: element ? element.input.do(mapAfter(({ event }) => !!event)) : afterThe(false),\n    }).do(mapAfter(({ hasFocus: [hasFocus], edited: [edited] }) => updateInStatusFlags(origin.it, hasFocus, edited)));\n}\n/**\n * @internal\n */\nfunction updateInStatusFlags(flags, hasFocus, edited) {\n    if (hasFocus) {\n        flags = { ...flags, hasFocus, touched: true };\n    }\n    else {\n        flags = { ...flags, hasFocus };\n    }\n    if (edited) {\n        flags = { ...flags, edited, touched: true };\n    }\n    return flags;\n}\n/**\n * @internal\n */\nclass InContainerStatus extends InStatus {\n    constructor(_container) {\n        super();\n        this._container = _container;\n        this.read = containerInStatusFlags(this._container);\n    }\n    markEdited(edited) {\n        this._container.controls.read.do(onceAfter)(snapshot => itsEach(snapshot, control => control.aspect(InStatus).markEdited(edited)));\n        return this;\n    }\n    markTouched(touched) {\n        this._container.controls.read.do(onceAfter)(snapshot => itsEach(snapshot, control => control.aspect(InStatus).markTouched(touched)));\n        return this;\n    }\n}\n/**\n * @internal\n */\nfunction containerInStatusFlags(container) {\n    return container.controls.read.do(supplyAfter(container), digAfter_((snapshot) => afterEach(...inControlStatuses(snapshot))), mapAfter(combineInStatusFlags));\n}\n/**\n * @internal\n */\nfunction inControlStatuses(snapshot) {\n    return mapIt(snapshot, c => c.aspect(InStatus));\n}\n/**\n * @internal\n */\nfunction combineInStatusFlags(...flags) {\n    const result = {\n        hasFocus: false,\n        touched: false,\n        edited: false,\n    };\n    itsEach(flags, (([{ hasFocus, touched, edited }]) => {\n        if (touched) {\n            result.touched = true;\n        }\n        if (hasFocus) {\n            result.hasFocus = result.touched = true;\n        }\n        if (edited) {\n            result.edited = result.touched = true;\n        }\n    }));\n    return result;\n}\n\n/**\n * Creates form element control.\n *\n * @category Control\n * @param element - HTML element to create control for.\n * @param options - Form element control options.\n *\n * @returns New form element control.\n */\nfunction inFormElement(element, options) {\n    const { form, aspects, modes } = options;\n    const control = new AbstractInElement(element, {\n        aspects: [intoConvertedAspects(aspects)],\n        get: noop,\n        set: noop,\n    });\n    control.supply.needs(form);\n    return control.setup(InMode, mode => mode.derive(inModeByForm(form, modes)));\n}\n\n/**\n * Creates submit button control.\n *\n * @category Control\n * @param element - Submit button element to create control for.\n * @param options - Submit button control options.\n *\n * @returns New submit button control.\n */\nfunction inSubmitButton(element, options) {\n    const { form, aspects, modes: { notReady = 'on', invalid = 'off', busy = 'off' } = {} } = options;\n    const control = new AbstractInElement(element, {\n        aspects: [intoConvertedAspects(aspects)],\n        get: noop,\n        set: noop,\n    });\n    control.supply.needs(form);\n    control.setup(InMode, mode => mode.derive(inModeByForm(form, { notReady, invalid, busy })));\n    return control;\n}\n\n/**\n * @internal\n */\nconst InStyledElement__aspect = {\n    applyTo(control) {\n        const element = control.aspect(InElement);\n        return element ? knownInAspect(element.element) : nullInAspect();\n    },\n};\n/**\n * @category Aspect\n */\nconst InStyledElement = {\n    get [InAspect__symbol]() {\n        return InStyledElement__aspect;\n    },\n    /**\n     * Creates input control aspect converter that assigns the given styled element to converted control.\n     *\n     * This is useful for controls without elements (such as input groups), or can be used to apply CSS classes to input\n     * element wrappers (such as `form-group` in Bootstrap).\n     *\n     * @typeParam TValue - Converted control value type.\n     * @param element - A DOM element to apply styles to. Styles won't be applied when `null` or undefined.\n     *\n     * @returns Input control aspect converter.\n     */\n    to(element = null) {\n        return {\n            applyAspect(aspect) {\n                return aspect === InStyledElement__aspect\n                    ? knownInAspect(element)\n                    : undefined;\n            },\n        };\n    },\n};\n\n/**\n * @internal\n */\nconst InCssClasses__aspect = {\n    applyTo(control) {\n        return {\n            instance: new InControlCssClasses(control),\n            convertTo: noop,\n        };\n    },\n};\n/**\n * An aspect of the user input representing CSS classes to apply to styled element.\n *\n * Implements an `EventKeeper` interface by reporting all CSS classes applied to styled element.\n *\n * @category Aspect\n */\nclass InCssClasses {\n    static get [InAspect__symbol]() {\n        return InCssClasses__aspect;\n    }\n    [AfterEvent__symbol]() {\n        return this.read;\n    }\n}\n/**\n * @internal\n */\nconst UnsubscribeReason__symbol = ( /*#__PURE__*/Symbol('reason'));\n/**\n * @internal\n */\nfunction isUnsubscribeReason(reason) {\n    return reason && typeof reason === 'object' && UnsubscribeReason__symbol in reason;\n}\n/**\n * @internal\n */\nclass InControlCssClasses extends InCssClasses {\n    constructor(_control) {\n        super();\n        this._control = _control;\n        this._sources = trackValue([new Map()]);\n        _control.supply.whenOff(reason => this.done(reason));\n        this.read = this._sources.read.do(supplyAfter(this._control), digAfter_(([sources]) => afterEach(...sources.keys())), mapAfter_((...classes) => {\n            const result = {};\n            classes.forEach(([map]) => mergeInCssClassesMap(map, result));\n            return result;\n        }));\n        this.track = afterEventBy(receiver => {\n            receiver.supply.needs(this._control);\n            const classes = new DeltaSet();\n            const emitter = new EventNotifier();\n            let classesSent = false;\n            const sendClasses = () => {\n                classesSent = true;\n                classes.redelta((add, remove) => emitter.send(add, remove)).undelta();\n            };\n            emitter.on(receiver);\n            return this.read(map => {\n                const remove = new Set(classes);\n                const add = [];\n                itsEach(filterIt(overEntries(map), ([, flag]) => !!flag), ([name]) => {\n                    if (!remove.delete(name)) {\n                        add.push(name);\n                    }\n                });\n                if (!classesSent || add.length || remove.size) {\n                    classes.delta(add, remove);\n                    sendClasses();\n                }\n            });\n        });\n        const element = _control.aspect(InStyledElement);\n        if (element) {\n            this.applyTo(element, this.schedule);\n        }\n    }\n    get schedule() {\n        return this._schedule || (this._schedule = controlSchedule(this._control, this._control.aspect(InStyledElement)));\n    }\n    specs(source) {\n        return afterSupplied(isEventKeeper(source) ? source : source(this._control));\n    }\n    resolve(source) {\n        const nsAlias = this._control.aspect(InNamespaceAliaser);\n        return this.specs(source).do(mapAfter((...names) => {\n            const result = {};\n            names.forEach(name => {\n                if (isQualifiedName(name)) {\n                    result[css__naming.name(name, nsAlias)] = true;\n                }\n                else {\n                    mergeInCssClassesMap(name, result);\n                }\n            });\n            return result;\n        }));\n    }\n    add(source) {\n        const inSupply = this._control.supply;\n        if (inSupply.isOff) {\n            return inSupply;\n        }\n        const classesSupply = new Supply();\n        const src = afterEventBy(receiver => {\n            const supply = this.resolve(source)({\n                receive(context, ...event) {\n                    receiver.receive(context, ...event);\n                },\n            });\n            receiver.supply.whenOff(reason => {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                classesSupply.off({ [UnsubscribeReason__symbol]: reason });\n            });\n            classesSupply.needs(supply).whenOff(reason => {\n                if (isUnsubscribeReason(reason)) {\n                    supply.off(reason[UnsubscribeReason__symbol]);\n                }\n            });\n        }).do(shareAfter);\n        const [sources] = this._sources.it;\n        sources.set(src, classesSupply);\n        classesSupply.whenOff(reason => {\n            if (!isUnsubscribeReason(reason)) {\n                sources.delete(src);\n                this._sources.it = [sources];\n            }\n        });\n        this._sources.it = [sources];\n        return classesSupply.needs(inSupply);\n    }\n    applyTo(element, schedule = controlSchedule(this._control, element)) {\n        const { classList } = element;\n        const classes = new DeltaSet();\n        const updateClasses = () => {\n            classes.redelta((add, remove) => {\n                classList.remove(...remove);\n                classList.add(...add);\n            }).undelta();\n        };\n        return this.track((add, remove) => {\n            classes.delta(add, remove);\n            schedule(updateClasses);\n        }).whenOff(() => {\n            if (classes.size) {\n                classes.clear();\n                schedule(updateClasses);\n            }\n        });\n    }\n    done(reason) {\n        itsEach(this._sources.it[0].values(), supply => supply.off(reason));\n        this._sources.supply.off(reason);\n        return this;\n    }\n}\n/**\n * @internal\n */\nfunction mergeInCssClassesMap(map, result) {\n    itsEach(overEntries(map), ([name, flag]) => {\n        if (flag != null) {\n            result[name] = flag;\n        }\n    });\n}\n/**\n * @internal\n */\nfunction controlSchedule(control, node) {\n    return control.aspect(InRenderScheduler)({ node });\n}\n\n/**\n * Builds a source of error marker CSS classes.\n *\n * Applies error marker class(es) when the given error message codes present in\n * {@link InValidation.Result validation result}.\n *\n * @category Style\n * @param mark - Error mark. Specifies CSS class(es) to apply when requested error present.\n * A class with `has-error` name in {@link InputAspects__NS input aspects namespace} is used by default.\n * @param when - {@link InValidation.Message Validation message} code(s) to expect.\n * {@link InValidation.Result.ok Any} error matches by default.\n *\n * @returns A source of CSS class names to apply.\n */\nfunction inCssError({ mark, when, } = {}) {\n    let hasError;\n    if (!when) {\n        hasError = defaultInCssHasError;\n    }\n    else if (Array.isArray(when)) {\n        hasError = when.length ? errors => when.every(code => errors.has(code)) : defaultInCssHasError;\n    }\n    else {\n        hasError = errors => errors.has(when);\n    }\n    return control => control.aspect(InValidation).read.do(translateAfter((send, errors) => hasError(errors) ? send(...inCssErrorMarks(mark)) : send()));\n}\n/**\n * @internal\n */\nfunction defaultInCssHasError(errors) {\n    return !errors.ok;\n}\n/**\n * @internal\n */\nconst defaultInCssErrorMarks = [['has-error', InputAspects__NS]];\n/**\n * @internal\n */\nfunction inCssErrorMarks(mark) {\n    if (!mark) {\n        return defaultInCssErrorMarks;\n    }\n    const marks = arrayOfElements(mark);\n    return marks.length ? marks : defaultInCssErrorMarks;\n}\n\n/**\n * Builds a source of informative CSS classes.\n *\n * Generates the following CSS classes:\n * - `disabled` when input control is disabled (i.e. has no data).\n * - `readonly` when input control is read-only,\n * - `invalid` when input control validation failed,\n * - `missing` when there are validation messages with `missing` code,\n * - `incomplete` when there are validation messages with `incomplete`,\n * - `has-focus` when input control has input focus,\n * - `touched` when input control is touched (i.e. had focus already),\n * - `edited` when input control is edited by user.\n *\n * These names are qualified with the given (or {@link InputAspects__NS default}) namespace.\n *\n * @category Style\n * @param ns - A definition of namespace to qualify CSS class names with. The {@link InputAspects__NS default namespace}\n * will be used when omitted.\n *\n * @returns A source of CSS class names to apply.\n */\nfunction inCssInfo({ ns = InputAspects__NS, } = {}) {\n    return (control) => {\n        const cls = (name) => [name, ns];\n        return afterAll({\n            md: control.aspect(InMode),\n            vl: control.aspect(InValidation),\n            st: control.aspect(InStatus),\n        }).do(translateAfter((send, { md: [mode], vl: [valid], st: [{ hasFocus, touched, edited }] }) => {\n            const names = [];\n            if (!InMode.hasData(mode)) {\n                names.push(cls('disabled'));\n            }\n            if (mode === 'ro' || mode === '-ro') {\n                names.push(cls('readonly'));\n            }\n            if (!valid.ok) {\n                names.push(cls('invalid'));\n            }\n            if (valid.has('missing')) {\n                names.push(cls('missing'));\n            }\n            if (valid.has('incomplete')) {\n                names.push(cls('incomplete'));\n            }\n            if (hasFocus) {\n                names.push(cls('has-focus'));\n            }\n            if (touched) {\n                names.push(cls('touched'));\n            }\n            if (edited) {\n                names.push(cls('edited'));\n            }\n            send(...names);\n        }));\n    };\n}\n\nexport { AbstractInElement, InAspect__symbol, InBuilder, InContainer, InContainerControls, InControl, InCssClasses, InData, InElement, InFocus, InGroup, InGroupControls, InList, InListControls, InMode, InNamespaceAliaser, InParents, InParser, InRenderScheduler, InRole, InStatus, InStyledElement, InSubmit, InSubmitError, InSubmitRejectedError, InValidation, InputAspects__NS, builtInAspect, inCheckbox, inCssError, inCssInfo, inFormElement, inGroup, inList, inModeByForm, inModeByValidity, inModeValue, inRadio, inRadioGroup, inSelect, inSubmitButton, inText, inValidationResult, inValidator, inValue, inValueOf, inconvertibleInAspect, intoConvertedAspects, intoConvertedBy, intoFallback, intoInteger, intoParsedBy, intoTrimmed, isInAspectConversion, knownInAspect, nullInAspect, requireAll, requireLength, requireNeeded, requireNothing, requirePresent, requireRange };\n//# sourceMappingURL=input-aspects.js.map\n","import { AfterEvent__symbol, mapAfter, supplyAfter, digAfter_, afterValue, deduplicateAfter_, digAfter, afterThe, afterAll, consumeEvents } from '@proc7ts/fun-events';\nimport { noop, valueRecipe, asis, valuesProvider, lazyValue, arrayOfElements } from '@proc7ts/primitives';\nimport { Shareable, Share, Share__symbol, shareLocator, Shared } from '@wesib/generic';\nimport { InNamespaceAliaser, knownInAspect, InRenderScheduler, InBuilder, InGroup, inFormElement, InAspect__symbol, inconvertibleInAspect, nullInAspect, InRole, inCssInfo, InCssClasses, inCssError, inModeByValidity, InMode, InParents } from '@frontmeans/input-aspects';\nimport { ContextKey__symbol, ContextSupply, Contextual__symbol, ContextBuilder__symbol } from '@proc7ts/context-values';\nimport { ContextUpKey } from '@proc7ts/context-values/updatable';\nimport { DefaultNamespaceAliaser, ComponentRenderScheduler, FeatureDef__symbol, ComponentMember } from '@wesib/wesib';\nimport { neverSupply, Supply } from '@proc7ts/supply';\nimport { handleDomEvents } from '@frontmeans/dom-events';\nimport { isAmendatory, allAmender, newAmendTarget } from '@proc7ts/amend';\nimport { itsEach } from '@proc7ts/push-iterator';\n\n/**\n * @internal\n */\nconst DefaultFormPreset = {\n    setupField({ sharer, control }) {\n        DefaultFormPreset$setup(sharer, control);\n    },\n    setupForm({ sharer, control, element }) {\n        DefaultFormPreset$setup(sharer, control);\n        DefaultFormPreset$setup(sharer, element);\n    },\n};\nfunction DefaultFormPreset$setup(sharer, builder) {\n    const nsAliaser = sharer.get(DefaultNamespaceAliaser);\n    const renderScheduler = sharer.get(ComponentRenderScheduler);\n    builder\n        .addAspect(InNamespaceAliaser, {\n        applyAspect(_aspect) {\n            return knownInAspect(nsAliaser);\n        },\n    }).addAspect(InRenderScheduler, {\n        applyAspect(_aspect) {\n            return knownInAspect(renderScheduler);\n        },\n    });\n}\n\nclass FormPresetKey extends ContextUpKey {\n    constructor() {\n        super('form-preset');\n    }\n    get upKey() {\n        return this;\n    }\n    grow(slot) {\n        slot.insert(new FormPreset(slot.seed.do(mapAfter((...specs) => FormPreset.combine(...specs, DefaultFormPreset)), supplyAfter(slot.context.get(ContextSupply)))));\n    }\n}\nconst FormPreset__key = ( /*#__PURE__*/new FormPresetKey());\nconst FormPreset$rules__symbol = ( /*#__PURE__*/Symbol('FormPreset.rules'));\n/**\n * Form controls preset.\n *\n * Any number of presets can be {@link FormPreset.Spec specified} in component context to be applies to forms\n * and fields. They would be combined into single preset available in component context.\n */\nclass FormPreset {\n    /**\n     * Constructs form preset.\n     *\n     * @param rules - An `AfterEvent` keeper of form preset {@link FormPreset.Rules rules}.\n     */\n    constructor(rules) {\n        this.rules = rules;\n        rules(rules => {\n            this[FormPreset$rules__symbol] = rules;\n        });\n    }\n    /**\n     * A key of component context value containing default form preset combined from all provided {@link FormPreset.Spec\n     * specifiers}.\n     *\n     * As a bare minimum it attaches the following aspects to controls:\n     *\n     * - `InRenderScheduler` set to `ElementRenderScheduler`,\n     * - `InNamespaceAliaser` set to `DefaultNamespaceAliaser.\n     */\n    static get [ContextKey__symbol]() {\n        return FormPreset__key;\n    }\n    /**\n     * Combines form preset specifiers.\n     *\n     * @param specs - Form preset specifiers to combine.\n     *\n     * @returns Form preset rules instance combining the given specifiers.\n     */\n    static combine(...specs) {\n        return {\n            setupField: FormPreset$setupField(specs),\n            setupForm: FormPreset$setupForm(specs),\n        };\n    }\n    /**\n     * Builds an `AfterEvent` keeper of this form preset {@link FormPreset.Rules rules}.\n     */\n    [AfterEvent__symbol]() {\n        return this.rules;\n    }\n    /**\n     * Sets up form field controls.\n     *\n     * @param builder - Target field builder.\n     */\n    setupField(builder) {\n        this[FormPreset$rules__symbol].setupField(builder);\n    }\n    /**\n     * Sets up form controls.\n     *\n     * @param builder - Target form builder.\n     */\n    setupForm(builder) {\n        this[FormPreset$rules__symbol].setupForm(builder);\n    }\n}\nfunction FormPreset$setupField(specs) {\n    return specs.reduce((prev, spec) => spec.setupField\n        ? (builder) => {\n            prev(builder);\n            spec.setupField(builder);\n        }\n        : prev, FormPreset$noFieldSetup);\n}\nfunction FormPreset$noFieldSetup(_builder) {\n    // No field setup\n}\nfunction FormPreset$setupForm(specs) {\n    return specs.reduce((prev, spec) => spec.setupForm\n        ? (builder) => {\n            prev(builder);\n            spec.setupForm(builder);\n        }\n        : prev, FormPreset$noFormSetup);\n}\nfunction FormPreset$noFormSetup(_builder) {\n    // No form setup\n}\n\n/**\n * Abstract unit of input {@link Form form}.\n *\n * Represents a form or its field control and contains its value.\n *\n * @typeParam TValue - Input value type.\n * @typeParam TControls - A type of input controls this unit represents.\n * @typeParam TSharer - Unit sharer component type.\n */\nclass FormUnit extends Shareable {\n    /**\n     * Constructs form unit.\n     *\n     * @param controls - Either input controls, or their provider.\n     */\n    constructor(// eslint-disable-line @typescript-eslint/no-useless-constructor\n    controls) {\n        super(controls);\n    }\n    /**\n     * Input control of the field, if present.\n     */\n    get control() {\n        var _a;\n        return (_a = this.body) === null || _a === void 0 ? void 0 : _a.control;\n    }\n    [Contextual__symbol](sharer) {\n        super[Contextual__symbol](sharer);\n        this.read(noop).needs(sharer); // Create controls eagerly.\n        return this;\n    }\n}\n\n/**\n * A field of the user input {@link Form form}.\n *\n * A component {@link FieldShare shares} field (e.g. using {@link SharedField @SharedField} decorator) to make it\n * accessible by component itself and nested ones. E.g. to add it to {@link Form form} or to manipulate its value.\n *\n * The field instance is not usable until it is bound to its sharer component. The latter is done automatically when\n * the field is shared by {@link FieldShare}.\n *\n * @typeParam TValue - Field value type.\n * @typeParam TSharer - Field sharer component type.\n */\nclass Field extends FormUnit {\n    /**\n     * Creates a form field by the given field control factory.\n     *\n     * @param factory - Field control factory.\n     *\n     * @returns New field instance.\n     */\n    static by(factory) {\n        return new this(this.providerBy(factory));\n    }\n    /**\n     * Creates a form field controls provider by the given control factory.\n     *\n     * @param factory - Field control factory.\n     *\n     * @returns New form field controls provider.\n     */\n    static providerBy(factory) {\n        return builder => ({\n            control: builder.control.build(factory),\n        });\n    }\n    /**\n     * Constructs form field.\n     *\n     * @param controls - Either a field controls instance, or its provider.\n     */\n    constructor(controls) {\n        super(Field$provider(() => this, valueRecipe(controls)));\n    }\n    toString() {\n        return 'Field';\n    }\n}\nfunction Field$provider(field, provider) {\n    return sharer => sharer.get(FormPreset).rules.do(digAfter_(preset => {\n        const builder = {\n            sharer,\n            field: field(),\n            control: new InBuilder(),\n        };\n        preset.setupField(builder);\n        return afterValue(provider(builder));\n    }), deduplicateAfter_(Field$isDuplicateControls, ([controls]) => controls), mapAfter(controls => controls && { field: field(), control: controls.control }));\n}\nfunction Field$isDuplicateControls(prior, next) {\n    if ((prior === null || prior === void 0 ? void 0 : prior.control) !== (next === null || next === void 0 ? void 0 : next.control)) {\n        prior === null || prior === void 0 ? void 0 : prior.control.supply.off();\n        return false;\n    }\n    return true;\n}\n\nconst FieldShare$map = ( /*#__PURE__*/new WeakMap());\n/**\n * A kind of component share containing a {@link Field form field}.\n *\n * This class may be inherited to represent a specific type of forms. E.g. to distinguish multiple fields defined\n * within the same component.\n *\n * @typeParam TValue - Field value type.\n */\nclass FieldShare extends Share {\n    /**\n     * Default field share instance.\n     */\n    static get [Share__symbol]() {\n        let instance = FieldShare$map.get(this);\n        if (!instance) {\n            instance = new this('field');\n            FieldShare$map.set(this, instance);\n        }\n        return instance;\n    }\n    /**\n     * A key of component context value containing default field instance.\n     */\n    static get [ContextKey__symbol]() {\n        return this[Share__symbol][ContextKey__symbol];\n    }\n}\n\nconst FormShare$map = ( /*#__PURE__*/new WeakMap());\n/**\n * A kind of component share containing a user input form.\n *\n * This class may be inherited to represent a specific type of forms. E.g. to support multiple forms within the same\n * component tree.\n *\n * @typeParam TModel - A model type of the form.\n * @typeParam TElt - A type of HTML form element.\n */\nclass FormShare extends Share {\n    /**\n     * Default form share instance.\n     */\n    static get [Share__symbol]() {\n        let instance = FormShare$map.get(this);\n        if (!instance) {\n            instance = new this('form');\n            FormShare$map.set(this, instance);\n        }\n        return instance;\n    }\n    /**\n     * A key of component context value containing default form instance.\n     */\n    static get [ContextKey__symbol]() {\n        return this[Share__symbol][ContextKey__symbol];\n    }\n}\n\n/**\n * Creates a field adjacent to some form unit.\n *\n * Suitable e.g. for buttons or error indicators.\n *\n * The controls of adjacent field are based on the ones of the unit it is adjacent to.\n *\n * @typeParam TValue - Adjacent field value type.\n * @typeParam TAdjacentTo - A type of form unit the field is adjacent to.\n * @typeParam TAdjusted - A type of controls to adjust. I.e. the ones of the form unit the field is adjacent to.\n * @typeParam TSharer - Adjacent field sharer component type.\n */\nfunction adjacentField(controls, adjacentTo) {\n    return new Field(AdjacentField$provider(valueRecipe(controls), shareLocator(adjacentTo, { local: 'too' })));\n}\n/**\n * Creates a field adjacent to another one.\n *\n * @typeParam TValue - Adjacent field value type.\n * @typeParam TSharer - Adjacent field sharer component type.\n * @param controls - Either a field controls instance, or its provider.\n * @param adjacentTo - A locator of the field share the created field is adjacent to. Includes local shares by\n * default. Defaults to {@link FieldShare}.\n */\nfunction adjacentToField(controls, adjacentTo = FieldShare) {\n    return adjacentField(controls, adjacentTo);\n}\n/**\n * Creates a field adjacent to form.\n *\n * @typeParam TValue - Adjacent field value type.\n * @typeParam TSharer - Adjacent field sharer component type.\n * @param controls - Either a field controls instance, or its provider.\n * @param adjacentTo - A locator of the form share the created field is adjacent to. Includes local shares by default.\n * Defaults to {@link FormShare}.\n */\nfunction adjacentToForm(controls, adjacentTo = FormShare) {\n    return adjacentField(controls, adjacentTo);\n}\nfunction AdjacentField$provider(provider, adjacentLocator) {\n    return builder => adjacentLocator(builder.sharer).do(digAfter((adjacentTo, _sharer) => adjacentTo\n        ? adjacentTo.read.do(digAfter((adjusted) => adjusted\n            ? afterValue(provider({\n                ...builder,\n                adjacentTo,\n                adjusted,\n            }))\n            : afterThe()))\n        : afterThe()));\n}\n\n/**\n * @internal\n */\nfunction Field$name(key, name) {\n    if (name === '') {\n        return null;\n    }\n    if (name) {\n        return name;\n    }\n    return Field$nameByKey(key);\n}\n/**\n * @internal\n */\nfunction Field$nameByKey(key) {\n    return typeof key === 'string' ? key : null;\n}\n\n/**\n * Creates a {@link SharedForm shared form} member amendment that adds nested form to enclosing one.\n *\n * @typeParam TForm - Nested form type.\n * @typeParam TModel - Nested form model type.\n * @typeParam TElt - A type of nested HTML form element.\n * @typeParam TClass - A type of decorated component class.\n * @param def - Nested form naming definition.\n *\n * @returns Shared form definition builder.\n */\nfunction FormName(def) {\n    return FormUnitName(def);\n}\n/**\n * Creates a {@link SharedField shared field} member amendment that adds the field to enclosing form.\n *\n * @typeParam TField - Field type.\n * @typeParam TValue - Field value type.\n * @typeParam TClass - A type of decorated component class.\n * @param def - Field naming definition.\n *\n * @returns Shared field definition builder.\n */\nfunction FieldName(def = {}) {\n    return FormUnitName(def);\n}\nfunction FormUnitName(def = {}) {\n    return ({ key, share, locateForm: defaultForm, name: defaultName, amend, }) => {\n        const { name = defaultName } = def;\n        let fieldName;\n        if (name) {\n            fieldName = name;\n        }\n        else if (name != null) {\n            return; // Empty field name. Do not ad it to form.\n        }\n        else {\n            const autoName = Field$nameByKey(key);\n            if (!autoName) {\n                return;\n            }\n            fieldName = autoName;\n        }\n        const locateForm = shareLocator(def.form || defaultForm, { share: FormShare });\n        amend({\n            componentDef: {\n                setup(setup) {\n                    setup.whenComponent(context => {\n                        afterAll({\n                            unit: context.get(share).do(digAfter_(asis, valuesProvider())),\n                            form: locateForm(context).do(digAfter_((form, _sharer) => form, valuesProvider())),\n                        }).do(consumeEvents(({ unit: [field], form: [form] }) => {\n                            if (!form || !field) {\n                                return;\n                            }\n                            const group = form.control.aspect(InGroup);\n                            if (!group) {\n                                return;\n                            }\n                            return group.controls.set(fieldName, field.control);\n                        }));\n                    });\n                },\n            },\n        });\n    };\n}\n\nconst Form__aspect = {\n    applyTo(_control) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return nullInAspect();\n    },\n};\n/**\n * User input form.\n *\n * A component {@link FormShare shares} form (e.g. using {@link SharedForm @SharedForm} decorator) to make its\n * accessible by component itself and nested ones. E.g. to add {@link Field fields} to it or submit it.\n *\n * A form may be nested within another one, as it implements a {@link Field} interface.\n *\n * The form instance is not usable until it is bound to its sharer component. The latter is done automatically when the\n * form is shared by {@link FormShare}.\n *\n * @typeParam TModel - A model type of the form, i.e. a type of its control value.\n * @typeParam TElt - A type of HTML form element.\n * @typeParam TSharer - Form sharer component type.\n */\nclass Form extends FormUnit {\n    /**\n     * Builds a user input form for the given form control and HTML element.\n     *\n     * @param control - Submitted control. Typically a container one.\n     * @param element - HTML element to create control for.\n     * @param options - Form element control options.\n     *\n     * @returns New form instance.\n     */\n    static forElement(control, element, options) {\n        return {\n            control,\n            element: inFormElement(element, { ...options, form: control }),\n        };\n    }\n    /**\n     * Creates a form instance by the given control factories.\n     *\n     * @param factory - Submittable form control factory.\n     * @param elementFactory - Form element control factory or options.\n     *\n     * @returns New form instance.\n     */\n    static by(factory, elementFactory) {\n        return new this(this.providerBy(factory, elementFactory));\n    }\n    /**\n     * Creates a form controls provider by the given control factories.\n     *\n     * @param factory - Submittable form control factory.\n     * @param elementFactory - Form element control factory or options.\n     *\n     * @returns New form controls provider.\n     */\n    static providerBy(factory, elementFactory) {\n        return builder => {\n            let control = () => builder.control.build(\n            // Allow recurrent access to `Form` aspect during control setup.\n            opts => (control = lazyValue(() => factory(opts)))());\n            let element = () => builder.element.build(\n            // Allow recurrent access to `Form` aspect during control setup.\n            opts => (element = lazyValue(() => elementFactory({\n                form: control(),\n                ...opts,\n            })))());\n            return {\n                get control() {\n                    return control();\n                },\n                get element() {\n                    return element();\n                },\n            };\n        };\n    }\n    /**\n     * An input control aspect representing a form this control belongs to.\n     *\n     * This aspect is available in {@link Form.Body.control submittable form control} and {@link Form.Body.element form\n     * element control}.\n     */\n    static get [InAspect__symbol]() {\n        return Form__aspect;\n    }\n    /**\n     * Constructs form.\n     *\n     * @param controls - Either form controls instance, or its provider.\n     */\n    constructor(controls) {\n        super(Form$provider(() => this, valueRecipe(controls)));\n    }\n    /**\n     * Form element control, if present.\n     *\n     * Unlike {@link control input control} this one is not supposed to be submitted, but rather contains a `<form>`\n     * element issuing a `submit` event.\n     */\n    get element() {\n        var _a;\n        return (_a = this.body) === null || _a === void 0 ? void 0 : _a.element;\n    }\n    toString() {\n        return 'Form';\n    }\n}\nfunction Form$provider(form, provider) {\n    const formAspect = control => ({\n        applyAspect(_aspect) {\n            return inconvertibleInAspect(control, Form, form());\n        },\n    });\n    return sharer => sharer.get(FormPreset).rules.do(digAfter_(preset => {\n        const builder = {\n            sharer,\n            form: form(),\n            control: new InBuilder().addAspect(Form, formAspect),\n            element: new InBuilder().addAspect(Form, formAspect),\n        };\n        preset.setupForm(builder);\n        return afterValue(provider(builder));\n    }), deduplicateAfter_(Form$isDuplicateControls, ([controls]) => controls), mapAfter(controls => controls && {\n        get form() {\n            return form();\n        },\n        get control() {\n            return controls.control;\n        },\n        get element() {\n            return controls.element;\n        },\n    }));\n}\nfunction Form$isDuplicateControls(prior, next) {\n    let duplicate = true;\n    if ((prior === null || prior === void 0 ? void 0 : prior.control) !== (next === null || next === void 0 ? void 0 : next.control)) {\n        prior === null || prior === void 0 ? void 0 : prior.control.supply.off();\n        duplicate = false;\n    }\n    if ((prior === null || prior === void 0 ? void 0 : prior.element) !== (next === null || next === void 0 ? void 0 : next.element)) {\n        prior === null || prior === void 0 ? void 0 : prior.element.supply.off();\n        duplicate = false;\n    }\n    return duplicate;\n}\n\nconst FormScope = {\n    /**\n     * Creates an input control setup procedure applied to the given scope.\n     *\n     * @typeParam TControl - Input control type.\n     * @typeParam TValue - Input value type.\n     * @param scope - Setup applicability scope.\n     * @param setup - A setup procedure to apply. Accepts target control instance as parameter and returns a setup supply\n     * peer. The setup should be reverted once this peer's supply cut off.\n     * @param defaultRole - A role name to apply by default. `'default'` when omitted.\n     *\n     * @returns A setup procedure accepting target control as parameter and returning a setup supply. The setup is\n     * reverted once this supply cut off.\n     */\n    createSetup(scope, setup, defaultRole = 'default') {\n        if (scope === false) {\n            return _control => neverSupply();\n        }\n        if (scope === true) {\n            return control => setup(control).supply;\n        }\n        let roles = arrayOfElements(scope);\n        if (!roles.length) {\n            roles = [defaultRole];\n        }\n        if (roles.length === 1) {\n            return control => control.aspect(InRole).when(roles[0], () => setup(control));\n        }\n        return control => roles.reduce((supply, role) => control.aspect(InRole).when(role, () => setup(control)).as(supply), new Supply());\n    },\n};\n\nconst AbstractFormPreset$map = ( /*#__PURE__*/new WeakMap());\n/**\n * Abstract form preset implementation.\n *\n * A class extending it may be used as a feature. E.g. passed to `bootstrapComponents()` function or used as a\n * dependency of another feature.\n *\n * An instance of implementation class may be created to customize its behavior. Such instance implements a\n * `ContextBuilder` interface. Thus is can be passed to context value registration method.\n */\nclass AbstractFormPreset {\n    /**\n     * Feature definition of the preset.\n     */\n    static get [FeatureDef__symbol]() {\n        const found = AbstractFormPreset$map.get(this);\n        if (found) {\n            return found;\n        }\n        const preset = new this();\n        const featureDef = {\n            setup: setup => {\n                setup.provide(preset);\n            },\n        };\n        AbstractFormPreset$map.set(this, featureDef);\n        return featureDef;\n    }\n    /**\n     * Provides this form preset to the given context.\n     *\n     * @param registry - A context registry to provide a value to.\n     *\n     * @returns A supply instance that removes the added preset once cut off.\n     */\n    [ContextBuilder__symbol](registry) {\n        return registry.provide({ a: FormPreset, is: this });\n    }\n    /**\n     * Sets up form field controls.\n     *\n     * Does nothing by default.\n     *\n     * @param _builder - Target field builder.\n     */\n    setupField(_builder) {\n        // No field setup\n    }\n    /**\n     * Sets up form controls.\n     *\n     * Does nothing by default.\n     *\n     * @param _builder - Target form builder.\n     */\n    setupForm(_builder) {\n        // No form setup\n    }\n}\n\nconst ScopedFormConfig = {\n    /**\n     * Creates an input control setup procedure that applies the given configuration to appropriate scope.\n     *\n     * @typeParam TOptions - A type of setup options.\n     * @typeParam TControl - Input control type.\n     * @typeParam TValue - Input value type.\n     * @param config - Scoped form setup configuration.\n     * @param createSetup - A function accepting setup options and returning a procedure that sets up the given control\n     * with these options. The setup procedure returns a setup supply peer. The setup should be reverted once this peer's\n     * supply cut off.\n     * @param defaultRole - A role name to apply by default. `'default'` when omitted.\n     *\n     * @returns A setup procedure accepting target control as parameter and returning a setup supply. The setup is\n     * reverted once this supply cut off.\n     */\n    createSetup(config, createSetup, defaultRole) {\n        let scope;\n        let options;\n        if (Array.isArray(config)) {\n            const [first, ...rest] = config;\n            if (ScopedFormConfig$isOptions(first)) {\n                scope = rest.length > 1 ? rest : rest[0];\n                options = first;\n            }\n            else {\n                scope = config;\n            }\n        }\n        else if (ScopedFormConfig$isOptions(config)) {\n            options = config;\n        }\n        else {\n            scope = config;\n        }\n        return FormScope.createSetup(scope, createSetup(options), defaultRole);\n    },\n};\nfunction ScopedFormConfig$isOptions(config) {\n    return config != null && typeof config !== 'string' && typeof config !== 'boolean';\n}\n\n/**\n * Form preset that enables CSS class indication of form and field states.\n *\n * - Enables CSS info classes (`inCssInfo()`) for forms and fields.\n * - Enables error indication (`inCssError()`) for fields.\n */\nclass FormCssPreset extends AbstractFormPreset {\n    /**\n     * Constructs customized form CSS preset.\n     *\n     * @param options - Custom form CSS preset options.\n     */\n    constructor(options = {}) {\n        super();\n        this._info = ScopedFormConfig.createSetup(options.info, opts => {\n            const src = inCssInfo(opts);\n            return control => control.aspect(InCssClasses).add(src);\n        });\n        this._error = ScopedFormConfig.createSetup(options.error, opts => {\n            const src = inCssError(opts);\n            return control => control.aspect(InCssClasses).add(src);\n        });\n    }\n    setupField(builder) {\n        builder.control.setup(this._info).setup(this._error);\n    }\n    setupForm(builder) {\n        builder.control.setup(this._info);\n        builder.element.setup(InCssClasses, (css, element) => css.add(element.aspect(Form).control.aspect(InCssClasses)));\n    }\n}\n\n/**\n * Form preset that enables default form and field mode management.\n *\n * - Makes form mode depend on its validity (`inModeByValidity()`).\n * - Derives form field's mode from form element's one.\n */\nclass FormModePreset extends AbstractFormPreset {\n    /**\n     * Constructs customized form mode preset.\n     *\n     * @param options - Custom form mode preset options.\n     */\n    constructor(options = {}) {\n        super();\n        this._byValidity = ScopedFormConfig.createSetup(options.byValidity, opts => {\n            const src = inModeByValidity(opts);\n            return control => control.aspect(InMode).derive(src);\n        });\n        this._byForm = FormScope.createSetup(options.byForm, control => control.aspect(InParents).read.do(consumeEvents(parents => {\n            const supply = new Supply();\n            itsEach(parents, ({ parent }) => {\n                const form = parent.aspect(Form);\n                if (form) {\n                    control.aspect(InMode).derive(form.element.aspect(InMode)).as(supply);\n                }\n            });\n            return supply;\n        })));\n    }\n    setupField(builder) {\n        builder.control.setup(this._byForm);\n    }\n    setupForm(builder) {\n        builder.control.setup(this._byValidity);\n    }\n}\n\n/**\n * Creates an amendment (and decorator) of component method to call on input form submit.\n *\n * @typeParam TModel - Submitted model type.\n * @typeParam TElt - A type of HTML form element.\n * @typeParam TClass - Amended component class type.\n * @typeParam TAmended - Amended component member entity type.\n * @param def - Submit handler definition.\n *\n * @returns New component property decorator.\n */\nfunction OnSubmit(def = {}) {\n    const { form: formRef = FormShare, cancel = true } = def;\n    const locateForm = shareLocator(formRef, { share: FormShare, local: 'too' });\n    return ComponentMember(({ get, amend }) => amend({\n        componentDef: {\n            define(defContext) {\n                defContext.whenComponent(context => {\n                    context.whenConnected(() => {\n                        const { component } = context;\n                        locateForm(context).do(consumeEvents((form, _sharer) => {\n                            const controls = form === null || form === void 0 ? void 0 : form.body;\n                            if (!controls) {\n                                return;\n                            }\n                            let onSubmit = controls.element.events.on('submit');\n                            if (cancel) {\n                                onSubmit = onSubmit.do(handleDomEvents(false));\n                            }\n                            return onSubmit(event => get(component).call(component, controls, event));\n                        })).needs(context);\n                    });\n                });\n            },\n        },\n    }));\n}\n\nfunction SharedField(defOrAmendment = {}, ...amendments) {\n    let def;\n    let fieldName;\n    let amender;\n    if (typeof defOrAmendment === 'function' || isAmendatory(defOrAmendment)) {\n        def = {};\n        amender = allAmender([defOrAmendment, ...amendments, FieldName()]);\n    }\n    else {\n        def = defOrAmendment;\n        fieldName = defOrAmendment.name;\n        amender = allAmender([...amendments, FieldName({ name: fieldName })]);\n    }\n    const { share = FieldShare, form, } = def;\n    const locateForm$default = shareLocator(form, { share: FormShare });\n    return Shared(share, baseTarget => {\n        amender(newAmendTarget({\n            base: {\n                ...baseTarget,\n                locateForm: locateForm$default,\n                name: Field$name(baseTarget.key, fieldName),\n            },\n            amend(base, request = {}) {\n                const { locateForm = base.locateForm, name = base.name, ...baseRequest } = request;\n                const createBaseTarget = baseTarget.amend(baseRequest);\n                return () => ({\n                    ...createBaseTarget(),\n                    locateForm,\n                    name,\n                });\n            },\n        }));\n    });\n}\n\nfunction SharedForm(defOrAmendment = {}, ...amendments) {\n    if (typeof defOrAmendment === 'function' || isAmendatory(defOrAmendment)) {\n        return Shared(FormShare, defOrAmendment, ...amendments);\n    }\n    const { share = FormShare } = defOrAmendment;\n    return Shared(share, ...amendments);\n}\n\nexport { AbstractFormPreset, Field, FieldName, FieldShare, Form, FormCssPreset, FormModePreset, FormName, FormPreset, FormScope, FormShare, FormUnit, OnSubmit, ScopedFormConfig, SharedField, SharedForm, adjacentField, adjacentToField, adjacentToForm };\n//# sourceMappingURL=wesib.forms.js.map\n","/**\n * Checks whether the given value is a {@DoqryCombinator CSS selector combinator}.\n *\n * @param value - A value to check.\n *\n * @returns `true` if the value equals to `'>'`, `'+'`, or `'~'`. `false otherwise.\n */\nfunction isDoqryCombinator(value) {\n    return value === '>' || value === '+' || value === '~';\n}\n\n/**\n * Decodes URL component.\n *\n * In contrast to standard [decodeURIComponent] function this one decodes `+` signs as spaces.\n *\n * [decodeURIComponent]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\n *\n * @param url - URL component to decode.\n *\n * @returns Decoded URL component.\n */\n\n/**\n * Escapes CSS identifier accordingly to the rules defined for [CSS.escape()](https://drafts.csswg.org/cssom/#the-css.escape%28%29-method)\n * utility method.\n *\n * Can be applied to CSS values as well, although it escapes characters that don't strictly need to be escaped.\n * A {@link escapeCSSVal} is a better alternative for that.\n *\n * @param text - A text to escape.\n *\n * @returns A string safe to be used as CSS identifier, e.g. as CSS selector.\n */\nfunction escapeCSS(text) {\n    const len = text.length;\n    const first = text.charCodeAt(0);\n    let out = '';\n    let i = 0;\n    if (first === 0x2d) {\n        // If the first character is a \"-\" (U+002D)\n        const second = text.charCodeAt(1);\n        // ... and the second character is in the range [0-9] (U+0030 to U+0039).\n        if (second > 0x2f && second < 0x3a) {\n            // then '-' followed by the character escaped as code point.\n            out += `-\\\\${second.toString(16)} `;\n            i = 2;\n        }\n        else {\n            out = '-';\n            i = 1;\n        }\n        if (len === 1) {\n            // ... and there is no second character, then the escaped character.\n            return '\\\\-';\n        }\n    }\n    else if (first > 0x2f && first < 0x3a) {\n        // If the first character is in the range [0-9] (U+0030 to U+0039),\n        // then the character escaped as code point.\n        out += `\\\\${first.toString(16)} `;\n        i = 1;\n    }\n    for (; i < len; ++i) {\n        const c = text.charCodeAt(i);\n        if (\n        // Is in range [a-z] (U+0061 to U+007A),\n        (c > 0x60 && c < 0x7b)\n            // or is \"-\" (U+002D),\n            || c === 0x2d\n            // or is \"_\" (U+005F)\n            || c === 0x5f\n            // or is in range [0-9] (U+0030 to U+0039),\n            || (c > 0x2f && c < 0x3a)\n            // or is in range [A-Z] (U+0041 to U+005A)\n            || (c > 0x40 && c < 0x5b)) {\n            // then the character itself.\n            out += text[i];\n        }\n        else if (c > 0x7e) {\n            out += c === 0x7f\n                // If the character is U+007F\n                // then the character escaped as code point.\n                ? `\\\\${c.toString(16)} `\n                // If the character is greater than or equal to U+0080,\n                // then the character itself\n                : text[i];\n        }\n        else if (c < 0x20) {\n            out += c\n                // If the character is in the range [\\1-\\1f] (U+0001 to U+001F)\n                // then the character escaped as code point.\n                ? `\\\\${c.toString(16)} `\n                // If the character is NULL (U+0000)\n                // then the REPLACEMENT CHARACTER (U+FFFD).\n                : '\\uFFFD';\n        }\n        else {\n            // Otherwise, the escaped character.\n            out += `\\\\${text[i]}`;\n        }\n    }\n    return out;\n}\n\n/**\n * Escapes CSS value to be included into CSS string.\n *\n * Escapes accordingly to [serialize a string] algorithm.\n *\n * [serialize a string]: https://drafts.csswg.org/cssom/#serialize-a-string\n *\n * @param text - A text to escape.\n *\n * @returns A string safe to be included into CSS value, e.g. within CSS string.\n */\nfunction escapeCSSVal(text) {\n    let out = '';\n    const len = text.length;\n    for (let i = 0; i < len; ++i) {\n        const c = text.charCodeAt(i);\n        out += c < 0x20 || c === 0x7f\n            ? (c\n                // If the character is in the range [\\1-\\1f] (U+0001 to U+001F),\n                // the character escaped as code point.\n                ? `\\\\${c.toString(16)} `\n                // If the character is NULL (U+0000), then the REPLACEMENT CHARACTER (U+FFFD).;\n                : '\\uFFFD')\n            : (c === 0x22 || c === 0x5c\n                // If the character is '\"' (U+0022) or \"\\\" (U+005C),\n                // the escaped character.\n                ? `\\\\${text[i]}`\n                // Otherwise, the character itself.\n                : text[i]);\n    }\n    return out;\n}\n\n/**\n * Naming schema is responsible for applying namespace aliases to simple names. E.g. by appending alias as prefix or\n * suffix of the name.\n */\nclass Naming {\n    /**\n     * Converts the given qualified `name` into simple one accordingly to this naming schema.\n     *\n     * @param name Qualified name to convert.\n     * @param nsAlias Namespace aliaser to use.\n     */\n    name(name, nsAlias) {\n        if (typeof name === 'string') {\n            return name;\n        }\n        const [local, ns] = name;\n        return ns.name(nsAlias(ns), local, this);\n    }\n}\n\n/**\n * @internal\n */\nclass DefaultNaming extends Naming {\n    applyAlias(name, alias) {\n        return `${alias}-${name}`;\n    }\n}\n/**\n * Default naming schema.\n *\n * Prefixes a name with namespace alias separating them by dash.\n *\n * The result looks like `<alias>-<name>`.\n */\nconst default__naming = ( /*#__PURE__*/new DefaultNaming());\n/**\n * HTML elements naming schema.\n *\n * Prefixes a name with namespace alias separating them by dash.\n *\n * The result looks like `<alias>-<name>`.\n */\nconst html__naming = ( /*#__PURE__*/new DefaultNaming());\n/**\n * @internal\n */\nclass XmlNaming extends Naming {\n    applyAlias(name, alias) {\n        return `${alias}:${name}`;\n    }\n}\n/**\n * Element identifiers naming schema.\n *\n * Prefixes a name with namespace alias separating them by colon.\n *\n * The result looks like `<alias>:<name>`.\n */\nconst id__naming = ( /*#__PURE__*/new XmlNaming());\n/**\n * @internal\n */\nclass CssNaming extends Naming {\n    applyAlias(name, alias) {\n        return `${name}@${alias}`;\n    }\n}\n/**\n * CSS classes naming scheme.\n *\n * Appends namespace alias as a name suffix separated by `@` sign.\n *\n * The result looks like `<name>@<alias>`.\n */\nconst css__naming = ( /*#__PURE__*/new CssNaming());\n\n/**\n * Namespace definition.\n *\n * Namespaces are identified by their URLs.\n */\nclass NamespaceDef {\n    /**\n     * Constructs new namespace definition.\n     *\n     * @param url - Unique namespace URL.\n     * @param aliases - Preferred namespace aliases. It is expected that each alias is an ASCII letter followed by\n     * any number of ASCII letters, digits, `-`, or `_` signs. Aliases starting with `xml` are reserved. Empty alias\n     * is reserved for {@link DEFAULT__NS default namespace}.\n     */\n    constructor(url, ...aliases) {\n        this.url = url;\n        this.aliases = aliases;\n    }\n    /**\n     * The most preferred namespace alias.\n     *\n     * By default this is the first preferred alias, or `ns` if there is no preferred aliases.\n     */\n    get alias() {\n        return this.aliases[0] || 'ns';\n    }\n    /**\n     * Converts a local `name` belonging to this namespace to simple one according to the given `naming` schema.\n     *\n     * Calls {@link Naming.applyAlias} by default.\n     *\n     * @param alias - Namespace alias to apply to the name.\n     * @param name - A name to convert.\n     * @param naming - Naming schema to use. {@link default__naming default naming schema} is used when omitted.\n     *\n     * @returns A simple name with this namespace alias applied.\n     */\n    name(alias, name, naming = default__naming) {\n        return naming.applyAlias(name, alias, this);\n    }\n}\n\n/**\n * Checks whether the given `value` is a name+namespace tuple.\n *\n * @param value - A value to check.\n *\n * @returns `true` if the given `value` is an array consisting of exactly two elements, where the first element is a\n * non-empty string, and the second element is an instance of {@link NamespaceDef}. Or `false` otherwise.\n */\nfunction isNameAndNamespace(value) {\n    return Array.isArray(value)\n        && value.length === 2\n        && typeof value[0] === 'string'\n        && isNamespaceDef(value[1]);\n}\nfunction isNamespaceDef(value) {\n    if (value instanceof NamespaceDef) {\n        return true;\n    }\n    return typeof value === 'object'\n        && typeof value.url === 'string'\n        && typeof value.alias === 'string'\n        && Array.isArray(value.aliases)\n        && typeof value.name === 'function';\n}\n/**\n * Checks whether the given `value` is a qualified name.\n *\n * @param value - A value to check.\n *\n * @returns `true` if the given `value` is a string, or an array consisting of exactly two elements, where the first\n * element is a non-empty string, and the second element is an instance of {@link NamespaceDef}. `false` otherwise.\n */\nfunction isQualifiedName(value) {\n    return typeof value === 'string' || isNameAndNamespace(value);\n}\n/**\n * Checks whether two qualified names are equal to each other.\n *\n * @param first - First qualified name to compare.\n * @param second - Second qualified name to compare.\n *\n * @returns `true` if both names are equal, or `false` otherwise.\n */\nfunction namesEqual(first, second) {\n    if (typeof first === 'string') {\n        return typeof second === 'string' ? first === second : !second[1].url && second[0] === first;\n    }\n    const [firstName, { url: firstUrl }] = first;\n    if (typeof second === 'string') {\n        return !firstUrl && firstName === second;\n    }\n    return firstName === second[0] && firstUrl === second[1].url;\n}\n/**\n * Compares two qualified names.\n *\n * Names in default namespace considered less than other names. Namespaces are compared by their URLs.\n *\n * @param first - First qualified name to compare.\n * @param second - Second qualified name to compare.\n *\n * @returns `-1` if the `first` name is less than the `second` one, `0` if they are equal, or `1` if the `first` name\n * is greater than the `second` one.\n */\nfunction compareNames(first, second) {\n    if (typeof first === 'string') {\n        if (typeof second === 'string') {\n            return compareStrings(first, second);\n        }\n        if (!second[1].url) {\n            return compareStrings(first, second[0]);\n        }\n        return -1;\n    }\n    const [firstName, { url: firstUrl }] = first;\n    if (typeof second === 'string') {\n        if (!firstUrl) {\n            return compareStrings(firstName, second);\n        }\n        return 1;\n    }\n    return compareStrings(firstUrl, second[1].url) || compareStrings(firstName, second[0]);\n}\n/**\n * @internal\n */\nfunction compareStrings(first, second) {\n    return first < second ? -1 : first > second ? 1 : 0;\n}\n\n/**\n * Creates a namespace aliaser.\n *\n * The returned function tries to find a registered alias for the given namespace. If not found then tries to use one\n * of its preferred aliases. If all of them are reserved already for another namespaces, generates a new unique alias.\n *\n * @returns New instance of namespace aliaser.\n */\nfunction newNamespaceAliaser() {\n    const aliasesByNs = new Map();\n    const nsNumPerAlias = new Map();\n    return function nsAlias(ns) {\n        const found = aliasesByNs.get(ns.url);\n        if (found) {\n            return found;\n        }\n        const mostPreferred = ns.alias;\n        let nsNumRegistered = 0;\n        for (const preferred of [mostPreferred, ...ns.aliases]) {\n            const ids = nsNumPerAlias.get(preferred);\n            if (!ids) {\n                aliasesByNs.set(ns.url, preferred);\n                nsNumPerAlias.set(preferred, 1);\n                return preferred;\n            }\n            if (!nsNumRegistered) {\n                // Use the first one\n                nsNumRegistered = ids;\n            }\n        }\n        const generated = `${mostPreferred}${++nsNumRegistered}`;\n        aliasesByNs.set(ns.url, generated);\n        nsNumPerAlias.set(mostPreferred, nsNumRegistered);\n        return generated;\n    };\n}\n\nfunction isArrayOfElements(value) {\n    return Array.isArray(value);\n}\n\n/**\n * Checks whether two values are the same. I.e. strictly equal to each other.\n *\n * @typeParam T - A type of values.\n * @param first - First value to compare.\n * @param second - Second value to compare.\n *\n * @returns `true` if `first === second`, or `false` otherwise.\n */\nfunction areTheSame(first, second) {\n    return first === second;\n}\n\nfunction arraysAreEqual(first, second, compareOrFromOrLength, fromOrLength, to) {\n    return typeof compareOrFromOrLength === 'function'\n        ? arrayElementsAreEqual(first, second, compareOrFromOrLength, fromOrLength, to)\n        : arrayElementsAreEqual(first, second, areTheSame, compareOrFromOrLength, fromOrLength);\n}\nfunction arrayElementsAreEqual(first, second, elementsAreEqual, fromOrLength, to) {\n    let start;\n    let end;\n    if (to !== undefined) {\n        start = fromOrLength ? Math.max(fromOrLength, 0) : 0;\n        end = to != null ? to : Math.max(first.length, second.length);\n    }\n    else if (fromOrLength != null) {\n        start = 0;\n        end = fromOrLength;\n    }\n    else {\n        start = 0;\n        end = Math.max(first.length, second.length);\n    }\n    if ((first.length <= end || second.length <= end) && first.length !== second.length) {\n        return false;\n    }\n    for (let i = start; i < end; ++i) {\n        if (!elementsAreEqual(first[i], second[i], i)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * A key of {@link PushIterable} iteration method.\n */\nconst PushIterator__symbol = ( /*#__PURE__*/Symbol('push-iterator'));\n\nfunction isPushIterable(iterable) {\n    return !!iterable[PushIterator__symbol];\n}\n\nfunction iteratorOf(iterable) {\n    return iterable[Symbol.iterator]();\n}\n\n/**\n * Creates a push iterable implementation.\n *\n * @typeParam T - Iterated elements type.\n * @param iterate - A function iterating over iterable elements conforming to {@link PushIterable.Iterate} requirements.\n *\n * @returns New push iterable instance performing iteration by `forNext` function.\n */\nfunction makePushIterable(iterate) {\n    return {\n        [Symbol.iterator]: PushIterable$iterator,\n        [PushIterator__symbol]: iterate,\n    };\n}\n/**\n * @internal\n */\nfunction PushIterable$iterator() {\n    return this[PushIterator__symbol]();\n}\n\n/**\n * Iterates over elements of the given push iterable.\n *\n * Calls `accept` method for each iterated element until there are elements to iterate, or `accept` returned either\n * `true` or `false`.\n *\n * Calling this function is the same as calling `!iterable[PushIterator__symbol](accept).isOver()`.\n *\n * @typeParam T - Iterated elements type.\n * @param iterable - A push iterable to iterate elements of.\n * @param accept - A function to push iterated elements to. Accepts iterated element as its only parameter. May return\n * `true` to suspend iteration, or `false` to stop it.\n *\n * @returns `true` if there are more elements to iterate, or `false` otherwise. The former is possible only when\n * iteration suspended, i.e. `accept` returned `true`.\n */\nfunction pushIterated(iterable, accept) {\n    return !iterable[PushIterator__symbol](accept).isOver();\n}\n\n/**\n * Creates a push iterator implementation.\n *\n * @typeParam T - Iterated elements type.\n * @param forNext - A function iterating over elements conforming to push iteration protocol.\n *\n * @returns New push iterator instance performing iteration by `forNext` function.\n */\nfunction makePushIterator(forNext) {\n    let over = false;\n    let iterate = (accept) => {\n        if (accept && !forNext(accept)) {\n            over = true;\n            iterate = PushIterator$dontIterate;\n        }\n    };\n    return {\n        [Symbol.iterator]: PushIterator$iterator,\n        [PushIterator__symbol](accept) {\n            iterate(accept);\n            return this;\n        },\n        next: PushIterator$next,\n        isOver: () => over,\n    };\n}\n/**\n * @internal\n */\nfunction PushIterator$iterator() {\n    return this;\n}\n/**\n * @internal\n */\nfunction PushIterator$next() {\n    for (;;) {\n        let result;\n        const over = !pushIterated(this, value => {\n            result = { value };\n            return true;\n        });\n        if (result) {\n            return result;\n        }\n        if (over) {\n            return { done: true };\n        }\n    }\n}\n/**\n * @internal\n */\nfunction PushIterator$noNext() {\n    return { done: true };\n}\n/**\n * @internal\n */\nfunction PushIterator$dontIterate(_accept) {\n    /* do not iterate */\n}\n/**\n * @internal\n */\nconst emptyPushIterator = {\n    [Symbol.iterator]: PushIterator$iterator,\n    [PushIterator__symbol](_accept) {\n        return this;\n    },\n    next: () => ({ done: true }),\n    isOver: () => true,\n};\n\n/**\n * Iterates over the head elements of the given push iterable.\n *\n * Calls `accept` method for each iterated element until there are elements to iterate, or `accept` returned either\n * `true` or `false`.\n *\n * Calling this function is the same as calling `iterable[PushIterator__symbol](accept)`.\n *\n * @typeParam T - Iterated elements type.\n * @param iterable - A push iterable to iterate elements of.\n * @param accept - A function to push iterated elements to. Accepts iterated element as its only parameter. May return\n * `true` to suspend iteration, or `false` to stop it.\n *\n * @returns A push iterator instance representing the tail of the given iterable. This iterator can be used to continue\n * iteration with, unless `accept` returned `false`. In the latter case the further iteration won't be possible.\n */\nfunction pushHead(iterable, accept) {\n    return iterable[PushIterator__symbol](accept);\n}\n/**\n * @internal\n */\nfunction iterateOverIndexed(indexed, elementOf) {\n    return accept => {\n        let i = 0;\n        const forNext = (accept) => {\n            if (i >= indexed.length) {\n                return false;\n            }\n            for (;;) {\n                const goOn = accept(elementOf(indexed, i++));\n                if (i >= indexed.length || goOn === false) {\n                    return false;\n                }\n                if (goOn === true) {\n                    return true;\n                }\n            }\n        };\n        if (accept && !forNext(accept)) {\n            return emptyPushIterator;\n        }\n        let over = false;\n        let iterate = (accept) => {\n            if (accept && !forNext(accept)) {\n                over = true;\n                iterate = PushIterator$dontIterate;\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                next = PushIterator$noNext;\n            }\n        };\n        let next = () => {\n            if (i < indexed.length) {\n                return { value: elementOf(indexed, i++) };\n            }\n            over = true;\n            iterate = PushIterator$dontIterate;\n            next = PushIterator$noNext;\n            return { done: true };\n        };\n        return {\n            [Symbol.iterator]: PushIterator$iterator,\n            [PushIterator__symbol](accept) {\n                iterate(accept);\n                return this;\n            },\n            next: () => next(),\n            isOver: () => over,\n        };\n    };\n}\n\n/**\n * @internal\n */\nfunction arrayElementOf(array, index) {\n    return array[index];\n}\n/**\n * @internal\n */\nfunction iterateOverArray(array) {\n    return iterateOverIndexed(array, arrayElementOf);\n}\n\n/**\n * @internal\n */\nfunction toPushIterator(it, forNext) {\n    let over = false;\n    let iterate = (accept) => {\n        if ((over = !!accept && !forNext(accept))) {\n            iterate = PushIterator$dontIterate;\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            next = PushIterator$noNext;\n        }\n    };\n    let next = () => {\n        const res = it.next();\n        if (res.done) {\n            over = true;\n            iterate = PushIterator$dontIterate;\n            next = PushIterator$noNext;\n        }\n        return res;\n    };\n    return {\n        [Symbol.iterator]: PushIterator$iterator,\n        [PushIterator__symbol](accept) {\n            iterate(accept);\n            return this;\n        },\n        next() {\n            return next();\n        },\n        isOver: () => over,\n    };\n}\n/**\n * @internal\n */\nfunction rawIteratorPusher(it) {\n    return accept => {\n        for (;;) {\n            const res = it.next();\n            if (res.done) {\n                return false;\n            }\n            const status = accept(res.value);\n            if (typeof status === 'boolean') {\n                return status;\n            }\n        }\n    };\n}\n\n/**\n * Iterates over elements of the given iterable.\n *\n * Calls `accept` method for each iterated element until there are elements to iterate, or `accept` returned either\n * `true` or `false`.\n *\n * In contrast to {@link pushHead} function, this one accepts any iterable instance.\n *\n * @typeParam T - Iterated elements type.\n * @param iterable - An iterable to iterate elements of.\n * @param accept - A function to push iterated elements to. Accepts iterated element as its only parameter. May return\n * `true` to suspend iteration, or `false` to stop it.\n *\n * @returns A push iterator instance representing the tail of the given iterable. This iterator can be used to continue\n * iteration with, unless `accept` returned `false`. In the latter case the further iteration won't be possible.\n */\nfunction itsHead(iterable, accept) {\n    if (isPushIterable(iterable)) {\n        return pushHead(iterable, accept);\n    }\n    if (Array.isArray(iterable)) {\n        return arrayHead(iterable, accept);\n    }\n    return rawIterableHead(iterable, accept);\n}\n/**\n * @internal\n */\nfunction arrayHead(array, accept) {\n    return array.length ? iterateOverArray(array)(accept) : emptyPushIterator;\n}\n/**\n * @internal\n */\nfunction rawIterableHead(iterable, accept) {\n    const it = iteratorOf(iterable);\n    if (isPushIterable(it)) {\n        return pushHead(it, accept);\n    }\n    const forEach = rawIteratorPusher(it);\n    return forEach(accept) ? toPushIterator(it, forEach) : emptyPushIterator;\n}\n\n/**\n * Returns a {@link PushIterator | push iterable iterator} without elements.\n *\n * @typeParam T - Iterated elements type.\n *\n * @returns Empty push iterable and push iterator instance.\n */\nfunction overNone() {\n    return emptyPushIterator;\n}\n\nfunction flatMapIt(source, convert = flatMapIt$defaultConverter) {\n    return makePushIterable(accept => {\n        const forNext = isPushIterable(source) ? flatMapPusher(source, convert) : flatMapRawPusher(source, convert);\n        return accept && !forNext(accept) ? overNone() : makePushIterator(forNext);\n    });\n}\n/**\n * @internal\n */\nfunction flatMapPusher(source, convert) {\n    let subs;\n    let lastSrc = false;\n    return accept => {\n        for (;;) {\n            while (!subs) {\n                const sourceTail = pushHead(source, src => {\n                    subs = convert(src);\n                    return true;\n                });\n                source = sourceTail;\n                if (sourceTail.isOver()) {\n                    if (!subs) {\n                        return false;\n                    }\n                    lastSrc = true;\n                }\n            }\n            // eslint-disable-next-line @typescript-eslint/no-invalid-void-type\n            let status;\n            const subsTail = itsHead(subs, element => status = accept(element));\n            if (subsTail.isOver()) {\n                subs = undefined;\n                if (lastSrc) {\n                    return false;\n                }\n            }\n            else {\n                subs = subsTail;\n            }\n            if (typeof status === 'boolean') {\n                return status;\n            }\n        }\n    };\n}\n/**\n * @internal\n */\nfunction flatMapRawPusher(source, convert) {\n    const it = iteratorOf(source);\n    if (isPushIterable(it)) {\n        return flatMapPusher(it, convert);\n    }\n    let subs;\n    return accept => {\n        for (;;) {\n            if (!subs) {\n                const next = it.next();\n                if (next.done) {\n                    return false;\n                }\n                subs = convert(next.value);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-invalid-void-type\n            let status;\n            const subsTail = itsHead(subs, element => status = accept(element));\n            subs = subsTail.isOver() ? undefined : subsTail;\n            if (typeof status === 'boolean') {\n                return status;\n            }\n        }\n    };\n}\n/**\n * @internal\n */\nfunction flatMapIt$defaultConverter(element) {\n    return element;\n}\n\nconst DoqryPicker__symbol = ( /*#__PURE__*/Symbol('DoqryPicker'));\nclass DoqryPicker$Mutable extends Array {\n    get [DoqryPicker__symbol]() {\n        return this;\n    }\n}\nfunction DoqrySelector$normalize(selector) {\n    const normalized = selector[DoqryPicker__symbol];\n    if (normalized) {\n        return normalized;\n    }\n    if (!isArrayOfElements(selector)) {\n        return new DoqryPicker$Mutable(DoqrySelector$normalizeKey(selector));\n    }\n    const picker = new DoqryPicker$Mutable();\n    let combinator;\n    for (const item of selector) {\n        const prevCombinator = combinator;\n        if (combinator) {\n            picker.push(combinator);\n            combinator = undefined;\n        }\n        let part;\n        if (isDoqryCombinator(item)) {\n            combinator = item;\n            if (!prevCombinator) {\n                continue;\n            }\n            part = {};\n        }\n        else {\n            part = DoqrySelector$normalizeKey(item);\n        }\n        picker.push(part);\n    }\n    if (combinator) {\n        picker.push(combinator, {});\n    }\n    return picker;\n}\nfunction DoqrySelector$normalizeKey(key) {\n    if (typeof key === 'string') {\n        if (!key) {\n            return {};\n        }\n        return { s: key };\n    }\n    return DoqrySelector$Part$normalize(key);\n}\nfunction DoqrySelector$Part$normalize(part) {\n    const ns = part.ns || undefined;\n    const i = part.i || undefined;\n    const c = DoqryClass$normalizeAll(part.c);\n    const u = DoqrySubSelector$normalizeAll(part.u);\n    return {\n        ns,\n        e: (part.e !== '*' || !ns && !i && !c && u && DoqrySubSelector$isPseudo(u[0])) && part.e || undefined,\n        i,\n        c,\n        u,\n        s: part.s || undefined,\n        $: DoqryQualifier$normalizeAll(part.$),\n    };\n}\nfunction DoqryClass$normalizeAll(classes) {\n    if (!classes) {\n        return;\n    }\n    if (isQualifiedName(classes)) {\n        return [classes];\n    }\n    const result = classes.filter(c => !!c);\n    return result.length ? result.sort(compareNames) : undefined;\n}\nfunction DoqrySubSelector$normalizeAll(subs) {\n    if (!subs) {\n        return;\n    }\n    if ( /*#__INLINE__*/isDoqrySubSelectorsArray(subs)) {\n        const result = subs.map(DoqrySubSelector$normalize);\n        return result.length ? result : undefined;\n    }\n    return [DoqrySubSelector$normalize(subs)];\n}\nfunction isDoqrySubSelectorsArray(subs) {\n    return typeof subs[0] !== 'string';\n}\nfunction DoqrySubSelector$normalize(sub) {\n    if (!DoqrySubSelector$isPseudo(sub)) {\n        return sub;\n    }\n    if (sub.length < 3) {\n        return sub;\n    }\n    const [prefix, name, ...params] = sub;\n    if ( /*#__INLINE__*/isDoqrySubSelectorParametersArray(params)) {\n        return [prefix, name, ...params.map(DoqrySelector$normalize)];\n    }\n    return [prefix, name, DoqrySelector$normalize(params)];\n}\nfunction DoqrySubSelector$isPseudo(sub) {\n    return sub.length > 1 && (sub[0] === ':' || sub[0] === '::');\n}\nfunction isDoqrySubSelectorParametersArray(param) {\n    return isArrayOfElements(param[0]);\n}\nfunction DoqryQualifier$normalizeAll(qualifiers) {\n    if (!qualifiers) {\n        return;\n    }\n    if (!isArrayOfElements(qualifiers)) {\n        qualifiers = [...DoqryQualifier$expose(qualifiers)];\n    }\n    else {\n        qualifiers = [...new Set(flatMapIt(qualifiers, DoqryQualifier$expose))].sort();\n    }\n    return qualifiers.length ? qualifiers : undefined;\n}\nconst DoqryQualifier$none$exposed = ( /*#__PURE__*/new Set());\nfunction DoqryQualifier$expose(qualifier) {\n    if (!qualifier) {\n        return DoqryQualifier$none$exposed;\n    }\n    const eqIdx = qualifier.indexOf('=');\n    const name = eqIdx < 0 ? qualifier : qualifier.substring(0, eqIdx);\n    const exposed = new Set();\n    let lastExposed;\n    for (const part of name.split(':')) {\n        if (lastExposed) {\n            lastExposed += ':' + part;\n        }\n        else {\n            lastExposed = part;\n        }\n        exposed.add(lastExposed);\n    }\n    if (eqIdx >= 0) {\n        exposed.add(qualifier);\n    }\n    return exposed;\n}\n\nfunction doqryPicker(selector) {\n    return DoqrySelector$normalize(selector);\n}\n/**\n * Normalizes arbitrary part of structured CSS selector.\n *\n * @param part - CSS selector party to normalize.\n *\n * @returns Normalized CSS picker part.\n */\nfunction doqryPickerPart(part) {\n    return DoqrySelector$Part$normalize(part);\n}\n\nconst DoqryFormat$default = {};\nfunction DoqryPicker$format(selector, { qualify, nsAlias = newNamespaceAliaser(), } = DoqryFormat$default) {\n    const format = { qualify, nsAlias };\n    return selector.reduce((result, item) => {\n        if (isDoqryCombinator(item)) {\n            return result + item;\n        }\n        if (result && !isDoqryCombinator(result[result.length - 1])) {\n            result += ' ';\n        }\n        return result + DoqryPicker$Part$format(item, format);\n    }, '');\n}\nfunction DoqryPicker$Part$format(item, { qualify, nsAlias, }) {\n    const { ns, e, i, c, s, u, $ } = item;\n    let hasProperties = false;\n    let out = '';\n    if (i) {\n        hasProperties = true;\n        out += `#${escapeCSS(id__naming.name(i, nsAlias))}`;\n    }\n    if (c) {\n        hasProperties = true;\n        out = c.reduce((result, className) => `${result}.${escapeCSS(css__naming.name(className, nsAlias))}`, out);\n    }\n    if (u) {\n        hasProperties = true;\n        const subFormat = { nsAlias };\n        out = u.reduce((result, sub) => DoqrySubPicker$format(result, sub, subFormat), out);\n    }\n    if (s) {\n        hasProperties = true;\n        out += s;\n    }\n    if (qualify && $) {\n        out = $.reduce((result, qualifier) => result + qualify(qualifier), out);\n    }\n    if (ns) {\n        const alias = xmlNs(ns, nsAlias);\n        if (alias) {\n            out = `${alias}|${e || '*'}${out}`;\n        }\n        else {\n            out = qualifyElement();\n        }\n    }\n    else {\n        out = qualifyElement();\n    }\n    return out;\n    function qualifyElement() {\n        if (hasProperties) {\n            return `${e ? html__naming.name(e, nsAlias) : ''}${out}`;\n        }\n        return `${e ? html__naming.name(e, nsAlias) : '*'}${out}`;\n    }\n}\nfunction DoqrySubPicker$format(out, sub, format) {\n    if (DoqrySubSelector$isPseudo(sub)) {\n        out += sub[0] + sub[1];\n        const len = sub.length;\n        if (len > 2) {\n            out += '(' + DoqryPicker$format(sub[2], format);\n            for (let i = 3; i < sub.length; ++i) {\n                out += ',' + DoqryPicker$format(sub[i], format);\n            }\n            out += ')';\n        }\n        return out;\n    }\n    const [attrName, attrOp, attrVal, attrFlag] = sub;\n    out += '[' + escapeCSS(attrName);\n    if (attrOp) {\n        out += `${attrOp}\"${escapeCSSVal(attrVal)}\"`;\n    }\n    if (attrFlag) {\n        out += ' ' + attrFlag;\n    }\n    return out + ']';\n}\nfunction xmlNs(ns, nsAlias) {\n    return typeof ns === 'string' ? ns : ns.url ? nsAlias(ns) : undefined;\n}\n\nconst DoqryFormat$display = {\n    qualify(qualifier) {\n        const eqIdx = qualifier.indexOf('=');\n        if (eqIdx < 0) {\n            return DoqryQualifier$formatName(qualifier);\n        }\n        const name = DoqryQualifier$formatName(qualifier.substr(0, eqIdx));\n        const value = escapeCSSVal(qualifier.substr(eqIdx + 1));\n        return `${name}(${value})`;\n    },\n};\nfunction DoqryQualifier$formatName(name) {\n    if (name[0] === '@') {\n        return '@' + DoqryQualifier$formatRawName(name.substr(1));\n    }\n    return '$' + DoqryQualifier$formatRawName(name);\n}\nfunction DoqryQualifier$formatRawName(name) {\n    return name.split(':').map(escapeCSS).join(':');\n}\n/**\n * Converts structured CSS selector to its display textual representation including qualifiers.\n *\n * @param selector - Target CSS selector.\n *\n * @returns Selector string containing qualifiers.\n */\nfunction doqryDisplayText(selector) {\n    return DoqryPicker$format(doqryPicker(selector), DoqryFormat$display);\n}\n\n/**\n * Converts structured CSS selector to its textual representation.\n *\n * @param selector - Target CSS selector.\n * @param format - CSS selector format.\n *\n * @returns CSS selector string.\n */\nfunction doqryText(selector, format) {\n    return DoqryPicker$format(doqryPicker(selector), format);\n}\n\n/**\n * Tests whether two structured CSS selectors equal.\n *\n * @param first - First selector.\n * @param second - Second selector.\n *\n * @returns `true` if selectors are equal, `false` otherwise.\n */\nfunction doqryEqual(first, second) {\n    return arraysAreEqual(doqryPicker(first), doqryPicker(second), DoqryPicker$Part$equal);\n}\nfunction DoqryPicker$Part$equal(first, second) {\n    if (typeof first === 'string') {\n        return first === second;\n    }\n    if (typeof second === 'string') {\n        return false;\n    }\n    return DoqryNamespace$equal(first.ns, second.ns)\n        && DoqryName$equal(first.e, second.e)\n        && DoqryName$equal(first.i, second.i)\n        && DoqryClass$allEqual(first.c, second.c)\n        && DoqrySubPicker$allEqual(first.u, second.u)\n        && DoqryQualifier$allEqual(first.$, second.$);\n}\nfunction DoqryNamespace$equal(first, second) {\n    if (!first || typeof first === 'string') {\n        return first === second;\n    }\n    if (!second || typeof second === 'string') {\n        return false;\n    }\n    return first.url === second.url;\n}\nfunction DoqryName$equal(first, second) {\n    return first == null\n        ? second == null\n        : second != null && namesEqual(first, second);\n}\nfunction DoqryClass$allEqual(first, second) {\n    if (!first) {\n        return !second;\n    }\n    if (!second) {\n        return false;\n    }\n    return arraysAreEqual(first, second, namesEqual);\n}\nfunction DoqrySubPicker$allEqual(first, second) {\n    if (!first) {\n        return !second;\n    }\n    if (!second) {\n        return false;\n    }\n    return arraysAreEqual(first, second, DoqrySubPicker$equal);\n}\nfunction DoqrySubPicker$equal(first, second) {\n    if (first.length !== second.length) {\n        return false;\n    }\n    if (DoqrySubSelector$isPseudo(first)) {\n        return first.every((p, i) => i < 2\n            ? p === second[i]\n            : doqryEqual(p, second[i]));\n    }\n    return first.every((str, i) => str === second[i]);\n}\nfunction DoqryQualifier$allEqual(first, second) {\n    if (!first) {\n        return !second;\n    }\n    if (!second) {\n        return false;\n    }\n    return arraysAreEqual(first, second);\n}\n\nexport { doqryDisplayText, doqryEqual, doqryPicker, doqryPickerPart, doqryText, isDoqryCombinator };\n//# sourceMappingURL=doqry.js.map\n","import { newRenderSchedule, immediateRenderScheduler } from '@frontmeans/render-scheduler';\nimport { isDoqryCombinator, doqryPicker, doqryText, doqryPickerPart, doqryDisplayText } from '@frontmeans/doqry';\nimport { isEventKeeper, afterSupplied, mapAfter_, deduplicateAfter, isEventSender, afterThe, afterAll, mapAfter, EventEmitter, onSupplied, AfterEvent__symbol, OnEvent__symbol, onEventBy, shareOn, trackValue, digAfter, afterEventBy, consumeEvents, shareAfter, EventNotifier, onNever } from '@proc7ts/fun-events';\nimport { itsEach, overKeys, itsIterator, filterIt, overEntries, itsReduction, mapIt, overElementsOf, overOne, flatMapIt, PushIterator__symbol, itsElements } from '@proc7ts/push-iterator';\nimport { valuesProvider, isPresent, noop, valueProvider, asis, lazyValue } from '@proc7ts/primitives';\nimport { escapeCSSVal, hyphenateCSSName } from '@frontmeans/httongue';\nimport { newNamespaceAliaser, namesEqual } from '@frontmeans/namespace-aliaser';\nimport { Supply, neverSupply } from '@proc7ts/supply';\n\n/**\n * @internal\n */\nconst IMPORTANT_CSS_SUFFIX = '!important';\n\n/**\n * @internal\n */\nfunction isReadonlyArray(value) {\n    return Array.isArray(value);\n}\n/**\n * @internal\n */\nfunction isNotEmptyArray(array) {\n    return !!array.length;\n}\n\n/**\n * Structured property CSS value. E.g. [length](https://developer.mozilla.org/en-US/docs/Web/CSS/length),\n * [percentage](https://developer.mozilla.org/en-US/docs/Web/CSS/percentage),\n * [color](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value), etc.\n *\n * @category CSS Value\n * @typeParam TSelf - A type of itself.\n */\nclass StypValueStruct {\n    /**\n     * Constructs structured CSS property value.\n     *\n     * @param opts - Construction options.\n     */\n    constructor(opts) {\n        this.priority = opts && opts.priority || 0 /* Default */;\n    }\n    /**\n     * Creates `!important` variant of this value.\n     *\n     * @returns Either a new value equal to this one but having `priority` equal to {@link StypPriority.Important},\n     * or this one if already the case.\n     */\n    important() {\n        return this.prioritize(1 /* Important */);\n    }\n    /**\n     * Creates usual (not `!important`) variant of this value.\n     *\n     * @returns Either a new value equal to this one but having `priority` equal to {@link StypPriority.Usual},\n     * or this one if already the case.\n     */\n    usual() {\n        return this.prioritize(0 /* Usual */);\n    }\n}\n/**\n * Checks whether two CSS property values are equal.\n *\n * Compares scalar values verbatim. Compares structured values using their {@link StypValueStruct.is} method. The latter\n * method is applied when at least one of the values is structured.\n *\n * @category CSS Value\n * @param first - The first CSS property value to compare.\n * @param second - The second CSS property value to compare.\n *\n * @returns `true` if `first` equals to `second`, or `false otherwise.\n */\nfunction stypValuesEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (typeof first === 'object') {\n        return first.is(second);\n    }\n    if (typeof second === 'object') {\n        return second.is(first);\n    }\n    return false;\n}\n\n/**\n * Structured color CSS property value base.\n *\n * @category CSS Value\n */\nclass StypColorStruct extends StypValueStruct {\n}\n/**\n * CSS property value representing [RGB color](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#RGB_colors)\n * in `rgb()` or `rgba()` functional notation.\n *\n * @category CSS Value\n */\nclass StypRGB extends StypColorStruct {\n    /**\n     * Constructs RGB color value.\n     *\n     * @param coords - Color coordinates.\n     * @param opts - Construction options.\n     */\n    constructor(coords, opts) {\n        super(opts);\n        this.r = intCoord(coords.r, 255);\n        this.g = intCoord(coords.g, 255);\n        this.b = intCoord(coords.b, 255);\n        this.a = coords.a != null ? coord(coords.a, 1) : 1;\n    }\n    // noinspection JSMethodCanBeStatic\n    /**\n     * `rgb` value type.\n     */\n    get type() {\n        return 'rgb';\n    }\n    /**\n     * This color in RGB coordinates.\n     *\n     * Always the same as `this`.\n     */\n    get rgb() {\n        return this;\n    }\n    /**\n     * This color in HSL coordinates.\n     */\n    get hsl() {\n        const { a } = this;\n        const r = this.r * 100 / 255;\n        const g = this.g * 100 / 255;\n        const b = this.b * 100 / 255;\n        const max = Math.max(r, g, b);\n        const min = Math.min(r, g, b);\n        const l = Math.round((max + min) / 2);\n        if (max === min) {\n            return new StypHSL({ h: 0, s: 0, l, a }, this);\n        }\n        const d = max - min;\n        const s = Math.round(l > 50 ? d * 100 / (200 - max - min) : d * 100 / (max + min));\n        let h;\n        switch (max) {\n            case r:\n                h = ((g - b) / d) + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = ((b - r) / d) + 2;\n                break;\n            default:\n                h = ((r - g) / d) + 4;\n                break;\n        }\n        h *= 60;\n        h = Math.round(h);\n        return new StypHSL({ h, s, l, a }, this);\n    }\n    by(source) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return StypColor.by(source) || this;\n    }\n    is(other) {\n        return typeof other === 'object'\n            && other.type === this.type\n            && other.r === this.r\n            && other.g === this.g\n            && other.b === this.b\n            && other.a === this.a\n            && other.priority === this.priority;\n    }\n    prioritize(priority) {\n        return this.priority === priority ? this : new StypRGB(this, { priority });\n    }\n    set(coords) {\n        if (typeof coords === 'function') {\n            coords = coords(this);\n        }\n        const { r = this.r, g = this.g, b = this.b, a = this.a } = coords;\n        return new StypRGB({ r, g, b, a }, this);\n    }\n    toString() {\n        const rgb = `${this.r}, ${this.g}, ${this.b}`;\n        return this.a === 1 ? `rgb(${rgb})` : `rgba(${rgb}, ${this.a})`;\n    }\n}\n/**\n * CSS property value representing [HSL color](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#HSL_colors)\n * in `hsl()` or `hsla()` functional notation.\n *\n * @category CSS Value\n */\nclass StypHSL extends StypColorStruct {\n    /**\n     * Constructs HSL color value.\n     *\n     * @param coords - Color coordinates.\n     * @param opts - Construction options.\n     */\n    constructor(coords, opts) {\n        super(opts);\n        this.h = angleCoord(coords.h);\n        this.s = coord(coords.s, 100);\n        this.l = coord(coords.l, 100);\n        this.a = coords.a != null ? coord(coords.a, 1) : 1;\n    }\n    // noinspection JSMethodCanBeStatic\n    get type() {\n        return 'hsl';\n    }\n    /**\n     * This color in RGB coordinates.\n     */\n    get rgb() {\n        const { a } = this;\n        const s = this.s / 100;\n        const l = this.l / 100;\n        if (!s) {\n            const c = l * 255;\n            return new StypRGB({ r: c, g: c, b: c, a }, this);\n        }\n        const q = l < 0.5 ? l * (1 + s) : (l + s) - (l * s);\n        const p = (2 * l) - q;\n        const hueAsFraction = this.h / 360;\n        return new StypRGB({\n            r: hueToRgb(p, q, hueAsFraction + (1.0 / 3.0)),\n            g: hueToRgb(p, q, hueAsFraction),\n            b: hueToRgb(p, q, hueAsFraction - (1.0 / 3.0)),\n            a,\n        }, this);\n    }\n    /**\n     * This color in HSL coordinates.\n     *\n     * Always the same as `this`.\n     */\n    get hsl() {\n        return this;\n    }\n    by(source) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return StypColor.by(source) || this;\n    }\n    is(other) {\n        return typeof other === 'object'\n            && other.type === this.type\n            && other.h === this.h\n            && other.s === this.s\n            && other.l === this.l\n            && other.a === this.a\n            && other.priority === this.priority;\n    }\n    prioritize(priority) {\n        return this.priority === priority ? this : new StypHSL(this, { priority });\n    }\n    set(coords) {\n        if (typeof coords === 'function') {\n            coords = coords(this);\n        }\n        const { h = this.h, s = this.s, l = this.l, a = this.a } = coords;\n        return new StypHSL({ h, s, l, a }, this);\n    }\n    toString() {\n        const hsl = `${this.h}, ${this.s}%, ${this.l}%`;\n        return this.a === 1 ? `hsl(${hsl})` : `hsla(${hsl}, ${this.a})`;\n    }\n}\n/**\n * @category CSS Value\n */\nconst StypColor = {\n    /**\n     * Maps the given CSS property value to color. Defaults to `undefined` if mapping is not possible.\n     *\n     * This method allows to use a {@link StypColor} object as {@link StypMapper.Mapping CSS property mapping}.\n     *\n     * @param source - A raw property value that should be converted.\n     *\n     * @returns Mapped property value or `undefined`.\n     */\n    by(source) {\n        if (typeof source === 'object' && (source.type === 'rgb' || source.type === 'hsl')) {\n            return source;\n        }\n        return;\n    },\n};\n/**\n * @internal\n */\nfunction angleCoord(value) {\n    value = value % 360;\n    return value < 0 ? 360 + value : value;\n}\n/**\n * @internal\n */\nfunction intCoord(value, max) {\n    return coord(Math.round(value), max);\n}\n/**\n * @internal\n */\nfunction coord(value, max) {\n    return Math.max(Math.min(value, max), 0);\n}\n/**\n * @internal\n */\nfunction hueToRgb(p, q, t) {\n    let newT = t;\n    if (newT < 0) {\n        newT += 1;\n    }\n    else if (newT > 1) {\n        newT -= 1;\n    }\n    let result;\n    if (newT < 1.0 / 6.0) {\n        result = p + ((q - p) * (6 * newT));\n    }\n    else if (newT < 1.0 / 2.0) {\n        result = q;\n    }\n    else if (newT < 2.0 / 3.0) {\n        result = p + (((q - p) * ((2.0 / 3.0) - newT)) * 6);\n    }\n    else {\n        result = p;\n    }\n    return result * 255;\n}\n\n/**\n * Mixes two colors.\n *\n * Both the `weight` and the relative opacity of each color determines how much of each color is in the result.\n *\n * @category CSS Value\n * @param color1 - First color to mix\n * @param color2 - Second color to mix.\n * @param weight - A number between `0` and `1`. A larger weight indicates that more of `color1` should be used, and a\n * smaller weight indicates that more of `color2` should be used.\n *\n * @returns Mixed color.\n */\nfunction mixStypColors(color1, color2, weight) {\n    const w = weight * 2 - 1;\n    const rgba1 = color1.rgb;\n    const rgba2 = color2.rgb;\n    const aDiff = rgba1.a - rgba2.a;\n    const w1 = (((w * aDiff === -1) ? w : (w + aDiff) / (1 + w * aDiff)) + 1) / 2.0;\n    const w2 = 1 - w1;\n    return new StypRGB({\n        r: rgba1.r * w1 + rgba2.r * w2,\n        g: rgba1.g * w1 + rgba2.g * w2,\n        b: rgba1.b * w1 + rgba2.b * w2,\n        a: rgba1.a * weight + rgba2.a * (1 - weight),\n    }, color1);\n}\n\n/**\n * Base implementation of structured numeric CSS property value.\n *\n * @category CSS Value\n * @typeParam TSelf - A type of itself.\n * @typeParam TUnit - Allowed unit type.\n */\nclass StypNumericStruct extends StypValueStruct {\n    constructor(opts) {\n        super(opts);\n        this.dim = opts.dim;\n    }\n    by(source) {\n        return this.dim.by(source) || this;\n    }\n    toString() {\n        return this.toFormula();\n    }\n}\n\n/**\n * @category CSS Value\n */\nconst StypMapper = {\n    /**\n     * Maps CSS properties accordingly to the given `mappings`.\n     *\n     * @typeParam TResult - A type of mapped properties. This is a mapping result type.\n     * @param mappings - Mappings of CSS properties.\n     * @param from - Raw CSS properties to map.\n     *\n     * @returns Mapped properties.\n     */\n    map(mappings, from) {\n        const result = {};\n        const mapped = {\n            from,\n            get(key) {\n                if (key in result) {\n                    return result[key];\n                }\n                const mapper = mappingBy(mappings[key]);\n                const mappedValue = mapper(from[key], this, key);\n                result[key] = mappedValue;\n                return mappedValue;\n            },\n        };\n        itsEach(overKeys(mappings), key => mapped.get(key));\n        return result;\n    },\n    /**\n     * Creates CSS properties mapper function.\n     *\n     * @typeParam TResult - A type of mapped properties. This is a mapping result type.\n     * @param mappings - Mappings of CSS properties.\n     *\n     * @returns A function that maps CSS properties accordingly to the given `mappings`.\n     */\n    by(mappings) {\n        return StypMapper.map.bind(undefined, mappings);\n    },\n};\n/**\n * @internal\n */\nfunction mappingBy(mapping) {\n    switch (typeof mapping) {\n        case 'function':\n            return mapping;\n        case 'object':\n            return mapping.by.bind(mapping);\n    }\n    const type = typeof mapping;\n    return (from) => typeof from === type\n        ? from\n        : mapping;\n}\n\nfunction stypSplitPriority(value) {\n    if (value == null) {\n        return [undefined, 0 /* Default */];\n    }\n    switch (typeof value) {\n        case 'object':\n            return [value, value.priority];\n        case 'string':\n            if (value.endsWith(IMPORTANT_CSS_SUFFIX)) {\n                return [\n                    value.substring(0, value.length - IMPORTANT_CSS_SUFFIX.length).trim(),\n                    1 /* Important */,\n                ];\n            }\n            break;\n    }\n    return [value, 0 /* Default */];\n}\n\n/**\n * @internal\n */\nclass StypDimension extends StypNumericStruct {\n    /**\n     * Constructs new structured dimension value.\n     *\n     * @param val - The numeric value.\n     * @param unit - The unit.\n     * @param opts - CSS value options.\n     */\n    constructor(val, unit, opts) {\n        super(opts);\n        this.val = val;\n        this.unit = unit;\n    }\n    get type() {\n        return 'dimension';\n    }\n    toDim(dim) {\n        const thisDim = this.dim;\n        if (dim === thisDim /* same dimension */\n            || dim === thisDim.pt /* !% to compatible +% */\n            || dim === (this.unit === '%' ? dim.pt /* % to any +% */ : thisDim.noPt /* !% to compatible -% */)) {\n            return this;\n        }\n        return;\n    }\n    is(other) {\n        if (other === this) {\n            return true;\n        }\n        return typeof other === 'object'\n            && other.type === this.type\n            && this.unit === other.unit\n            && this.val === other.val\n            && this.priority === other.priority;\n    }\n    prioritize(priority) {\n        return this.priority === priority\n            ? this\n            : new StypDimension(this.val, this.unit, { dim: this.dim, priority });\n    }\n    add(addendum, unit) {\n        if (typeof addendum === 'number') {\n            addendum = stypDimension(addendum, unit || this.unit, this);\n        }\n        if (addendum.type === 'dimension' && this.unit === addendum.unit) {\n            return stypDimension(this.val + addendum.val, this.unit, this);\n        }\n        return stypAddSub(this, '+', addendum);\n    }\n    sub(subtrahend, unit) {\n        if (typeof subtrahend === 'number') {\n            subtrahend = stypDimension(subtrahend, unit || this.unit, this);\n        }\n        if (subtrahend.type === 'dimension' && this.unit === subtrahend.unit) {\n            return stypDimension(this.val - subtrahend.val, this.unit, this);\n        }\n        return stypAddSub(this, '-', subtrahend);\n    }\n    mul(multiplier) {\n        return multiplier === 1 ? this : stypDimension(this.val * multiplier, this.unit, this);\n    }\n    div(divisor) {\n        return divisor === 1 ? this : stypDimension(this.val / divisor, this.unit, this);\n    }\n    negate() {\n        return stypDimension(-this.val, this.unit, this);\n    }\n    /**\n     * Returns a textual representation of this value to be used within CSS `calc()` function.\n     *\n     * @returns `<value><unit>` or just `0`.\n     */\n    toFormula() {\n        return `${this.val}${this.unit}`;\n    }\n}\n/**\n * Constructs structured [dimension] CSS property value.\n *\n * @param val - Numeric value.\n * @param unit - Value unit.\n * @param opts - Construction options.\n *\n * @returns Either {@link StypDimension}, or {@link StypZero} if `val === 0`.\n *\n * [dimension]: https://developer.mozilla.org/en-US/docs/Web/CSS/dimension\n *\n * @internal\n */\nfunction stypDimension(val, unit, opts) {\n    return val\n        ? new StypDimension(val, unit, opts)\n        : opts.dim.zero.prioritize(opts.priority || 0 /* Default */);\n}\n/**\n * @internal\n */\nclass StypCalcBase extends StypNumericStruct {\n    // noinspection TypeScriptAbstractClassConstructorCanBeMadeProtected\n    constructor(left, op, right, opts) {\n        super(opts);\n        this.left = left.usual();\n        this.op = op;\n        this.right = right;\n    }\n    // noinspection JSMethodCanBeStatic\n    get type() {\n        return 'calc';\n    }\n    is(other) {\n        if (this === other) {\n            return true;\n        }\n        if (typeof other === 'object' && other.type === this.type) {\n            return this.op === other.op\n                && this.left.is(other.left)\n                && stypValuesEqual(this.right, other.right)\n                && this.priority === other.priority;\n        }\n        return false;\n    }\n    add(addendum, unit) {\n        if (typeof addendum === 'number') {\n            addendum = stypDimension(addendum, unit, this);\n        }\n        return stypAddSub(this, '+', addendum);\n    }\n    sub(subtrahend, unit) {\n        if (typeof subtrahend === 'number') {\n            subtrahend = stypDimension(subtrahend, unit, this);\n        }\n        return stypAddSub(this, '-', subtrahend);\n    }\n    mul(multiplier) {\n        return stypMul(this, multiplier);\n    }\n    div(divisor) {\n        return stypDiv(this, divisor);\n    }\n    toString() {\n        return 'calc' + super.toString();\n    }\n}\n/**\n * CSS `calc()` function call representation containing either addition or subtraction.\n *\n * @typeParam TUnit - Allowed unit type.\n *\n * @internal\n */\nclass StypAddSub extends StypCalcBase {\n    constructor(left, op, right, opts) {\n        super(left, op, right.usual(), opts);\n    }\n    prioritize(priority) {\n        return this.priority === priority\n            ? this\n            : new StypAddSub(this.left, this.op, this.right, { dim: this.dim, priority });\n    }\n    toDim(dim) {\n        const left = this.left.toDim(dim);\n        if (!left) {\n            return;\n        }\n        const right = this.right.toDim(dim);\n        if (!right) {\n            return;\n        }\n        if (left === this.left && right === this.right) {\n            return this;\n        }\n        return new StypAddSub(left, this.op, right, { dim, priority: this.priority });\n    }\n    negate() {\n        return this.op === '-'\n            ? new StypAddSub(this.right, this.op, this.left, this)\n            : new StypAddSub(this.left.negate(), '-', this.right, this);\n    }\n    /**\n     * Returns a textual representation of this value to be used within CSS `calc()` function.\n     *\n     * @returns `(<left> <op> <right>)`.\n     */\n    toFormula() {\n        return `(${this.left.toFormula()} ${this.op} ${this.right.toFormula()})`;\n    }\n}\nfunction stypAddSub(left, op, right) {\n    return !right.type ? left : new StypAddSub(left, op, right, left);\n}\n/**\n * CSS `calc()` function call representation containing either multiplication or division.\n *\n * @typeParam TUnit - Allowed unit type.\n *\n * @internal\n */\nclass StypMulDiv extends StypCalcBase {\n    prioritize(priority) {\n        return this.priority === priority\n            ? this\n            : new StypMulDiv(this.left, this.op, this.right, { dim: this.dim, priority });\n    }\n    toDim(dim) {\n        const left = this.left.toDim(dim);\n        if (!left) {\n            return;\n        }\n        if (left === this.left) {\n            return this;\n        }\n        return new StypMulDiv(left, this.op, this.right, { dim, priority: this.priority });\n    }\n    mul(multiplier) {\n        return (this.op === '*'\n            ? stypMul(this.left, this.right * multiplier)\n            : stypDiv(this.left, this.right / multiplier))\n            .prioritize(this.priority);\n    }\n    div(divisor) {\n        return (this.op === '/'\n            ? stypDiv(this.left, this.right * divisor)\n            : stypMul(this.left, this.right / divisor))\n            .prioritize(this.priority);\n    }\n    negate() {\n        return new StypMulDiv(this.left, this.op, -this.right, this);\n    }\n    /**\n     * Returns a textual representation of this value to be used within CSS `calc()` function.\n     *\n     * @returns `(<left> <op> <right>)`.\n     */\n    toFormula() {\n        return `(${this.left.toFormula()} ${this.op} ${this.right})`;\n    }\n}\nfunction stypMul(left, right) {\n    return !right\n        ? left.dim.zero.prioritize(left.priority)\n        : right === 1\n            ? left.prioritize(left.priority)\n            : new StypMulDiv(left, '*', right, left);\n}\nfunction stypDiv(left, right) {\n    return right === 1\n        ? left.prioritize(left.priority)\n        : new StypMulDiv(left, '/', right, left);\n}\n/**\n * @internal\n */\nfunction isStypNumeric(source) {\n    return typeof source === 'object' && (source.type === 'dimension' || source.type === 'calc' || source.type === 0);\n}\n\nclass Zero extends StypNumericStruct {\n    constructor(_byPriority, opts) {\n        super(opts);\n        this._byPriority = _byPriority;\n    }\n    get type() {\n        return 0;\n    }\n    toDim(dim) {\n        return dim.zero.prioritize(this.priority);\n    }\n    is(other) {\n        if (this === other) {\n            return true;\n        }\n        if (typeof other === 'object') {\n            return other.type === this.type && other.priority === this.priority;\n        }\n        if (other === 0 || other === '0') {\n            return this.priority === 0 /* Usual */;\n        }\n        if (other === '0 !important') {\n            return this.priority === 1 /* Important */;\n        }\n        return false;\n    }\n    add(addendum, unit) {\n        if (typeof addendum === 'number') {\n            addendum = stypDimension(addendum, unit, this);\n        }\n        return addendum.prioritize(this.priority);\n    }\n    sub(subtrahend, unit) {\n        if (typeof subtrahend === 'number') {\n            subtrahend = stypDimension(subtrahend, unit, this);\n        }\n        return subtrahend.negate().prioritize(this.priority);\n    }\n    mul() {\n        return this;\n    }\n    div() {\n        return this;\n    }\n    negate() {\n        return this;\n    }\n    prioritize(priority) {\n        return this._byPriority.get(priority);\n    }\n    important() {\n        return this._byPriority.important;\n    }\n    usual() {\n        return this._byPriority.usual;\n    }\n    toFormula() {\n        return '0';\n    }\n}\nclass ZeroByPriority {\n    constructor(dim) {\n        this.dim = dim;\n        this.usual = new Zero(this, { dim });\n        this.important = new Zero(this, { dim, priority: 1 /* Important */ });\n    }\n    get(priority) {\n        switch (priority) {\n            case 0 /* Usual */: return this.usual;\n            case 1 /* Important */: return this.important;\n        }\n        return new Zero(this, { dim: this.dim, priority });\n    }\n}\n/**\n * @internal\n */\nfunction newStypZero(dim) {\n    return new ZeroByPriority(dim).usual;\n}\n\n/**\n * @internal\n */\nfunction unitlessZeroDimensionKind({ pt, noPt, }) {\n    const dimension = {\n        get zero() {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            return zero;\n        },\n        get pt() {\n            return pt();\n        },\n        get noPt() {\n            return noPt();\n        },\n        of(val, unit) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            return val ? new StypDimension(val, unit, { dim: this }) : zero;\n        },\n        by(source) {\n            if (!isStypNumeric(source)) {\n                return;\n            }\n            return source.toDim(this);\n        },\n    };\n    const zero = newStypZero(dimension);\n    return dimension;\n}\n/**\n * @internal\n */\nfunction unitZeroDimensionKind({ zeroUnit, withPercent, noPercent, }) {\n    const dim = {\n        get pt() {\n            return withPercent && withPercent();\n        },\n        get noPt() {\n            return noPercent ? noPercent() : this;\n        },\n        get zero() {\n            return zero; // eslint-disable-line @typescript-eslint/no-use-before-define\n        },\n        of(val, unit) {\n            return new StypDimension(val, unit, { dim: this });\n        },\n        by(source) {\n            if (!isStypNumeric(source)) {\n                return;\n            }\n            return source.toDim(this);\n        },\n    };\n    const zero = new StypDimension(0, zeroUnit, { dim });\n    return dim;\n}\n\n/**\n * @category CSS Value\n */\nconst StypAngle = ( /*#__PURE__*/unitlessZeroDimensionKind({\n    pt() {\n        return StypAnglePt; // eslint-disable-line @typescript-eslint/no-use-before-define\n    },\n    noPt() {\n        return StypAngle;\n    },\n}));\n/**\n * @category CSS Value\n */\nconst StypAnglePt = (\n/*#__PURE__*/ unitlessZeroDimensionKind({\n    pt() {\n        return StypAnglePt;\n    },\n    noPt() {\n        return StypAngle;\n    },\n}));\n\n/**\n * @category CSS Value\n */\nconst StypFrequency = ( /*#__PURE__*/unitZeroDimensionKind({\n    zeroUnit: 'kHz',\n    withPercent() {\n        return StypFrequencyPt; // eslint-disable-line @typescript-eslint/no-use-before-define\n    },\n    noPercent() {\n        return StypFrequency;\n    },\n}));\n/**\n * @category CSS Value\n */\nconst StypFrequencyPt = ( /*#__PURE__*/unitZeroDimensionKind({\n    zeroUnit: 'kHz',\n    withPercent() {\n        return StypFrequencyPt;\n    },\n    noPercent() {\n        return StypFrequency;\n    },\n}));\n\n/**\n * @category CSS Value\n */\nconst StypLength = ( /*#__PURE__*/unitlessZeroDimensionKind({\n    pt() {\n        return StypLengthPt; // eslint-disable-line @typescript-eslint/no-use-before-define\n    },\n    noPt() {\n        return StypLength;\n    },\n}));\n/**\n * @category CSS Value\n */\nconst StypLengthPt = (\n/*#__PURE__*/ unitlessZeroDimensionKind({\n    pt() {\n        return StypLengthPt;\n    },\n    noPt() {\n        return StypLength;\n    },\n}));\n\n/**\n * @category CSS Value\n */\nconst StypResolution = (\n/*#__PURE__*/ unitZeroDimensionKind({ zeroUnit: 'dpi' }));\n\n/**\n * @category CSS Value\n */\nconst StypTime = ( /*#__PURE__*/unitlessZeroDimensionKind({\n    pt() {\n        return StypTimePt; // eslint-disable-line @typescript-eslint/no-use-before-define\n    },\n    noPt() {\n        return StypTime;\n    },\n}));\n/**\n * @category CSS Value\n */\nconst StypTimePt = ( /*#__PURE__*/unitlessZeroDimensionKind({\n    pt() {\n        return StypTimePt;\n    },\n    noPt() {\n        return StypTime;\n    },\n}));\n\n/**\n * Structured [URL](https://developer.mozilla.org/en-US/docs/Web/CSS/url) CSS property value.\n *\n * @category CSS Value\n */\nclass StypURL extends StypValueStruct {\n    /**\n     * Constructs URL value.\n     *\n     * @param url - Target URL.\n     * @param opts - Construction options.\n     */\n    constructor(url, opts) {\n        super(opts);\n        this.url = url;\n    }\n    /**\n     * `url` value type.\n     */\n    get type() {\n        return 'url';\n    }\n    /**\n     * Maps the given CSS property value to URL. Defaults to `undefined` if mapping is not possible.\n     *\n     * This method allows to use a {@link StypURL} class as [CSS property mapping]{@link StypMapper.Mapping}.\n     *\n     * Strings are treated as URLs (without `url()` functional syntax). `!important` suffix is respected.\n     *\n     * @param source - A raw property value that should be converted.\n     *\n     * @returns Mapped property value or `undefined`.\n     */\n    static by(source) {\n        switch (typeof source) {\n            case 'string': {\n                const [url, priority] = stypSplitPriority(source);\n                return new StypURL(url, { priority });\n            }\n            case 'object':\n                if (source.type === 'url') {\n                    return source;\n                }\n                break;\n        }\n        return;\n    }\n    by(source) {\n        return StypURL.by(source) || this;\n    }\n    prioritize(priority) {\n        return priority === this.priority ? this : new StypURL(this.url, { priority });\n    }\n    is(other) {\n        return typeof other === 'object'\n            && other.type === 'url'\n            && other.url === this.url\n            && other.priority === this.priority;\n    }\n    toString() {\n        return `url(\"${escapeCSSVal(this.url)}\")`;\n    }\n}\n\n/**\n * @internal\n */\nconst noStypProperties = ( /*#__PURE__*/afterThe({}));\n/**\n * @internal\n */\nfunction noStypPropertiesSpec() {\n    return noStypProperties;\n}\n/**\n * @internal\n */\nfunction stypPropertiesBySpec(rule, spec) {\n    if (!spec) {\n        return noStypProperties;\n    }\n    if (typeof spec !== 'string') {\n        if (isEventKeeper(spec)) {\n            return preventDuplicates(spec);\n        }\n        if (isEventSender(spec)) {\n            return preventDuplicates(propertiesKeeper(spec));\n        }\n        if (typeof spec === 'function') {\n            const senderOrProperties = spec(rule);\n            if (typeof senderOrProperties !== 'string') {\n                if (isEventKeeper(senderOrProperties)) {\n                    return preventDuplicates(senderOrProperties);\n                }\n                if (isEventSender(senderOrProperties)) {\n                    return preventDuplicates(propertiesKeeper(senderOrProperties));\n                }\n            }\n            return afterThe(propertiesMap(senderOrProperties));\n        }\n    }\n    return afterThe(propertiesMap(spec));\n}\nfunction propertiesKeeper(sender) {\n    return afterSupplied(sender, valuesProvider({}));\n}\nfunction preventDuplicates(properties) {\n    return afterSupplied(properties).do(mapAfter_(propertiesMap), deduplicateAfter(isDuplicateProperties, cloneProperties));\n}\nfunction propertiesMap(properties) {\n    return typeof properties === 'string' ? { $$css: properties } : properties;\n}\nfunction isDuplicateProperties(first, second) {\n    const s = itsIterator(propertyEntries(second));\n    for (const [key, value] of propertyEntries(first)) {\n        const { value: sentry } = s.next();\n        if (!sentry || key !== sentry[0] || !stypValuesEqual(value, sentry[1])) {\n            return false;\n        }\n    }\n    return !s.next().value;\n}\nfunction cloneProperties([properties]) {\n    return { ...properties };\n}\nfunction propertyEntries(properties) {\n    return filterIt(overEntries(properties), ([, value]) => isPresent(value));\n}\n/**\n * @internal\n */\nfunction mergeStypProperties(base, addendum) {\n    return preventDuplicates(afterAll({ base, addendum }).do(mapAfter(({ base: [baseProperties], addendum: [addendumProperties], }) => addValues(baseProperties, addendumProperties))));\n}\nfunction addValues(base, addendum) {\n    return itsReduction(overEntries(addendum), (result, [k, v]) => addValue(result, k, v), { ...base });\n}\nfunction addValue(properties, key, value) {\n    if (priorityOf(properties[key]) <= priorityOf(value)) {\n        delete properties[key];\n        properties[key] = value;\n    }\n    return properties;\n}\nfunction priorityOf(value) {\n    switch (typeof value) {\n        case 'string':\n            return value.endsWith(IMPORTANT_CSS_SUFFIX) ? 1 : 0;\n        case 'object':\n            return value.priority;\n        default:\n            return 0;\n    }\n}\n\n/**\n * @internal\n */\nconst FIRST_RENDER_ORDER = -0xffff;\n\n/**\n * @internal\n */\nclass AtRulesRenderer {\n    constructor(_rule) {\n        this._rule = _rule;\n    }\n    read(properties) {\n        let outer = this._rule.outer;\n        while (outer) {\n            properties = mergeStypProperties(outer.read.do(mapAfter(onlyAtProperties)), properties);\n            outer = outer.outer;\n        }\n        return properties;\n    }\n    render(producer, properties) {\n        const { selector } = producer;\n        let { writer } = producer;\n        if (!writer.isGroup) {\n            producer.render(properties);\n            return;\n        }\n        let sheet = writer;\n        const extracted = extractAtSelectors(selector);\n        if (!extracted) {\n            producer.render(properties);\n            return;\n        }\n        const [atSelectors, restSelector] = extracted;\n        for (const atSelector of atSelectors) {\n            const [name, params] = buildAtSelector(properties, atSelector);\n            if (params) {\n                writer = sheet = sheet.addGroup(name, params);\n            }\n            else {\n                writer = sheet.addStyle(name);\n                break;\n            }\n        }\n        producer.render(properties, { writer, selector: restSelector });\n    }\n}\n/**\n * @internal\n */\nfunction buildAtSelector(properties, [key, [names, customQuery]]) {\n    let query = '';\n    const addQuery = (q) => {\n        if (q) {\n            if (query) {\n                query += ' and ';\n            }\n            query += q;\n        }\n    };\n    for (const name of names) {\n        const [namedQuery] = stypSplitPriority(properties[name]);\n        addQuery(namedQuery);\n    }\n    addQuery(customQuery);\n    return query ? [key, query] : [key];\n}\n/**\n * CSS stylesheet renderer of at-rules like `@media` queries.\n *\n * At-rules are represented by qualifiers which names start with `@` symbol. Qualifier names are used as at-rules keys,\n * and their values - as queries. If the rest of the selector is not empty, then properties are rendered in CSS\n * rule nested inside at-rule. Otherwise the properties are rendered in at-rule.\n *\n * So, for example CSS rule with `{ c: 'screen-only', $: '@media=screen' }` selector would be rendered as\n * ```css\n * @media screen {\n *   .screen-only {\n *      \\/* CSS properties *\\/\n *   }\n * }\n * ```\n *\n * Another option is to use named at-rules qualifiers. When named qualifier is used, the corresponding property is\n * searched in CSS rule and all of its outer rules. The values of all matching properties are used as queries.\n *\n * So the above example could be written as: `{ c: 'screen-only', $: '@media:screen' }` if CSS rule (or its outer\n * one) contains property `@media:screen` with value `screen`.\n *\n * Enabled by default in {@link produceStyle} function.\n *\n * @category Rendering\n */\nconst stypRenderAtRules = {\n    order: FIRST_RENDER_ORDER,\n    create(rule) {\n        return new AtRulesRenderer(rule);\n    },\n};\n/**\n * @internal\n */\nfunction onlyAtProperties(properties) {\n    return itsReduction(filterIt(overEntries(properties), isAtEntry), (result, [key, value]) => {\n        result[key] = value;\n        return result;\n    }, {});\n}\n/**\n * @internal\n */\nfunction isAtEntry(entry) {\n    return String(entry[0])[0] === '@';\n}\n/**\n * @internal\n */\nfunction extractAtSelectors(selector) {\n    const atSelectors = new Map();\n    const rest = [];\n    for (const part of selector) {\n        if (isDoqryCombinator(part)) {\n            rest.push(part);\n        }\n        else {\n            rest.push(extractPartAtSelectors(part, atSelectors));\n        }\n    }\n    if (!atSelectors.size) {\n        return; // No at-rule qualifiers found.\n    }\n    return [atSelectors, doqryPicker(rest)];\n}\n/**\n * @internal\n */\nfunction extractPartAtSelectors(part, atSelectors) {\n    const qualifiers = part.$;\n    if (!qualifiers) {\n        return part;\n    }\n    const restQualifies = [];\n    for (const qualifier of qualifiers) {\n        if (qualifier[0] === '@') {\n            addAtSelector(atSelectors, qualifier);\n        }\n        else {\n            restQualifies.push(qualifier);\n        }\n    }\n    if (restQualifies.length === qualifiers.length) {\n        return part; // No at-rule qualifiers found\n    }\n    if (isNotEmptyArray(restQualifies)) {\n        return { ...part, $: restQualifies };\n    }\n    return { ...part, $: undefined };\n}\n/**\n * @internal\n */\nfunction addAtSelector(atSelectors, qualifier) {\n    const eqIdx = qualifier.indexOf('=');\n    let name;\n    let query;\n    if (eqIdx < 0) {\n        name = qualifier;\n    }\n    else {\n        name = qualifier.substring(0, eqIdx);\n        query = qualifier.substring(eqIdx + 1);\n    }\n    const colonIdx = name.indexOf(':');\n    const key = colonIdx < 0 ? name : name.substring(0, colonIdx);\n    const atSelector = atSelectors.get(key);\n    if (!atSelector) {\n        atSelectors.set(key, [new Set().add(name), query]);\n    }\n    else {\n        const [names, prevQuery] = atSelector;\n        names.add(name);\n        if (query) {\n            atSelector[1] = prevQuery ? `${prevQuery} and ${query}` : query;\n        }\n    }\n}\n\n/**\n * CSS stylesheet renderer of global at-rules.\n *\n * It renders at-rules that should stay at the top level:\n * - `@namespace`\n * - `@import`\n *\n * At-rule parameters are taken from root CSS rule properties and treated as following.\n *\n * **`@import:url`** property value is treated as media query and appended after stylesheet URL. I.e.\n * ```json\n * {\n *     \"@import:path/to/included.css\": \"screen\"\n * }\n * ```\n * becomes\n * ```css\n * @import url(path/to/included.css) screen;\n * ```\n *\n * **`@namespace`** property value is treated as default namespace URL. I.e.\n * ```json\n * {\n *     \"@namespace\": \"http://www.w3.org/1999/xhtml\"\n * }\n * ```\n * becomes\n * ```css\n * @namespace url(http://www.w3.org/1999/xhtml);\n * ```\n *\n * **`@namespace:prefix`** property value is treated as namespace URL with the given prefix. I.e\n * ```json\n * {\n *     \"@namespace:svg\": \"http://www.w3.org/2000/svg\"\n * }\n * ```\n * becomes\n * ```css\n * @namespace svg url(http://www.w3.org/2000/svg);\n * ```\n *\n * Enabled by default in {@link produceStyle} function.\n *\n * @category Rendering\n */\nconst stypRenderGlobals = {\n    order: FIRST_RENDER_ORDER + 1,\n    needs: stypRenderAtRules,\n    render(producer, properties) {\n        const rootRule = !producer.rule.selector.length;\n        const { sheet } = producer;\n        let importIndex = 0;\n        let nsIndex = 0;\n        for (const [k, v] of overEntries(properties)) {\n            const key = String(k);\n            if (key[0] === '@') {\n                const [value] = stypSplitPriority(v);\n                const importDelta = rootRule ? renderImport(sheet, importIndex, key, value) : 0;\n                importIndex += importDelta;\n                nsIndex += importDelta;\n                const url = StypURL.by(value);\n                if (url) {\n                    nsIndex += renderDefaultNamespace(sheet, nsIndex, key, url);\n                    nsIndex += renderNamespacePrefix(sheet, nsIndex, key, url);\n                }\n            }\n        }\n        producer.render(properties);\n    },\n};\n/**\n * @internal\n */\nconst IMPORT_PREFIX = '@import:';\n/**\n * @internal\n */\nfunction renderImport(sheet, index, key, value) {\n    if (!key.startsWith(IMPORT_PREFIX)) {\n        return 0;\n    }\n    const url = new StypURL(key.substring(IMPORT_PREFIX.length));\n    let css = String(url);\n    if (value) {\n        css += ` ${value}`;\n    }\n    sheet.addGlobal('@import', css, index);\n    return 1;\n}\n/**\n * @internal\n */\nfunction renderDefaultNamespace(sheet, index, key, url) {\n    if (key !== '@namespace') {\n        return 0;\n    }\n    sheet.addGlobal('@namespace', String(url), index);\n    return 1;\n}\n/**\n * @internal\n */\nconst NS_PREFIX = '@namespace:';\n/**\n * @internal\n */\nfunction renderNamespacePrefix(sheet, index, key, url) {\n    if (!key.startsWith(NS_PREFIX)) {\n        return 0;\n    }\n    const prefix = key.substring(NS_PREFIX.length);\n    sheet.addGlobal('@namespace', `${prefix} ${url}`, index);\n    return 1;\n}\n\n/**\n * Renders CSS properties.\n *\n * This renderer is always present, so there is typically no need to use it explicitly.\n *\n * @category Rendering\n */\nfunction stypRenderProperties(producer, properties) {\n    const style = producer.addStyle();\n    itsEach(filterIt(overEntries(properties), notCustomProperty), ([k, v]) => {\n        const [value, priority] = stypSplitPriority(v);\n        style.set(hyphenateCSSName(k), `${value}`, priority);\n    });\n    producer.render(properties, { writer: style });\n}\n/**\n * @internal\n */\nfunction notCustomProperty(entry) {\n    const [key, value] = entry;\n    if (value == null) {\n        return false;\n    }\n    const first = String(key)[0];\n    return first >= 'a' && first <= 'z' || first >= 'A' && first <= 'Z';\n}\n\n/**\n * Renders raw CSS text. I.e. the contents of {@link StypProperties.Generic.$$css} property.\n *\n * It should be rendered before CSS properties normally to add the rendered rule as a first one.\n *\n * Enabled by default in {@link produceStyle} function.\n *\n * @category Rendering\n */\nfunction stypRenderText(producer, properties) {\n    const css = properties.$$css;\n    if (!css) {\n        producer.render(properties);\n    }\n    else {\n        const style = producer.addStyle();\n        style.replace(css);\n        producer.render(properties, { writer: style });\n    }\n}\n\n/**\n * CSS stylesheet renderer of global XML namespace definitions.\n *\n * Renders `@namespace` declarations for CSS selectors containing namespace definitions.\n *\n * Enabled by default in {@link produceStyle} function.\n *\n * @category Rendering\n */\nconst stypRenderXmlNs = {\n    order: FIRST_RENDER_ORDER,\n    needs: stypRenderGlobals,\n    render(producer, properties) {\n        const xmlNsDefs = extractXmlNsDefs(producer.selector);\n        if (xmlNsDefs.length) {\n            const declareNs = (result, ns) => {\n                const alias = producer.nsAlias(ns);\n                result[`@namespace:${alias}`] = new StypURL(ns.url);\n                return result;\n            };\n            producer.render(xmlNsDefs.reduce(declareNs, { ...properties }));\n        }\n        else {\n            producer.render(properties);\n        }\n    },\n};\n/**\n * @internal\n */\nfunction extractXmlNsDefs(selector) {\n    return selector\n        .map(part => !isDoqryCombinator(part) && part.ns && typeof part.ns !== 'string' ? part.ns : null)\n        .filter(isPresent);\n}\n\n/**\n * @internal\n */\nfunction stypRenderFactories(format) {\n    const factories = new Map();\n    addRenderers(format.renderer);\n    factories.delete(stypRenderProperties);\n    return [...factories.values(), rendererFactory(stypRenderProperties)].sort(compareRenderers);\n    function addRenderers(renderers) {\n        if (renderers) {\n            if (isReadonlyArray(renderers)) {\n                renderers.forEach(addRenderer);\n            }\n            else {\n                addRenderer(renderers);\n            }\n        }\n    }\n    function addRenderer(renderer) {\n        if (factories.has(renderer)) {\n            return;\n        }\n        const factory = rendererFactory(renderer);\n        factories.set(renderer, factory);\n        addRenderers(factory.needs);\n    }\n}\nfunction rendererFactory(renderer) {\n    if (typeof renderer === 'function') {\n        return {\n            create() {\n                return { render: renderer };\n            },\n        };\n    }\n    if (isRendererFactory(renderer)) {\n        return {\n            order: renderer.order,\n            needs: renderer.needs,\n            create(rule) {\n                return rendererSpec(renderer.create(rule));\n            },\n        };\n    }\n    const render = renderer.render.bind(renderer);\n    return {\n        order: renderer.order,\n        needs: renderer.needs,\n        create() {\n            return { render };\n        },\n    };\n}\nfunction isRendererFactory(renderer) {\n    return 'create' in renderer;\n}\nfunction compareRenderers(first, second) {\n    const firstOrder = first.order || 0;\n    const secondOrder = second.order || 0;\n    return firstOrder > secondOrder ? 1 : firstOrder < secondOrder ? -1 : 0;\n}\nfunction rendererSpec(renderer) {\n    return typeof renderer === 'function' ? { render: renderer } : renderer;\n}\n/**\n * @internal\n */\nfunction stypRenderScheduler(parent, scheduler = newRenderSchedule) {\n    return (options = {}) => {\n        const { node = parent } = options;\n        return scheduler({\n            ...options,\n            node,\n        });\n    };\n}\n/**\n * @internal\n */\nfunction removeStyleElement(element) {\n    var _a;\n    (_a = element.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(element);\n}\n\n/**\n * @internal\n */\nconst defaultPrettyPrint = {\n    indent: '  ',\n};\n/**\n * @internal\n */\nconst compactStypTextFormatter = {\n    nv: '',\n    eol: '',\n    pre: '',\n    indent() {\n        return this;\n    },\n};\n/**\n * @internal\n */\nclass StypTextFormatter$ {\n    constructor(_config, pre = '') {\n        this._config = _config;\n        this.pre = pre;\n    }\n    get nv() {\n        return ' ';\n    }\n    get eol() {\n        return '\\n';\n    }\n    indent() {\n        return new StypTextFormatter$(this._config, this.pre + this._config.indent);\n    }\n}\n/**\n * @internal\n */\nclass StypStyleTextWriter {\n    constructor(f, selector) {\n        this.f = f;\n        this.selector = selector;\n        this.body = '';\n        this.nf = f.indent();\n    }\n    get isGroup() {\n        return false;\n    }\n    set(name, value, priority) {\n        const p = priority >= 1 /* Important */ ? ' !important' : '';\n        const { pre, nv, eol } = this.nf;\n        if (this.body) {\n            this.body += `;${eol}`;\n        }\n        this.body += `${pre}${name}:${nv}${value}${p}`;\n    }\n    replace(css) {\n        this.body = css.trim();\n        if (this.body.endsWith(';')) {\n            this.body = this.body.substr(0, this.body.length - 1);\n        }\n    }\n    toString() {\n        const { pre, nv, eol } = this.f;\n        if (this.body) {\n            const afterBody = eol ? `;${eol}` : '';\n            return `${pre}${this.selector}${nv}{${eol}${this.body}${afterBody}${pre}}`;\n        }\n        return '';\n    }\n}\n/**\n * @internal\n */\nclass AbstractStypGroupTextWriter {\n    constructor(nf) {\n        this.nf = nf;\n        this._nested = [];\n    }\n    get isGroup() {\n        return true;\n    }\n    addGroup(name, params, index) {\n        return this._add(new StypGroupTextWriter(this.nf, name, params), index);\n    }\n    addStyle(selector, index) {\n        return this._add(new StypStyleTextWriter(this.nf, selector), index);\n    }\n    toString() {\n        let out = '';\n        for (const nested of this._nested) {\n            const text = String(nested);\n            if (text) {\n                if (out) {\n                    out += this.nf.eol;\n                }\n                out += text;\n            }\n        }\n        return out;\n    }\n    _add(nested, index = this._nested.length) {\n        this._nested.splice(index, 0, nested);\n        return nested;\n    }\n}\n/**\n * @internal\n */\nclass StypGroupTextWriter extends AbstractStypGroupTextWriter {\n    constructor(f, name, params) {\n        super(f.indent());\n        this.f = f;\n        this.name = name;\n        this.params = params;\n    }\n    toString() {\n        const body = super.toString();\n        if (!body) {\n            return '';\n        }\n        const { pre, nv, eol } = this.f;\n        return `${pre}${this.name} ${this.params}${nv}{${eol}${body}${eol}${pre}}`;\n    }\n}\n/**\n * @internal\n */\nclass StypSheetTextWriter extends AbstractStypGroupTextWriter {\n    constructor(id, f, sender) {\n        super(f);\n        this.id = id;\n        this.f = f;\n        this.sender = sender;\n    }\n    addGlobal(name, value, index) {\n        this._add(`${this.f.pre}${name} ${value};`, index);\n    }\n    clear() {\n        this._nested.length = 0;\n    }\n    remove() {\n        this.clear();\n        this.sender.send({ id: this.id });\n    }\n    done() {\n        this.sender.send({\n            id: this.id,\n            css: this.toString(),\n        });\n    }\n}\n/**\n * Builds textual CSS production format.\n *\n * It is necessary to register {@link StypTextFormat.onSheet CSS text receiver(s)} prior to start {@link produceStyle\n * style production} in order to receive CSS text for style sheets.\n *\n * @category Rendering\n * @param config - Textual format config.\n *\n * @returns Textual CSS production format.\n */\nfunction stypTextFormat(config = {}) {\n    const pretty = config.pretty === true || config.pretty == null\n        ? defaultPrettyPrint\n        : (config.pretty || false);\n    const { scheduler = immediateRenderScheduler } = config;\n    const sender = new EventEmitter();\n    const formatter = pretty ? new StypTextFormatter$(pretty) : compactStypTextFormatter;\n    let idSeq = 0;\n    return {\n        ...config,\n        pretty,\n        scheduler,\n        onSheet: sender.on,\n        addSheet() {\n            return new StypSheetTextWriter(String(++idSeq), formatter, sender);\n        },\n    };\n}\n\n/**\n * Builds DOM style production format.\n *\n * The sheet writer creates a `<style>` element inside the `parent` node per CSS rule and fills it with CSS text\n * generated by {@link stypTextFormat textual CSS production format}.\n *\n * This format is generally slower than {@link stypObjectFormat CSS object model production format}, but allows to add\n * `<style>` elements to DOM node outside document. E.g. to `DocumentFragment`.\n *\n * @category Rendering\n * @param config - DOM style format configuration.\n *\n * @returns CSS production format.\n */\nfunction stypDomFormat(config = {}) {\n    var _a;\n    const { document = ((_a = config.parent) === null || _a === void 0 ? void 0 : _a.ownerDocument) || window.document, parent = document.head, } = config;\n    const textFormat = stypTextFormat(config);\n    const scheduler = stypRenderScheduler(parent, config.scheduler);\n    const schedule = scheduler();\n    const elements = new Map();\n    const supply = textFormat.onSheet(({ id, css }) => {\n        // CSS text is reported within schedule. No need to re-schedule DOM manipulations here.\n        let element = elements.get(id);\n        if (css == null) { // element exists here\n            elements.delete(id);\n            removeStyleElement(element);\n        }\n        else if (element) {\n            element.textContent = css;\n        }\n        else {\n            element = document.createElement('style');\n            element.setAttribute('type', 'text/css');\n            element.textContent = css;\n            parent.appendChild(element);\n            elements.set(id, element);\n            supply.whenOff(\n            // Schedule element removal on style sheet removal instead of removing it right away.\n            () => schedule(() => removeStyleElement(element)));\n        }\n    });\n    return {\n        ...config,\n        scheduler,\n        addSheet(producer) {\n            supply.needs(producer);\n            this.addSheet = textFormat.addSheet.bind(textFormat);\n            return this.addSheet(producer);\n        },\n    };\n}\n\n/**\n * @internal\n */\nclass StypStyleObjectWriter {\n    constructor(_target) {\n        this._target = _target;\n    }\n    get isGroup() {\n        return false;\n    }\n    set(name, value, priority) {\n        this._target.style.setProperty(name, value, priority >= 1 /* Important */ ? 'important' : undefined);\n    }\n    replace(css) {\n        this._target.style.cssText = css;\n    }\n}\n/**\n * @internal\n */\nclass StypGroupObjectWriter {\n    constructor(_target) {\n        this._target = _target;\n    }\n    get isGroup() {\n        return true;\n    }\n    addGroup(name, params, index) {\n        return new StypGroupObjectWriter(this._add(`${name} ${params}{}`, index));\n    }\n    addStyle(selector, index) {\n        return new StypStyleObjectWriter(this._add(`${selector}{}`, index));\n    }\n    _add(ruleText, index = this._target.cssRules.length) {\n        const idx = this._target.insertRule(ruleText, index);\n        return this._target.cssRules[idx];\n    }\n}\n/**\n * @internal\n */\nclass StypSheetObjectWriter extends StypGroupObjectWriter {\n    constructor(_element) {\n        super(_element.sheet);\n        this._element = _element;\n    }\n    addGlobal(name, value, index) {\n        this._add(`${name} ${value};`, index);\n    }\n    clear() {\n        const { cssRules } = this._target;\n        while (cssRules.length) {\n            this._target.deleteRule(cssRules.length - 1);\n        }\n    }\n    remove() {\n        removeStyleElement(this._element);\n    }\n    done() {\n        /* do nothing */\n    }\n}\n/**\n * Builds CSS object model production format.\n *\n * The sheet writer creates a `<style>` element inside the `parent` node per CSS rule and builds its style sheet\n * with CSS object model methods.\n *\n * @category Rendering\n * @param config - Object format configuration.\n *\n * @returns CSS production format.\n */\nfunction stypObjectFormat(config = {}) {\n    const { parent = document.head } = config;\n    const doc = parent.ownerDocument;\n    return {\n        ...config,\n        scheduler: stypRenderScheduler(parent, config.scheduler),\n        addSheet() {\n            const element = doc.createElement('style');\n            element.setAttribute('type', 'text/css');\n            element.append(doc.createTextNode(''));\n            parent.appendChild(element);\n            return new StypSheetObjectWriter(element);\n        },\n    };\n}\n\n/**\n * Produces and dynamically updates basic CSS stylesheets based on the given CSS rules.\n *\n * Unlike {@link produceStyle}, this function does not enable renderers but the basic one which just renders CSS\n * properties. This can be used to save the bundle size by enabling only select renderers.\n *\n * @category Rendering\n * @param rules - CSS rules to produce stylesheets for. This can be e.g. a {@link StypRule.rules} to render all rules,\n * or a result of {@link StypRuleList.grab} method call to render only matching ones.\n * @param format - Production options.\n *\n * @returns Styles supply. Once cut off (i.e. its `off()` method is called) the produced stylesheets are removed.\n */\nfunction produceBasicStyle(rules, format) {\n    const { rootSelector = { e: 'body' }, scheduler = newRenderSchedule, nsAlias = newNamespaceAliaser(), } = format;\n    const supply = new Supply();\n    const selectorFormat = { nsAlias };\n    const factories = stypRenderFactories(format);\n    const renderSupply = renderRules(rules);\n    const trackSupply = trackRules();\n    return supply.as(renderSupply).as(trackSupply);\n    function styleProducer(rule, renderer, production) {\n        class StyleProducer$ {\n            get supply() {\n                return supply;\n            }\n            get rule() {\n                return rule;\n            }\n            get sheet() {\n                return production.sheet;\n            }\n            get writer() {\n                return production.writer;\n            }\n            get selector() {\n                return production.selector;\n            }\n            nsAlias(ns) {\n                return nsAlias(ns);\n            }\n            render(properties, options) {\n                if (!options) {\n                    renderer(this, properties);\n                }\n                else {\n                    renderer(styleProducer(rule, renderer, {\n                        sheet: production.sheet,\n                        writer: options.writer || production.writer,\n                        selector: options.selector || production.selector,\n                    }), properties);\n                }\n            }\n            addStyle(_selector = production.selector) {\n                const { writer } = production;\n                if (!writer.isGroup) {\n                    return writer;\n                }\n                return writer.addStyle(selectorText(_selector));\n            }\n        }\n        return new StyleProducer$();\n    }\n    function selectorText(selector) {\n        return doqryText(selector, selectorFormat);\n    }\n    function renderRules(rulesToRender) {\n        return itsReduction(mapIt(rulesToRender, renderRule), (prev, supply) => new Supply().cuts(supply).cuts(prev), new Supply());\n    }\n    function trackRules() {\n        const supply = new Supply();\n        return onSupplied(rules)({\n            supply,\n            receive: (_ctx, added) => {\n                added.forEach(r => renderRule(r).needs(supply));\n            },\n        });\n    }\n    function renderRule(rule) {\n        const [reader, renderer] = rendererForRule(rule);\n        let sheet;\n        const selector = ruleSelector(rule);\n        const schedule = scheduler();\n        return reader(renderProperties).whenOff(removeStyle);\n        function renderProperties(properties) {\n            schedule(() => {\n                sheet === null || sheet === void 0 ? void 0 : sheet.clear();\n                const producer = styleProducer(rule, renderer, {\n                    get sheet() {\n                        if (!sheet) {\n                            sheet = format.addSheet(producer);\n                        }\n                        return sheet;\n                    },\n                    get writer() {\n                        return this.sheet;\n                    },\n                    selector,\n                });\n                producer.render(properties);\n                sheet === null || sheet === void 0 ? void 0 : sheet.done();\n            });\n        }\n        function removeStyle() {\n            schedule(() => {\n                const lastSheet = sheet;\n                if (lastSheet) {\n                    sheet = undefined;\n                    return lastSheet.remove();\n                }\n                // Otherwise element is removed before anything rendered.\n                // Should never happen for properly constructed rule.\n            });\n        }\n    }\n    function ruleSelector(rule) {\n        const selector = rule.selector;\n        if (!selector.length) {\n            // Use configured root selector\n            return doqryPicker(rootSelector);\n        }\n        if (isDoqryCombinator(selector[0])) {\n            // First combinator is relative to root selector\n            return [...doqryPicker(rootSelector), ...selector];\n        }\n        return selector;\n    }\n    function rendererForRule(rule) {\n        const specs = factories.map(factory => factory.create(rule));\n        const reader = specs.reduce((read, spec) => spec.read ? afterSupplied(spec.read(read)) : read, rule.read);\n        return [reader, renderAt(0)];\n        function renderAt(index) {\n            return (producer, properties) => {\n                const nextIndex = index + 1;\n                let nextRenderer;\n                if (nextIndex === factories.length) {\n                    nextRenderer = noop;\n                }\n                else {\n                    nextRenderer = renderAt(nextIndex);\n                }\n                const nextProducer = styleProducer(producer.rule, nextRenderer, producer);\n                specs[index].render(nextProducer, properties);\n            };\n        }\n    }\n}\n\n/**\n * @internal\n */\nfunction defaultStypRenderers(renderer) {\n    const result = [\n        stypRenderAtRules,\n        stypRenderXmlNs,\n        stypRenderGlobals,\n        stypRenderText,\n    ];\n    if (renderer) {\n        if (isReadonlyArray(renderer)) {\n            result.push(...renderer);\n        }\n        else {\n            result.push(renderer);\n        }\n    }\n    return result;\n}\n\n/**\n * Produces and dynamically updates CSS stylesheets based on the given CSS rules.\n *\n * Appends `<style>` element(s) to the given parent DOM node (`document.head` by default) and updates them when CSS\n * rules change.\n *\n * This function enables all default renderers. E.g. the one supporting raw CSS text rules. If some of them are not\n * needed a {@link produceBasicStyle} variant of this function may be used instead.\n *\n * @category Rendering\n * @param rules - CSS rules to produce stylesheets for. This can be e.g. a {@link StypRule.rules} to render all rules,\n * or a result of {@link StypRuleList.grab} method call to render only matching ones.\n * @param format - Production format.\n *\n * @returns Styles supply. Once cut off (i.e. its `off()` method is called) the produced stylesheets are removed.\n */\nfunction produceStyle(rules, format) {\n    return produceBasicStyle(rules, { ...format, renderer: defaultStypRenderers(format.renderer) });\n}\n\nconst StypQuery__symbol = ( /*#__PURE__*/Symbol('StypQuery'));\nclass StypQuery$Normalized {\n    constructor(query) {\n        this[StypQuery__symbol] = query;\n    }\n    get ns() {\n        return this[StypQuery__symbol].ns;\n    }\n    get e() {\n        return this[StypQuery__symbol].e;\n    }\n    get i() {\n        return this[StypQuery__symbol].i;\n    }\n    get c() {\n        return this[StypQuery__symbol].c;\n    }\n    get $() {\n        return this[StypQuery__symbol].$;\n    }\n}\nfunction stypQuery(query) {\n    if (query[StypQuery__symbol]) {\n        return query;\n    }\n    return new StypQuery$Normalized(doqryPickerPart(query));\n}\n\n/**\n * Checks whether the given structured CSS `selector` matches target `query`.\n *\n * @category CSS Rule\n * @param selector - Structured CSS selector.\n * @param query - CSS rule query.\n *\n * @returns `true` if `selector` matches the `query`, or `false` otherwise.\n */\nfunction stypQueryMatch(selector, query) {\n    const picker = doqryPicker(selector);\n    if (!picker.length) {\n        return false;\n    }\n    const part = picker[picker.length - 1];\n    const q = stypQuery(query);\n    if (q.ns && part.ns !== q.ns) {\n        return false;\n    }\n    if (q.e && part.e !== q.e) {\n        return false;\n    }\n    if (q.i && part.i !== q.i) {\n        return false;\n    }\n    if (q.c && !StypQuery$classesMatch(part.c, q.c)) {\n        return false;\n    }\n    // noinspection RedundantIfStatementJS\n    if (q.$ && !StypQuery$classesMatch(part.$, q.$)) {\n        return false;\n    }\n    return true;\n}\nfunction StypQuery$classesMatch(classes, query) {\n    return classes && query.every(qClass => classes.find(mClass => namesEqual(qClass, mClass)));\n}\n\nconst noKeyAndTail = [[]];\n/**\n * @internal\n */\nfunction stypRuleKeyAndTail(selector) {\n    if (!selector.length) {\n        return noKeyAndTail;\n    }\n    let i = 0;\n    let combinator;\n    for (;;) {\n        const part = selector[i++];\n        if (isDoqryCombinator(part)) {\n            combinator = part;\n            continue;\n        }\n        const key = combinator ? [combinator, part] : [part];\n        return [key, selector.slice(i)];\n    }\n}\nconst rootSelector$1 = [];\n/**\n * @internal\n */\nfunction stypOuterSelector(selector) {\n    let i = selector.length - 1;\n    if (i <= 0) {\n        return i ? undefined : rootSelector$1;\n    }\n    do {\n        --i;\n        switch (selector[i]) {\n            case '>':\n                return selector.slice(0, i);\n            case '+':\n            case '~':\n                --i;\n                continue;\n            default:\n                return selector.slice(0, i + 1);\n        }\n    } while (i > 0);\n    return;\n}\n\n/**\n * @internal\n */\nfunction stypRuleKeyText(key) {\n    return doqryDisplayText(key);\n}\n\n/**\n * CSS rule.\n *\n * Represents CSS selector and corresponding CSS properties.\n *\n * @category CSS Rule\n */\nclass StypRule {\n    [AfterEvent__symbol]() {\n        return this.read;\n    }\n    /**\n     * Appends CSS properties to this rule.\n     *\n     * @param properties - CSS properties specifier.\n     *\n     * @returns `this` rule instance.\n     */\n    add(properties) {\n        return this.rules.add([], properties);\n    }\n    /**\n     * Clears CSS properties of this rule.\n     *\n     * Calling this method is the same as calling `set()` without properties.\n     *\n     * @returns `this` rule instance.\n     */\n    clear() {\n        return this.set();\n    }\n}\n/**\n * Dynamically updated list of CSS rules.\n *\n * This is an iterable of rules, an EventSender` of their updates, and an `EventKeeper` of itself.\n *\n * @category CSS Rule\n */\nclass StypRuleList {\n    [AfterEvent__symbol]() {\n        return this.read;\n    }\n    [OnEvent__symbol]() {\n        return this.onUpdate;\n    }\n}\n/**\n * Dynamic list of all CSS rules in hierarchy starting from its root.\n *\n * @category CSS Rule\n */\nclass StypRuleHierarchy extends StypRuleList {\n}\n\n/**\n * @internal\n */\nclass StypRuleList$ extends StypRuleList {\n    constructor(_list, ruleMatches) {\n        super();\n        this._list = _list;\n        let filterArray;\n        if (ruleMatches) {\n            this._buildList = () => filterIt(_list, ruleMatches);\n            filterArray = rules => rules.filter(ruleMatches);\n        }\n        else {\n            this._buildList = valueProvider(_list);\n            filterArray = asis;\n        }\n        this.onUpdate = onEventBy(receiver => {\n            const rules = this._ruleSet || (this._ruleSet = new Set(this._buildList()));\n            onSupplied(this._list)({\n                supply: receiver.supply.whenOff(() => this._ruleSet = undefined),\n                receive: (context, added, removed) => {\n                    added = filterArray(added);\n                    removed = filterArray(removed);\n                    if (removed.length || added.length) {\n                        removed.forEach(rule => rules.delete(rule));\n                        added.forEach(rule => rules.add(rule));\n                        receiver.receive(context, added, removed);\n                    }\n                },\n            });\n        }).do(shareOn);\n        const returnSelf = valueProvider(this);\n        this.read = this.onUpdate.do(mapAfter(returnSelf, returnSelf));\n    }\n    [Symbol.iterator]() {\n        if (this._ruleSet) {\n            // List changes are tracked.\n            return this._ruleSet.values();\n        }\n        // List changes are not currently tracked.\n        // Request the rules explicitly.\n        return itsIterator(this._buildList());\n    }\n    grab(query) {\n        return StypRuleList$grab(this, query);\n    }\n}\n/**\n * @internal\n */\nfunction StypRuleList$grab(list, query) {\n    const q = stypQuery(query);\n    return new StypRuleList$(list, rule => stypQueryMatch(rule.selector, q));\n}\n\nclass StypRule$AllRules extends StypRuleHierarchy {\n    constructor(_root, nested) {\n        super();\n        this._root = _root;\n        this.nested = nested;\n        this._updates = new EventEmitter();\n        this.self = StypRuleList$self(_root, this);\n        this._it = lazyValue(() => StypRule$allRules(_root));\n        const returnSelf = valueProvider(this);\n        this.read = this._updates.on.do(mapAfter(returnSelf, returnSelf));\n    }\n    get onUpdate() {\n        return this._updates.on;\n    }\n    [Symbol.iterator]() {\n        return this[PushIterator__symbol]();\n    }\n    [PushIterator__symbol](accept) {\n        return this._it()[PushIterator__symbol](accept);\n    }\n    grab(query) {\n        return StypRuleList$grab(this, query);\n    }\n    add(selector, properties) {\n        return StypRule$extend(this._root, doqryPicker(selector), properties, true);\n    }\n    get(selector) {\n        return this._get(doqryPicker(selector));\n    }\n    _get(selector) {\n        const [key, tail] = stypRuleKeyAndTail(selector);\n        if (!tail) {\n            return this._root;\n        }\n        const found = this.nested._rule(stypRuleKeyText(key));\n        if (!found) {\n            return;\n        }\n        return found.rules.get(tail);\n    }\n    watch(selector) {\n        const request = doqryPicker(selector);\n        return afterEventBy(receiver => {\n            const tracker = trackValue({});\n            const propertiesSupply = this.read.do(consumeEvents(() => {\n                const found = this._get(request);\n                return found && found\n                    .read(properties => tracker.it = properties)\n                    .whenOff(() => tracker.it = {});\n            }));\n            return tracker.read(receiver).cuts(propertiesSupply);\n        }).do(shareAfter);\n    }\n    _add(rule, sendUpdate) {\n        rule.rules.onUpdate((added, removed) => this._updates.send(added, removed));\n        if (sendUpdate) {\n            this._updates.send(itsElements(rule.rules), []);\n        }\n    }\n    _remove(reason) {\n        const removed = itsElements(this);\n        this._updates.send([], removed);\n        removed.forEach(rule => {\n            rule.rules._updates.supply.off(reason);\n            rule._spec.supply.off(reason);\n        });\n    }\n}\nfunction StypRuleList$self(rule, all) {\n    const onUpdate = new EventEmitter();\n    const rules = [rule];\n    all.onUpdate((_added, removed) => {\n        if (removed[0] === rule) {\n            rules.length = 0;\n            onUpdate.send([], [rule]);\n        }\n    }).cuts(onUpdate);\n    class Self {\n        [OnEvent__symbol]() {\n            return onUpdate.on;\n        }\n        [Symbol.iterator]() {\n            return itsIterator(rules);\n        }\n    }\n    return new StypRuleList$(new Self());\n}\nfunction StypRule$allRules(rule) {\n    return overElementsOf(overOne(rule), flatMapIt(rule.rules.nested, nested => StypRule$allRules(nested)));\n}\nclass StypRule$NestedRules extends StypRuleList {\n    constructor(root) {\n        super();\n        this._updates = new EventEmitter();\n        this._byKey = new Map();\n        this._all = new StypRule$AllRules(root, this);\n        const returnSelf = valueProvider(this);\n        this.read = this._updates.on.do(mapAfter(returnSelf, returnSelf));\n    }\n    get onUpdate() {\n        return this._updates.on;\n    }\n    [Symbol.iterator]() {\n        return this._byKey.values();\n    }\n    grab(query) {\n        return StypRuleList$grab(this, query);\n    }\n    _rule(key) {\n        return this._byKey.get(key);\n    }\n    _add(key, rule, sendUpdate) {\n        this._byKey.set(key, rule);\n        rule.rules.onUpdate((_added, removed) => {\n            if (removed[0] === rule) {\n                this._byKey.delete(key);\n                this._updates.send([], [rule]);\n            }\n        });\n        if (sendUpdate) {\n            this._updates.send([rule], []);\n        }\n        this._all._add(rule, sendUpdate);\n    }\n}\n/**\n * @internal\n */\nclass StypRule$ extends StypRule {\n    constructor(root, selector, key, spec = noStypPropertiesSpec) {\n        super();\n        this._root = root || this;\n        this._selector = selector;\n        this._key = key;\n        this._spec = trackValue(spec);\n        this.read = this._spec.read.do(digAfter(builder => builder(this)));\n        this._nested = new StypRule$NestedRules(this);\n    }\n    get root() {\n        return this._root;\n    }\n    get outer() {\n        if (this._outer !== undefined) {\n            return this._outer;\n        }\n        const outerSelector = stypOuterSelector(this.selector);\n        return this._outer = outerSelector && this.root.rules.get(outerSelector) || null;\n    }\n    get selector() {\n        return this._selector;\n    }\n    get key() {\n        return this._key;\n    }\n    get empty() {\n        return this._spec.it === noStypPropertiesSpec;\n    }\n    get rules() {\n        return this._nested._all;\n    }\n    set(properties) {\n        this._spec.it = properties ? r => stypPropertiesBySpec(r, properties) : noStypPropertiesSpec;\n        return this;\n    }\n    remove(reason) {\n        this.rules._remove(reason);\n        return this;\n    }\n}\nfunction StypRule$extend(rule, targetSelector, properties, sendUpdate) {\n    const [key, tail] = stypRuleKeyAndTail(targetSelector);\n    if (!tail) {\n        // Target rule\n        rule._spec.it = StypRule$extendSpec(rule, properties);\n        return rule;\n    }\n    const keyText = stypRuleKeyText(key);\n    const found = rule.rules.nested._rule(keyText);\n    if (found) {\n        return StypRule$extend(found, tail, properties, sendUpdate);\n    }\n    const newNested = new StypRule$(rule.root, [...rule.selector, ...key], key);\n    const result = StypRule$extend(newNested, tail, properties, false); // Send only a top-level update\n    rule.rules.nested._add(keyText, newNested, sendUpdate);\n    return result;\n}\nfunction StypRule$extendSpec(rule, properties) {\n    const oldSpec = rule._spec.it;\n    if (!properties) {\n        return oldSpec;\n    }\n    if (rule.empty) {\n        return r => stypPropertiesBySpec(r, properties);\n    }\n    return r => mergeStypProperties(oldSpec(r), stypPropertiesBySpec(r, properties));\n}\n\n/**\n * @internal\n */\nconst rootSelector = [];\n/**\n * Constructs root CSS rule representing global CSS declarations.\n *\n * All other rules are nested within single root.\n *\n * The root CSS rule selector is empty.\n *\n * @category CSS Rule\n * @param properties - Initial CSS rule properties specifier.\n *\n * @returns New root CSS rule.\n */\nfunction stypRoot(properties) {\n    return new StypRule$(undefined, rootSelector, [], properties ? r => stypPropertiesBySpec(r, properties) : undefined);\n}\n\n/**\n * A type safe reference to CSS rule.\n *\n * Allows to access an modify CSS properties of the rule in a type safe manner.\n *\n * @category CSS Rule\n * @typeparam T  CSS properties structure of referenced rule.\n */\nclass StypRuleRef {\n    [AfterEvent__symbol]() {\n        return this.read;\n    }\n    /**\n     * Clears CSS properties of the referenced rule.\n     *\n     * Calling this method is the same as calling `set()` without properties.\n     *\n     * @returns `this` rule instance.\n     */\n    clear() {\n        return this.set();\n    }\n}\n/**\n * @internal\n */\nclass StypRuleRef$ extends StypRuleRef {\n    constructor(_root, _selector, _map) {\n        super();\n        this._root = _root;\n        this._selector = _selector;\n        this._map = _map;\n        this.read = afterAll({\n            ms: this._map(this._root),\n            ps: this._root.rules.watch(this._selector),\n        }).do(mapAfter(({ ms: [_mappings], ps: [_properties], }) => StypMapper.map(_mappings, _properties)));\n    }\n    add(properties) {\n        this._root.rules.add(this._selector, properties);\n        return this;\n    }\n    set(properties) {\n        this._root.rules.add(this._selector).set(properties);\n        return this;\n    }\n}\n/**\n * @category CSS Rule\n */\nconst RefStypRule = {\n    /**\n     * Constructs a CSS rule referrer that maps original CSS properties accordingly to the given `mappings`.\n     *\n     * @typeparam T  CSS properties structure of referenced rule.\n     * @param selector - CSS selector of target rule.\n     * @param mappings - Either a mappings of CSS properties, an event keeper sending such mappings, or a function\n     * returning one of them and accepting a root CSS rule as its only argument.\n     * The constructed reference will be relative to as its only parameter.\n     *\n     * @returns New CSS rule key instance.\n     */\n    by(selector, mappings) {\n        let map;\n        if (typeof mappings === 'function') {\n            map = root => mappingsKeeper(mappings(root));\n        }\n        else {\n            map = valueProvider(mappingsKeeper(mappings));\n        }\n        return root => new StypRuleRef$(root, selector, map);\n    },\n};\n/**\n * @internal\n */\nfunction mappingsKeeper(mappings) {\n    return isEventKeeper(mappings) ? mappings : afterThe(mappings);\n}\n\n/**\n * Named CSS rule references complying to the CSS properties structure.\n *\n * Implements an event keeper interface by sending named CSS properties structures for each CSS rule reference.\n *\n * @category CSS Rule\n * @typeParam TRefMap - A type of target map of named CSS properties structures.\n */\nclass StypRuleRefs {\n    /**\n     * Constructs named CSS rules.\n     *\n     * @param refs - A map of named CSS rule references.\n     */\n    constructor(refs) {\n        this.refs = refs;\n        const fromAll = afterAll(this.refs);\n        this.read = fromAll.do(mapAfter(flattenProperties));\n    }\n    static by(referrers, root) {\n        const refs = {};\n        for (const key of Object.keys(referrers)) {\n            refs[key] = referrers[key](root);\n        }\n        return new StypRuleRefs(refs);\n    }\n    [AfterEvent__symbol]() {\n        return this.read;\n    }\n}\n/**\n * @internal\n */\nfunction flattenProperties(propertiesMap) {\n    const result = {};\n    for (const name of Object.keys(propertiesMap)) {\n        result[name] = propertiesMap[name][0];\n    }\n    return result;\n}\n\n/**\n * @internal\n */\nconst noStypRules = ( /*#__PURE__*/new StypRuleList$({\n    [OnEvent__symbol]() {\n        return onNever;\n    },\n    [Symbol.iterator]() {\n        return [][Symbol.iterator]();\n    },\n}));\n/**\n * Constructs dynamically updated CSS rule list out of rule sources.\n *\n * @category CSS Rule\n * @param sources - CSS rule sources.\n *\n * @returns Dynamic CSS rule list.\n */\nfunction stypRules(...sources) {\n    return sources.length ? rulesByList(sources.map(rulesFromSource)) : noStypRules;\n}\n/**\n * @internal\n */\nfunction rulesFromSource(source) {\n    return typeof source === 'function' ? evalRules(source) : rulesByValue(source);\n}\n/**\n * Constructs lazily updated CSS rule list out of rule sources.\n *\n * In contrast to {@link stypRules} this one does not evaluate sources (e.g. does not call source functions) until there\n * is an updates receiver registered.\n *\n * This means that the constructed rule set won't necessary contain the rules from all sources originally. It will\n * report them as updates instead.\n *\n * @category CSS Rule\n * @param sources - CSS rule sources.\n *\n * @returns Dynamic CSS rule list.\n */\nfunction lazyStypRules(...sources) {\n    return sources.length ? rulesByList(sources.map(lazyRulesFromSource)) : noStypRules;\n}\n/**\n * @internal\n */\nfunction lazyRulesFromSource(source) {\n    return typeof source === 'function' ? lazyRules(source) : rulesByValue(source);\n}\n/**\n * @internal\n */\nfunction rulesByList(sources) {\n    if (sources.length === 1) {\n        const source = sources[0];\n        return source instanceof StypRuleList ? source : new StypRuleList$(source);\n    }\n    return new StypRuleList$({\n        *[Symbol.iterator]() {\n            for (const rules of sources) {\n                yield* rules;\n            }\n        },\n        [OnEvent__symbol]() {\n            return onEventBy(receiver => {\n                sources.forEach(source => onSupplied(source)({\n                    supply: new Supply().needs(receiver.supply),\n                    receive(context, added, removed) {\n                        receiver.receive(context, added, removed);\n                    },\n                }));\n            }).do(shareOn);\n        },\n    });\n}\n/**\n * @internal\n */\nfunction evalRules(source) {\n    let rules;\n    const getRules = () => rules || (rules = rulesByValue(source()));\n    return {\n        [Symbol.iterator]() {\n            return getRules()[Symbol.iterator]();\n        },\n        [OnEvent__symbol]() {\n            return getRules()[OnEvent__symbol]();\n        },\n    };\n}\n/**\n * @internal\n */\nfunction lazyRules(source) {\n    const ruleSet = new Set();\n    const onEvent = onEventBy(receiver => {\n        const rules = rulesByValue(source());\n        reportExistingRules(rules, ruleSet, receiver);\n        rules[OnEvent__symbol]()({\n            supply: receiver.supply.whenOff(() => ruleSet.clear()),\n            receive(context, added, removed) {\n                removed.forEach(rule => ruleSet.delete(rule));\n                added.forEach(rule => ruleSet.add(rule));\n                receiver.receive(context, added, removed);\n            },\n        });\n    }).do(shareOn);\n    return {\n        [OnEvent__symbol]() {\n            return onEvent;\n        },\n        [Symbol.iterator]() {\n            return ruleSet.values();\n        },\n    };\n}\n/**\n * @internal\n */\nfunction rulesByValue(source) {\n    return source instanceof StypRule ? source.rules.self : isEventSender(source) ? source : asyncRules(source);\n}\n/**\n * @internal\n */\nfunction asyncRules(source) {\n    const ruleSet = new Set();\n    const onEvent = onEventBy(receiver => {\n        let sourceSupply = neverSupply();\n        const { supply } = receiver;\n        supply.cuts(sourceSupply)\n            .whenOff(() => ruleSet.clear());\n        source.then(resolution => {\n            if (!supply.isOff) {\n                const rules = resolution instanceof StypRule ? resolution.rules : resolution;\n                reportExistingRules(rules, ruleSet, receiver);\n                sourceSupply = onSupplied(rules)({\n                    receive(context, added, removed) {\n                        removed.forEach(rule => ruleSet.delete(rule));\n                        added.forEach(rule => ruleSet.add(rule));\n                        receiver.receive(context, added, removed);\n                    },\n                }).needs(supply);\n            }\n        }).catch(error => supply.off(error));\n    }).do(shareOn);\n    return {\n        [OnEvent__symbol]() {\n            return onEvent;\n        },\n        [Symbol.iterator]() {\n            return ruleSet.values();\n        },\n    };\n}\n/**\n * @internal\n */\nfunction reportExistingRules(rules, ruleSet, receiver) {\n    const existing = [];\n    itsEach(rules, rule => {\n        existing.push(rule);\n        ruleSet.add(rule);\n    });\n    if (existing.length) {\n        const dispatcher = new EventNotifier();\n        dispatcher.on(receiver);\n        dispatcher.send(existing, []); // Report existing rules as just added\n    }\n}\n\nexport { RefStypRule, StypAngle, StypAnglePt, StypColor, StypColorStruct, StypFrequency, StypFrequencyPt, StypHSL, StypLength, StypLengthPt, StypMapper, StypNumericStruct, StypRGB, StypResolution, StypRule, StypRuleHierarchy, StypRuleList, StypRuleRef, StypRuleRefs, StypTime, StypTimePt, StypURL, StypValueStruct, lazyStypRules, mixStypColors, produceBasicStyle, produceStyle, stypDomFormat, stypObjectFormat, stypQuery, stypQueryMatch, stypRenderAtRules, stypRenderGlobals, stypRenderProperties, stypRenderText, stypRenderXmlNs, stypRoot, stypRules, stypSplitPriority, stypTextFormat, stypValuesEqual };\n//# sourceMappingURL=style-producer.js.map\n","import { produceBasicStyle, lazyStypRules, stypObjectFormat, stypDomFormat, produceStyle, stypRules, stypRoot } from '@frontmeans/style-producer';\nimport { SingleContextKey, MultiContextKey, ContextKey__symbol, IterativeContextKey } from '@proc7ts/context-values';\nimport { bootstrapDefault, DefaultNamespaceAliaser, ComponentRenderScheduler, ComponentContext, DefinitionContext, ShadowContentRoot, ComponentMember, FeatureDef__symbol } from '@wesib/wesib';\nimport { nodeDocument } from '@frontmeans/dom-primitives';\nimport { doqryPicker } from '@frontmeans/doqry';\nimport { valueProvider, extendSetOfElements, setOfElements, elementOrArray } from '@proc7ts/primitives';\nimport { Supply } from '@proc7ts/supply';\nimport { css__naming, NamespaceDef } from '@frontmeans/namespace-aliaser';\nimport { itsEach } from '@proc7ts/push-iterator';\n\n/**\n * A key of bootstrap, definition, or component context value containing a component style producer.\n *\n * Utilizes `produceBasicStyle()` by default. I.e. it does not enable default renderers. To enable them all a\n * {@link StyleProducerSupport} can be used.\n *\n * Depends on [@frontmeans/style-producer].\n *\n * [@frontmeans/style-producer]: https://www.npmjs.com/package/@frontmeans/style-producer\n */\nconst ComponentStyleProducer = (\n/*#__PURE__*/ new SingleContextKey('component-style-producer', {\n    byDefault: bootstrapDefault(() => produceBasicStyle),\n}));\n\n/**\n * Builds configuration of DOM style production format.\n *\n * Schedules style rendering in `ComponentRenderScheduler` by default.\n *\n * Utilizes `DefaultNamespaceAliaser` by default.\n *\n * @param format - Target component style production format.\n * @param config - Original component style production format configuration.\n * @param render - Element render definition to apply to style render schedule, unless render scheduler specified\n * explicitly in `config`.\n *\n * @returns Configuration of DOM style production format.\n */\nfunction componentStypDomFormatConfig(format, config = {}, render) {\n    const { context } = format;\n    return {\n        ...config,\n        document: config.document || nodeDocument(context.element),\n        parent: config.parent || context.contentRoot,\n        rootSelector: [],\n        scheduler: config.scheduler || defaultStypRenderScheduler(context, render),\n        nsAlias: config.nsAlias || context.get(DefaultNamespaceAliaser),\n        renderer: format.renderer(config),\n    };\n}\n/**\n * @internal\n */\nfunction defaultStypRenderScheduler(context, render = {}) {\n    const scheduler = context.get(ComponentRenderScheduler);\n    return (opts = {}) => scheduler({ ...opts, ...render });\n}\n\n/**\n * A key of component context value containing component CSS renderers.\n */\nconst ComponentStypRenderer = (\n/*#__PURE__*/ new MultiContextKey('component-styp-renderer'));\n\n/**\n * @internal\n */\nconst ElementIdClass__NS = ( /*#__PURE__*/new NamespaceDef('https://wesib.github.io/ns/element-id-class', 'elic', 'element-id-class'));\n/**\n * @internal\n */\nconst ElementIdClass = ( /*#__PURE__*/new SingleContextKey('unique-element-class', { byDefault: assignElementId }));\n/**\n * @internal\n */\nlet uniqueClassSeq = 0;\n/**\n * @internal\n */\nfunction assignElementId(contextValues) {\n    const aliaser = contextValues.get(DefaultNamespaceAliaser);\n    const context = contextValues.get(ComponentContext);\n    const { tagName = 'component' } = context.get(DefinitionContext).elementDef;\n    const local = `${tagName}#${++uniqueClassSeq}`;\n    const qualified = ElementIdClass__NS.name(aliaser(ElementIdClass__NS), local, css__naming);\n    const element = context.element;\n    element.classList.add(qualified);\n    return qualified;\n}\n\nconst ComponentStypFormat__symbol = ( /*#__PURE__*/new SingleContextKey('component-styp-format', {\n    byDefault(context) {\n        return new ComponentStypObjectFormat(context.get(ComponentContext));\n    },\n}));\n/**\n * Component style production format.\n *\n * This format can be obtained from component context.\n *\n * The formats implemented:\n * - {@link ComponentStypObjectFormat} (the default) renders CSS using CSS object model.\n * - {@link ComponentStypDomFormat} renders CSS as text. May render CSS of disconnected element.\n */\nclass ComponentStypFormat {\n    /**\n     * A key of component context value containing its style production format.\n     */\n    static get [ContextKey__symbol]() {\n        return ComponentStypFormat__symbol;\n    }\n    /**\n     * Produces and dynamically updates component's CSS stylesheets based on the given CSS rules.\n     *\n     * Utilizes {@link newProducer component's producer function}.\n     *\n     * @param rules - A source of CSS rules to produce stylesheets for.\n     * @param config - Style production format configuration.\n     *\n     * @returns CSS rules supply. Once cut off the produced stylesheets are removed.\n     */\n    produce(rules, config) {\n        const producer = this.newProducer(rules, config);\n        const supply = new Supply();\n        this.context.whenSettled(() => producer().as(supply));\n        return supply;\n    }\n    /**\n     * Creates component's CSS stylesheets producer based on the given CSS rules.\n     *\n     * Utilizes {@link ComponentStyleProducer}.\n     *\n     * @param rules - A source of CSS rules to produce stylesheets for.\n     * @param config - Style production format configuration.\n     *\n     * @returns CSS rules producer function returning CSS rules supply. Once cut off the produced stylesheets are removed.\n     */\n    newProducer(rules, config) {\n        const css = lazyStypRules(rules);\n        let producer;\n        const componentSupply = this.context.supply;\n        producer = () => {\n            const produceStyle = this.context.get(ComponentStyleProducer);\n            return produceStyle(css, this.format(config)).needs(componentSupply);\n        };\n        // In case the component destroyed already, the producer will be reassigned here _before_ return.\n        componentSupply.whenOff(() => {\n            // Prevent style production once component destroyed.\n            producer = valueProvider(componentSupply);\n        });\n        return () => producer();\n    }\n    /**\n     * Builds component-specific style renderer.\n     *\n     * This renderer applies {@link ComponentStypFormatConfig.hostSelector host selector} to generated CSS rules.\n     *\n     * This method is called by {@link format} one.\n     *\n     * @param config - Component style production format configuration.\n     *\n     * @returns Component style renderer(s).\n     */\n    renderer(config) {\n        const shadowRoot = this.context.get(ShadowContentRoot, { or: null });\n        const { renderer } = config;\n        const renderers = extendSetOfElements(setOfElements(renderer), this.context.get(ComponentStypRenderer));\n        const hostSelector = config.hostSelector\n            ? doqryPicker(config.hostSelector)[0]\n            : undefined;\n        renderers.add(shadowRoot\n            ? shadowRenderer(hostSelector)\n            : noShadowRenderer(hostSelector || { c: [this.context.get(ElementIdClass)] }));\n        return elementOrArray(renderers);\n    }\n}\n/**\n * @internal\n */\nfunction shadowRenderer(hostSelector) {\n    return {\n        order: -100,\n        render(producer, properties) {\n            let { selector } = producer;\n            if (!selector.length) {\n                selector = [hostSelector || { u: [[':', 'host']] }];\n            }\n            else if (hostSelector) {\n                const [rest, host] = extractHostSelector(selector);\n                if (host) {\n                    if (host.length) {\n                        selector = [{ u: [[':', 'host', extendHostSelector(host, hostSelector)]] }, ...rest];\n                    }\n                    else {\n                        selector = [{ u: [[':', 'host', [hostSelector]]] }, ...rest];\n                    }\n                }\n            }\n            producer.render(properties, { selector });\n        },\n    };\n}\n/**\n * @internal\n */\nfunction noShadowRenderer(hostSelector) {\n    return {\n        order: -100,\n        render(producer, properties) {\n            let { selector } = producer;\n            if (!selector.length) {\n                selector = [hostSelector];\n            }\n            else {\n                const [rest, host] = extractHostSelector(selector);\n                if (host && host.length) {\n                    selector = [...extendHostSelector(host, hostSelector), ...rest];\n                }\n                else {\n                    selector = [hostSelector, ...rest];\n                }\n            }\n            producer.render(properties, { selector });\n        },\n    };\n}\n/**\n * @internal\n */\nfunction extractHostSelector(selector) {\n    if (typeof selector[0] !== 'string') {\n        const [{ ns, e, i, c, u, s, $ }, ...restParts] = selector;\n        if (!ns && !e && !i && !c && !s && u) {\n            const [[prefix, name, ...params]] = u;\n            if (prefix === ':' && name === 'host') {\n                let host;\n                if (params.length) {\n                    host = params[0].slice();\n                    host[0].$ = $;\n                }\n                else {\n                    host = $ ? [{ $ }] : [];\n                }\n                return [restParts, host];\n            }\n        }\n    }\n    return [selector];\n}\n/**\n * @internal\n */\nfunction extendHostSelector(selector, { ns, e, i, c, u, s, }) {\n    const [first, ...rest] = selector;\n    return [\n        {\n            ns: first.e || first.ns ? first.ns : ns,\n            e: first.e || first.ns ? first.e : e,\n            i: first.i || i,\n            c: first.c ? (c ? [...first.c, ...c] : first.c) : c,\n            u: first.u ? (u ? [...first.u, ...u] : first.u) : u,\n            s: ((first.s || '') + (s || '')) || undefined,\n            $: first.$,\n        },\n        ...rest,\n    ];\n}\n/**\n * Component's CSS object model production format.\n *\n * Renders CSS when component's element connected to document.\n *\n * This format is used by default.\n */\nclass ComponentStypObjectFormat extends ComponentStypFormat {\n    /**\n     * Constructs CSS object model production format.\n     *\n     * @param context - Target component context.\n     */\n    constructor(context) {\n        super();\n        this.context = context;\n    }\n    format(config) {\n        return stypObjectFormat(this.config(config));\n    }\n    /**\n     * Builds configuration of CSS object model production format.\n     *\n     * This method is called by {@link format} one.\n     *\n     * @param config - Original component style production format configuration.\n     *\n     * @returns Configuration of CSS object model production format.\n     */\n    config(config) {\n        return componentStypDomFormatConfig(this, config, { when: 'connected' });\n    }\n}\n\n/**\n * Component's DOM style production format.\n *\n * Renders CSS styles as text.\n *\n * This format is generally slower than {@link ComponentStypObjectFormat}, but allows to render styles before element\n * is connected to document.\n */\nclass ComponentStypDomFormat extends ComponentStypFormat {\n    /**\n     * Constructs DOM style production format.\n     *\n     * @param context - Target component context.\n     * @param when - When to start style rendering. `settled` by default.\n     */\n    constructor(context, { when = 'settled', } = {}) {\n        super();\n        this.context = context;\n        this.when = when;\n    }\n    format(config) {\n        return stypDomFormat(this.config(config));\n    }\n    /**\n     * Builds configuration of DOM style production format.\n     *\n     * This method is called by {@link format} one.\n     *\n     * @param config - Original component style production format configuration.\n     *\n     * @returns Configuration of DOM style production format.\n     */\n    config(config) {\n        return componentStypDomFormatConfig(this, config, { when: this.when });\n    }\n}\n\n/**\n * Creates an amendment (and decorator) of component member producing CSS rules to apply to component.\n *\n * An amended member should either contain a CSS rules source of type `StypRules.Source` or be a method returning it.\n *\n * Produces CSS using {@link ComponentStypFormat component style production format}.\n *\n * @typeParam TClass - Amended component class type.\n * @typeParam TAmended - Amended component member entity type.\n * @param config - Non-mandatory component style production format config.\n *\n * @returns Component property decorator.\n */\nfunction ProduceStyle(config) {\n    return ComponentMember(({ get, amend }) => amend({\n        componentDef: {\n            define(defContext) {\n                defContext.whenComponent(context => {\n                    context.whenReady(({ component }) => {\n                        const value = get(component);\n                        const source = typeof value === 'function' ? value.bind(component) : value;\n                        const format = context.get(ComponentStypFormat);\n                        format.produce(source, config);\n                    });\n                });\n            },\n        },\n    }));\n}\n\n/**\n * @internal\n */\nconst StyleProducerSupport__feature = {\n    setup(setup) {\n        setup.provide({ a: ComponentStyleProducer, is: produceStyle });\n    },\n};\n/**\n * Style producer support feature.\n *\n * This feature enables default CSS renderers.\n *\n * It is _not_ enabled automatically by {@link ProduceStyle @ProduceStyle} decorator.\n *\n * Depends on [@frontmeans/style-producer].\n *\n * [@frontmeans/style-producer]: https://www.npmjs.com/package/@frontmeans/style-producer\n */\nclass StyleProducerSupport {\n    static get [FeatureDef__symbol]() {\n        return StyleProducerSupport__feature;\n    }\n}\n\n/**\n * @internal\n */\nclass ThemeStyleKey extends IterativeContextKey {\n    constructor() {\n        super('theme-style');\n    }\n    grow(slot) {\n        const providers = new Map();\n        itsEach(slot.seed, style => {\n            let key;\n            let provider;\n            let isId;\n            if (typeof style === 'function') {\n                key = provider = style;\n                isId = true;\n            }\n            else {\n                key = style.style;\n                provider = style.provide.bind(style);\n                isId = false;\n            }\n            const prev = providers.get(key);\n            if (!prev) {\n                providers.set(key, [provider, isId]);\n            }\n            else {\n                const [prevProvider, hasId] = prev;\n                providers.set(key, [\n                    isId ? combineStyles(provider, prevProvider) : combineStyles(prevProvider, provider),\n                    isId || hasId,\n                ]);\n            }\n        });\n        if (providers.size || !slot.hasFallback) {\n            slot.insert(byId);\n        }\n        function byId(id) {\n            const existing = providers.get(id);\n            if (!existing) {\n                return id;\n            }\n            const [provider, hasId] = existing;\n            return hasId ? provider : combineStyles(id, provider);\n        }\n    }\n}\n/**\n * A key of bootstrap context value containing theme styles.\n */\nconst ThemeStyle = ( /*#__PURE__*/new ThemeStyleKey());\n/**\n * @internal\n */\nfunction combineStyles(first, second) {\n    return theme => stypRules(first(theme), second(theme));\n}\n\n/**\n * @internal\n */\nconst Theme__key = ( /*#__PURE__*/new SingleContextKey('theme', {\n    byDefault: bootstrapDefault(context => new Theme$(context.get(ThemeStyle))),\n}));\n/**\n * A hierarchy of CSS rules within single root.\n *\n * A component may use it to extract styling information.\n *\n * Current theme is available in bootstrap, definition, or component context. By default, only one theme is declared\n * per bootstrap. But this can be overridden.\n */\nclass Theme {\n    /**\n     * A key of bootstrap, definition, or component context value containing current theme instance.\n     */\n    static get [ContextKey__symbol]() {\n        return Theme__key;\n    }\n    /**\n     * Obtains CSS rule reference by its `referrer`.\n     *\n     * This is a helper method that resolves the given `referrer` against the `root` CSS rule of this theme.\n     *\n     * @param referrer - Target CSS rule referrer.\n     *\n     * @returns CSS rule reference.\n     */\n    ref(referrer) {\n        return referrer(this.root);\n    }\n}\n/**\n * @internal\n */\nclass Theme$ extends Theme {\n    constructor(_styles) {\n        super();\n        this._styles = _styles;\n        this.root = stypRoot();\n        this._rules = new Map();\n    }\n    style(...styles) {\n        const theme = this;\n        return lazyStypRules(...styles.reduce(addStyleRules, []));\n        function addStyleRules(target, style) {\n            const existing = theme._rules.get(style);\n            if (existing) {\n                target.push(existing);\n            }\n            else {\n                const constructed = theme._styles(style)(theme);\n                theme._rules.set(style, constructed);\n                target.push(constructed);\n            }\n            return target;\n        }\n    }\n}\n\nexport { ComponentStyleProducer, ComponentStypDomFormat, ComponentStypFormat, ComponentStypObjectFormat, ComponentStypRenderer, ProduceStyle, StyleProducerSupport, Theme, ThemeStyle, componentStypDomFormatConfig };\n//# sourceMappingURL=wesib.css.js.map\n",null,null,null,null,null,null,null,null,"/**\n * @internal\n */\nfunction hthvItem({ $ = 'raw', n, t, v, x = [], p = {}, pl = [], }) {\n    if (n) {\n        p[n] = { $, n, v, x: [], p: {}, pl: [] };\n    }\n    return {\n        $,\n        n,\n        t,\n        v,\n        x,\n        p,\n        pl,\n    };\n}\n\n/**\n * @internal\n */\nfunction hthvParseTrivial(value) {\n    if (typeof value === 'string') {\n        return value.split(',').map(item => item.trim());\n    }\n    const result = [];\n    for (const val of value) {\n        result.push(...hthvParseTrivial(val));\n    }\n    return result;\n}\n/**\n * @internal\n */\nfunction hthvParseFirstTrivial(value) {\n    if (!value) {\n        return value;\n    }\n    if (typeof value === 'string') {\n        const commaIdx = value.indexOf(',');\n        return (commaIdx >= 0 ? value.substr(0, commaIdx) : value).trim();\n    }\n    return hthvParseFirstTrivial(value[Symbol.iterator]().next().value);\n}\n\nexport { hthvParseTrivial as a, hthvParseFirstTrivial as b, hthvItem as h };\n//# sourceMappingURL=_http-header-value.base.js.map\n","import { h as hthvItem } from './_http-header-value.base.js';\n\n/**\n * @internal\n */\nfunction addParam({ p, pl, }, param) {\n    const key = param.n || param.v;\n    const prev = p[key];\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (!prev || !prev.n && param.n) {\n        p[key] = param;\n    }\n    pl.push(param);\n}\n\n/**\n * @internal\n */\nfunction angleBracketsParser({ delimiterOf }) {\n    return (input, out) => {\n        if (!(delimiterOf(input.s[input.i]) & 262144 /* AngleBracketStart */)) {\n            return false;\n        }\n        let result = '';\n        ++input.i;\n        while (input.i < input.s.length) {\n            const c = input.s[input.i++];\n            if (delimiterOf(c) & 524288 /* AngleBracketEnd */) {\n                break;\n            }\n            result += c;\n        }\n        out(result);\n        return true;\n    };\n}\n\n/**\n * @internal\n */\nconst parseNone = () => false;\n\nconst datePattern = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d\\d (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d\\d\\d\\d \\d\\d:\\d\\d:\\d\\d GMT/;\n/**\n * @internal\n */\nfunction dateTimeParser({ dateTime }) {\n    return dateTime ? parseDateTime : parseNone;\n}\nfunction parseDateTime(input, out) {\n    input.s = input.s.substring(input.i);\n    input.i = 0;\n    if (datePattern.test(input.s)) {\n        out(input.s.substring(input.i, input.i += 29));\n        return true;\n    }\n    return false;\n}\n\n/**\n * @internal\n */\nfunction nextInItem({ delimiterOf }) {\n    return input => {\n        const c = input.s[input.i];\n        input.d = delimiterOf(c);\n        return c;\n    };\n}\n\n/**\n * @internal\n */\nfunction quotedStringParser({ delimiterOf }) {\n    return (input, out) => {\n        let unquoted = '';\n        ++input.i;\n        for (; input.i < input.s.length; ++input.i) {\n            const c = input.s[input.i];\n            if (c === '\\\\') {\n                const next = input.s[++input.i];\n                if (next) {\n                    unquoted += next;\n                }\n                else {\n                    unquoted += c;\n                }\n            }\n            else if (delimiterOf(c) & 65536 /* Quote */) {\n                ++input.i;\n                out(unquoted);\n                return;\n            }\n            else {\n                unquoted += c;\n            }\n        }\n        out(unquoted);\n    };\n}\n\n/**\n * @internal\n */\nfunction itemParser(config, { named = true, tagged = true, extra = true, next = nextInItem(config), } = {}) {\n    const parseAngleBrackets = angleBracketsParser(config);\n    const parseDateTime = dateTimeParser(config);\n    const parseQuotedString = quotedStringParser(config);\n    const parseExtra = extra ? itemParser(config, { next, tagged: false, named: false, extra: false }) : parseNone;\n    return (input, out) => {\n        let name = '';\n        let type = 'raw';\n        let tag;\n        let value;\n        while (input.i < input.s.length) {\n            const c = next(input);\n            if (input.d) {\n                if (input.d & (4 /* Item */ | 8 /* Parameter */)) {\n                    break;\n                }\n                if (value == null) {\n                    if (input.d & 16 /* Assignment */) {\n                        value = name ? '' : c;\n                        ++input.i;\n                        continue;\n                    }\n                    if (input.d & 65536 /* Quote */) {\n                        if (tagged || !name) {\n                            parseQuotedString(input, v => {\n                                if (name) {\n                                    type = 'tagged-string';\n                                    tag = name;\n                                }\n                                else {\n                                    type = 'quoted-string';\n                                }\n                                name = '';\n                                value = v;\n                            });\n                        }\n                        break;\n                    }\n                    if (!name && parseAngleBrackets(input, v => {\n                        type = 'angle-bracketed-string';\n                        value = v;\n                    })) {\n                        break;\n                    }\n                    value = name;\n                    name = '';\n                }\n                else if (input.d & 65536 /* Quote */) {\n                    if (tagged || !value) {\n                        parseQuotedString(input, v => {\n                            if (value) {\n                                type = 'tagged-string';\n                                tag = value;\n                            }\n                            else {\n                                type = 'quoted-string';\n                            }\n                            value = v;\n                        });\n                    }\n                    break;\n                }\n                else if (!value && parseAngleBrackets(input, v => {\n                    type = 'angle-bracketed-string';\n                    value = v;\n                })) {\n                    break;\n                }\n            }\n            if (value == null) {\n                if (!name && parseDateTime(input, v => value = v)) {\n                    type = 'date-time';\n                    break;\n                }\n                if (named) {\n                    name += c;\n                }\n                else {\n                    value = c;\n                }\n            }\n            else if (!value && parseDateTime(input, v => value = v)) {\n                type = 'date-time';\n                break;\n            }\n            else {\n                value += c;\n            }\n            ++input.i;\n        }\n        let item;\n        if (value == null) {\n            if (!name) {\n                return false;\n            }\n            item = hthvItem({ $: type, v: name });\n        }\n        else {\n            item = hthvItem({ $: type, n: name || undefined, t: tag, v: value });\n        }\n        // noinspection StatementWithEmptyBodyJS\n        while (parseExtra(input, extraItem => item.x.push(extraItem)))\n            ; // eslint-disable-line curly\n        out(item);\n        return true;\n    };\n}\n\n/**\n * @internal\n */\nfunction nextInComment({ delimiterOf }) {\n    return input => {\n        let c = input.s[input.i];\n        if (c !== '\\\\') {\n            input.d = delimiterOf(c);\n            return c;\n        }\n        ++input.i;\n        if (input.i < input.s.length) {\n            c = input.s[input.i];\n            input.d = delimiterOf(c) ? 1 /* NonToken */ : 0 /* None */;\n        }\n        else {\n            input.d = 1 /* NonToken */;\n        }\n        return c;\n    };\n}\n\n/**\n * @internal\n */\nfunction spacesParser({ delimiterOf }) {\n    return input => {\n        const start = input.i;\n        do {\n            const c = input.s[input.i];\n            if (!(delimiterOf(c) & 2 /* Space */)) {\n                break;\n            }\n            input.i++;\n        } while (input.i < input.s.length);\n        return input.i !== start;\n    };\n}\n\n/**\n * @internal\n */\nfunction paramParser(config, opts = {}) {\n    const { delimiterOf } = config;\n    const skipSpaces = spacesParser(config);\n    const parseItem = itemParser(config, { ...opts, tagged: false });\n    return (input, out) => {\n        if (!(delimiterOf(input.s[input.i]) & 8 /* Parameter */)) {\n            return false;\n        }\n        ++input.i;\n        skipSpaces(input);\n        return parseItem(input, out);\n    };\n}\n\n/**\n * @internal\n */\nfunction commentParser(config) {\n    const { delimiterOf } = config;\n    const skipSpaces = spacesParser(config);\n    const commentParserConfig = {\n        next: nextInComment(config),\n    };\n    const parseItem = itemParser(config, commentParserConfig);\n    const parseParam = paramParser(config, commentParserConfig);\n    return (input, out) => {\n        if (!(delimiterOf(input.s[input.i]) & 131072 /* Comment */)) {\n            return false;\n        }\n        ++input.i;\n        let result;\n        // noinspection StatementWithEmptyBodyJS\n        while ( // eslint-disable-line curly\n        skipSpaces(input)\n            || parseParam(input, param => {\n                if (!result) {\n                    result = hthvItem({ $: 'raw', v: '' });\n                }\n                addParam(result, param);\n            })\n            || parseItem(input, item => result = item))\n            ;\n        ++input.i; // closing parent\n        out(result || hthvItem({ $: 'raw', v: '' }));\n        return true;\n    };\n}\n\n/**\n * @internal\n */\nfunction itemDelimitParser(config) {\n    const { delimiterOf } = config;\n    const skipSpaces = spacesParser(config);\n    return input => {\n        if (delimiterOf(input.s[input.i]) & 4 /* Item */) {\n            input.i++;\n            skipSpaces(input);\n            return true;\n        }\n        return false;\n    };\n}\n\n/**\n * @internal\n */\nconst defaultDelimit = {\n    ' ': 1 /* NonToken */ | 2 /* Space */ | 4 /* Item */,\n    '\\t': 1 /* NonToken */ | 2 /* Space */ | 4 /* Item */,\n    ',': 1 /* NonToken */ | 4 /* Item */,\n    ';': 1 /* NonToken */ | 8 /* Parameter */,\n    '\"': 1 /* NonToken */ | 32 /* Escaped */ | 65536 /* Quote */,\n    '\\\\': 1 /* NonToken */ | 32 /* Escaped */,\n    '<': 1 /* NonToken */ | 262144 /* AngleBracketStart */,\n    '>': 1 /* NonToken */ | 524288 /* AngleBracketEnd */,\n    '=': 1 /* NonToken */ | 16 /* Assignment */,\n    '(': 1 /* NonToken */,\n    ')': 1 /* NonToken */,\n    '/': 1 /* NonToken */,\n    ':': 1 /* NonToken */,\n    '?': 1 /* NonToken */,\n    '@': 1 /* NonToken */,\n    '[': 1 /* NonToken */,\n    ']': 1 /* NonToken */,\n    '{': 1 /* NonToken */,\n    '}': 1 /* NonToken */,\n};\n/**\n * @internal\n */\nfunction buildParserConfig({ delimit, dateTime, } = {}) {\n    const delimitConfig = delimit ? { ...defaultDelimit, ...delimit } : defaultDelimit;\n    return {\n        dateTime,\n        delimiterOf(c) {\n            return delimitConfig[c]\n                || (c >= '\\u0000' && c <= ' ' || c === '\\u007f' ? 1 /* NonToken */ : 0 /* None */);\n        },\n    };\n}\n/**\n * @internal\n */\nconst defaultParserConfig = ( /*#__PURE__*/buildParserConfig());\n/**\n * @internal\n */\nconst commentParserConfig = ( /*#__PURE__*/buildParserConfig({\n    delimit: {\n        ':': 1 /* NonToken */ | 16 /* Assignment */,\n        '(': 1 /* NonToken */ | 32 /* Escaped */ | 131072 /* Comment */,\n        ')': 1 /* NonToken */ | 32 /* Escaped */ | 4 /* Item */,\n        ' ': 1 /* NonToken */ | 2 /* Space */,\n        '\\t': 1 /* NonToken */ | 2 /* Space */,\n        '=': 1 /* NonToken */,\n        ',': 1 /* NonToken */,\n    },\n}));\n\n/**\n * Creates and configures new HTTP header value parser.\n *\n * @param config - New parser configuration.\n *\n * @returns New HTTP header value parser function.\n */\nfunction newHthvParser(config) {\n    const parserConfig = config ? buildParserConfig(config) : defaultParserConfig;\n    const parseItemDelimit = itemDelimitParser(parserConfig);\n    const parseParam = paramParser(parserConfig);\n    const parseItem = itemParser(parserConfig);\n    const parseComment = (config === null || config === void 0 ? void 0 : config.comments) ? commentParser(commentParserConfig) : parseNone;\n    return headerValue => {\n        const result = [];\n        const input = { i: 0, s: headerValue };\n        // noinspection StatementWithEmptyBodyJS\n        while (parseTopLevelItem())\n            ; // eslint-disable-line curly\n        return result;\n        function parseTopLevelItem() {\n            return input.i < input.s.length && (parseItemDelimit(input)\n                || parseParam(input, param => {\n                    if (!result.length) {\n                        result.push(hthvItem({ $: 'raw', v: '' }));\n                    }\n                    addParam(result[result.length - 1], param);\n                })\n                || parseComment(input, item => result.push(item))\n                || parseItem(input, item => result.push(item)));\n        }\n    };\n}\n\n/**\n * Parses HTTP header value that may contain comments.\n *\n * This is particularly useful when parsing headers such as:\n * - `User-Agent`\n * - `Server`\n */\nconst hthvParseCommented = ( /*#__PURE__*/newHthvParser({ comments: true }));\n\n/**\n * Parses HTTP header values containing directives.\n *\n * Directives are parameterized items using spaces instead of semicolons to delimit parameters. While semicolons and\n * colons are used to delimit items.\n *\n * Date/time values within directives are usually enclosed into quotes. So, no need to parse them in a special way.\n *\n * This is particularly useful when parsing headers such as:\n * - `Content-Security-Policy`\n * - `Content-Security-Policy-Report-Only`\n * - `Feature-Policy`\n * - `Via`\n * - `Warning`\n *\n * @param value - HTTP header value to parse.\n *\n * @returns An array of comma-separated value items with space-separated parameters.\n */\nconst hthvParseDirectives = ( /*#__PURE__*/newHthvParser({\n    delimit: {\n        ' ': 1 /* NonToken */ | 2 /* Space */ | 8 /* Parameter */,\n        '\\t': 1 /* NonToken */ | 2 /* Space */ | 8 /* Parameter */,\n        ';': 1 /* NonToken */ | 4 /* Item */,\n    },\n}));\n\n/**\n * Parses semicolon-separated HTTP header value items.\n *\n * Treats ';' just like ','.\n *\n * This is particularly useful when parsing a `Cookies` header.\n *\n * The parsed items won't have any parameters.\n */\nconst hthvParseSemiSep = (\n/*#__PURE__*/ newHthvParser({\n    delimit: {\n        ';': 1 /* NonToken */ | 4 /* Item */,\n    },\n}));\n\n/**\n * Parses HTTP header value containing URI(s) without parameters.\n *\n * `,`, `;`, '(', ')', and `=` symbols can be part of URI. This function returns multiple items only if URIs are\n * space-separated.\n *\n * This is particularly useful when parsing headers such as:\n * - `Content-Location`\n * - `Location`\n * - `Referef`\n *\n * @param value - HTTP header value to parse.\n *\n * @returns An array of space-separated value items without parameters.\n */\nconst hthvParseURIs = (\n/*#__PURE__*/ newHthvParser({\n    delimit: {\n        ',': 1 /* NonToken */,\n        ';': 1 /* NonToken */,\n        '=': 1 /* NonToken */,\n    },\n}));\n\n/**\n * Escapes a `string` to be included into [quoted-string](https://tools.ietf.org/html/rfc7230#section-3.2.6) within HTTP\n * header value.\n *\n * Replaces `\\` with `\\\\`, and `\"` with `\\\"`.\n *\n * @param string - A string to escape.\n *\n * @returns Escaped `string`.\n */\nfunction hthvEscapeQ(string) {\n    return hthvEscape(string, defaultParserConfig);\n}\n/**\n * Escapes a `string` to be included into [comment](https://tools.ietf.org/html/rfc7230#section-3.2.6) withing HTTP\n * header value.\n *\n * Replaces `\\` with `\\\\`, `\"` with `\\\"`, `(` with `\\(`, and `)` with `\\)`.\n *\n * According to [RFC7230] the sender should not escape a double quote in this case. However, it may be necessary\n * to distinguish between raw double quote and nested [quoted-string].\n *\n * [RFC7230]: https://tools.ietf.org/html/rfc7230\n * [quoted-string]: https://tools.ietf.org/html/rfc7230#section-3.2.6\n *\n * @param string - A string to escape.\n *\n * @returns Escaped `string`.\n */\nfunction hthvEscapeC(string) {\n    return hthvEscape(string, commentParserConfig);\n}\n/**\n * @internal\n */\nfunction hthvEscape(string, { delimiterOf }) {\n    let escaped;\n    for (let i = 0; i < string.length; ++i) {\n        const c = string[i];\n        if (delimiterOf(c) & 32 /* Escaped */) {\n            if (!escaped) {\n                escaped = string.substring(0, i);\n            }\n            escaped += '\\\\' + c;\n        }\n        else if (escaped) {\n            escaped += c;\n        }\n    }\n    return escaped || string;\n}\n\n/**\n * Flattens HTTP header value items by extracting their parameters.\n *\n * The result is an items collection containing original `items`, as well as their parameters.\n *\n * Recursively places `items` and their parameters to result map in their original order, and:\n * - prefers named items over unnamed ones,\n * - prefers original items over their parameters,\n * - prefers items added first.\n *\n * @typeParam TNameMode - Whether items has a {@link n name}.\n * @typeParam TTagMode - Whether items has a {@link t tag}.\n * @typeParam TParamsMode - Whether items has {@link p parameters}.\n * @param items Items collection.\n */\nfunction hthvFlatten(items) {\n    const map = {};\n    const list = [];\n    const depths = {};\n    const put = (item, depth) => {\n        list.push(item);\n        const key = item.n || item.v;\n        const prev = map[key];\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        if (prev) {\n            if (item.n) {\n                if (prev.n && depths[key] <= depth) {\n                    return;\n                }\n            }\n            else if (prev.n || depths[key] <= depth) {\n                return;\n            }\n        }\n        map[key] = item;\n        depths[key] = depth;\n    };\n    const add = (item, depth) => {\n        put(item, depth);\n        ++depth;\n        item.pl.forEach(p => add(p, depth));\n    };\n    items.forEach(item => add(item, 0));\n    return { map, list };\n}\n\n/**\n * Parses HTTP header value.\n *\n * Splits the value onto {@link HthvItem items}.\n *\n * Parser is configured with default {@link HthvParserConfig config}.\n *\n * Does not recognize comments or date/time values.\n *\n * Treats illegal characters as ASCII letters.\n *\n * @param value - HTTP header value to parse.\n *\n * @returns An array of comma- or space- separated value items.\n */\nconst hthvParse = ( /*#__PURE__*/newHthvParser());\n/**\n * Parses HTTP header value that may contain date/time.\n *\n * Splits the value onto {@link HthvItem items}.\n *\n * Parser is configured with default config except {@link HthvParserConfig.dateTime date/time parsing enabled}.\n *\n * Does not recognize comments.\n *\n * Handles date/time values in [IMF-fixdate] format only.\n *\n * Treats illegal characters as ASCII letters.\n *\n * [IMF-fixdate]: https://tools.ietf.org/html/rfc7231#section-7.1.1.1\n *\n * @param value - HTTP header value to parse.\n *\n * @returns An array of comma- or space- separated value items.\n */\nconst hthvParseDT = ( /*#__PURE__*/newHthvParser({ dateTime: true }));\n\n/**\n * Conditionally encloses HTTP header value or its part into double quotes.\n *\n * Quotes will be added if delimiter or special character is present in input `string`, or the input `string` is empty.\n * {@link hthvEscapeQ Escapes} `\"` and `\\` symbols.\n *\n * @param string - A string to quote.\n *\n * @returns Either a string enclosed in double quotes, or original `string` if there is no need to quote it.\n */\nfunction hthvQuote(string) {\n    if (!string) {\n        return '\"\"';\n    }\n    const { delimiterOf } = defaultParserConfig;\n    let escaped;\n    let quote = false;\n    for (let i = 0; i < string.length; ++i) {\n        const c = string[i];\n        const delimiter = delimiterOf(c);\n        if (delimiter) {\n            if (delimiter & 32 /* Escaped */) {\n                if (!escaped) {\n                    escaped = string.substring(0, i);\n                }\n                escaped += '\\\\' + c;\n            }\n            quote = true;\n        }\n        else if (escaped) {\n            escaped += c;\n        }\n    }\n    return quote ? `\"${escaped || string}\"` : string;\n}\n\nexport { hthvEscapeC, hthvEscapeQ, hthvFlatten, hthvParse, hthvParseCommented, hthvParseDT, hthvParseDirectives, hthvParseSemiSep, hthvParseURIs, hthvQuote, newHthvParser };\n//# sourceMappingURL=http-header-value.js.map\n","import { DomEventDispatcher } from '@frontmeans/dom-events';\nimport { ContextValues, SingleContextKey, ContextKey__symbol, ContextRegistry, Contextual__symbol } from '@proc7ts/context-values';\nimport { digAfter, afterThe, OnEvent__symbol, AfterEvent__symbol, trackValue, onAny, onSupplied, mapAfter, isAfterEvent, translateAfter_, afterAll, onEventBy, valueOn_, supplyOn, EventEmitter, shareOn, mapOn_, eventReceiver, EventNotifier, resolveOnOrdered, digOn_, onceAfter } from '@proc7ts/fun-events';\nimport { noop, mergeFunctions, setOfElements, valueByRecipe, asis, valueProvider } from '@proc7ts/primitives';\nimport { BootstrapWindow, FeatureDef__symbol, bootstrapDefault, DefaultNamespaceAliaser, ComponentRenderScheduler, Wesib__NS, ComponentContext, ComponentMember } from '@wesib/wesib';\nimport { itsEach, flatMapIt, overIterator, itsEvery, mapIt, filterArray, filterIt, overArray, itsFirst } from '@proc7ts/push-iterator';\nimport { ContextUpKey, contextDestroyed, FnContextKey } from '@proc7ts/context-values/updatable';\nimport { drekCssClassesOf, deriveDrekContext, drekContextOf } from '@frontmeans/drek';\nimport { css__naming } from '@frontmeans/namespace-aliaser';\nimport { Supply, neverSupply } from '@proc7ts/supply';\nimport { FetchAgentKey, HttpFetch, FragmentRenderCtl } from '@wesib/generic';\nimport { hthvQuote, hthvParse } from '@hatsy/http-header-value';\nimport { importNode, importNodeContent } from '@frontmeans/dom-primitives';\n\n/**\n * Extracts URL contained in the hash of another URL.\n *\n * Extracted hash URL is based on origin of the original URL. Still, it may be absolute one.\n *\n * Input URL is never altered.\n *\n * @param url - An URL to extract hash from.\n *\n * @returns URL extracted from hash.\n */\nfunction getHashURL(url) {\n    return new URL(url.hash.substring(1), url.origin);\n}\n/**\n * Creates an URL based on original one, but with hash substituted by the given hash URL.\n *\n * The hash URL is substituted as following:\n *\n * 1. If the hash URL's origin is not the same as the one of the base one, or if it contains a username,\n *    then absolute hash URL is substituted:\n * 2. Otherwise:\n *    - pathname is substituted, unless it is equal to `/` and no hash and search parameters present,\n *    - search parameters are substituted when at least one present,\n *    - hash is substituted only when present.\n *\n * Input URLs are never altered.\n *\n * @param url - Base URL.\n * @param hashURL - Hash URL to substitute.\n *\n * @returns URL with updated hash.\n */\nfunction setHashURL(url, hashURL) {\n    if (hashURL.origin !== url.origin || hashURL.username) {\n        return new URL(`#${hashURL}`, url);\n    }\n    const { pathname, search, hash } = hashURL;\n    const result = new URL('', url);\n    result.hash = (search || hash || pathname.length > 1) ? (pathname + search + hash) : (search + hash);\n    return result;\n}\n\n/**\n * A key of {@link PageParam.Ref page parameter request} property containing requested page parameter.\n */\nconst PageParam__symbol = ( /*#__PURE__*/Symbol('PageParam'));\n/**\n * Page navigation parameter.\n *\n * Can applied before navigation happened (i.e. to {@link LeavePageEvent}). Then it will be available to the target page\n * both before and after navigation.\n *\n * @typeParam T - Parameter value type.\n * @typeParam TInput - Parameter input type.\n */\nclass PageParam {\n    get [PageParam__symbol]() {\n        return this;\n    }\n    /**\n     * Creates default page parameter handle.\n     *\n     * This method is called when {@link Page.get requesting page parameter} which value is not present in the page.\n     * The value handle returned is assigned to the page.\n     *\n     * Returns nothing by default.\n     *\n     * @param _page - A page to assign navigation parameter to.\n     * @param _context - Page parameter context.\n     *\n     * @returns New page parameter value handle or nothing if there is no default value.\n     */\n    byDefault(_page, _context) {\n        return;\n    }\n}\n\nclass PageHashURLValueParam$ extends PageParam {\n    create(page, input) {\n        let hashURL;\n        const handle = {\n            get() {\n                return hashURL;\n            },\n            put(value) {\n                hashURL = typeof value === 'string' ? new URL(value, page.url.origin) : value;\n            },\n        };\n        handle.put(input);\n        return handle;\n    }\n}\n/**\n * @internal\n */\nconst PageHashURLValueParam = (\n/*#__PURE__*/ new PageHashURLValueParam$());\n\n/**\n * @internal\n */\nclass PageHashURLParam$ extends PageParam {\n    create(page, input) {\n        const handle = {\n            get() {\n                return page.get(PageHashURLValueParam) || getHashURL(page.url);\n            },\n            put(value) {\n                page.put(PageHashURLValueParam, value);\n            },\n        };\n        handle.put(input);\n        return handle;\n    }\n    byDefault(page) {\n        return this.create(page, null);\n    }\n}\n/**\n * Page parameter representing its {@link getHashURL hash URL}.\n *\n * When {@link Navigation.with set} to another value while navigating, the hash of target URL is updated, unless set to\n * `null` or `undefined`.\n *\n * Requires {@link PageHashURLSupport} for above to function properly.\n */\nconst PageHashURLParam = (\n/*#__PURE__*/ new PageHashURLParam$());\n\n/**\n * @internal\n */\nclass NavigationAgentKey extends ContextUpKey {\n    constructor(name) {\n        super(name);\n        this.upKey = this.createUpKey(slot => {\n            const { document } = slot.context.get(BootstrapWindow);\n            slot.insert(slot.seed.do(digAfter((...agents) => {\n                if (agents.length) {\n                    return afterThe(combinedAgent);\n                }\n                if (slot.hasFallback && slot.or) {\n                    return slot.or;\n                }\n                return afterThe(defaultNavigationAgent);\n                function combinedAgent(next, when, from, to) {\n                    return navigate(0, to);\n                    function navigate(agentIdx, agentTo) {\n                        const agent = agents[agentIdx];\n                        if (!agent) {\n                            return next(agentTo);\n                        }\n                        agent(({ url: nextURL = agentTo.url, title: nextTitle = agentTo.title, \n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        data: nextData = agentTo.data, } = agentTo) => navigate(agentIdx + 1, {\n                            url: new URL(String(nextURL), document.baseURI),\n                            title: nextTitle,\n                            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                            data: nextData,\n                            get visited() {\n                                return agentTo.visited;\n                            },\n                            get current() {\n                                return agentTo.current;\n                            },\n                            get(ref) {\n                                return agentTo.get(ref);\n                            },\n                            put(ref, input) {\n                                agentTo.put(ref, input);\n                            },\n                        }), when, from, agentTo);\n                    }\n                }\n            })));\n        });\n    }\n    grow(slot) {\n        let delegated;\n        slot.context.get(this.upKey, slot.hasFallback ? { or: slot.or != null ? afterThe(slot.or) : slot.or } : undefined)(agent => delegated = agent).whenOff(reason => delegated = contextDestroyed(reason));\n        slot.insert((next, when, from, to) => delegated(next, when, from, to));\n    }\n}\n/**\n * @internal\n */\nfunction defaultNavigationAgent(next, _when, _from, to) {\n    next(to);\n}\n/**\n * A key of context value containing an {@link NavigationAgent} instance.\n *\n * The agent returned combines all registered agents into one. If no agent registered it just performs the navigation.\n */\nconst NavigationAgent = (\n/*#__PURE__*/ new NavigationAgentKey('navigation-agent'));\n\nconst PageHashURLSupport__feature = {\n    setup(setup) {\n        setup.provide({ a: NavigationAgent, is: pageHashURLAgent });\n    },\n};\n/**\n * {@link PageHashURLParam Page hash URL parameter} support feature.\n */\nclass PageHashURLSupport {\n    static get [FeatureDef__symbol]() {\n        return PageHashURLSupport__feature;\n    }\n}\nfunction pageHashURLAgent(next, _when, _from, to) {\n    const hashURL = to.get(PageHashURLValueParam);\n    if (hashURL) {\n        next({ url: setHashURL(to.url, hashURL) });\n    }\n    else {\n        next();\n    }\n}\n\n/**\n * Page parameter context.\n *\n * Provides values available in bootstrap context.\n */\nclass PageParamContext extends ContextValues {\n}\n\n/**\n * @internal\n */\nconst NavHistory__key = ( /*#__PURE__*/new SingleContextKey('nav-history', {\n    byDefault: bootstrapDefault(ctx => new NavHistory(ctx)),\n}));\n/**\n * @internal\n */\nconst NAV_DATA_KEY = 'wesib:navigation:data';\n/**\n * @internal\n */\nfunction extractNavData(state) {\n    return state == null || typeof state !== 'object'\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        ? { data: state }\n        : state[NAV_DATA_KEY];\n}\n/**\n * @internal\n */\nclass NavHistory {\n    constructor(_context) {\n        this._context = _context;\n        this._entries = new Map();\n        this._lastId = 0;\n        const window = _context.get(BootstrapWindow);\n        this._document = window.document;\n        this._location = window.location;\n        this._history = window.history;\n        this._uid = btoa(String(Math.random()));\n    }\n    static get [ContextKey__symbol]() {\n        return NavHistory__key;\n    }\n    init() {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const { data } = extractNavData(this._history.state);\n        const entry = this.newEntry({\n            url: new URL(this._location.href),\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            data,\n            title: this._document.title,\n        });\n        this._entries.set(entry.id, entry);\n        entry.schedule(() => {\n            entry.enter('init');\n            this._history.replaceState(this._historyState(entry), '');\n        });\n        return entry;\n    }\n    newEntry(target) {\n        return new PageEntry(this._context, ++this._lastId, target);\n    }\n    open(toEntry, tracker) {\n        const { page: { title = '', url } } = toEntry;\n        this._history.pushState(this._historyState(toEntry), title, url.href);\n        this._enter('open', toEntry, tracker);\n    }\n    _enter(when, toEntry, tracker) {\n        const fromEntry = tracker.it;\n        this._entries.set(toEntry.id, toEntry);\n        try {\n            // Forget all entries starting from next one\n            for (let e = fromEntry.next; e; e = e.next) {\n                this._forget(e);\n            }\n        }\n        finally {\n            toEntry.prev = fromEntry;\n            fromEntry.next = toEntry;\n            toEntry.schedule(() => {\n                try {\n                    fromEntry.leave();\n                }\n                finally {\n                    toEntry.enter(when);\n                }\n            });\n            tracker.it = toEntry;\n        }\n    }\n    replace(toEntry, tracker) {\n        const fromEntry = tracker.it;\n        const { page: { title = '', url } } = toEntry;\n        this._history.replaceState(this._historyState(toEntry), title, url.href);\n        this._entries.set(toEntry.id, toEntry);\n        const prev = fromEntry.prev;\n        if (prev) {\n            toEntry.prev = prev;\n            prev.next = toEntry;\n        }\n        toEntry.schedule(() => {\n            try {\n                fromEntry.leave();\n            }\n            finally {\n                try {\n                    this._forget(fromEntry);\n                }\n                finally {\n                    toEntry.enter('replace');\n                }\n            }\n        });\n        tracker.it = toEntry;\n    }\n    popState(popState, tracker) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const { state } = popState;\n        if (state == null) {\n            // Hash change\n            if (this._history.state == null) {\n                // Not a return\n                return this._changeHash(tracker);\n            }\n            return; // Already handled by `hashchange` handler\n        }\n        const fromEntry = tracker.it;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const { uid, data, id: pageId } = extractNavData(state);\n        let toEntry;\n        const existingEntry = uid === this._uid && pageId != null ? this._entries.get(pageId) : undefined;\n        if (existingEntry) {\n            toEntry = existingEntry;\n        }\n        else {\n            // Returning to page existed in previous app version\n            toEntry = this.newEntry({\n                url: new URL(this._location.href),\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                data,\n                title: this._document.title,\n            });\n            fromEntry.transfer(toEntry, 'return');\n            this._entries.set(toEntry.id, toEntry);\n            this._history.replaceState(this._historyState(toEntry), '');\n        }\n        toEntry.schedule(() => {\n            try {\n                fromEntry.leave();\n            }\n            finally {\n                toEntry.enter('return');\n            }\n        });\n        tracker.it = toEntry;\n        return toEntry;\n    }\n    hashChange(tracker) {\n        if (this._history.state == null) {\n            // Not a return\n            return this._changeHash(tracker);\n        }\n        // Otherwise, a `popstate` event is also triggered,\n        // and its handler would do the job (or already did).\n    }\n    update(tracker, url) {\n        const oldEntry = tracker.it;\n        const newEntry = new PageEntry(this._context, ++this._lastId, { ...oldEntry.page, url }, oldEntry);\n        this._entries.set(newEntry.id, newEntry);\n        this._history.replaceState(this._historyState(newEntry), '', url.href);\n        this._entries.delete(oldEntry.id);\n        return tracker.it = newEntry;\n    }\n    _changeHash(tracker) {\n        const fromEntry = tracker.it;\n        const toEntry = this.newEntry({\n            url: new URL(this._location.href),\n            data: null,\n            title: this._document.title,\n        });\n        try {\n            fromEntry.transfer(toEntry, 'enter');\n        }\n        finally {\n            this._history.replaceState(this._historyState(toEntry), '');\n            this._enter('enter', toEntry, tracker);\n        }\n        return toEntry;\n    }\n    _forget(entry) {\n        this._entries.delete(entry.id);\n        entry.forget();\n    }\n    _historyState({ id, page: { data } }) {\n        return {\n            [NAV_DATA_KEY]: {\n                uid: this._uid,\n                id,\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                data,\n            },\n        };\n    }\n}\n/**\n * @internal\n */\nclass PageEntry {\n    constructor(_bsContext, id, target, proto) {\n        this._bsContext = _bsContext;\n        this.id = id;\n        this._status = 0 /* New */;\n        this._update = noop;\n        this._params = proto ? proto._params : new Map();\n        const entry = this;\n        this.page = {\n            get url() {\n                return target.url;\n            },\n            get title() {\n                return target.title;\n            },\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            get data() {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                return target.data;\n            },\n            get visited() {\n                return !!entry._status;\n            },\n            get current() {\n                return entry._status === 2 /* Current */;\n            },\n            get(ref) {\n                return entry.get(ref);\n            },\n            put(ref, input) {\n                entry.put(ref, input);\n            },\n        };\n    }\n    get(ref) {\n        const param = ref[PageParam__symbol];\n        const handle = this._params.get(param);\n        if (handle) {\n            return handle.get();\n        }\n        const newHandle = param.byDefault(this.page, this._newContext());\n        return newHandle && this._init(param, newHandle);\n    }\n    put(ref, input) {\n        const param = ref[PageParam__symbol];\n        const handle = this._params.get(param);\n        if (handle) {\n            handle.put(input);\n            return handle.get();\n        }\n        return this._init(param, param.create(this.page, input, this._newContext()));\n    }\n    _newContext() {\n        const registry = new ContextRegistry(this._bsContext);\n        class ParamContext extends PageParamContext {\n            constructor() {\n                super(...arguments);\n                this.get = registry.newValues().get;\n            }\n        }\n        return new ParamContext();\n    }\n    _init(param, handle) {\n        this._params.set(param, handle);\n        if (this.page.current && handle.enter) {\n            handle.enter(this.page, 'init');\n        }\n        return handle.get();\n    }\n    transfer(to, when) {\n        itsEach(this._params.entries(), ([param, handle]) => {\n            if (handle.transfer) {\n                const transferred = handle.transfer(to.page, when);\n                if (transferred) {\n                    to._params.set(param, transferred);\n                }\n            }\n        });\n    }\n    stay(at) {\n        itsEach(this._params.values(), handle => handle.stay && handle.stay(at));\n    }\n    enter(when) {\n        this._status = 2 /* Current */;\n        itsEach(this._params.values(), handle => handle.enter && handle.enter(this.page, when));\n    }\n    leave() {\n        this._status = 1 /* Visited */;\n        itsEach(this._params.values(), handle => handle.leave && handle.leave());\n    }\n    forget() {\n        itsEach(this._params.values(), handle => handle.forget && handle.forget());\n        this._params.clear();\n    }\n    schedule(update) {\n        this._update = update;\n    }\n    apply() {\n        const update = this._update;\n        this._update = noop;\n        update();\n    }\n}\n\n/**\n * An event fired when navigation target reached by entering destination page.\n *\n * @event EnterPageEvent#wesib:enterPage\n */\nclass EnterPageEvent extends Event {\n    /**\n     * Constructs enter page event.\n     *\n     * @param type - Event type.\n     * @param init - Initialization options.\n     */\n    constructor(type, init) {\n        super(type, { ...init, cancelable: false });\n        this.when = init.when;\n        this.to = init.to;\n    }\n}\n/**\n * An event fired right before leaving the page in order to navigate to another one.\n *\n * This event can be cancelled in order to prevent actual navigation or history update. The navigation is also\n * cancelled when another navigation initiated by one of the handlers of this event.\n *\n * @event LeavePageEvent#wesib:leavePage\n */\nclass LeavePageEvent extends Event {\n    /**\n     * Constructs leave page event.\n     *\n     * @param type - Event type.\n     * @param init - Initialization options.\n     */\n    constructor(type, init) {\n        super(type, { ...init, cancelable: true });\n        this.when = init.when;\n        this.from = init.from;\n        this.to = init.to;\n    }\n}\n/**\n * An event fired when navigation cancelled or failed.\n *\n * @event StayOnPageEvent#wesib:stayOnPage\n */\nclass StayOnPageEvent extends Event {\n    /**\n     * Constructs stay on page event.\n     *\n     * @param type - Event type.\n     * @param init - Initialization options.\n     */\n    constructor(type, init) {\n        super(type, { ...init, cancelable: true });\n        this.from = init.from;\n        this.to = init.to;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.reason = init.reason;\n    }\n    /**\n     * When navigation event occurred. Always `stay`.\n     */\n    get when() {\n        return 'stay';\n    }\n}\n\n/**\n * @internal\n */\nconst Navigation__key = ( /*#__PURE__*/new SingleContextKey('navigation', {\n    byDefault: bootstrapDefault(createNavigation),\n}));\n/**\n * Browser navigation service.\n *\n * Expected to be used as a [History] and [Location] APIs replacement.\n *\n * Fires additional navigation events the browser does not support natively.\n *\n * Implements an `EventSender` interface by sending {@link NavigationEvent navigation events} to registered receivers.\n *\n * Implements an `EventKeeper` interface by sending current {@link Page page} to registered receivers.\n *\n * Available as bootstrap context value.\n *\n * [History]: https://developer.mozilla.org/en-US/docs/Web/API/History\n * [Location]: https://developer.mozilla.org/en-US/docs/Web/API/Location\n */\nclass Navigation {\n    static get [ContextKey__symbol]() {\n        return Navigation__key;\n    }\n    [OnEvent__symbol]() {\n        return this.on;\n    }\n    [AfterEvent__symbol]() {\n        return this.read;\n    }\n    /**\n     * Goes to the previous page in navigation history.\n     *\n     * Calling this method is the same as calling `go(-1)`.\n     */\n    back() {\n        this.go(-1);\n    }\n    /**\n     * Goes to the next page in navigation history.\n     *\n     * Calling this method is the same as calling `go(1)`.\n     */\n    forward() {\n        this.go(1);\n    }\n    /**\n     * Reloads current page.\n     *\n     * Calling this method is the same as calling `go()`.\n     */\n    reload() {\n        this.go();\n    }\n}\nfunction createNavigation(context) {\n    const window = context.get(BootstrapWindow);\n    const { document, history } = window;\n    const dispatcher = new DomEventDispatcher(window);\n    const navHistory = context.get(NavHistory);\n    const agent = context.get(NavigationAgent);\n    const nav = trackValue(navHistory.init());\n    nav.read(nextEntry => nextEntry.apply()); // The very first page entry receiver applies scheduled updates to page\n    let next = Promise.resolve();\n    dispatcher.on('popstate')(popState => {\n        const entry = navHistory.popState(popState, nav);\n        if (entry) {\n            dispatcher.dispatch(new EnterPageEvent(\"wesib:enterPage\" /* EnterPage */, {\n                when: popState.state != null ? 'return' : 'enter',\n                to: entry.page,\n            }));\n        }\n    });\n    dispatcher.on('hashchange')(() => {\n        const entry = navHistory.hashChange(nav);\n        if (entry) {\n            dispatcher.dispatch(new EnterPageEvent(\"wesib:enterPage\" /* EnterPage */, {\n                when: 'enter',\n                to: entry.page,\n            }));\n        }\n    });\n    class Navigation$ extends Navigation {\n        constructor() {\n            super();\n            this.onEnter = dispatcher.on(\"wesib:enterPage\" /* EnterPage */);\n            this.onLeave = dispatcher.on(\"wesib:leavePage\" /* LeavePage */);\n            this.onStay = dispatcher.on(\"wesib:stayOnPage\" /* StayOnPage */);\n            this.on = onAny(onSupplied(this.onEnter), onSupplied(this.onLeave), onSupplied(this.onStay));\n            this.read = nav.read.do(mapAfter(({ page }) => page));\n        }\n        get page() {\n            return nav.it.page;\n        }\n        get length() {\n            return history.length;\n        }\n        go(delta) {\n            history.go(delta);\n        }\n        open(target) {\n            return navigate('pre-open', 'open', target);\n        }\n        replace(target) {\n            return navigate('pre-replace', 'replace', target);\n        }\n        update(url) {\n            return navHistory.update(nav, toURL(url)).page;\n        }\n        with(ref, input) {\n            return withParam(page => page.put(ref, input));\n        }\n    }\n    return new Navigation$();\n    function withParam(applyParams) {\n        return {\n            with(ref, input) {\n                return withParam(mergeFunctions(applyParams, page => page.put(ref, input)));\n            },\n            open(target) {\n                return navigate('pre-open', 'open', target, applyParams);\n            },\n            replace(target) {\n                return navigate('pre-replace', 'replace', target, applyParams);\n            },\n            pretend(targetOrCallback, callback = (_from, to) => to) {\n                let target;\n                if (typeof targetOrCallback === 'function') {\n                    callback = targetOrCallback;\n                    target = undefined;\n                }\n                else {\n                    target = targetOrCallback;\n                }\n                const navTarget = navTargetOf(target);\n                const fromEntry = nav.it;\n                const toEntry = newEntry('pretend', fromEntry, navTarget, applyParams);\n                try {\n                    return applyAgent('pretend', fromEntry, navTarget, toEntry)\n                        ? callback(fromEntry.page, toEntry.page)\n                        : undefined;\n                }\n                finally {\n                    toEntry.stay(nav.it.page);\n                }\n            },\n        };\n    }\n    function toURL(url) {\n        if (typeof url === 'string') {\n            return new URL(url, document.baseURI);\n        }\n        return url || nav.it.page.url;\n    }\n    function navTargetOf(target) {\n        if (target == null || typeof target === 'string' || target instanceof URL) {\n            return { url: toURL(target) };\n        }\n        if (target.url instanceof URL) {\n            return target;\n        }\n        return { ...target, url: toURL(target.url) };\n    }\n    function navigate(whenLeave, when, target, applyParams = noop) {\n        const navTarget = navTargetOf(target);\n        const promise = next = next.then(doNavigate, doNavigate);\n        return promise;\n        function doNavigate() {\n            let toEntry = undefined;\n            try {\n                const prepared = prepare();\n                if (!prepared) {\n                    return prepared; // Navigation cancelled\n                }\n                toEntry = prepared;\n                navHistory[when](toEntry, nav);\n                dispatcher.dispatch(new EnterPageEvent(\"wesib:enterPage\" /* EnterPage */, {\n                    when,\n                    to: toEntry.page,\n                }));\n                return toEntry.page;\n            }\n            catch (e) {\n                stay(toEntry, e);\n                throw e;\n            }\n        }\n        function prepare() {\n            if (next !== promise) {\n                return stay();\n            }\n            const fromEntry = nav.it;\n            const toEntry = newEntry(whenLeave, fromEntry, navTarget, applyParams);\n            const leavePage = new LeavePageEvent(\"wesib:leavePage\" /* LeavePage */, {\n                when: whenLeave,\n                from: fromEntry.page,\n                to: toEntry.page,\n            });\n            if (!dispatcher.dispatch(leavePage)\n                || next !== promise\n                || !applyAgent(whenLeave, fromEntry, navTarget, toEntry)) {\n                return stay(toEntry);\n            }\n            return toEntry;\n        }\n        function stay(toEntry, reason) {\n            if (toEntry) {\n                toEntry.stay(nav.it.page);\n            }\n            dispatcher.dispatch(new StayOnPageEvent(\"wesib:stayOnPage\" /* StayOnPage */, {\n                from: nav.it.page,\n                to: navTarget,\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                reason,\n            }));\n            return null;\n        }\n    }\n    function newEntry(whenLeave, fromEntry, navTarget, applyParams) {\n        const toEntry = navHistory.newEntry(navTarget);\n        try {\n            fromEntry.transfer(toEntry, whenLeave);\n            applyParams(toEntry.page);\n        }\n        catch (e) {\n            toEntry.stay(nav.it.page);\n            throw e;\n        }\n        return toEntry;\n    }\n    function applyAgent(whenLeave, fromEntry, navTarget, toEntry) {\n        let navigated = false;\n        agent(({ url, data, title }) => {\n            navigated = true;\n            navTarget.url = url;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            navTarget.data = data;\n            navTarget.title = title;\n        }, whenLeave, fromEntry.page, toEntry.page);\n        return navigated;\n    }\n}\n\nconst NavElement$activeClass = ['active', Wesib__NS];\nfunction navElement(element, options) {\n    const getHref = options.href.bind(options);\n    const events = setOfElements(options.event || 'click');\n    const { active = NavElement$activeClass } = options;\n    let activeClass;\n    return owner => {\n        const anchor = valueByRecipe(element, owner);\n        if (!anchor) {\n            return;\n        }\n        const { context, supply: ownerSupply = context.supply } = owner;\n        activeClass = css__naming.name(active, context.get(DefaultNamespaceAliaser));\n        const navigation = context.get(Navigation);\n        const scheduler = context.get(ComponentRenderScheduler);\n        const schedule = scheduler({ node: anchor });\n        const supply = new Supply().needs(ownerSupply);\n        const handleClick = {\n            supply,\n            receive(_ctx, event) {\n                const href = getHref(anchor);\n                const pageURL = navigation.page.url;\n                const url = new URL(href, anchor.ownerDocument.baseURI);\n                if (url.origin !== pageURL.origin) {\n                    return; // External link\n                }\n                event.preventDefault();\n                if (pageURL.href !== url.href) {\n                    navigation.open(href).catch(console.error);\n                }\n            },\n        };\n        const eventDispatcher = new DomEventDispatcher(anchor);\n        supply.cuts(eventDispatcher);\n        for (const event of events) {\n            eventDispatcher.on(event)(handleClick);\n        }\n        const css = drekCssClassesOf(anchor)\n            .renderIn(deriveDrekContext(drekContextOf(anchor), {\n            scheduler: _opts => schedule,\n        }));\n        return ({\n            get href() {\n                return getHref(anchor);\n            },\n            supply,\n            activate() {\n                return css.add(activeClass);\n            },\n        });\n    };\n}\n\nfunction navAnchor(element, options = {}) {\n    return navElement(element, {\n        ...options,\n        href(element) {\n            return element.href;\n        },\n    });\n}\n\nconst NavMenu$Links__symbol = ( /*#__PURE__*/Symbol('NavMenu.links'));\n/**\n * Navigation menu.\n *\n * Serves as an {@link NavLink.Owner owner} of navigation links. Activates the links matching {@link Navigation.page\n * current page}.\n */\nclass NavMenu {\n    /**\n     * Constructs navigation menu.\n     *\n     * @param links - Navigation links of this menu. Either an iterable of navigation links or their providers,\n     * an `AfterEvent` keeper of the same, or a function accepting component context and this menu as parameters,\n     * and returning one of the above.\n     * @param options - Additional options.\n     */\n    constructor(links, options) {\n        this[NavMenu$Links__symbol] = new NavMenu$Links(this, links, options);\n    }\n    /**\n     * Navigation menu supply.\n     */\n    get supply() {\n        return this[NavMenu$Links__symbol].supply;\n    }\n    /**\n     * Binds this menu to the given context.\n     *\n     * Subsequent calls have no effect.\n     *\n     * @param context - Owning component context.\n     *\n     * @returns `this` instance.\n     */\n    bindTo(context) {\n        this[NavMenu$Links__symbol].bindTo(context);\n        return this;\n    }\n    /**\n     * Binds this menu to the given context.\n     *\n     * Calls {@link bindTo} method.\n     *\n     * @param context - Owning component context.\n     *\n     * @returns `this` instance.\n     */\n    [Contextual__symbol](context) {\n        return this.bindTo(context);\n    }\n}\nclass NavMenu$Links {\n    constructor(_menu, _navLinks, options = {}) {\n        this._menu = _menu;\n        this._navLinks = _navLinks;\n        this._links = trackValue([new Set()]);\n        this._active = new Map();\n        this.supply = new Supply().cuts(this._links);\n        const { activate = true, weigh } = options;\n        this._activate = activate;\n        this._weigh = weigh ? weigh.bind(options) : defaultNavLinkWeight;\n    }\n    bindTo(context) {\n        this.bindTo = noop;\n        context.whenConnected(context => {\n            let afterLinks;\n            if (isAfterEvent(this._navLinks)) {\n                afterLinks = this._navLinks;\n            }\n            else {\n                const linkValues = valueByRecipe(this._navLinks, context, this._menu);\n                afterLinks = isAfterEvent(linkValues)\n                    ? linkValues\n                    : afterThe(linkValues).do(translateAfter_((send, links) => send(...links)));\n            }\n            const owner = {\n                context,\n                supply: this.supply,\n            };\n            afterLinks((...links) => {\n                this._replace(owner, links);\n            });\n            if (this._activate) {\n                const navigation = context.get(Navigation);\n                afterAll({\n                    page: navigation,\n                    links: this._links,\n                })(({ page: [page], links: [[links]], }) => {\n                    this._updateActive(context, page, links);\n                });\n            }\n        });\n    }\n    _replace(owner, replacement) {\n        var _a;\n        const toAdd = new Set();\n        for (const linkOrProvider of replacement) {\n            const link = valueByRecipe(linkOrProvider, owner);\n            if (link) {\n                toAdd.add(link);\n            }\n        }\n        const [links] = this._links.it;\n        const toRemove = [];\n        for (const link of links.keys()) {\n            if (!toAdd.delete(link)) {\n                toRemove.push(link);\n            }\n        }\n        if (toAdd.size || toRemove.length) {\n            for (const removed of toRemove) {\n                links.delete(removed);\n                this._deactivate(removed);\n                (_a = removed.supply) === null || _a === void 0 ? void 0 : _a.off();\n            }\n            for (const added of toAdd) {\n                const { supply } = added;\n                if (supply) {\n                    if (supply.isOff) {\n                        continue; // Exclude disabled nav link.\n                    }\n                    supply.needs(this).whenOff(() => {\n                        // Handle nav link removal\n                        const [links] = this._links.it;\n                        if (links.delete(added)) {\n                            this._links.it = [links];\n                        }\n                    });\n                }\n                links.add(added);\n            }\n            this._links.it = [links];\n        }\n    }\n    _updateActive(context, page, links) {\n        const toDeactivate = [];\n        const toActivate = this._selectActive(context, page, links);\n        for (const link of this._active.keys()) {\n            if (!toActivate.delete(link)) {\n                toDeactivate.push(link);\n            }\n        }\n        for (const deactivated of toDeactivate) {\n            this._deactivate(deactivated);\n        }\n        for (const activated of toActivate) {\n            if (activated.activate) {\n                this._active.set(activated, activated.activate());\n            }\n        }\n    }\n    _selectActive(context, page, links) {\n        let maxWeight = 0;\n        let active = new Set();\n        for (const link of links) {\n            const weight = this._weigh({ link, menu: this._menu, context, page });\n            if (weight > maxWeight) {\n                maxWeight = weight;\n                active = new Set().add(link);\n            }\n            else if (weight === maxWeight) {\n                active.add(link);\n            }\n        }\n        return active;\n    }\n    _deactivate(link) {\n        const supply = this._active.get(link);\n        if (supply) {\n            this._active.delete(link);\n            supply.off();\n        }\n    }\n}\nfunction defaultNavLinkWeight({ link, context, page, }) {\n    const href = link.href;\n    const linkURL = new URL(href, context.get(BootstrapWindow).document.baseURI);\n    return calcNavLinkWeight(linkURL, page.url);\n}\nfunction calcNavLinkWeight(linkURL, pageURL) {\n    if (linkURL.origin !== pageURL.origin) {\n        return -1;\n    }\n    const linkDir = navLinkPath2dir(linkURL);\n    const pageDir = navLinkPath2dir(pageURL);\n    if (linkURL.hash) {\n        if (linkDir !== pageDir) {\n            return -1;\n        }\n        // Require search parameters to be equal\n        const searchParamWeight = navLinkSearchParamsWeight(linkURL, pageURL);\n        if (searchParamWeight < 0 || navLinkSearchParamsWeight(pageURL, linkURL) < 0) {\n            return -1;\n        }\n        return linkURL.pathname.length\n            + searchParamWeight\n            + calcNavLinkWeight(getHashURL(linkURL), getHashURL(pageURL));\n    }\n    const searchParamWeight = navLinkSearchParamsWeight(linkURL, pageURL);\n    if (searchParamWeight) {\n        if (searchParamWeight < 0) {\n            return -1;\n        }\n        if (linkDir !== pageDir) {\n            return -1;\n        }\n        return linkURL.pathname.length + searchParamWeight;\n    }\n    if (!pageDir.startsWith(linkDir)) {\n        return -1;\n    }\n    return linkURL.pathname.length;\n}\nfunction navLinkPath2dir(url) {\n    const path = url.pathname;\n    return path.endsWith('/') ? path : path + '/';\n}\nfunction navLinkSearchParamsWeight({ searchParams: linkParams }, { searchParams: pageParams }) {\n    let weight = 0;\n    linkParams.forEach((value, key) => {\n        if (!isIgnoredSearchParam(key)) {\n            if (weight >= 0) {\n                if (pageParams.getAll(key).includes(value)) {\n                    weight += 1;\n                }\n                else {\n                    weight = -1;\n                }\n            }\n        }\n    });\n    return weight;\n}\nfunction isIgnoredSearchParam(key) {\n    return key.startsWith('__') && key.endsWith('__');\n}\n\n/**\n * A key of context value containing an {@link PageLoadAgent} instance.\n *\n * The agent returned combines all registered agents into one. If no agent registered it just performs the fetch.\n */\nconst PageLoadAgent = (\n/*#__PURE__*/ new FetchAgentKey('page-load-agent'));\n\n/**\n * @internal\n */\nfunction cachingPageLoader(loader) {\n    let state;\n    return page => {\n        const url = pageUrl(page);\n        if (state) {\n            if (state.url === url) {\n                return state.on;\n            }\n            state.sup.off();\n        }\n        let tracked;\n        const supply = new Supply(() => {\n            state = undefined;\n            tracked = undefined;\n        });\n        const on = onEventBy(receiver => {\n            if (!tracked) {\n                const onLoad = loader(page);\n                const tracker = trackValue();\n                const trackSupply = onLoad(resp => {\n                    tracker.it = resp;\n                }).whenOff(reason => {\n                    // Error drops page cache, unlike successful page load.\n                    if (reason != null) {\n                        supply.off(reason);\n                    }\n                });\n                supply.cuts(trackSupply).cuts(tracker);\n                tracked = {\n                    on: tracker.read.do(valueOn_(asis)),\n                    num: 0,\n                };\n            }\n            const requested = tracked;\n            ++requested.num;\n            return requested.on.do(supplyOn(supply))(receiver).whenOff(reason => {\n                if (!--requested.num) {\n                    // Allow to request the same page again\n                    Promise.resolve().then(() => {\n                        if (!requested.num && requested === tracked) {\n                            supply.off(reason);\n                        }\n                    }).catch(console.error);\n                }\n            });\n        });\n        state = { url, on, sup: supply };\n        return on;\n    };\n}\nfunction pageUrl(page) {\n    return new URL('', page.url).href;\n}\n\nclass PageLoadAbortError extends Error {\n}\nclass PageLoadRequestsParam$ extends PageParam {\n    create(_page, requests) {\n        return {\n            get() {\n                return requests;\n            },\n            put: noop,\n        };\n    }\n}\n/**\n * @internal\n */\nconst PageLoadRequestsParam = new PageLoadRequestsParam$();\n/**\n * @internal\n */\nclass PageLoadRequests {\n    constructor(_navigation, _loader) {\n        this._navigation = _navigation;\n        this._loader = _loader;\n        this._map = new Map();\n        this._requests = flatMapIt(overIterator(() => this._map.values()));\n    }\n    get fragments() {\n        const result = [];\n        if (!itsEvery(this._requests, request => {\n            if (!request.fragment) {\n                return false;\n            }\n            result.push(request.fragment);\n            return true;\n        })) {\n            return [];\n        }\n        return result;\n    }\n    handle() {\n        const self = this;\n        const pageSupply = new Supply(noop);\n        let loadSupply = neverSupply();\n        return {\n            get() { },\n            put(request) {\n                self._add(request);\n            },\n            transfer(to, when) {\n                if (when === 'pretend') {\n                    return;\n                }\n                const transferred = self._transfer();\n                to.put(PageLoadRequestsParam, transferred);\n                return transferred.handle();\n            },\n            enter(page, when) {\n                if (when === 'init') {\n                    // The page is loaded already. No need to fetch it.\n                    return;\n                }\n                loadSupply = new Supply(noop).needs(pageSupply);\n                const onLoad = onEventBy(responseReceiver => {\n                    const emitter = new EventEmitter();\n                    const supply = emitter.on(responseReceiver);\n                    self._loader(page).do(supplyOn(loadSupply))(response => emitter.send(response)).whenOff(error => {\n                        if (error !== undefined && !(error instanceof PageLoadAbortError)) {\n                            // Report current page load error as failed load response\n                            emitter.send({\n                                ok: false,\n                                page,\n                                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                                error,\n                            });\n                        }\n                    });\n                    return supply;\n                }).do(shareOn);\n                itsEach(self._requests, ({ fragment, receiver }) => onFragment(onLoad, fragment)({\n                    supply: new Supply().needs(receiver.supply),\n                    receive(context, response) {\n                        receiver.receive(context, response);\n                    },\n                }));\n            },\n            leave() {\n                loadSupply.off(new PageLoadAbortError('page left'));\n            },\n            stay() {\n                pageSupply.off(new PageLoadAbortError('navigation cancelled'));\n            },\n            forget() {\n                pageSupply.off(new PageLoadAbortError('page forgotten'));\n            },\n        };\n    }\n    _add(request) {\n        const req = { ...request, receiver: eventReceiver(request.receiver) };\n        const { supply } = req.receiver;\n        const list = this._map.get(supply);\n        if (list) {\n            list.push(req);\n        }\n        else {\n            this._map.set(supply, [req]);\n            supply.whenOff(() => this._map.delete(supply));\n        }\n    }\n    _transfer() {\n        const transferred = new PageLoadRequests(this._navigation, this._loader);\n        for (const [supply, list] of this._map.entries()) {\n            transferred._map.set(supply, list.slice());\n        }\n        return transferred;\n    }\n}\nfunction onFragment(onLoad, fragment) {\n    return fragment\n        ? onLoad.do(mapOn_(response => response.ok\n            ? {\n                ...response,\n                fragment: (fragment.tag != null\n                    ? response.document.getElementsByTagName(fragment.tag)[0]\n                    : response.document.getElementById(fragment.id)) || undefined,\n            }\n            : response))\n        : onLoad;\n}\n\n/**\n * A key of bootstrap context value containing a page load URL modifier.\n *\n * Does not modify URL by default.\n */\nconst PageLoadURLModifier = (\n/*#__PURE__*/ new FnContextKey('page-load-url', { byDefault: valueProvider(noop) }));\n\n/**\n * @internal\n */\nconst PageLoader = ( /*#__PURE__*/new SingleContextKey('page-loader', {\n    byDefault: bootstrapDefault(newPageLoader),\n}));\nfunction newPageLoader(context) {\n    const window = context.get(BootstrapWindow);\n    const httpFetch = context.get(HttpFetch);\n    const modifyURL = context.get(PageLoadURLModifier);\n    const agent = context.get(PageLoadAgent);\n    const parser = new window.DOMParser();\n    return page => {\n        const url = new URL(page.url.href);\n        modifyURL(url);\n        const request = new Request(url.href, {\n            mode: 'same-origin',\n            credentials: 'same-origin',\n            headers: new Headers({ Accept: 'text/html' }),\n        });\n        return onEventBy(receiver => agent(fetch, request)(receiver));\n        function fetch(fetchRequest) {\n            requestPageFragments(page, fetchRequest);\n            return onEventBy(receiver => {\n                const dispatcher = new EventNotifier();\n                dispatcher.on(receiver);\n                dispatcher.send({ page });\n                httpFetch(fetchRequest).do(mapOn_(response => Promise.all([response, response.text()])), resolveOnOrdered, digOn_((...batch) => afterThe(...batch)), mapOn_(([response, text]) => {\n                    if (!response.ok) {\n                        return {\n                            ok: false,\n                            page,\n                            response,\n                            error: response.status,\n                        };\n                    }\n                    try {\n                        return {\n                            ok: true,\n                            page,\n                            response,\n                            document: parsePageDocument(parser, url, response, text),\n                        };\n                    }\n                    catch (error) {\n                        return {\n                            ok: false,\n                            page,\n                            response,\n                            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                            error,\n                        };\n                    }\n                }))(receiver);\n            });\n        }\n    };\n}\nfunction requestPageFragments(page, request) {\n    var _a;\n    const fragments = (_a = page.get(PageLoadRequestsParam)) === null || _a === void 0 ? void 0 : _a.fragments;\n    if (fragments && fragments.length) {\n        request.headers.set('Accept-Fragment', fragments.reduce((header, fragment) => (header ? header + ', ' : '') + (fragment.tag != null\n            ? 'tag=' + hthvQuote(fragment.tag)\n            : 'id=' + hthvQuote(fragment.id)), ''));\n    }\n}\nfunction parsePageDocument(parser, url, response, text) {\n    const doc = parser.parseFromString(text, hthvParse(response.headers.get('Content-Type') || 'text/html')[0].v);\n    if (doc.head) {\n        const base = doc.head.querySelector('base');\n        if (base) {\n            base.href = new URL(base.getAttribute('href'), url).href;\n        }\n        else {\n            const newBase = doc.createElement('base');\n            newBase.href = url.href;\n            doc.head.appendChild(newBase);\n        }\n    }\n    return doc;\n}\n\n/**\n * @internal\n */\nclass PageLoadParam$ extends PageParam {\n    create(page, request, context) {\n        const requests = new PageLoadRequests(context.get(Navigation), cachingPageLoader(context.get(PageLoader)));\n        const handle = requests.handle();\n        page.put(PageLoadRequestsParam, requests);\n        handle.put(request);\n        return handle;\n    }\n}\n/**\n * Page load parameter.\n *\n * Accepts a {@link PageLoadRequest page load request} as input.\n *\n * A page load is initiated whenever a page with new address is {@link Navigation.onEnter entered}.\n *\n * Page load won't be initiated if:\n * - page load parameter is not {@link Page.put} added,\n * - all added {@link PageLoadRequest.receiver response receiver}s supplies are cut off, or\n * - the entered page address is the the same one as previous one, except the hash,\n */\nconst PageLoadParam = ( /*#__PURE__*/new PageLoadParam$());\n\nconst PageCacheBuster__key = ( /*#__PURE__*/new SingleContextKey('page-cache-buster', {\n    byDefault: bootstrapDefault(context => new PageCacheBuster(context)),\n}));\n/**\n * @internal\n */\nconst appRevSearchParam = '__wesib_app_rev__';\n/**\n * @internal\n */\nclass PageCacheBuster {\n    constructor(context) {\n        const rev = appRev(context.get(BootstrapWindow).document);\n        if (!rev) {\n            this.urlModifier = afterThe();\n            this.agent = afterThe();\n        }\n        else {\n            const navigation = context.get(Navigation);\n            this.urlModifier = afterThe(url => url.searchParams.set(appRevSearchParam, rev));\n            this.agent = afterThe((next, request) => next(new Request(request.url, request)).do(mapOn_(response => {\n                if (response.ok) {\n                    const newRev = appRev(response.document);\n                    if (newRev && newRev !== rev) {\n                        const url = new URL(response.page.url.href);\n                        url.searchParams.set(appRevSearchParam, newRev);\n                        navigation.update(url);\n                        navigation.reload();\n                    }\n                }\n                return response;\n            })));\n        }\n    }\n    static get [ContextKey__symbol]() {\n        return PageCacheBuster__key;\n    }\n}\nfunction appRev(doc) {\n    var _a;\n    return (_a = doc.querySelector('meta[name=wesib-app-rev]')) === null || _a === void 0 ? void 0 : _a.getAttribute('content');\n}\n\n/**\n * @internal\n */\nfunction pageScriptsAgent(context) {\n    const doc = context.get(BootstrapWindow).document;\n    return next => next().do(mapOn_(response => {\n        if (response.ok) {\n            const allScripts = new Set(mapIt(externalScripts(doc, doc.scripts), ([src]) => src));\n            itsEach(filterIt(externalScripts(response.document, response.document.querySelectorAll('script')), ([src]) => !allScripts.has(src)), ([src, script]) => {\n                importNode(script, doc.head, (_from, to) => to.src = src);\n                allScripts.add(src);\n            });\n        }\n        return response;\n    }));\n}\nfunction externalScripts(doc, scripts) {\n    return mapIt(filterArray(scripts, ({ src }) => !!src), script => [new URL(script.src, doc.baseURI).href, script]);\n}\n\n/**\n * @internal\n */\nfunction pageStyleAgent(context) {\n    const doc = context.get(BootstrapWindow).document;\n    return next => next().do(mapOn_(response => {\n        if (!response.ok) {\n            return response;\n        }\n        const newStyles = response.document.querySelectorAll('link[rel=stylesheet]');\n        if (!newStyles.length) {\n            return response;\n        }\n        let target = doc.head;\n        let before = null;\n        const oldStyles = doc.querySelectorAll('link[rel=stylesheet]');\n        const oldStylesByHref = new Map();\n        const firstOldStyle = oldStyles.item(0);\n        if (firstOldStyle) {\n            target = firstOldStyle.parentNode;\n            before = firstOldStyle;\n            itsEach(overArray(oldStyles), link => oldStylesByHref.set(new URL(link.href, doc.baseURI).href, link));\n        }\n        itsEach(overArray(newStyles), newStyle => {\n            const href = new URL(newStyle.href, doc.baseURI).href;\n            const oldStyle = oldStylesByHref.get(href);\n            if (oldStyle) {\n                // Style already exists.\n                if (itsFirst(oldStylesByHref.keys()) === href) {\n                    // In proper position already.\n                    // Insert the remaining styles after it.\n                    target = oldStyle.parentNode;\n                    before = oldStyle.nextSibling;\n                }\n                else {\n                    // Move to proper position.\n                    target.insertBefore(oldStyle, before);\n                }\n                oldStylesByHref.delete(href);\n            }\n            else {\n                // Import new style\n                importNode(newStyle, target, before, (_from, to) => to.href = href);\n            }\n        });\n        // Remove remaining old styles\n        itsEach(oldStylesByHref.values(), style => style.parentNode.removeChild(style));\n        return response;\n    }));\n}\n\n/**\n * @internal\n */\nfunction pageTitleAgent(context) {\n    const doc = context.get(BootstrapWindow).document;\n    return next => next().do(mapOn_(response => {\n        if (response.ok) {\n            const title = response.document.getElementsByTagName('title').item(0);\n            if (title && title.textContent) {\n                doc.title = title.textContent;\n            }\n        }\n        return response;\n    }));\n}\n\n/**\n * @internal\n */\nconst PageLoadSupport__feature = {\n    setup(setup) {\n        setup.provide({\n            a: PageLoadURLModifier,\n            by: (buster) => buster.urlModifier,\n            with: [PageCacheBuster],\n        });\n        setup.provide({\n            a: PageLoadAgent,\n            by: (buster) => buster.agent,\n            with: [PageCacheBuster],\n        });\n        setup.provide({ a: PageLoadAgent, by: pageScriptsAgent });\n        setup.provide({ a: PageLoadAgent, by: pageStyleAgent });\n        setup.provide({ a: PageLoadAgent, by: pageTitleAgent });\n    },\n};\n/**\n * Page load support feature.\n *\n * Enables default {@link PageLoadAgent page load agents}:\n * 1. Page cache busting agent.\n *    If `<meta name=\"wesib-app-rev\">` tag is present in initial page, then sends this tag's content with each page load\n *    request as `__wesib_app_rev__` search parameter. If the loaded page contains the same named meta tag with\n *    different content, then reloads the page.\n *    This serves both as cache busting technique, and as server-side application updates handler.\n * 2. Scripts agent.\n *    Includes external scripts from loaded page into main document.\n * 3. Style agent.\n *    Replaces external styles of main document styles with the ones from loaded page.\n *    Unless loaded page has no external styles.\n * 4. Title agent.\n *    Applies loaded page title to bootstrap window. If there is one.\n */\nclass PageLoadSupport {\n    static get [FeatureDef__symbol]() {\n        return PageLoadSupport__feature;\n    }\n}\n\n/**\n * A key of component context value containing {@link PageRenderCtl page render control}.\n */\nconst PageRenderCtl = ( /*#__PURE__*/new SingleContextKey('page-render-ctl', {\n    byDefault(context) {\n        return new PageRenderCtl$(context.get(ComponentContext));\n    },\n}));\nclass PageRenderCtl$ {\n    constructor(_context) {\n        this._context = _context;\n    }\n    renderPageBy(renderer, def = {}) {\n        const spec = valueByRecipe(def, this._context);\n        const { contentKey = RenderPage$contentKey$default } = spec;\n        const detectFragment = RenderPage$fragmentDetector(spec);\n        const navigation = this._context.get(Navigation);\n        const renderCtl = this._context.get(FragmentRenderCtl);\n        let lastPageKey;\n        const responseTracker = trackValue();\n        const handleResponse = (response) => {\n            const pageKey = contentKey(response.page);\n            if (pageKey === lastPageKey) {\n                return; // Only hash changed? Do not refresh the page.\n            }\n            responseTracker.it = [response, pageKey];\n        };\n        const supply = renderCtl.renderFragmentBy(fragExec => {\n            const responseAndKey = responseTracker.it;\n            if (!responseAndKey) {\n                fragExec.retainContent();\n                return;\n            }\n            const [response, pageKey] = responseAndKey;\n            const exec = {\n                ...fragExec,\n                postpone(postponed) {\n                    fragExec.postpone(() => postponed(exec));\n                },\n                response,\n            };\n            if (response.ok) {\n                lastPageKey = pageKey;\n                const { fragment } = response;\n                if (fragment) {\n                    importNodeContent(fragment, fragExec.content);\n                }\n            }\n            renderer(exec);\n        }, {\n            ...spec,\n            when: 'connected',\n            on: responseTracker.on,\n        });\n        this._context.whenConnected(context => {\n            lastPageKey = contentKey(navigation.page);\n            navigation.read.do(onceAfter)(page => {\n                page.put(PageLoadParam, {\n                    fragment: detectFragment(context),\n                    receiver: {\n                        supply: new Supply().needs(supply),\n                        receive: (_ctx, response) => handleResponse(response),\n                    },\n                });\n            });\n        });\n        return supply;\n    }\n}\nfunction RenderPage$fragmentDetector({ fragment }) {\n    if (fragment) {\n        return _context => fragment;\n    }\n    return ({ element: { id, tagName }, }) => id\n        ? { id }\n        : { tag: tagName.toLowerCase() };\n}\nfunction RenderPage$contentKey$default({ url }) {\n    return new URL('', url).href;\n}\n\n/**\n * Creates a {@link RenderPageDef.Method page renderer} method amendment (and decorator).\n *\n * Renders pages using {@link PageRenderCtl page render control}.\n *\n * Utilizes {@link PageLoadParam} navigation parameter.\n *\n * Enables {@link PageLoadSupport} feature.\n *\n * @typeParam TClass - Amended component class type.\n * @typeParam TAmended - Amended component member entity type.\n * @param def - Page inclusion definition.\n *\n * @returns New component method amendment.\n */\nfunction RenderPage(def) {\n    return ComponentMember(({ get, amend }) => amend({\n        componentDef: {\n            feature: {\n                needs: [PageLoadSupport],\n            },\n            define(defContext) {\n                defContext.whenComponent(context => {\n                    context.whenReady(context => {\n                        const { component } = context;\n                        const renderer = get(component).bind(component);\n                        context.get(PageRenderCtl).renderPageBy(renderer, def);\n                    });\n                });\n            },\n        },\n    }));\n}\n\nexport { EnterPageEvent, LeavePageEvent, NavMenu, Navigation, NavigationAgent, PageHashURLParam, PageHashURLSupport, PageLoadAgent, PageLoadParam, PageLoadSupport, PageLoadURLModifier, PageParam, PageParamContext, PageParam__symbol, PageRenderCtl, RenderPage, StayOnPageEvent, getHashURL, navAnchor, navElement, setHashURL };\n//# sourceMappingURL=wesib.navigation.js.map\n",null,null,null,null,null,null,null],"names":["value","Array","isArray","isArrayOfElements","first","second","values","provider","get","lazyValue$recurrent","valueProvider","TypeError","recipe","args","isValueEvaluator","elementsAreEqual","fromOrLength","to","start","end","Math","max","length","i","source","array","from","elements","Set","set","forEach","add","element","type","satisfying","prototype","Reflect","getPrototypeOf","superType","constructor","superClassOf","len","idx","merge","_f","s","apply","this","hasOwnProperty$","Object","hasOwnProperty","target","key","call","PushIterator__symbol","iterable","Symbol","iterator","iterate","PushIterable$iterator","accept","isOver","forNext","over","PushIterator$dontIterate","PushIterator$iterator","next","PushIterator$next","result","pushIterated","done","_accept","emptyPushIterator","indexed","elementOf","accept2","goOn","PushIterator$noNext","index","iterateOverIndexed","arrayElementOf","makePushIterable","iterateOverArray","isPushIterable","it","iteratorOf","status","action","itsElements$defaultConverter","convert","pushedElements","push","isEmpty","test","allMatch","res","pushHead","arrayHead","rawIteratorPusher","toPushIterator","rawIterableHead","reducer","initialValue","reduced","overNone","iterateOverRawIterator","sources","src","srcTail","itsHead","makePushIterator","iterateOverSubElements","overArray","overIterator","iterateOverOneValue","ownKeys","iterateOverFilteredIndexed","filterPusher","filterRawPusher","tail","elementsOf","array2","flatMapArray$defaultElementOf","subs","subsTail","flatMapIt$defaultConverter","flatMapPusher","flatMapRawPusher","lastSrc","sourceTail","mapPusher","mapRawPusher","valueOf","valuePusher","valueRawPusher","mapIt","overKeys","Supply$unexpectedAbort","Supply$unexpectedAbort$byDefault","reason","error","Supply$off$unexpected$reasons","Supply$off","prevOff","reasons","SupplyState__symbol","SupplyState$done","isOff","off","SupplyState$done$off","[object Object]","_supply","callback","_reason","SupplyState$noCallback","supply","Supply$off$start","SupplyState$off","SupplyState$withCallback","prev","handler","whenOff","Promise","resolve","reject","another","needs","cuts","Supply","_callback","_another","alwaysSupply$","AlwaysSupply","neverSupply$","NeverSupply","Error","message","ContextKey__symbol","name","ContextKey","opts","seeder","seed","hasFallback","insert","Contextual__symbol","_providers","Map","delete","context","initial","overElementsOf","providers","valueIt","itsElements","lazyValue","bind","iterativeSeed","pushedEmpty","itsEmpty","ContextSeedKey","IterativeContextSeeder","seedKey","IterativeSeedKey","IterativeContextKey","byDefault","valuesProvider","slot","defaultSources","entry","splice","indexOf","noop","makeSeed","seeds","combineSimpleSeeds","map","combineTwoSimpleSeeds","_a2","SimpleContextSeeder","SimpleSeedKey","SimpleContextKey","or","alwaysSupply","ContextSupply","ContextSupplyKey","ContextBuilder__symbol","_initial","_issuers","found","issuer","factory","spec","isValueSpecByProvider","isValueSpecWithDeps","a","by","with","deps","dep","isConstantValueSpec","is","isValueSpecViaAlias","via","ctx","isValueSpecAsInstance","isSelfInstanceValueSpec","__spreadProps","as","toAsInstance","Type","DepType","JSON","stringify","seeders","_opts","_constructed","_setup","newSeed","grow","setup","prevSetup","ContextKeyError","_seeders","ContextSeeders","isContextBuilder","contextValueSpec","provide","newValues","registry","ContextValues","cached","constructed","ContextValueSlot$","_grow","newContextValues","other","otherSeeds","ContextRegistry","combine","amendment","isAmendatoryAmendment","applyAmendment","_target","noopAmender","amendments","amender","amenderOf","amendBy","amend2","request","amend","nextTarget","options","base","baseAmend","createBase","nextBase","nextRequest","modify","__spreadValues","AmendTarget$default$modify","newAmendTarget","AeClass$target$amend","_base","allAmender","decorateAmended","AeClass$target","decorator","amendedClass","autoAmended","WeakSet","has","superClass","autoAmend","host","kind","pName","cls","AmendProp$accessString","_instance","_update","AeProp$idPattern","String","createHost","hostClass","decorated","descriptor","getValue","setValue","toAccessor","instance","AeProp$notReadable","update","AeProp$notWritable","valueKey","vDesc","host2","writeValue","writable","superProto","hostInstance","createAePropAccessor","init","enumerable","configurable","readable","baseTarget","$key","$readable","$writable","$get","$set","baseRequest","createBaseTarget","createAePropApplicator","desc","classTarget","newDescriptor","defineProperty","targetHost","aeClass","AeMember$HostKind","proto","nsAlias","local","ns","Naming","alias","default__naming","DefaultNaming","html__naming","css__naming","CssNaming","url","aliases","naming","applyAlias","NamespaceDef","isNamespaceDef","isNameAndNamespace","aliasesByNs","nsNumPerAlias","mostPreferred","nsNumRegistered","preferred","ids","generated","AfterEvent__symbol","receiver","receive","_context","event","EventReceiver$doDonReceive","_event","receivers","send","actualReceivers","received","recurrent","processEvent","shift","sendNonRecurrent","recurrentReceivers","recurrentReceiver","eventReceiver","recurrentEvent","rcs","_rcs","receiveByEach","clear","size","generic","OnEvent__symbol","NoEventsError","input","extract","nestedSupply","neverSupply","prevSupply","extracted","digEvents","processors","reduce","arg","supplier","onEvent","onCutOff","e","_ctx","sharer","EventSharer","on","EventNotifier","_on","_onInit","initialEvents","sharedSupply","onFirst","_onFirst","dispatch","_onNext","_addReceiver","sendEventsTo","required","dependentSupply","translate","register","OnEvent$supplier","do","OnEvent$do","then","OnEvent$then","fallback","AfterEvent$noFallback","cleanup","AfterEvent$noCleanup","lastEvent","numReceivers","afterEvent","dest","reported","isOnEvent","keys","afterEventBy","shareEvents","onceEvent","sender","isEventKeeper","afterSent","isAfterEvent","afterThe","consume","consumerSupply","deduplicateAfter$default","deduplicateAfter_$default","isSimilar","getCue","deduplicateAfter$create","processor","deduplicateAfter_","shareAfter","deduplicateAfter_$create","deduplicateAfter$noPrior","deduplicateAfter$isDuplicate","asis","prior","nextEvent","compareOrFromOrLength","countArgs","arrayElementsAreEqual","areTheSame","digAfter_","extractKeeper","events","afterSupplied","arguments","onEventBy","super","onNever","neverReceive","isEventSender","suppliers","remained","removeSupplier","onSupplied","promise","alwaysReceiveValue","catch","extractSender","mapper","translateOn_","shareOn","translateEvents","mapAfter_","mapOn_","isAlwaysSupply","supplyEvents","sourceSupply","numInProcess","supplyOn","mapOn","numSent","numReceived","lastIndex","toSend","translateAfter_","valueOn_","path","_drop","emitter","EventEmitter","_nested","newValue","oldValue","nested","slice","_dropIfEmpty","dontCreateMissing","created","PathEntry","_remove","_root","_entry","nest","_trackers","_path","onUpdate","statePath","SubStateTracker","_tracker","Trackers","subTracker","track","_by","read","valueReceiver","onRecurrent","recurrentValue","acceptValuesFrom","byNone","container","consumeEvents","ValueTracker","_it","TrackedValue","trackValue","old","third","syncWithTracker","tracker","syncTrackers","extractTracker","tracker1","tracker2","supply1","supply2","OnDomEvent$sample","OnDomEvent$context","onDomEvent","listener","onDomEventBy","domListener","addEventListener","removeEventListener","dispatchEvent","flatUpSources","providers2","providersTracker","afterEach","prov","toUpSrcKeeper","upSrcKeepers","ContextUpSeeder","_key","fillBy","supplyAfter","ContextSeed$UpKey","ContextUpKey$UpKey","filterIt","isContextual","isPresent","applyContextAfter_","ContextUpKey","upKey","createUpKey","digAfter","fns","delegated","fn","contextDestroyed","module","dependencies","out","contextModuleDependencyErrorMessage","_useCounter","_impl","_rev","provided","used","settled","ready","contextSupply","module2","_load","handle","use","user","_use","rev","_updateStatus","async","moduleInit","ContextModuleInit","initBy","whenReady","impl","whenSettled","ContextModule$Use$when","isContextModuleSettled","isContextModuleReady","_module","_whenDone","_ready","finally","_done","status2","usage","ContextModuleUsage","createHandle","implementBy","candidates","ContextModule$impl__symbol","ContextModuleKey","setOfElements","replaced","contextModuleDeps","loadContextModuleDeps","whenContextModuleSettled","whenContextModuleReady","whenLoaded","notLoaded","whenDone","race","all","results","failures","filter","isDefined","ContextModuleDependencyError","ContextModule$","replace","node","ownerDocument","nodeType","beforeOrImport","importContent","importNodeContent","before","doc","nodeDocument","isElementNode","elementClone","createElement","tagName","toLowerCase","getAttributeNames","setAttribute","attr","getAttribute","insertBefore","nodeClone","importNode","childNodes","parentNode","getRootNode","RenderScheduleConfig","win","console","window","defaultView","RenderQ__symbol","q","ref","schedule","doSchedule","execute","recur","execRecurring","execNonRecurring","queue","RenderQ","shot","config","RenderQ$doNotSchedule","postponed","execution","unshift","reset","suspend","postpone","post","exec","resume","pull","scheduled","_config","scheduleOptions","queueRef","newQueue","enqueued","lastQueue","executed","nextQueue","activeQueue","nextEnqueued","RenderQueue","scheduleRecurrent","RenderQueue$doNotReplace","task","replaceQueue","_replacement","animationRenderQueues","WeakMap","animationRenderScheduler","existing","window2","requestAnimationFrame","replacement","asyncRenderQueue","asyncRenderQueue$schedule","asyncRenderScheduler","immediateRenderScheduler","shot2","last","pop","immediateRenderQueue","queuedRenderScheduler","defaultRenderScheduler","DrekContext$registrar","DrekContext$autoRegister","DrekContext$autoRegistrar","registered","DrekContext$createAutoRegistrar","DrekContext$autoRegisterFirst","context2","lift","builder","resetRegistrar","registrar","priorRegistrar","DrekContext$dontRegister","DrekContext$setRegistrar","DrekPlacement$Status__symbol","placement","onceConnected","readStatus","connected","eventCtx","whenConnected","onceOn","DrekPlacement$Status","DrekPlacement","DrekContext__symbol","scheduler","_nsAlias","_scheduler","scheduler2","document2","state","DrekContext$State","newNamespaceAliaser","newRenderSchedule","view","DrekContext","root","DrekContext$ofDocument","derivedCtx","getFragment","fragment","newRoot","composed","lifted","DrekContext$ofRootNode","document","DrekContext$Unrooted","DrekContext$unrooted","DrekCssClasses__symbol","_element","_uses","drekContextOf","className","_add","render","n","classList","remove","contains","_has","renderIn","newContext","DrekFragment$Context__symbol","_fragment","_content","_status","withinFragment","_settled","_rendered","_getFragment","_lift","_state","_createSchedule","_whenSettled","content","createDocumentFragment","DrekFragment$Context","placeContent","_whenRendered","_createExecution","fragmentExecution","attach","_settle","_render","appendChild","charger","DrekCharger$custom","charge","DrekCharger$commentWrapper","random","toString","substr","rem","wrapContent","createComment","content2","range","createRange","setStartAfter","setEndBefore","deleteContents","insertNode","append","workload","work","workName","allocator","_work","_allotment","_queues","TaskQueue","enqueue","_tasks","run","_runNext","Workload","allotment","OrderedTasks","WorkOrdering","$","workbench","runner","WorkStageRunner","stage","_whenTaskDone","_whenAllDone","_end","_task","WorkDoneError","_start","_addTask","taskPromise","taskDone","whenStarted","_awaitDeps","addDep","runAfter","after","Workbench$impl__symbol","_works","_run","Workbench$run","ensureWorking","runWorkTask","work2","setWork","runTask","whenWork","newWork","_workload","Workbench$","uppercasePattern","letters","offset","str","lowerCase","hyphenateCSSName$cache","toHyphenLower","hyphenated","hyphenateName","startsWith","BootstrapContext__key","SingleContextKey","bootstrapContext","BootstrapContext","target1","method1","target2","method2","m1","m2","symbol","ownDef","own","superDef","of","metas","prevMeta","newMeta","FeatureDef__symbol","MetaAccessor","defs","def","elementOrArray","extendSetOfElements","mergeInitMethods","featureMeta","FeatureMeta","FeatureDef","featureType","define","featureDefs","featureAmendments","isFeatureAmendment","featureDef","Feature$toAmender","AeClass","defRequest","featureDef2","isAmendatory","FeatureContext__key","componentType","whenDefined","feature","load","BootstrapWorkbench","bootstrapDefault","Workbench","featureSetupStage","WorkStage","featureInitStage","componentDefStage","ComponentDef__symbol","meta","mergeFunctions","isQualifiedName","componentMeta","ComponentMeta","ComponentDef","componentDefs","componentAmendments","isComponentAmendment","componentDef","Component$toAmender","Feature","ComponentContext__key","ComponentEventDispatcher__key","dispatcher","DomEventDispatcher","ContentRoot","combined","StateUpdater","StateUpdaterKey","ComponentContext__symbol","updateState","component","AeProp","AeMember$createHost","AeMember$hostClass","AeMember","Component","ComponentSlot$empty","unbind","rebind","drop","_provider","mapAfter","digOn_","ComponentSlot$known","binder","getContext","newSupply","bindContext","ComponentSlot$bound","ComponentSlot__symbol","ComponentSlot","ComponentSlot$","BootstrapContextRegistry__key","BootstrapContextRegistry","PerComponentRegistry","ComponentContextRegistry","PerDefinitionRegistry","DefinitionContextRegistry","bsContext","PostDefSetup__symbol","onAny","valueOn","superPostDefSetup","postDefSetup","BootstrapWindow","DefaultNamespaceAliaser","RenderScheduler$adopt","DefaultPreRenderScheduler","RenderScheduler$Key","DefaultRenderScheduler","DocumentRenderKit","docs","Wesib__NS","DefinitionContext__symbol","CustomElements__key","customElements","CustomElements","componentTypeOrName","elementType","defContext","definitionContextOf","extend","elementDef","extends","componentResolver","ComponentResolver__symbol","resolvePromise","rejectPromise","buildPromise","settle","resolution","newPromiseResolver","DefinitionContext__key","ElementNaming","bsWindow","elementExtend","HTMLElement","ComponentConstructor__symbol","context__symbol","defaultContext","prevContext","newComponentConstructor","_val","_canSettle","onceReady","ComponentStatus$once","onceSettled","componentCtx","ComponentContext","_definitionContext","_newComponentRegistry","ComponentStatus","_component","componentDestroyed","isReady","isSettled","isConnected","whenComponent","_whenComponent","lastRev","readNotifier","notifier","_","_elementBuilder","components","newComponent","connect","create","ComponentContext$","currentRev","onCreated","receiverRev","eventContext","componentContext","notifiedRev","recurrentContext","DefinitionContext","_bsContext","_b","WhenComponent","_whenReady","translateOn","_def","definitionContextRegistry","parentPerComponentRegistry","_perComponentRegistry","definitionSetup","perDefinition","perComponent","_elementType","ComponentContext$Mounted","_createComponent","drekContext","contextOf","_connect","_created","definitions","renderKit","bindBy","ComponentContext$Custom","connectedCallback","disconnectedCallback","CustomElement$","customElementType","ElementBuilder","definitionContext","DefinitionContext$","_define","_components","_defineAll","whenDefined2","elementBuilder","buildElement","FeatureContext","_componentRegistry","ComponentRegistry","_onDefinition","_onComponent","onPostDefSetup","FeatureModule__symbol","ContextModule","FeatureModule","featureContext","FeatureContext$","whenInit","FeatureModule$options","WhenDefined__symbol","AttributePath__root","attributePathTo","updateAttributeState","AttributeRegistry","AttributeRegistry$","attrs","mounted","mount","change","observedAttributes","attributeChangedCallback","attributeFilter","MutationObserver","records","attributeName","record","observe","attributes","attributeOldValue","alreadyObserved","newAttrs","prevCallback","attrChanged","ComponentMember","propertyKey","hyphenateDecapName","attributeStateUpdate","parseAttributeDescriptor","declareAttribute","removeAttribute","ComponentState","ComponentState__key","ComponentStateKey","StateTracker","_name","AttributeTracker","RenderPath__root","RenderDef","trigger","renderer","ComponentRenderer$State","preRenderer","ComponentPreRenderer$State","_ctl","_renderer","_spec","valueByRecipe","when","_scheduleRenderer","_cancel","_scheduleBy","drekBuild","rendererExecution","currentRenderer","_over","ComponentRenderer$BaseState","renderBy","ComponentPreRenderer$done","_nextRenderer","_preSupply","preScheduler","preRendererExecution","preRenderBy","ComponentRenderCtl","ComponentRenderCtl$","ComponentRenderScheduler","renderCtl","recentShot","ShadowContentRoot","ShadowRootBuilder","FnContextKey","attachShadow","shadowRoot","shadowRootOf","defaultShadowContentDef","mode","agents","fetch","agentIdx","agentRequest","agent","combineFetchAgents","defaultFetchAgent","HttpFetchAgent","FetchAgentKey","HttpFetchAborted","HttpFetch","Request","responseEmitter","abortController","AbortController","signal","abort","response","customSignal","aborted","FragmentRenderCtl","FragmentRenderCtl$","RenderFragment$done","doRenderFragment","RenderFragment$justRender","RenderFragment$settleThenRender","RenderFragment$defaultTarget","getTarget","renderSupply","DrekFragment","retainContent","preExec","renderer2","retain","contentRoot","drekCharger","drekAppender","innerContext","upgrade","renderFragmentBy","RenderFragment$defaultRem","RenderFragment$def","Share__symbol","ShareRegistry__key","ShareRegistry","_sharers","share","elementName","sharers","Sharers$new","names","counter","counter2","_share","selectValue","Share$impl__symbol","ShareKey","_aliases","arrayOfElements","addSharer","shareAs","priorityOffset","priority","shareValue","withPriority","SharedValue__symbol","SharedValue","hasDetails","SharedValue$BoundRegistrar","applyContextAfter","applyContextTo","SharedValue$bindProvider","newPriority","SharedValue$detailedProvider","SharedValue$bareProvider","translateAfter","value2","Share$","SharedValue$Registrar","consumer","nodeHost","afterAll","b","Share$consumerStatus","sharers2","Share$sharedValue","deduplicateAfter","selected","details","locator","defaultSpec","isShareRef","share2","valueFor","hostByDefault2","localByDefault2","shareByDefault","shareRef","hostByDefault","localByDefault","Shareable$Internals__symbol","body","Shareable$Internals","valueRecipe","afterValue","_source","_get","Shareable","_notBound","trackValueBy","_set","dynSync","val","_syncDyn","_syncVal","_valSupply","share$default","localShare$default","accessorKey","lastTarget","accessorOf","ShareAccessor","getShared","createRegistrar","SharedValue$ContextBuilder","localShare","$getShared","_added","_removed","deltaSetDeltaReceiver","removed","added","nullInAspect$","convertTo","control","aspectKey","builtInAspect$","build","origin","attachTo","aspect","InAspect__symbol","InputAspects__NS","InNamespaceAliaser__aspect","applyTo","knownInAspect","InNamespaceAliaser","applyAspect","InRenderScheduler__aspect","InRenderScheduler","InRole__aspect","InControlRole","roles","_activate","active","role","InRole$Active","_defaultSupply","isDefault","named","defaultSupply","activateBy","activator","prevActivator","InRole","_control","_active","_activators","activate","active2","activators","role2","activatedSupply","noopInConversion","_aspect","valueOrAspectConverter","converters","noopInConverter","converter","inConverter","aspectConverters","conversion","itsReduction","filterArray","acf","cv","isInAspectConversion","aspects","intoConvertedBy","InBuilder$Impl__symbol","_aspectsByKey","_commonAspects","_aspects","byKey","intoConvertedByKey","_a","InBuilder$Impl","addAspect","addAspects","aspectKeyOrSetup","aspectSetup","isAspectKey","InControl$Aspects__symbol","_byKey","applied","application","_applyAspect","aspectList","InControl$Aspects","intoConvertedAspects","InControl$SameValued","and","InControl$Converted","InControl","backward","convertAspect","prevValue","prevRev","InContainer__aspect","inconvertibleInAspect","InContainer","InParents__aspect","InControlParents","InParents","_map","allParents","existingSupply","parent","InElement__aspect","InElement","InMode__aspect","builtInAspect","InMode","InControlMode","ctrl","initialInMode","_all","mergeInModes","_derived","DerivedInModes","OwnModeTracker","derive","parentsInMode","derived","substring","lastUpdate","applyInMode","parents","parentList","modes","inModeValue","ro","InData__aspect","InData","hasData","InGroup__aspect","InGroup","RequireNothing$","dontRemove","validators","validatorMessages","validate","_messages","resultSupply","validator","validatorSupply","messages","entries","flatMapIt","inValidator","InValidation__aspect","InValidation","validation","InControlValidation","noInValidationErrors","hasBut","_byCode","nonEmpty","overEntries","code","codePresent","codes","some","every","InValidationErrors","InValidationMessages","inValidationResult","controls","flatMapArray","nestedInValidationMessages","numValidators","requireNothing","requireAll","missing","requirePresent","InSubmit__aspect","InSubmit","InControlSubmit","errors","submit","InSubmitError","rejected","_flags","submitted","busy","_errors","flags","data","ok","itsEvery","submitter","InSubmitRejectedError","d","submitData","toInSubmitMessages","_input","self","_value","doUpdate","correction","listenForInput","onInput","AbstractInElement","InFocus__aspect","InFocus","InControlFocus","inElement","owner","activeElement","focus","blur","InStatus__aspect","InStatus","InContainerStatus","InControlStatus","defaultInStatusFlags","hasFocus","touched","edited","updateInStatusFlags","elementInStatusFlags","_container","snapshot","c","inControlStatuses","combineInStatusFlags","onceAfter","itsEach","markEdited","markTouched","form","notReady","invalid","inModeByForm","InStyledElement__aspect","nullInAspect","InStyledElement","InCssClasses__aspect","InControlCssClasses","UnsubscribeReason__symbol","InCssClasses","_sources","classes","mergeInCssClassesMap","DeltaSet","classesSent","flag","delta","redelta","undelta","_schedule","controlSchedule","specs","inSupply","classesSupply","isUnsubscribeReason","updateClasses","mark","hasError","defaultInCssHasError","defaultInCssErrorMarks","marks","inCssErrorMarks","md","vl","st","valid","DefaultFormPreset","nsAliaser","renderScheduler","FormPreset","FormPreset__key","FormPresetKey","FormPreset$rules__symbol","rules","rules2","setupField","FormPreset$setupField","setupForm","FormPreset$setupForm","FormPreset$noFieldSetup","_builder","FormPreset$noFormSetup","FormUnit","providerBy","field","InBuilder","Field$isDuplicateControls","FieldShare$map","Share","FormShare$map","adjacentTo","Field","adjacentLocator","shareLocator","_sharer","adjusted","locateForm","defaultForm","defaultName","fieldName","autoName","Field$nameByKey","FormShare","unit","group","FormUnitName","Form__aspect","inFormElement","elementFactory","formAspect","Form","Form$isDuplicateControls","Form$provider","duplicate","FormScope","scope","defaultRole","AbstractFormPreset$map","preset","ScopedFormConfig","createSetup","rest","ScopedFormConfig$isOptions","defOrAmendment","FieldName","FieldShare","locateForm$default","Shared","text","charCodeAt","id__naming","XmlNaming","compareStrings","firstName","firstUrl","DoqryPicker__symbol","selector","normalized","DoqryPicker$Mutable","DoqrySelector$normalizeKey","picker","combinator","item","prevCombinator","part","isDoqryCombinator","DoqrySelector$Part$normalize","sort","compareNames","DoqryClass$normalizeAll","u","isDoqrySubSelectorsArray","DoqrySubSelector$normalize","DoqrySubSelector$normalizeAll","DoqrySubSelector$isPseudo","DoqryQualifier$normalizeAll","sub","prefix","params","DoqrySelector$normalize","qualifiers","DoqryQualifier$expose","DoqryQualifier$none$exposed","qualifier","eqIdx","exposed","lastExposed","split","DoqryFormat$default","qualify","format","hasProperties","escapeCSS","subFormat","DoqryPicker$format","attrName","attrOp","attrVal","attrFlag","escapeCSSVal","DoqrySubPicker$format","xmlNs","qualifyElement","DoqryPicker$Part$format","DoqryFormat$display","DoqryQualifier$formatName","DoqryQualifier$formatRawName","join","prioritize","StypValueStruct","StypColorStruct","coords","r","intCoord","g","coord","min","l","round","StypHSL","h","StypColor","StypRGB","rgb","p","hueAsFraction","hueToRgb","hsl","t","newT","color1","color2","weight","w","rgba1","rgba2","aDiff","w1","w2","dim","toFormula","StypMapper","mappings","mapped","mappedValue","mapping","mappingBy","endsWith","trim","StypNumericStruct","thisDim","pt","noPt","StypDimension","addendum","stypDimension","stypAddSub","subtrahend","multiplier","divisor","zero","left","op","right","usual","stypValuesEqual","stypMul","stypDiv","StypCalcBase","StypAddSub","toDim","negate","StypMulDiv","_byPriority","important","Zero","dimension","isStypNumeric","ZeroByPriority","StypLength","StypLengthPt","stypSplitPriority","StypURL","noStypProperties","rule","preventDuplicates","propertiesKeeper","senderOrProperties","propertiesMap","properties","isDuplicateProperties","cloneProperties","$$css","itsIterator","propertyEntries","sentry","baseProperties","addendumProperties","k","v","priorityOf","addValue","addValues","_rule","outer","mergeStypProperties","onlyAtProperties","producer","writer","isGroup","sheet","atSelectors","extractPartAtSelectors","doqryPicker","extractAtSelectors","restSelector","atSelector","buildAtSelector","addStyle","addGroup","customQuery","query","addQuery","namedQuery","stypRenderAtRules","order","AtRulesRenderer","isAtEntry","restQualifies","colonIdx","prevQuery","stypRenderGlobals","FIRST_RENDER_ORDER","rootRule","importIndex","nsIndex","importDelta","renderImport","renderDefaultNamespace","renderNamespacePrefix","css","addGlobal","style","notCustomProperty","hyphenateCSSName","stypRenderXmlNs","xmlNsDefs","declareNs","isRendererFactory","rendererSpec","firstOrder","secondOrder","removeChild","defaultPrettyPrint","indent","compactStypTextFormatter","nv","eol","pre","StypTextFormatter$","f","nf","afterBody","StypGroupTextWriter","StypStyleTextWriter","AbstractStypGroupTextWriter","id","head","textFormat","pretty","formatter","idSeq","onSheet","addSheet","StypSheetTextWriter","stypTextFormat","stypRenderScheduler","textContent","removeStyleElement","setProperty","cssText","StypGroupObjectWriter","StypStyleObjectWriter","ruleText","cssRules","insertRule","deleteRule","rootSelector","selectorFormat","factories","stypRenderProperties","rendererFactory","compareRenderers","renderers","isReadonlyArray","addRenderer","stypRenderFactories","renderRule","trackSupply","trackRules","production","styleProducer","_selector","doqryText","reader","renderAt","nextIndex","nextRenderer","nextProducer","rendererForRule","rootSelector2","ruleSelector","lastSheet","stypRenderText","produceBasicStyle","defaultStypRenderers","StypQuery__symbol","StypQuery$Normalized","find","namesEqual","qClass","mClass","noKeyAndTail","rootSelector$1","StypRuleList","_list","ruleMatches","filterArray2","_buildList","_ruleSet","returnSelf","StypRuleList$grab","list","stypQuery","StypRuleList$","StypQuery$classesMatch","stypQueryMatch","StypRuleHierarchy","_updates","Self","StypRuleList$self","StypRule$allRules","StypRule$extend","stypRuleKeyAndTail","stypRuleKeyText","propertiesSupply","sendUpdate","overOne","StypRule$AllRules","StypRule","noStypPropertiesSpec","StypRule$NestedRules","_outer","outerSelector","stypOuterSelector","stypPropertiesBySpec","targetSelector","oldSpec","empty","StypRule$extendSpec","keyText","newNested","StypRule$","StypRuleRef","ms","ps","watch","_mappings","_properties","RefStypRule","mappingsKeeper","StypRuleRef$","refs","fromAll","flattenProperties","referrers","StypRuleRefs","propertiesMap2","noStypRules","rulesByList","rulesFromSource","getRules","rulesByValue","evalRules","lazyRulesFromSource","ruleSet","lazyRules","asyncRules","ComponentStyleProducer","defaultStypRenderScheduler","ComponentStypRenderer","MultiContextKey","ElementIdClass__NS","ElementIdClass","contextValues","aliaser","uniqueClassSeq","qualified","ComponentStypFormat__symbol","ComponentStypObjectFormat","newProducer","lazyStypRules","componentSupply","produceStyle2","hostSelector","extractHostSelector","extendHostSelector","shadowRenderer","noShadowRenderer","restParts","ComponentStypFormat","createTextNode","StypSheetObjectWriter","stypObjectFormat","componentStypDomFormatConfig","stypDomFormat","produce","StyleProducerSupport__feature","produceStyle","isId","prevProvider","hasId","combineStyles","ThemeStyle","ThemeStyleKey","stypRules","theme","Theme__key","Theme$","referrer","Theme","_styles","_rules","styles","Examples__NS","ThemeSettings","$color","$bgColor","$fontFace","$fontSize","$lineHeight","$fontWeight","$linkFontWeight","$layoutBreakpoint","@media:sm","settings","linkStyle","textDecoration","color","fontWeight","defaultStyle","mediaStyle","LinkStyle","font","height","margin","padding","bodyStyle","DefaultStyle","backgroundColor","FormThemeSettings","global","formMappings","$roBgColor","$errorFontSize","mul","$borderColor","$marginV","div","$marginH","$paddingV","$paddingH","$borderW","FieldErrorComponent","_code","indicator","adjacentField","adjacentToField","when2","inCssInfo","inCssError","InErrorStyle","__decorate","SharedField","Attribute","ProduceStyle","hasError__cssClass","borderW","display","fontSize","borderLeft","paddingLeft","FormsSupport","x","pl","param","AbstractFormPreset","_byValidity","byValidity","ignore","validity","inModeByValidity","_byForm","byForm","_info","info","_error","parseNone","datePattern","delimiterOf","tagged","extra","nextInItem","parseAngleBrackets","angleBracketsParser","parseDateTime2","dateTime","parseDateTime","dateTimeParser","parseQuotedString","unquoted","quotedStringParser","parseExtra","itemParser","tag","hthvItem","extraItem","skipSpaces","spacesParser","parseItem","defaultDelimit"," ","\t",",",";","\"","\\","<",">","=","(",")","/",":","?","@","[","]","{","}","delimit","delimitConfig","defaultParserConfig","commentParserConfig","parserConfig","buildParserConfig","parseItemDelimit","itemDelimitParser","parseParam","paramParser","parseComment","comments","commentParserConfig2","nextInComment","commentParser","headerValue","hthvParse","string","escaped","quote","delimiter","URL","hash","PageParam__symbol","_page","navigate","agentTo","nextURL","title","nextTitle","nextData","baseURI","visited","current","put","defaultNavigationAgent","_when","_from","NavigationAgent","NavigationAgentKey","NavHistory__key","NavHistory","_entries","_lastId","_document","_location","location","_history","history","_uid","btoa","extractNavData","newEntry","href","enter","replaceState","_historyState","PageEntry","toEntry","page","pushState","_enter","fromEntry","_forget","leave","popState","_changeHash","uid","pageId","existingEntry","transfer","oldEntry","forget","_params","newHandle","_newContext","_init","PageParamContext","transferred","at","stay","Event","cancelable","Navigation__key","navHistory","nav","nextEntry","EnterPageEvent","hashChange","Navigation","onEnter","onLeave","onStay","go","toURL","withParam","applyParams","open","targetOrCallback","navTarget","navTargetOf","applyAgent","whenLeave","doNavigate","prepared","leavePage","LeavePageEvent","prepare","StayOnPageEvent","navigated","NavElement$activeClass","getHref","activeClass","anchor","ownerSupply","navigation","handleClick","pageURL","preventDefault","eventDispatcher","DrekCssClasses$","drekCssClassesOf","initialNsAlias","initialScheduler","deriveDrekContext","NavMenu$Links__symbol","links","NavMenu$Links","bindTo","_menu","_navLinks","_links","weigh","_weigh","defaultNavLinkWeight","afterLinks","linkValues","_replace","_updateActive","toAdd","linkOrProvider","link","toRemove","_deactivate","links2","toDeactivate","toActivate","_selectActive","deactivated","activated","maxWeight","menu","calcNavLinkWeight","linkURL","linkDir","navLinkPath2dir","pageDir","searchParamWeight2","navLinkSearchParamsWeight","pathname","getHashURL","searchParamWeight","searchParams","linkParams","pageParams","isIgnoredSearchParam","getAll","includes","PageLoadAgent","loader","pageUrl","sup","tracked","onLoad","resp","num","requested","PageLoadRequestsParam","PageParam","requests","_navigation","_loader","_requests","pageSupply","loadSupply","_transfer","responseReceiver","PageLoadAbortError","getElementsByTagName","getElementById","onFragment","req","PageLoadRequests","PageLoadURLModifier","PageLoader","httpFetch","modifyURL","parser","DOMParser","credentials","headers","Headers","Accept","fetchRequest","fragments","header","hthvQuote","resolveOnOrdered","batch","parsePageDocument","parseFromString","querySelector","newBase","cachingPageLoader","PageLoadParam","PageLoadParam$","PageCacheBuster__key","PageCacheBuster","appRev","urlModifier","newRev","reload","allScripts","externalScripts","scripts","querySelectorAll","script","newStyles","oldStyles","oldStylesByHref","firstOldStyle","newStyle","oldStyle","pushedFirst","rawFirst","itsFirst","nextSibling","PageLoadSupport__feature","buster","pageScriptsAgent","pageStyleAgent","pageTitleAgent","PageRenderCtl","PageRenderCtl$","contentKey","RenderPage$contentKey$default","detectFragment","RenderPage$fragmentDetector","lastPageKey","responseTracker","responseAndKey","pageKey","fragExec","handleResponse","MainComponent","flex","drekReplacer","PageLoadSupport","renderPageBy","NavComponent","_theme","NavMenu","mapIndexed","navElement","element2","navAnchor","el","NavStyle","navStyle","background","navLinkBackground","sts","navLinkStyle","activeNavLinkStyle","border","outline","ContainerComponent","mainName","flexFlow","alignItems","alignContent","mainStyle","ContainerStyle","LayoutSupportFeature","BodyStyleSupport","ComponentStypDomFormat","BodyStyle","AppFeature","examplesContext","features","bootstrapContextRegistry","complete","bsStage","onPromise","feature2","lastStatus","FeatureRef$read","BootstrapContext$","initBootstrap","bootstrapComponents"],"mappings":"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"}