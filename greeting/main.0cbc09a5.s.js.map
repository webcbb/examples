{"version":3,"file":"main.0cbc09a5.s.js","sources":["../../src/greeting/greeting-out.component.ts","../../src/greeting/greeting.component.ts","../../src/greeting/index.ts"],"sourcesContent":["import { ProduceStyle, Theme } from '@wesib/generic/styp';\nimport {\n  AttachShadow,\n  Attribute,\n  BootstrapWindow,\n  Component,\n  ComponentContext,\n  ElementRenderer,\n  Render,\n} from '@wesib/wesib';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { DefaultStyle, Examples__NS, FormThemeSettings, inStyle, readonlyInStyle, ThemeSettings } from '../common';\n\n@Component(['greeting-out', Examples__NS])\n@AttachShadow()\nexport class GreetingOutComponent {\n\n  @Attribute()\n  name?: string;\n\n  constructor(private readonly _context: ComponentContext) {\n  }\n\n  @ProduceStyle()\n  style(): StypRules {\n    return this._context.get(Theme).style(GreetingOutStyle);\n  }\n\n  @Render()\n  render(): ElementRenderer {\n\n    const document = this._context.get(BootstrapWindow).document;\n    const content = document.createElement('span');\n    const greetings = (): string => {\n\n      const name = this.name?.trim();\n\n      return name ? `Hello, ${name}!` : 'Hello!';\n    };\n\n    this._context.contentRoot.append(content);\n\n    return () => {\n      content.innerText = greetings();\n    };\n  }\n\n}\n\nconst GreetingOut__qualifier = 'bex:greeting-out';\n\nfunction GreetingOutStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read();\n  const formSettings = theme.ref(FormThemeSettings).read();\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add(\n          { u: [':', 'host'], $: GreetingOut__qualifier },\n          formSettings.keepThru(inStyle),\n      )\n          .add(formSettings.keepThru(readonlyInStyle))\n          .add(settings.keepThru(greetFieldStyle)),\n      theme.style(DefaultStyle),\n  );\n}\n\nexport function greetFieldStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    display: 'block',\n    margin: `${$fontSize.div(2)} 0 0 0`,\n  };\n}\n","import { ComponentNode } from '@wesib/generic';\nimport { DefaultInAspects, inputFromControl } from '@wesib/generic/input';\nimport { ProduceStyle, Theme } from '@wesib/generic/styp';\nimport { Component, ComponentContext } from '@wesib/wesib';\nimport { afterAll, ValueSync } from 'fun-events';\nimport { InCssClasses, inCssInfo, inGroup, InStyledElement, inText, InValidation, requirePresent } from 'input-aspects';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { AppFeature, Examples__NS, InputStyle, ThemeSettings } from '../common';\nimport { greetFieldStyle, GreetingOutComponent } from './greeting-out.component';\n\n@Component(\n    ['greeting', Examples__NS],\n    {\n      feature: {\n        needs: [\n          GreetingOutComponent,\n          AppFeature,\n        ],\n      },\n    },\n)\nexport class GreetingComponent {\n\n  constructor(private readonly _context: ComponentContext) {\n    _context.whenOn(supply => {\n\n      const node = _context.get(ComponentNode);\n      const group = inGroup<GreetData>({ name: '' });\n\n      afterAll({\n        name: node.select('input', { all: true, deep: true }).first(),\n        aspects: _context.get(DefaultInAspects),\n      }).tillOff(supply).consume(\n          ({ name: [nameNode], aspects: [aspects] }) => {\n\n            const name = nameNode && inText(nameNode.element)\n                .convert(aspects, InStyledElement.to(nameNode.element))\n                .setup(InValidation, validation => validation.by(requirePresent))\n                .setup(InCssClasses, classes => classes.add(inCssInfo()));\n\n            group.controls.set('name', name);\n\n            return name && inputFromControl(_context, name);\n          },\n      );\n\n      const output = node.select(GreetingOutComponent, { deep: true }).first().tillOff(supply);\n      const sync = new ValueSync<string | null>('');\n\n      sync.sync(output, o => o?.attribute('name'));\n      sync.sync(\n          'in',\n          group.controls.read(),\n          controls => controls?.get('name'),\n      );\n\n      supply.whenOff(reason => {\n        sync.done(reason);\n        group.done(reason);\n        group.controls.clear();\n      });\n    });\n  }\n\n  @ProduceStyle()\n  style(): StypRules {\n    return this._context.get(Theme).style(GreetingStyle);\n  }\n\n}\n\ninterface GreetData {\n  name: string;\n}\n\nconst Greeting__qualifier = 'bex:greeting';\n\nfunction GreetingStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read();\n  const { root: { rules } } = theme;\n  const label = rules.add(\n      [{ u: [':', 'host'], $: Greeting__qualifier }, { e: 'label', $: Greeting__qualifier }],\n      settings.keepThru(greetLabelStyle),\n  );\n\n  return stypRules(\n      theme.style(InputStyle),\n      label,\n      label.rules.add(\n          { e: 'input', $: Greeting__qualifier },\n          settings.keepThru(greetFieldStyle),\n      ),\n  );\n}\n\nfunction greetLabelStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    display: 'block',\n    margin: 0,\n    padding: `${$fontSize.div(2)}`,\n  };\n}\n","import { examplesContext } from '../common';\nimport { GreetingComponent } from './greeting.component';\n\nexamplesContext.load(GreetingComponent);\n"],"names":["_context","this","GreetingOutComponent","get","Theme","style","GreetingOutStyle","content","BootstrapWindow","document","createElement","contentRoot","append","name","innerText","_this","trim","__decorate","Attribute","ProduceStyle","Render","Component","Examples__NS","AttachShadow","theme","settings","ref","ThemeSettings","read","formSettings","FormThemeSettings","rules","stypRules","add","u","$","keepThru","inStyle","readonlyInStyle","greetFieldStyle","DefaultStyle","_a","display","margin","div","whenOn","supply","node","ComponentNode","group","inGroup","afterAll","select","all","deep","first","aspects","DefaultInAspects","tillOff","consume","nameNode","inText","element","convert","InStyledElement","to","setup","InValidation","validation","by","requirePresent","InCssClasses","classes","inCssInfo","controls","set","inputFromControl","output","sync","ValueSync","o","attribute","whenOff","reason","done","clear","GreetingComponent","GreetingStyle","feature","needs","AppFeature","label","e","greetLabelStyle","InputStyle","padding","examplesContext","load"],"mappings":"2cAeA,iBAKE,WAA6BA,GAAAC,cAAAD,EA2B/B,OAvBEE,kBAAA,WACE,OAAOD,KAAKD,SAASG,IAAIC,GAAOC,MAAMC,IAIxCJ,mBAAA,WADA,WAIQK,EADWN,KAAKD,SAASG,IAAIK,GAAiBC,SAC3BC,cAAc,QAUvC,OAFAT,KAAKD,SAASW,YAAYC,OAAOL,GAE1B,WATW,MAEVM,EAQNN,EAAQO,WARFD,YAAOE,EAAKF,2BAAMG,QAEV,UAAUH,MAAU,WAnBtCI,GADCC,gCAODD,GADCE,+BAMDF,GADCG,gCAbUlB,KAFZmB,EAAU,CAAC,eAAgBC,IAC3BC,KACYrB,MAoCb,SAASI,EAAiBkB,GAExB,IAAMC,EAAWD,EAAME,IAAIC,GAAeC,OACpCC,EAAeL,EAAME,IAAII,GAAmBF,OAClCG,eAEhB,OAAOC,EACHD,EAAME,IACF,CAAEC,EAAG,CAAC,IAAK,QAASC,EAVC,oBAWrBN,EAAaO,SAASC,IAErBJ,IAAIJ,EAAaO,SAASE,IAC1BL,IAAIR,EAASW,SAASG,IAC3Bf,EAAMnB,MAAMmC,aAIFD,EACZE,GAIF,MAAO,CACLC,QAAS,QACTC,mBAAqBC,IAAI,aCtD7B,iBAEE,WAA6B5C,GAAAC,cAAAD,EAC3BA,EAAS6C,QAAO,SAAAC,GAEd,IAAMC,EAAO/C,EAASG,IAAI6C,GACpBC,EAAQC,EAAmB,CAAErC,KAAM,KAEzCsC,EAAS,CACPtC,KAAMkC,EAAKK,OAAO,QAAS,CAAEC,KAAK,EAAMC,MAAM,IAAQC,QACtDC,QAASxD,EAASG,IAAIsD,KACrBC,QAAQZ,GAAQa,SACf,SAAClB,OAASmB,iBAAqBJ,oBAEvB3C,EAAO+C,GAAYC,EAAOD,EAASE,SACpCC,QAAQP,EAASQ,EAAgBC,GAAGL,EAASE,UAC7CI,MAAMC,GAAc,SAAAC,GAAc,OAAAA,EAAWC,GAAGC,MAChDJ,MAAMK,GAAc,SAAAC,GAAW,OAAAA,EAAQvC,IAAIwC,QAIhD,OAFAxB,EAAMyB,SAASC,IAAI,OAAQ9D,GAEpBA,GAAQ+D,EAAiB5E,EAAUa,MAIhD,IAAMgE,EAAS9B,EAAKK,OAAOlD,EAAsB,CAAEoD,MAAM,IAAQC,QAAQG,QAAQZ,GAC3EgC,EAAO,IAAIC,EAAyB,IAE1CD,EAAKA,KAAKD,GAAQ,SAAAG,UAAKA,MAAAA,SAAAA,EAAGC,UAAU,WACpCH,EAAKA,KACD,KACA7B,EAAMyB,SAAS9C,QACf,SAAA8C,UAAYA,MAAAA,SAAAA,EAAUvE,IAAI,WAG9B2C,EAAOoC,SAAQ,SAAAC,GACbL,EAAKM,KAAKD,GACVlC,EAAMmC,KAAKD,GACXlC,EAAMyB,SAASW,cAUvB,OAJEC,kBAAA,WACE,OAAOrF,KAAKD,SAASG,IAAIC,GAAOC,MAAMkF,IADxCtE,GADCE,+BA3CUmE,KAXZjE,EACG,CAAC,WAAYC,GACb,CACEkE,QAAS,CACPC,MAAO,CACLvF,EACAwF,OAKGJ,MAwDb,SAASC,EAAc/D,GAErB,IAAMC,EAAWD,EAAME,IAAIC,GAAeC,OAEpC+D,eAAc1D,IAChB,CAAC,CAAEC,EAAG,CAAC,IAAK,QAASC,EAPC,gBAOyB,CAAEyD,EAAG,QAASzD,EAPvC,iBAQtBV,EAASW,SAASyD,IAGtB,OAAO7D,EACHR,EAAMnB,MAAMyF,GACZH,EACAA,EAAM5D,MAAME,IACR,CAAE2D,EAAG,QAASzD,EAfI,gBAgBlBV,EAASW,SAASG,KAK5B,SAASsD,EACLpD,GAIF,MAAO,CACLC,QAAS,QACTC,OAAQ,EACRoD,QAAS,eAAanD,IAAI,ICrG9BoD,EAAgBC,KAAKX"}