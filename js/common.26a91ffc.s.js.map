{"version":3,"file":"common.26a91ffc.s.js","sources":["../../src/common/input/input.style.ts","../../src/common/examples.ns.ts","../../src/common/theme/theme-settings.ts","../../src/common/theme/link.style.ts","../../src/common/theme/default.style.ts","../../src/common/theme/body.style.ts","../../src/common/input/form.theme-settings.ts","../../src/common/input/in-error.component.ts","../../src/common/input/input-support.feature.ts","../../src/common/layout/main.component.ts","../../src/common/layout/nav.component.ts","../../src/common/layout/container.component.ts","../../src/common/layout/layout-support.feature.ts","../../src/common/theme/body-style-support.feature.ts","../../src/common/app.feature.ts","../../src/common/index.ts"],"sourcesContent":["import { Theme } from '@wesib/generic/styp';\nimport { InputAspects__NS } from 'input-aspects';\nimport { mixStypColors, StypProperties, stypRules, StypRules } from 'style-producer';\nimport { FormThemeSettings } from './form.theme-settings';\n\nexport function InputStyle(theme: Theme): StypRules {\n\n  const formSettings = theme.ref(FormThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add({ e: 'input' }, formSettings.thru(inStyle)),\n      rules.add({ e: 'input', s: '[readonly]' }, formSettings.thru(readonlyInStyle)),\n      rules.add({ e: 'input', s: '[disabled]' }, formSettings.thru(readonlyInStyle)),\n      rules.add({ e: 'input', s: ':focus' }, formSettings.thru(focusedInStyle)),\n      rules.add(\n          {\n            e: 'input',\n            c: [\n              ['invalid', InputAspects__NS],\n              ['touched', InputAspects__NS],\n            ],\n          },\n          formSettings.thru(invalidInStyle),\n      ),\n      rules.add(\n          {\n            e: 'input',\n            c: [\n              ['missing', InputAspects__NS],\n              ['touched', InputAspects__NS],\n            ],\n          },\n          {\n            outlineStyle: 'dotted',\n          },\n      ),\n      rules.add(\n          {\n            e: 'input',\n            c: [\n              ['incomplete', InputAspects__NS],\n              ['touched', InputAspects__NS],\n            ],\n          },\n          {\n            outlineStyle: 'dotted',\n          },\n      ),\n  );\n}\n\nexport function inStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n      $marginV,\n      $marginH,\n      $paddingV,\n      $paddingH,\n      $bgColor,\n      $borderColor,\n      $borderW,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n    padding: `${$paddingV} ${$paddingH}`,\n    margin: `${$marginV} ${$marginH}`,\n    backgroundColor: $bgColor,\n    border: '0 none',\n    outline: `${$borderW} solid ${$borderColor}`,\n    boxShadow: 'inset 1px 1px 2px -2px black',\n    boxSizing: 'border-box',\n    width: '100%',\n  };\n}\n\nexport function readonlyInStyle(\n    {\n      $roBgColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $roBgColor,\n  };\n}\n\nfunction focusedInStyle(\n    {\n      $color,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outlineColor: mixStypColors($borderColor, $color, 0.5),\n  };\n}\n\nfunction invalidInStyle(\n    {\n      $color,\n      $borderW,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outline: `${$borderW.mul(2)} dashed ${mixStypColors($borderColor, $color, 0.25)}`,\n  };\n}\n","import { NamespaceDef } from 'namespace-aliaser';\n\nexport const Examples__NS = new NamespaceDef(\n    'https://wesib.github.io/examples',\n    'bex',\n    'wesib-examples',\n);\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypProperties, StypRGB } from 'style-producer';\n\nexport interface ThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $linkFontWeight: string;\n  $layoutBreakpoint: StypLength;\n}\n\nexport const ThemeSettings: RefStypRule<ThemeSettings> = RefStypRule.by(\n    { $: 'settings' },\n    {\n      $color: new StypRGB({ r: 161, g: 185, b: 142 }),\n      $bgColor: new StypRGB({ r: 40, g: 43, b: 36 }),\n      $fontFace: `'Exo 2', sans-serif`,\n      $fontSize: StypLengthPt.of(1, 'em'),\n      $lineHeight: 1.2,\n      $fontWeight: '400',\n      $linkFontWeight: '600',\n      $layoutBreakpoint: StypLength.of(576, 'px'),\n    },\n);\n\nexport function mediaStyle({ $layoutBreakpoint }: ThemeSettings): StypProperties {\n  return {\n    '@media:sm': `(max-width: ${$layoutBreakpoint})`,\n  };\n}\n","import { Theme } from '@wesib/generic/styp';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { ThemeSettings } from './theme-settings';\n\nexport function LinkStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add({ e: 'a' }, settings.thru(linkStyle)),\n      rules.add({ e: 'a', s: ':visited' }, settings.thru(linkStyle)),\n      rules.add({ e: 'a', s: ':hover' }, { textDecoration: 'underline' }),\n      rules.add({ e: 'a', s: ':active' }, { textDecoration: 'underline dotted' }),\n      rules.add({ e: 'a', s: ':focus' }, { textDecoration: 'underline dotted' }),\n  );\n}\n\nfunction linkStyle(\n    {\n      $color,\n      $linkFontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    fontWeight: $linkFontWeight,\n    textDecoration: 'none',\n  };\n}\n","import { Theme } from '@wesib/generic/styp';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { LinkStyle } from './link.style';\nimport { mediaStyle, ThemeSettings } from './theme-settings';\n\nexport function DefaultStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n\n  return stypRules(\n      theme.root\n          .add(settings.thru(defaultStyle))\n          .add(settings.thru(mediaStyle)),\n      theme.style(LinkStyle),\n  );\n}\n\nfunction defaultStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n  };\n}\n","import { Theme } from '@wesib/generic/styp';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { DefaultStyle } from './default.style';\nimport { ThemeSettings } from './theme-settings';\n\nexport function BodyStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add(\n          { e: 'html' },\n          {\n            height: '100%',\n            margin: 0,\n            padding: 0,\n          },\n      ),\n      rules.add(\n          { e: 'body' },\n          settings.thru(bodyStyle),\n      ),\n      theme.style(DefaultStyle),\n  );\n}\n\nfunction bodyStyle(\n    {\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $bgColor,\n    height: '100%',\n    margin: 0,\n    padding: 0,\n  };\n}\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypMapper, StypRuleRefs } from 'style-producer';\nimport { ThemeSettings } from '../theme';\n\nexport interface FormThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $roBgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $errorFontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $borderColor: StypColor;\n  $marginV: StypLengthPt;\n  $marginH: StypLengthPt;\n  $paddingV: StypLengthPt;\n  $paddingH: StypLengthPt;\n  $borderW: StypLength;\n}\n\nexport const FormThemeSettings: RefStypRule<FormThemeSettings> = RefStypRule.by(\n    { $: 'settings:form' },\n    root => StypRuleRefs.by<{ global: ThemeSettings }>(\n        {\n          global: ThemeSettings,\n        },\n        root,\n    ).read.keep.thru(formMappings),\n);\n\nfunction formMappings(\n    {\n      global: {\n        $color,\n        $bgColor,\n        $fontFace,\n        $fontSize,\n        $lineHeight,\n        $fontWeight,\n      },\n    }: {\n      global: ThemeSettings;\n    },\n): StypMapper.Mappings<FormThemeSettings> {\n  return {\n    $color,\n    $bgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 })),\n    $roBgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.94 })),\n    $fontFace,\n    $fontSize,\n    $errorFontSize: $fontSize.mul(0.8),\n    $lineHeight,\n    $fontWeight,\n    $borderColor: $bgColor,\n    $marginV: $fontSize.div(4),\n    $marginH: $fontSize.div(4),\n    $paddingV: $fontSize.div(2),\n    $paddingH: $fontSize,\n    $borderW: StypLength.of(1, 'px'),\n  };\n}\n","import { HierarchyContext } from '@wesib/generic';\nimport { DefaultInAspects, InputFromControl } from '@wesib/generic/input';\nimport { ProduceStyle, Theme } from '@wesib/generic/styp';\nimport { AttributeChanged, Component, ComponentContext } from '@wesib/wesib';\nimport { afterAll, eventSupply, trackValue } from 'fun-events';\nimport { InCssClasses, inCssError, inCssInfo, InputAspects__NS, InStyledElement } from 'input-aspects';\nimport { QualifiedName } from 'namespace-aliaser';\nimport { StypLengthPt, stypRules, StypRules } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { FormThemeSettings } from './form.theme-settings';\n\n@Component(['in-error', Examples__NS])\nexport class InErrorComponent {\n\n  private readonly _codes = trackValue<string[]>();\n\n  constructor(private readonly _context: ComponentContext) {\n    afterAll({\n      control: this._context.get(HierarchyContext).get(InputFromControl),\n      aspects: this._context.get(DefaultInAspects),\n      when: this._codes,\n    }).consume(\n        ({\n          control: [{ control }],\n          aspects: [aspects],\n          when: [when],\n        }) => {\n          if (!control) {\n            return;\n          }\n\n          const supply = eventSupply();\n\n          control.convert(\n              InStyledElement.to(_context.element),\n              aspects,\n          ).setup(\n              InCssClasses,\n              cssClasses => {\n                cssClasses.add(inCssInfo()).needs(supply);\n                cssClasses.add(inCssError({ when })).needs(supply);\n              },\n          );\n\n          return supply;\n        },\n    );\n  }\n\n  @AttributeChanged('code')\n  setCode(code: string): void {\n    this._codes.it = code ? code.trim().split(/\\s+/) : [];\n  }\n\n  @ProduceStyle()\n  style(): StypRules.Source {\n    return this._context.get(Theme).style(InErrorStyle);\n  }\n\n}\n\nconst InError__qualifier = 'bex:in-error';\nconst hasError__cssClass: QualifiedName = ['has-error', InputAspects__NS];\n\nfunction InErrorStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(FormThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n  const borderW = StypLengthPt.of(4, 'px');\n\n  return stypRules(\n      rules.add(\n          { u: [':', 'host'], $: InError__qualifier },\n          settings.thru(({ $color, $errorFontSize }) => ({\n            display: 'none',\n            fontSize: $errorFontSize,\n            padding: $errorFontSize.div(2),\n            borderLeft: `${borderW} dotted ${$color}`,\n            paddingLeft: $errorFontSize.sub(borderW),\n          })),\n      ),\n      rules.add(\n          {\n            u: [\n              ':',\n              'host',\n              {\n                c: [hasError__cssClass, ['touched', InputAspects__NS]],\n                u: [':', 'not', { c: ['has-focus', InputAspects__NS] }],\n              },\n            ],\n            $: InError__qualifier,\n          },\n          {\n            display: 'block',\n          },\n      ),\n      rules.add(\n          {\n            u: [\n              ':',\n              'host',\n              {\n                c: hasError__cssClass,\n                u: [\n                  [':', 'not', { u: ['code', '~=', 'missing'] }],\n                  [':', 'not', { u: ['code', '~=', 'incomplete'] }],\n                ],\n              },\n            ],\n            $: InError__qualifier,\n          },\n          {\n            display: 'block',\n          },\n      ),\n  );\n}\n","import { ComponentTreeSupport } from '@wesib/generic';\nimport { ThemeSupport } from '@wesib/generic/styp';\nimport { Feature } from '@wesib/wesib';\nimport { InErrorComponent } from './in-error.component';\n\n@Feature({\n  needs: [\n    ComponentTreeSupport,\n    InErrorComponent,\n    ThemeSupport,\n  ],\n})\nexport class InputSupport {\n}\n","import { importNodeContent, Navigation, pageLoadParam, PageLoadResponse } from '@wesib/generic';\nimport { BootstrapWindow, Component, ComponentContext, ElementRender, Render } from '@wesib/wesib';\nimport { trackValue } from 'fun-events';\nimport { StypProperties } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { ThemeSettings } from '../theme';\n\n@Component(['main', Examples__NS])\nexport class MainComponent {\n\n  private readonly _response = trackValue<PageLoadResponse>();\n\n  constructor(private readonly _context: ComponentContext) {\n    this._response.on((n, o) => _context.updateState('response', n, o));\n\n    const navigation = _context.get(Navigation);\n\n    _context.whenOn(supply => {\n      navigation.read.once(page => {\n        page.put(\n            pageLoadParam,\n            {\n              fragment: { tag: _context.element.tagName },\n              receiver: {\n                supply,\n                receive: (_ctx, response) => this._response.it = response,\n              },\n            },\n        );\n      });\n    });\n  }\n\n  @Render()\n  render(): ElementRender {\n\n    const document = this._context.get(BootstrapWindow).document;\n    const range = document.createRange();\n\n    range.selectNodeContents(this._context.element);\n\n    return () => {\n\n      const response = this._response.it;\n\n      if (response) {\n        range.deleteContents();\n        if (response.ok) {\n\n          const target = document.createDocumentFragment();\n          const { fragment } = response;\n\n          if (fragment) {\n            importNodeContent(fragment, target);\n            range.insertNode(target);\n          }\n        } else if (response.ok == null) {\n          range.insertNode(document.createTextNode('Loading...'));\n        } else {\n          range.insertNode(document.createTextNode(`Error. ${response.error}`));\n        }\n      }\n    };\n  }\n\n}\n\nexport function mainStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    flex: '1 1 auto',\n    padding: 0,\n    margin: `0 0 0 ${$fontSize.div(2)}`,\n  };\n}\n","import { ComponentNode, ElementNode, Navigation } from '@wesib/generic';\nimport { ProduceStyle, Theme } from '@wesib/generic/styp';\nimport { Component, ComponentContext, DefaultNamespaceAliaser } from '@wesib/wesib';\nimport { afterAll, EventSupply } from 'fun-events';\nimport { DomEventDispatcher } from 'fun-events/dom';\nimport { css__naming, QualifiedName } from 'namespace-aliaser';\nimport { StypColor, StypLengthPt, StypProperties, stypRules, StypRules } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { ThemeSettings } from '../theme';\n\nconst activeNavLinkClass: QualifiedName = ['nav-active', Examples__NS];\n\n@Component(['nav', Examples__NS])\nexport class NavComponent {\n\n  private readonly _theme: Theme;\n\n  constructor(context: ComponentContext) {\n    this._theme = context.get(Theme);\n\n    const nsAlias = context.get(DefaultNamespaceAliaser);\n    const activeClass = css__naming.name(activeNavLinkClass, nsAlias);\n    const node = context.get(ComponentNode);\n    const navigation = context.get(Navigation);\n\n    context.whenOn(supply => {\n\n      const navLinks = node.select('a', { all: true });\n      const linkSupplies = new Map<ElementNode, EventSupply>();\n\n      navLinks.track.tillOff(supply)((added, removed) => {\n        removed.forEach(link => {\n\n          const linkSupply = linkSupplies.get(link);\n\n          if (linkSupply) {\n            linkSupplies.delete(link);\n            linkSupply.off();\n          }\n        });\n        added.forEach(\n            link => {\n\n              const element: Element = link.element;\n              const linkSupply = new DomEventDispatcher(element)\n                  .on('click')\n                  .instead(() => {\n                    if (!element.classList.contains(activeClass)) {\n                      navigation.open(element.getAttribute('href') || '');\n                    }\n                  })\n                  .needs(supply);\n\n              linkSupplies.set(link, linkSupply);\n            },\n        );\n      });\n      afterAll({\n        links: navLinks,\n        page: navigation,\n      })({\n        supply,\n        receive(\n            _ctx,\n            {\n              links: [links],\n              page: [page],\n            },\n        ) {\n\n          const pageDir = dirName(page.url);\n          let activeElement: Element | undefined;\n          let activeDir = '';\n\n          links.forEach(link => {\n\n            const element: HTMLAnchorElement = link.element;\n            const linkDir = dirName(new URL(element.href));\n\n            element.classList.remove(activeClass);\n\n            if (pageDir.startsWith(linkDir) && activeDir.length < linkDir.length) {\n              activeElement = element;\n              activeDir = linkDir;\n            }\n          });\n\n          if (activeElement) {\n            activeElement.classList.add(activeClass);\n          }\n        },\n      });\n    });\n  }\n\n  @ProduceStyle()\n  style(): StypRules.Source {\n    return this._theme.style(NavStyle);\n  }\n\n}\n\nfunction dirName(url: URL): string {\n\n  const path = url.pathname;\n\n  if (path.endsWith('/')) {\n    return path;\n  }\n\n  return path + '/';\n}\n\nconst Nav__qualifier = 'bex:nav';\n\nfunction NavStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add(\n          { u: [':', 'host'], $: Nav__qualifier },\n          settings.thru(navStyle),\n      ),\n      rules.add(\n          { u: [':', 'host'], $: Nav__qualifier },\n          settings.thru(sts => ({\n            flex: '0 1 200px',\n            height: '100%',\n            background: navLinkBackground(sts),\n          })),\n      ),\n      rules.add(\n          { u: [':', 'host'], $: [Nav__qualifier, '@media:sm'] },\n          {\n            flex: '0 1 100%',\n          },\n      ),\n      rules.add(\n          [{ u: [':', 'host'], $: Nav__qualifier }, { e: 'a', $: Nav__qualifier }],\n          settings.thru(navLinkStyle),\n      ),\n      rules.add(\n          [{ u: [':', 'host'], $: Nav__qualifier }, { e: 'a', c: activeNavLinkClass, $: Nav__qualifier }],\n          settings.thru(activeNavLinkStyle),\n      ),\n  );\n}\n\nfunction navStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    padding: 0,\n    margin: `0 ${$fontSize.div(2)} 0 0`,\n  };\n}\n\nexport function navLinkBackground({ $bgColor }: ThemeSettings): StypColor {\n  return $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 }));\n}\n\nfunction navLinkStyle(\n    settings: ThemeSettings,\n): StypProperties {\n\n  const { $fontSize } = settings;\n\n  return {\n    display: 'block',\n    margin: 0,\n    padding: `${$fontSize.div(2)} ${$fontSize}`,\n    border: 0,\n    outline: 0,\n    background: navLinkBackground(settings),\n  };\n}\n\nfunction activeNavLinkStyle(\n    {\n      $fontSize,\n      $color,\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n\n  const borderW = StypLengthPt.of(4, 'px');\n\n  return {\n    background: $bgColor,\n    borderLeft: `${borderW} solid ${$color}`,\n    paddingLeft: $fontSize.sub(borderW),\n  };\n}\n","import { ProduceStyle, Theme } from '@wesib/generic/styp';\nimport { BootstrapContext, Component, ComponentContext } from '@wesib/wesib';\nimport { QualifiedName } from 'namespace-aliaser';\nimport { stypRules, StypRules } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { mediaStyle, ThemeSettings } from '../theme';\nimport { MainComponent, mainStyle } from './main.component';\nimport { NavComponent } from './nav.component';\n\n@Component({\n  name: ['container', Examples__NS],\n  feature: {\n    needs: [\n      MainComponent,\n      NavComponent,\n    ],\n  },\n})\nexport class ContainerComponent {\n\n  constructor(private readonly _context: ComponentContext) {\n  }\n\n  @ProduceStyle()\n  async style(): Promise<StypRules> {\n\n    const { elementDef: { name: mainName } } = await this._context.get(BootstrapContext).whenDefined(MainComponent);\n\n    return this._context.get(Theme).style(ContainerStyle(mainName!));\n  }\n\n}\n\nconst Container__qualifier = 'bex:container';\n\nfunction ContainerStyle(mainName: QualifiedName): (theme: Theme) => StypRules {\n  return theme => {\n\n    const settings = theme.ref(ThemeSettings).read.keep;\n    const { root: { rules } } = theme;\n\n    return stypRules(\n        rules.add(\n            { u: [':', 'host'], $: Container__qualifier },\n            {\n              height: '100%',\n              display: 'flex',\n              flexFlow: 'row wrap',\n              alignItems: 'stretch',\n              alignContent: 'flex-start',\n            },\n        ).add(\n            settings.thru(mediaStyle),\n        ),\n        rules.add(\n            { u: [':', 'host'], $: [Container__qualifier, '@media:sm'] },\n            {\n              height: 'auto',\n            },\n        ),\n        rules.add(\n            [{ u: [':', 'host'], $: Container__qualifier }, { e: mainName, $: Container__qualifier }],\n            settings.thru(mainStyle),\n        ),\n    );\n  };\n}\n","import { ComponentTreeSupport, PageLoadSupport } from '@wesib/generic';\nimport { StyleProducerSupport, ThemeSupport } from '@wesib/generic/styp';\nimport { Feature } from '@wesib/wesib';\nimport { ContainerComponent } from './container.component';\n\n@Feature({\n  needs: [\n    ContainerComponent,\n    ComponentTreeSupport,\n    PageLoadSupport,\n    StyleProducerSupport,\n    ThemeSupport,\n  ],\n})\nexport class LayoutSupportFeature {\n}\n","import { Theme, ThemeSupport } from '@wesib/generic/styp';\nimport { Feature } from '@wesib/wesib';\nimport { produceBasicStyle } from 'style-producer';\nimport { BodyStyle } from './body.style';\n\n@Feature({\n  needs: ThemeSupport,\n  init(context) {\n    context.whenReady(() => {\n      produceBasicStyle(context.get(Theme).style(BodyStyle));\n    });\n  },\n})\nexport class BodyStyleSupport {}\n\n","import { Feature } from '@wesib/wesib';\nimport { InputSupport } from './input/input-support.feature';\nimport { LayoutSupportFeature } from './layout';\nimport { BodyStyleSupport } from './theme/body-style-support.feature';\n\n@Feature({\n  needs: [\n    BodyStyleSupport,\n    InputSupport,\n    LayoutSupportFeature,\n  ],\n})\nexport class AppFeature {}\n","import { bootstrapComponents } from '@wesib/wesib';\nimport { AppFeature } from './app.feature';\n\nexport * from './app.feature';\nexport * from './examples.ns';\nexport * from './input';\nexport * from './theme';\n\nexport const examplesContext = bootstrapComponents(AppFeature);\n"],"names":["theme","formSettings","ref","FormThemeSettings","read","keep","rules","stypRules","add","e","thru","inStyle","s","readonlyInStyle","focusedInStyle","c","InputAspects__NS","invalidInStyle","outlineStyle","Examples__NS","NamespaceDef","ThemeSettings","RefStypRule","by","$","$color","StypRGB","r","g","b","$bgColor","$fontFace","$fontSize","StypLengthPt","of","$lineHeight","$fontWeight","$linkFontWeight","$layoutBreakpoint","StypLength","mediaStyle","_a","@media:sm","LinkStyle","settings","linkStyle","textDecoration","color","fontWeight","DefaultStyle","root","defaultStyle","style","font","BodyStyle","height","margin","padding","bodyStyle","backgroundColor","StypRuleRefs","global","formMappings","_b","hsl","set","l","$roBgColor","$errorFontSize","mul","$borderColor","$marginV","div","$marginH","$paddingV","$paddingH","$borderW","_context","this","trackValue","afterAll","control","get","HierarchyContext","InputFromControl","aspects","DefaultInAspects","when","_codes","consume","supply","eventSupply","convert","InStyledElement","to","element","setup","InCssClasses","cssClasses","inCssInfo","needs","inCssError","InErrorComponent","code","it","trim","split","Theme","InErrorStyle","__decorate","AttributeChanged","ProduceStyle","Component","hasError__cssClass","borderW","u","display","fontSize","borderLeft","paddingLeft","sub","InputSupport","Feature","ComponentTreeSupport","ThemeSupport","_response","on","n","o","updateState","navigation","Navigation","whenOn","once","page","put","pageLoadParam","fragment","tag","tagName","receiver","receive","_ctx","response","_this","MainComponent","document","BootstrapWindow","range","createRange","selectNodeContents","deleteContents","ok","target","createDocumentFragment","importNodeContent","insertNode","createTextNode","error","Render","mainStyle","flex","activeNavLinkClass","context","_theme","nsAlias","DefaultNamespaceAliaser","activeClass","css__naming","name","node","ComponentNode","navLinks","select","all","linkSupplies","Map","track","tillOff","added","removed","forEach","link","linkSupply","delete","off","DomEventDispatcher","instead","classList","contains","open","getAttribute","links","activeElement","pageDir","dirName","url","activeDir","linkDir","URL","href","remove","startsWith","length","NavComponent","NavStyle","path","pathname","endsWith","navStyle","sts","background","navLinkBackground","navLinkStyle","activeNavLinkStyle","border","outline","ContainerComponent","BootstrapContext","whenDefined","mainName","ContainerStyle","feature","flexFlow","alignItems","alignContent","LayoutSupportFeature","PageLoadSupport","StyleProducerSupport","BodyStyleSupport","init","whenReady","produceBasicStyle","AppFeature","boxShadow","boxSizing","width","outlineColor","mixStypColors","bootstrapComponents"],"mappings":"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"}