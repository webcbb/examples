{"version":3,"file":"common.38df61bd.es5.js","sources":["../../src/common/theme/input.style.ts","../../src/common/bex.ns.ts","../../src/common/theme/theme-settings.ts","../../src/common/theme/link.style.ts","../../src/common/theme/default.style.ts","../../src/common/theme/body.style.ts","../../src/common/theme/form.theme-settings.ts","../../src/common/layout/main.component.ts","../../src/common/layout/nav.component.ts","../../src/common/layout/container.component.ts","../../src/common/layout/layout-support.feature.ts","../../src/common/theme/body-style-support.feature.ts","../../src/common/app.feature.ts","../../src/common/index.ts"],"sourcesContent":["import { Theme } from '@wesib/generic';\nimport { mixStypColors, StypProperties, StypRules } from 'style-producer';\nimport { FormThemeSettings } from './form.theme-settings';\n\nexport function InputStyle(theme: Theme): StypRules {\n\n  const formSettings = theme.ref(FormThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  rules.add({ e: 'input' }, formSettings.thru(inStyle));\n  rules.add({ e: 'input', s: '[readonly]' }, formSettings.thru(readonlyInStyle));\n  rules.add({ e: 'input', s: '[disabled]' }, formSettings.thru(readonlyInStyle));\n  rules.add({ e: 'input', s: ':focus' }, formSettings.thru(focusedInStyle));\n  rules.add({ e: 'input', c: ['inap-invalid', 'inap-touched'] }, formSettings.thru(invalidInStyle));\n  rules.add({ e: 'input', c: ['inap-missing', 'inap-touched'] }, { outlineStyle: 'dotted' });\n  rules.add({ e: 'input', c: ['inap-incomplete', 'inap-touched'] }, { outlineStyle: 'dotted' });\n\n  return rules.grab({ e: 'input' });\n}\n\nexport function inStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n      $marginV,\n      $marginH,\n      $paddingV,\n      $paddingH,\n      $bgColor,\n      $borderColor,\n      $borderW,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n    padding: `${$paddingV} ${$paddingH}`,\n    margin: `${$marginV} ${$marginH}`,\n    backgroundColor: $bgColor,\n    border: '0 none',\n    outline: `${$borderW} solid ${$borderColor}`,\n    boxShadow: 'inset 1px 1px 2px -2px black',\n    boxSizing: 'border-box',\n    width: '100%',\n  };\n}\n\nexport function readonlyInStyle(\n    {\n      $roBgColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $roBgColor,\n  };\n}\n\nfunction focusedInStyle(\n    {\n      $color,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outlineColor: mixStypColors($borderColor, $color, 0.5),\n  };\n}\n\nfunction invalidInStyle(\n    {\n      $color,\n      $borderW,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outline: `${$borderW.mul(2)} dashed ${mixStypColors($borderColor, $color, 0.25)}`,\n  };\n}\n","import { NamespaceDef } from 'namespace-aliaser';\n\nexport const BEX__NS = new NamespaceDef(\n    'https://wesib.github.io/examples',\n    'bex',\n    'wesib-examples',\n);\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypProperties, StypRGB } from 'style-producer';\n\nexport interface ThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $linkFontWeight: string;\n  $layoutBreakpoint: StypLength;\n}\n\nexport const ThemeSettings: RefStypRule<ThemeSettings> = RefStypRule.by(\n    { $: 'settings' },\n    {\n      $color: new StypRGB({ r: 161, g: 185, b: 142 }),\n      $bgColor: new StypRGB({ r: 40, g: 43, b: 36 }),\n      $fontFace: `'Exo 2', sans-serif`,\n      $fontSize: StypLengthPt.of(1, 'em'),\n      $lineHeight: 1.2,\n      $fontWeight: '400',\n      $linkFontWeight: '600',\n      $layoutBreakpoint: StypLength.of(576, 'px'),\n    });\n\nexport function mediaStyle({ $layoutBreakpoint }: ThemeSettings): StypProperties {\n  return {\n    '@media:sm': `(max-width: ${$layoutBreakpoint})`,\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, StypRules } from 'style-producer';\nimport { ThemeSettings } from './theme-settings';\n\nexport function LinkStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const selector = { e: 'a' };\n\n  theme.root.rules.add(selector, settings.thru(linkStyle));\n  theme.root.rules.add({ e: 'a', s: ':visited' }, settings.thru(linkStyle));\n  theme.root.rules.add({ e: 'a', s: ':hover' }, { textDecoration: 'underline' });\n  theme.root.rules.add({ e: 'a', s: ':active' }, { textDecoration: 'underline dotted' });\n  theme.root.rules.add({ e: 'a', s: ':focus' }, { textDecoration: 'underline dotted' });\n\n  return theme.root.rules.grab(selector);\n}\n\nfunction linkStyle(\n    {\n      $color,\n      $linkFontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    fontWeight: $linkFontWeight,\n    textDecoration: 'none',\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { LinkStyle } from './link.style';\nimport { mediaStyle, ThemeSettings } from './theme-settings';\n\nexport function DefaultStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n\n  theme.root.add(settings.thru(defaultStyle));\n  theme.root.add(settings.thru(mediaStyle));\n\n  return stypRules(\n      theme.root.rules.self,\n      theme.style(LinkStyle),\n  );\n}\n\nfunction defaultStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { DefaultStyle } from './default.style';\nimport { ThemeSettings } from './theme-settings';\n\nexport function BodyStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const bodySelector = { e: 'body' };\n  const htmlSelector = { e: 'html' };\n\n  theme.root.rules.add(bodySelector, settings.thru(bodyStyle));\n  theme.root.rules.add(\n      htmlSelector,\n      {\n        height: '100%',\n        margin: 0,\n        padding: 0,\n      },\n  );\n\n  return stypRules(\n      theme.root.rules.grab(htmlSelector),\n      theme.root.rules.grab(bodySelector),\n      theme.style(DefaultStyle),\n  );\n}\n\nfunction bodyStyle(\n    {\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $bgColor,\n    height: '100%',\n    margin: 0,\n    padding: 0,\n  };\n}\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypMapper, StypRuleRefs } from 'style-producer';\nimport { ThemeSettings } from './theme-settings';\n\nexport interface FormThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $roBgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $borderColor: StypColor;\n  $marginV: StypLengthPt;\n  $marginH: StypLengthPt;\n  $paddingV: StypLengthPt;\n  $paddingH: StypLengthPt;\n  $borderW: StypLength;\n}\n\nexport const FormThemeSettings: RefStypRule<FormThemeSettings> = RefStypRule.by(\n    { $: 'settings:form' },\n    root => StypRuleRefs.by<{ global: ThemeSettings }>(\n        {\n          global: ThemeSettings,\n        },\n        root,\n    ).read.keep.thru(formMappings));\n\nfunction formMappings(\n    {\n      global: {\n        $color,\n        $bgColor,\n        $fontFace,\n        $fontSize,\n        $lineHeight,\n        $fontWeight,\n      },\n    }: {\n      global: ThemeSettings,\n    },\n): StypMapper.Mappings<FormThemeSettings> {\n  return {\n    $color,\n    $bgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 })),\n    $roBgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.94 })),\n    $fontFace,\n    $fontSize,\n    $lineHeight,\n    $fontWeight,\n    $borderColor: $bgColor,\n    $marginV: $fontSize.div(4),\n    $marginH: $fontSize.div(4),\n    $paddingV: $fontSize.div(2),\n    $paddingH: $fontSize,\n    $borderW: StypLength.of(1, 'px'),\n  };\n}\n","import { importNodeContent, Navigation, pageLoadParam, ProduceStyle, Theme } from '@wesib/generic';\nimport { BootstrapWindow, Component, ComponentContext } from '@wesib/wesib';\nimport { StypProperties, stypRoot } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { ThemeSettings } from '../theme';\n\n@Component({\n  name: ['main', BEX__NS],\n})\nexport class MainComponent {\n\n  private readonly _theme: Theme;\n\n  constructor(context: ComponentContext) {\n    this._theme = context.get(Theme);\n\n    const document = context.get(BootstrapWindow).document;\n    const navigation = context.get(Navigation);\n\n    context.whenOn(supply => {\n\n      const element: Element = context.element;\n      const range = document.createRange();\n\n      supply.whenOff(() => range.deleteContents());\n      range.selectNodeContents(element);\n\n      navigation.read.once(page => {\n        page.put(\n            pageLoadParam,\n            {\n              fragment: { tag: element.tagName },\n              receiver: {\n                supply,\n                receive(_ctx, response) {\n                  if (response.ok) {\n                    range.deleteContents();\n\n                    const target = document.createDocumentFragment();\n                    const { fragment } = response;\n\n                    if (fragment) {\n                      importNodeContent(fragment, target);\n                      range.insertNode(target);\n                    }\n                  } else if (response.ok === false) {\n                    range.deleteContents();\n                    range.insertNode(document.createTextNode(`Error. ${response.error}`));\n                  } else {\n                    range.deleteContents();\n                    range.insertNode(document.createTextNode('Loading...'));\n                  }\n                },\n              },\n            },\n        );\n      });\n    });\n  }\n\n  @ProduceStyle()\n  style() {\n\n    const settings = this._theme.ref(ThemeSettings).read.keep;\n    const root = stypRoot(settings.thru(bexBodyStyle));\n\n    return root.rules;\n  }\n\n}\n\nfunction bexBodyStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    padding: 0,\n    margin: `0 0 0 ${$fontSize.div(2)}`,\n  };\n}\n","import { ComponentNode, Navigation, ProduceStyle, Theme } from '@wesib/generic';\nimport { Component, ComponentContext, DefaultNamespaceAliaser } from '@wesib/wesib';\nimport { afterAll, DomEventDispatcher } from 'fun-events';\nimport { css__naming, QualifiedName } from 'namespace-aliaser';\nimport { StypColor, StypLengthPt, StypProperties, stypRoot } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { ThemeSettings } from '../theme';\n\nconst activeNavLinkClass: QualifiedName = ['nav-active', BEX__NS];\n\n@Component({\n  name: ['nav', BEX__NS],\n})\nexport class NavComponent {\n\n  private readonly _theme: Theme;\n\n  constructor(context: ComponentContext) {\n    this._theme = context.get(Theme);\n\n    const nsAlias = context.get(DefaultNamespaceAliaser);\n    const activeClass = css__naming.name(activeNavLinkClass, nsAlias);\n    const node = context.get(ComponentNode);\n    const navigation = context.get(Navigation);\n\n    context.whenOn(supply => {\n\n      const navLinks = node.select('a', { all: true });\n\n      navLinks.track({\n        supply,\n        receive(_, links) {\n          links.forEach(\n              link => {\n\n                const element: Element = link.element;\n\n                new DomEventDispatcher(element)\n                    .on('click')\n                    .instead(() => {\n                      if (!element.classList.contains(activeClass)) {\n                        navigation.open(element.getAttribute('href') || '');\n                      }\n                    })\n                    .needs(supply);\n              },\n          );\n        },\n      });\n      afterAll({\n        links: navLinks,\n        page: navigation,\n      })({\n        supply,\n        receive(\n            _ctx,\n            {\n              links: [links],\n              page: [page],\n            },\n        ) {\n\n          const pageDir = dirName(page.url);\n          let activeElement: Element | undefined;\n          let activeDir = '';\n\n          links.forEach(link => {\n\n            const element: HTMLAnchorElement = link.element;\n            const linkDir = dirName(new URL(element.href));\n\n            element.classList.remove(activeClass);\n\n            if (pageDir.startsWith(linkDir) && activeDir.length < linkDir.length) {\n              activeElement = element;\n              activeDir = linkDir;\n            }\n          });\n\n          if (activeElement) {\n            activeElement.classList.add(activeClass);\n          }\n        },\n      });\n    });\n  }\n\n  @ProduceStyle()\n  style() {\n\n    const settings = this._theme.ref(ThemeSettings).read.keep;\n    const root = stypRoot(settings.thru(navStyle));\n\n    root.rules.add({ e: 'a' }, settings.thru(navLinkStyle));\n    root.rules.add({ e: 'a', c: activeNavLinkClass }, settings.thru(activeNavLinkStyle));\n\n    return root.rules;\n  }\n\n}\n\nfunction dirName(url: URL): string {\n\n  const path = url.pathname;\n\n  if (path.endsWith('/')) {\n    return path;\n  }\n\n  return path + '/';\n}\n\nfunction navStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    padding: 0,\n    margin: `0 ${$fontSize.div(2)} 0 0`,\n  };\n}\n\nexport function navLinkBackground({ $bgColor }: ThemeSettings): StypColor {\n  return $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 }));\n}\n\nfunction navLinkStyle(\n    settings: ThemeSettings,\n): StypProperties {\n\n  const { $fontSize } = settings;\n\n  return {\n    display: 'block',\n    margin: 0,\n    padding: `${$fontSize.div(2)} ${$fontSize}`,\n    border: 0,\n    outline: 0,\n    background: navLinkBackground(settings),\n  };\n}\n\nfunction activeNavLinkStyle(\n    {\n      $fontSize,\n      $color,\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n\n  const borderW = StypLengthPt.of(4, 'px');\n\n  return {\n    background: $bgColor,\n    borderLeft: `${borderW} solid ${$color}`,\n    paddingLeft: $fontSize.sub(borderW),\n  };\n}\n","import { ProduceStyle, Theme } from '@wesib/generic';\nimport { BootstrapContext, Component, ComponentContext } from '@wesib/wesib';\nimport { stypRoot, StypRules } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { mediaStyle, ThemeSettings } from '../theme';\nimport { MainComponent } from './main.component';\nimport { NavComponent, navLinkBackground } from './nav.component';\n\n@Component({\n  name: ['container', BEX__NS],\n  feature: {\n    needs: [\n      MainComponent,\n      NavComponent,\n    ],\n  },\n})\nexport class ContainerComponent {\n\n  constructor(private readonly _context: ComponentContext) {\n  }\n\n  @ProduceStyle()\n  async style(): Promise<StypRules> {\n\n    const bsContext = this._context.get(BootstrapContext);\n    const { elementDef: { name: navName } } = await bsContext.whenDefined(NavComponent);\n    const { elementDef: { name: mainName } } = await bsContext.whenDefined(MainComponent);\n    const theme = this._context.get(Theme);\n    const settings = theme.ref(ThemeSettings).read.keep;\n\n    const { rules } = stypRoot({\n      height: '100%',\n      display: 'flex',\n      flexFlow: 'row wrap',\n      alignItems: 'stretch',\n      alignContent: 'flex-start',\n    }).add(\n        settings.thru(mediaStyle),\n    );\n    rules.add(\n        { s: ' ', $: '@media:sm' },\n        {\n          height: 'auto',\n        },\n    );\n    rules.add(\n        { e: navName },\n        settings.thru(sts => ({\n          flex: '0 1 200px',\n          height: '100%',\n          background: navLinkBackground(sts),\n        })),\n    );\n    rules.add(\n        { e: navName, $: '@media:sm' },\n        {\n          flex: '0 1 100%',\n        },\n    );\n    rules.add(\n        { e: mainName },\n        settings.thru(({ $fontSize }) => ({\n          flex: '1 1 auto',\n          margin: $fontSize,\n        })),\n    );\n\n    return rules;\n  }\n\n}\n","import { ComponentTreeSupport, PageLoadSupport, StyleProducerSupport, ThemeSupport } from '@wesib/generic';\nimport { Feature, RenderSupport } from '@wesib/wesib';\nimport { ContainerComponent } from './container.component';\n\n@Feature({\n  needs: [\n    ContainerComponent,\n    ComponentTreeSupport,\n    PageLoadSupport,\n    RenderSupport,\n    StyleProducerSupport,\n    ThemeSupport,\n  ],\n})\nexport class LayoutSupportFeature {\n}\n","import { Theme, ThemeSupport } from '@wesib/generic';\nimport { BootstrapContext, Feature } from '@wesib/wesib';\nimport { produceBasicStyle } from 'style-producer';\nimport { BodyStyle } from './body.style';\n\n@Feature({\n  needs: ThemeSupport,\n  init: addBodyStyle,\n})\nexport class BodyStyleSupport {}\n\nfunction addBodyStyle(context: BootstrapContext) {\n  context.whenReady(() => {\n    produceBasicStyle(context.get(Theme).style(BodyStyle));\n  });\n}\n","import { Feature } from '@wesib/wesib';\nimport { LayoutSupportFeature } from './layout';\nimport { BodyStyleSupport } from './theme/body-style-support.feature';\n\n@Feature({\n  needs: [\n    BodyStyleSupport,\n    LayoutSupportFeature,\n  ],\n})\nexport class AppFeature {}\n","import { bootstrapComponents } from '@wesib/wesib';\nimport { AppFeature } from './app.feature';\n\nexport * from './app.feature';\nexport * from './bex.ns';\nexport * from './theme';\n\nexport const examplesContext = bootstrapComponents(AppFeature);\n"],"names":["theme","formSettings","ref","FormThemeSettings","read","keep","rules","add","e","thru","inStyle","s","readonlyInStyle","focusedInStyle","c","invalidInStyle","outlineStyle","grab","BEX__NS","NamespaceDef","ThemeSettings","RefStypRule","by","$","$color","StypRGB","r","g","b","$bgColor","$fontFace","$fontSize","StypLengthPt","of","$lineHeight","$fontWeight","$linkFontWeight","$layoutBreakpoint","StypLength","mediaStyle","_a","@media:sm","LinkStyle","settings","selector","root","linkStyle","textDecoration","color","fontWeight","DefaultStyle","defaultStyle","stypRules","self","style","font","BodyStyle","bodySelector","htmlSelector","bodyStyle","height","margin","padding","backgroundColor","StypRuleRefs","global","formMappings","_b","hsl","set","l","$roBgColor","$borderColor","$marginV","div","$marginH","$paddingV","$paddingH","$borderW","border","outline","boxShadow","boxSizing","width","outlineColor","mixStypColors","mul","MainComponent","this","_theme","stypRoot","bexBodyStyle","__decorate","ProduceStyle","Component","name","context","get","Theme","document","BootstrapWindow","navigation","Navigation","whenOn","supply","element","range","createRange","whenOff","deleteContents","selectNodeContents","once","page","put","pageLoadParam","fragment","tag","tagName","receiver","receive","_ctx","response","ok","target","createDocumentFragment","importNodeContent","insertNode","createTextNode","error","activeNavLinkClass","NavComponent","navStyle","navLinkStyle","activeNavLinkStyle","nsAlias","DefaultNamespaceAliaser","activeClass","css__naming","node","ComponentNode","navLinks","select","all","track","_","links","forEach","link","DomEventDispatcher","on","instead","classList","contains","open","getAttribute","needs","afterAll","activeElement","pageDir","dirName","url","activeDir","linkDir","URL","href","remove","startsWith","length","path","pathname","endsWith","navLinkBackground","display","background","borderW","borderLeft","paddingLeft","sub","ContainerComponent","bsContext","_context","BootstrapContext","whenDefined","navName","mainName","flexFlow","alignItems","alignContent","sts","flex","feature","LayoutSupportFeature","Feature","ComponentTreeSupport","PageLoadSupport","RenderSupport","StyleProducerSupport","ThemeSupport","BodyStyleSupport","init","addBodyStyle","whenReady","produceBasicStyle","AppFeature","bootstrapComponents"],"mappings":"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"}