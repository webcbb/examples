{"version":3,"file":"common.3d584866.s.js","sources":["../../src/common/input/input.style.ts","../../src/common/examples.ns.ts","../../src/common/theme/theme-settings.ts","../../src/common/theme/link.style.ts","../../src/common/theme/default.style.ts","../../src/common/theme/body.style.ts","../../src/common/input/form.theme-settings.ts","../../src/common/input/in-error.component.ts","../../src/common/input/input-support.feature.ts","../../src/common/layout/main.component.ts","../../src/common/layout/nav.component.ts","../../src/common/layout/container.component.ts","../../src/common/layout/layout-support.feature.ts","../../src/common/theme/body-style-support.feature.ts","../../src/common/app.feature.ts","../../src/common/index.ts"],"sourcesContent":["import { Theme } from '@wesib/generic';\nimport { mixStypColors, StypProperties, stypRules, StypRules } from 'style-producer';\nimport { FormThemeSettings } from './form.theme-settings';\n\nexport function InputStyle(theme: Theme): StypRules {\n\n  const formSettings = theme.ref(FormThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add({ e: 'input' }, formSettings.thru(inStyle)),\n      rules.add({ e: 'input', s: '[readonly]' }, formSettings.thru(readonlyInStyle)),\n      rules.add({ e: 'input', s: '[disabled]' }, formSettings.thru(readonlyInStyle)),\n      rules.add({ e: 'input', s: ':focus' }, formSettings.thru(focusedInStyle)),\n      rules.add({ e: 'input', c: ['inap-invalid', 'inap-touched'] }, formSettings.thru(invalidInStyle)),\n      rules.add({ e: 'input', c: ['inap-missing', 'inap-touched'] }, { outlineStyle: 'dotted' }),\n      rules.add({ e: 'input', c: ['inap-incomplete', 'inap-touched'] }, { outlineStyle: 'dotted' }),\n  );\n}\n\nexport function inStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n      $marginV,\n      $marginH,\n      $paddingV,\n      $paddingH,\n      $bgColor,\n      $borderColor,\n      $borderW,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n    padding: `${$paddingV} ${$paddingH}`,\n    margin: `${$marginV} ${$marginH}`,\n    backgroundColor: $bgColor,\n    border: '0 none',\n    outline: `${$borderW} solid ${$borderColor}`,\n    boxShadow: 'inset 1px 1px 2px -2px black',\n    boxSizing: 'border-box',\n    width: '100%',\n  };\n}\n\nexport function readonlyInStyle(\n    {\n      $roBgColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $roBgColor,\n  };\n}\n\nfunction focusedInStyle(\n    {\n      $color,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outlineColor: mixStypColors($borderColor, $color, 0.5),\n  };\n}\n\nfunction invalidInStyle(\n    {\n      $color,\n      $borderW,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outline: `${$borderW.mul(2)} dashed ${mixStypColors($borderColor, $color, 0.25)}`,\n  };\n}\n","import { NamespaceDef } from 'namespace-aliaser';\n\nexport const Examples__NS = new NamespaceDef(\n    'https://wesib.github.io/examples',\n    'bex',\n    'wesib-examples',\n);\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypProperties, StypRGB } from 'style-producer';\n\nexport interface ThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $linkFontWeight: string;\n  $layoutBreakpoint: StypLength;\n}\n\nexport const ThemeSettings: RefStypRule<ThemeSettings> = RefStypRule.by(\n    { $: 'settings' },\n    {\n      $color: new StypRGB({ r: 161, g: 185, b: 142 }),\n      $bgColor: new StypRGB({ r: 40, g: 43, b: 36 }),\n      $fontFace: `'Exo 2', sans-serif`,\n      $fontSize: StypLengthPt.of(1, 'em'),\n      $lineHeight: 1.2,\n      $fontWeight: '400',\n      $linkFontWeight: '600',\n      $layoutBreakpoint: StypLength.of(576, 'px'),\n    },\n);\n\nexport function mediaStyle({ $layoutBreakpoint }: ThemeSettings): StypProperties {\n  return {\n    '@media:sm': `(max-width: ${$layoutBreakpoint})`,\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { ThemeSettings } from './theme-settings';\n\nexport function LinkStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add({ e: 'a' }, settings.thru(linkStyle)),\n      rules.add({ e: 'a', s: ':visited' }, settings.thru(linkStyle)),\n      rules.add({ e: 'a', s: ':hover' }, { textDecoration: 'underline' }),\n      rules.add({ e: 'a', s: ':active' }, { textDecoration: 'underline dotted' }),\n      rules.add({ e: 'a', s: ':focus' }, { textDecoration: 'underline dotted' }),\n  );\n}\n\nfunction linkStyle(\n    {\n      $color,\n      $linkFontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    fontWeight: $linkFontWeight,\n    textDecoration: 'none',\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { LinkStyle } from './link.style';\nimport { mediaStyle, ThemeSettings } from './theme-settings';\n\nexport function DefaultStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n\n  return stypRules(\n      theme.root\n          .add(settings.thru(defaultStyle))\n          .add(settings.thru(mediaStyle)),\n      theme.style(LinkStyle),\n  );\n}\n\nfunction defaultStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { DefaultStyle } from './default.style';\nimport { ThemeSettings } from './theme-settings';\n\nexport function BodyStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add(\n          { e: 'html' },\n          {\n            height: '100%',\n            margin: 0,\n            padding: 0,\n          },\n      ),\n      rules.add(\n          { e: 'body' },\n          settings.thru(bodyStyle),\n      ),\n      theme.style(DefaultStyle),\n  );\n}\n\nfunction bodyStyle(\n    {\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $bgColor,\n    height: '100%',\n    margin: 0,\n    padding: 0,\n  };\n}\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypMapper, StypRuleRefs } from 'style-producer';\nimport { ThemeSettings } from '../theme';\n\nexport interface FormThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $roBgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $errorFontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $borderColor: StypColor;\n  $marginV: StypLengthPt;\n  $marginH: StypLengthPt;\n  $paddingV: StypLengthPt;\n  $paddingH: StypLengthPt;\n  $borderW: StypLength;\n}\n\nexport const FormThemeSettings: RefStypRule<FormThemeSettings> = RefStypRule.by(\n    { $: 'settings:form' },\n    root => StypRuleRefs.by<{ global: ThemeSettings }>(\n        {\n          global: ThemeSettings,\n        },\n        root,\n    ).read.keep.thru(formMappings),\n);\n\nfunction formMappings(\n    {\n      global: {\n        $color,\n        $bgColor,\n        $fontFace,\n        $fontSize,\n        $lineHeight,\n        $fontWeight,\n      },\n    }: {\n      global: ThemeSettings,\n    },\n): StypMapper.Mappings<FormThemeSettings> {\n  return {\n    $color,\n    $bgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 })),\n    $roBgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.94 })),\n    $fontFace,\n    $fontSize,\n    $errorFontSize: $fontSize.mul(0.8),\n    $lineHeight,\n    $fontWeight,\n    $borderColor: $bgColor,\n    $marginV: $fontSize.div(4),\n    $marginH: $fontSize.div(4),\n    $paddingV: $fontSize.div(2),\n    $paddingH: $fontSize,\n    $borderW: StypLength.of(1, 'px'),\n  };\n}\n","import { ComponentInValidity, ProduceStyle, Theme } from '@wesib/generic';\nimport { AttributeChanged, Component, ComponentContext, DefaultNamespaceAliaser, Render } from '@wesib/wesib';\nimport { itsEvery } from 'a-iterable';\nimport { InValidation, inValidationResult } from 'input-aspects';\nimport { css__naming, QualifiedName } from 'namespace-aliaser';\nimport { StypLengthPt, stypRules, StypRules } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { FormThemeSettings } from './form.theme-settings';\n\n@Component(\n    ['in-error', Examples__NS],\n    ComponentInValidity,\n)\nexport class InErrorComponent {\n\n  private _validity: InValidation.Result = inValidationResult();\n  private _codes = new Set<string>();\n\n  constructor(private readonly _context: ComponentContext) {\n\n    const validity = _context.get(ComponentInValidity);\n\n    _context.whenOn(supply => {\n      validity(r => this.validity = r)\n          .needs(supply)\n          .whenOff(() => this.validity = inValidationResult());\n    });\n  }\n\n  get validity(): InValidation.Result {\n    return this._validity;\n  }\n\n  set validity(value: InValidation.Result) {\n\n    const oldValue = this._validity;\n\n    this._validity = value;\n    this._context.updateState('validationResult', value, oldValue);\n  }\n\n  @AttributeChanged('code')\n  setCode(code: string) {\n    this._codes = new Set(code.trim().split(/\\s+/));\n  }\n\n  @Render()\n  render() {\n\n    const element: Element = this._context.element;\n    const hasErrorsClassName = css__naming.name(\n        hasError__cssClass,\n        this._context.get(DefaultNamespaceAliaser),\n    );\n\n    return () => {\n      if (itsEvery(this._codes, code => !this.validity.has(code))) {\n        element.classList.remove(hasErrorsClassName);\n      } else {\n        element.classList.add(hasErrorsClassName);\n      }\n    };\n  }\n\n  @ProduceStyle()\n  style(): StypRules {\n    return this._context.get(Theme).style(InErrorStyle);\n  }\n\n}\n\nconst InError__qualifier = 'bex:in-error';\nconst hasError__cssClass: QualifiedName = ['display-block', Examples__NS];\n\nfunction InErrorStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(FormThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n  const borderW = StypLengthPt.of(4, 'px');\n\n  return stypRules(\n      rules.add(\n          { u: [':', 'host'], $: InError__qualifier },\n          settings.thru(({ $color, $errorFontSize }) => ({\n            display: 'none',\n            fontSize: $errorFontSize,\n            padding: $errorFontSize.div(2),\n            borderLeft: `${borderW} dotted ${$color}`,\n            paddingLeft: $errorFontSize.sub(borderW),\n          })),\n      ),\n      rules.add(\n          { u: [':', 'host', { c: hasError__cssClass }], $: InError__qualifier },\n          {\n            display: 'block',\n          },\n      ),\n  );\n}\n","import { ComponentTreeSupport, ThemeSupport } from '@wesib/generic';\nimport { Feature } from '@wesib/wesib';\nimport { InErrorComponent } from './in-error.component';\n\n@Feature({\n  needs: [\n    ComponentTreeSupport,\n    InErrorComponent,\n    ThemeSupport,\n  ],\n})\nexport class InputSupport {\n}\n","import { importNodeContent, Navigation, pageLoadParam, PageLoadResponse, ProduceStyle, Theme } from '@wesib/generic';\nimport { BootstrapWindow, Component, ComponentContext, Render } from '@wesib/wesib';\nimport { trackValue } from 'fun-events';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { ThemeSettings } from '../theme';\n\n@Component(['main', Examples__NS])\nexport class MainComponent {\n\n  private readonly _response = trackValue<PageLoadResponse>();\n\n  constructor(private readonly _context: ComponentContext) {\n    this._response.on((n, o) => _context.updateState('response', n, o));\n\n    const navigation = _context.get(Navigation);\n\n    _context.whenOn(supply => {\n      navigation.read.once(page => {\n        page.put(\n            pageLoadParam,\n            {\n              fragment: { tag: _context.element.tagName },\n              receiver: {\n                supply,\n                receive: (_ctx, response) => this._response.it = response,\n              },\n            },\n        );\n      });\n    });\n  }\n\n  @Render()\n  render() {\n\n    const document = this._context.get(BootstrapWindow).document;\n    const range = document.createRange();\n\n    range.selectNodeContents(this._context.element);\n\n    return () => {\n\n      const response = this._response.it;\n\n      if (response) {\n        range.deleteContents();\n        if (response.ok) {\n\n          const target = document.createDocumentFragment();\n          const { fragment } = response;\n\n          if (fragment) {\n            importNodeContent(fragment, target);\n            range.insertNode(target);\n          }\n        } else if (response.ok == null) {\n          range.insertNode(document.createTextNode('Loading...'));\n        } else {\n          range.insertNode(document.createTextNode(`Error. ${response.error}`));\n        }\n      }\n    };\n  }\n\n  @ProduceStyle()\n  style() {\n    return this._context.get(Theme).style(MainStyle);\n  }\n\n}\n\nconst Main__qualifier = 'bex:main';\n\nfunction MainStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add(\n          { u: [':', 'host'], $: Main__qualifier },\n          settings.thru(mainStyle),\n      ),\n  );\n}\n\nfunction mainStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    flex: '1 1 auto',\n    padding: 0,\n    margin: `0 0 0 ${$fontSize.div(2)}`,\n  };\n}\n","import { ComponentNode, ElementNode, Navigation, ProduceStyle, Theme } from '@wesib/generic';\nimport { Component, ComponentContext, DefaultNamespaceAliaser } from '@wesib/wesib';\nimport { afterAll, DomEventDispatcher, EventSupply } from 'fun-events';\nimport { css__naming, QualifiedName } from 'namespace-aliaser';\nimport { StypColor, StypLengthPt, StypProperties, stypRules, StypRules } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { ThemeSettings } from '../theme';\n\n@Component(['nav', Examples__NS])\nexport class NavComponent {\n\n  private readonly _theme: Theme;\n\n  constructor(context: ComponentContext) {\n    this._theme = context.get(Theme);\n\n    const nsAlias = context.get(DefaultNamespaceAliaser);\n    const activeClass = css__naming.name(activeNavLinkClass, nsAlias);\n    const node = context.get(ComponentNode);\n    const navigation = context.get(Navigation);\n\n    context.whenOn(supply => {\n\n      const navLinks = node.select('a', { all: true });\n      const linkSupplies = new Map<ElementNode, EventSupply>();\n\n      navLinks.track.tillOff(supply)((added, removed) => {\n        removed.forEach(link => {\n\n          const linkSupply = linkSupplies.get(link);\n\n          if (linkSupply) {\n            linkSupplies.delete(link);\n            linkSupply.off();\n          }\n        });\n        added.forEach(\n            link => {\n\n              const element: Element = link.element;\n              const linkSupply = new DomEventDispatcher(element)\n                  .on('click')\n                  .instead(() => {\n                    if (!element.classList.contains(activeClass)) {\n                      navigation.open(element.getAttribute('href') || '');\n                    }\n                  })\n                  .needs(supply);\n\n              linkSupplies.set(link, linkSupply);\n            },\n        );\n      });\n      afterAll({\n        links: navLinks,\n        page: navigation,\n      })({\n        supply,\n        receive(\n            _ctx,\n            {\n              links: [links],\n              page: [page],\n            },\n        ) {\n\n          const pageDir = dirName(page.url);\n          let activeElement: Element | undefined;\n          let activeDir = '';\n\n          links.forEach(link => {\n\n            const element: HTMLAnchorElement = link.element;\n            const linkDir = dirName(new URL(element.href));\n\n            element.classList.remove(activeClass);\n\n            if (pageDir.startsWith(linkDir) && activeDir.length < linkDir.length) {\n              activeElement = element;\n              activeDir = linkDir;\n            }\n          });\n\n          if (activeElement) {\n            activeElement.classList.add(activeClass);\n          }\n        },\n      });\n    });\n  }\n\n  @ProduceStyle()\n  style() {\n    return this._theme.style(NavStyle);\n  }\n\n}\n\nfunction dirName(url: URL): string {\n\n  const path = url.pathname;\n\n  if (path.endsWith('/')) {\n    return path;\n  }\n\n  return path + '/';\n}\n\nconst Nav__qualifier = 'bex:nav';\n\nfunction NavStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add(\n          { u: [':', 'host'], $: Nav__qualifier },\n          settings.thru(navStyle),\n      ),\n      rules.add(\n          { u: [':', 'host'], $: Nav__qualifier },\n          settings.thru(sts => ({\n            flex: '0 1 200px',\n            height: '100%',\n            background: navLinkBackground(sts),\n          })),\n      ),\n      rules.add(\n          { u: [':', 'host'], $: [Nav__qualifier, '@media:sm'] },\n          {\n            flex: '0 1 100%',\n          },\n      ),\n      rules.add(\n          [{ u: [':', 'host'] }, { e: 'a', $: Nav__qualifier }],\n          settings.thru(navLinkStyle),\n      ),\n      rules.add(\n          [{ u: [':', 'host'] }, { e: 'a', c: activeNavLinkClass, $: Nav__qualifier } ],\n          settings.thru(activeNavLinkStyle),\n      ),\n  );\n}\n\nfunction navStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    padding: 0,\n    margin: `0 ${$fontSize.div(2)} 0 0`,\n  };\n}\n\nconst activeNavLinkClass: QualifiedName = ['nav-active', Examples__NS];\n\nexport function navLinkBackground({ $bgColor }: ThemeSettings): StypColor {\n  return $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 }));\n}\n\nfunction navLinkStyle(\n    settings: ThemeSettings,\n): StypProperties {\n\n  const { $fontSize } = settings;\n\n  return {\n    display: 'block',\n    margin: 0,\n    padding: `${$fontSize.div(2)} ${$fontSize}`,\n    border: 0,\n    outline: 0,\n    background: navLinkBackground(settings),\n  };\n}\n\nfunction activeNavLinkStyle(\n    {\n      $fontSize,\n      $color,\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n\n  const borderW = StypLengthPt.of(4, 'px');\n\n  return {\n    background: $bgColor,\n    borderLeft: `${borderW} solid ${$color}`,\n    paddingLeft: $fontSize.sub(borderW),\n  };\n}\n","import { ProduceStyle, Theme } from '@wesib/generic';\nimport { Component, ComponentContext } from '@wesib/wesib';\nimport { stypRules, StypRules } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { mediaStyle, ThemeSettings } from '../theme';\nimport { MainComponent } from './main.component';\nimport { NavComponent } from './nav.component';\n\n@Component({\n  name: ['container', Examples__NS],\n  feature: {\n    needs: [\n      MainComponent,\n      NavComponent,\n    ],\n  },\n})\nexport class ContainerComponent {\n\n  constructor(private readonly _context: ComponentContext) {\n  }\n\n  @ProduceStyle()\n  style(): StypRules {\n    return this._context.get(Theme).style(ContainerStyle);\n  }\n\n}\n\nconst Container__qualifier = 'bex:container';\n\nfunction ContainerStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add(\n          { u: [':', 'host'], $: Container__qualifier },\n          {\n            height: '100%',\n            display: 'flex',\n            flexFlow: 'row wrap',\n            alignItems: 'stretch',\n            alignContent: 'flex-start',\n          },\n      ).add(\n          settings.thru(mediaStyle),\n      ),\n      rules.add(\n          { u: [':', 'host'], $: [Container__qualifier, '@media:sm'] },\n          {\n            height: 'auto',\n          },\n      ),\n  );\n}\n","import { ComponentTreeSupport, PageLoadSupport, StyleProducerSupport, ThemeSupport } from '@wesib/generic';\nimport { Feature, RenderSupport } from '@wesib/wesib';\nimport { ContainerComponent } from './container.component';\n\n@Feature({\n  needs: [\n    ContainerComponent,\n    ComponentTreeSupport,\n    PageLoadSupport,\n    RenderSupport,\n    StyleProducerSupport,\n    ThemeSupport,\n  ],\n})\nexport class LayoutSupportFeature {\n}\n","import { Theme, ThemeSupport } from '@wesib/generic';\nimport { BootstrapContext, Feature } from '@wesib/wesib';\nimport { produceBasicStyle } from 'style-producer';\nimport { BodyStyle } from './body.style';\n\n@Feature({\n  needs: ThemeSupport,\n  init: addBodyStyle,\n})\nexport class BodyStyleSupport {}\n\nfunction addBodyStyle(context: BootstrapContext) {\n  context.whenReady(() => {\n    produceBasicStyle(context.get(Theme).style(BodyStyle));\n  });\n}\n","import { Feature } from '@wesib/wesib';\nimport { InputSupport } from './input/input-support.feature';\nimport { LayoutSupportFeature } from './layout';\nimport { BodyStyleSupport } from './theme/body-style-support.feature';\n\n@Feature({\n  needs: [\n    BodyStyleSupport,\n    InputSupport,\n    LayoutSupportFeature,\n  ],\n})\nexport class AppFeature {}\n","import { bootstrapComponents } from '@wesib/wesib';\nimport { AppFeature } from './app.feature';\n\nexport * from './app.feature';\nexport * from './examples.ns';\nexport * from './input';\nexport * from './theme';\n\nexport const examplesContext = bootstrapComponents(AppFeature);\n"],"names":["theme","formSettings","ref","FormThemeSettings","read","keep","rules","stypRules","add","e","thru","inStyle","s","readonlyInStyle","focusedInStyle","c","invalidInStyle","outlineStyle","Examples__NS","NamespaceDef","ThemeSettings","RefStypRule","by","$","$color","StypRGB","r","g","b","$bgColor","$fontFace","$fontSize","StypLengthPt","of","$lineHeight","$fontWeight","$linkFontWeight","$layoutBreakpoint","StypLength","mediaStyle","_a","@media:sm","LinkStyle","settings","linkStyle","textDecoration","color","fontWeight","DefaultStyle","root","defaultStyle","style","font","BodyStyle","height","margin","padding","bodyStyle","backgroundColor","StypRuleRefs","global","formMappings","_b","hsl","set","l","$roBgColor","$errorFontSize","mul","$borderColor","$marginV","div","$marginH","$paddingV","$paddingH","$borderW","_context","this","inValidationResult","Set","validity","get","ComponentInValidity","whenOn","supply","_this","needs","whenOff","Object","InErrorComponent","_validity","value","oldValue","updateState","code","_codes","trim","split","element","hasErrorsClassName","css__naming","name","hasError__cssClass","DefaultNamespaceAliaser","itsEvery","has","classList","remove","Theme","InErrorStyle","__decorate","AttributeChanged","Render","ProduceStyle","Component","InError__qualifier","borderW","u","display","fontSize","borderLeft","paddingLeft","sub","InputSupport","Feature","ComponentTreeSupport","ThemeSupport","trackValue","_response","on","n","o","navigation","Navigation","once","page","put","pageLoadParam","fragment","tag","tagName","receiver","receive","_ctx","response","it","MainComponent","document","BootstrapWindow","range","createRange","selectNodeContents","deleteContents","ok","target","createDocumentFragment","importNodeContent","insertNode","createTextNode","error","MainStyle","Main__qualifier","mainStyle","flex","context","_theme","nsAlias","activeClass","activeNavLinkClass","node","ComponentNode","navLinks","select","all","linkSupplies","Map","track","tillOff","added","removed","forEach","link","linkSupply","delete","off","DomEventDispatcher","instead","contains","open","getAttribute","afterAll","links","activeElement","pageDir","dirName","url","activeDir","linkDir","URL","href","startsWith","length","NavComponent","NavStyle","path","pathname","endsWith","Nav__qualifier","navStyle","sts","background","navLinkBackground","navLinkStyle","activeNavLinkStyle","border","outline","ContainerComponent","ContainerStyle","feature","Container__qualifier","flexFlow","alignItems","alignContent","LayoutSupportFeature","PageLoadSupport","RenderSupport","StyleProducerSupport","BodyStyleSupport","init","addBodyStyle","whenReady","produceBasicStyle","AppFeature","boxShadow","boxSizing","width","outlineColor","mixStypColors","bootstrapComponents"],"mappings":"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"}