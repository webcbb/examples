{"version":3,"file":"common.607366c2.m.js","sources":["../../src/common/bex.ns.ts","../../src/common/input/in-element.component.ts","../../src/common/theme/theme-settings.ts","../../src/common/theme/link.style.ts","../../src/common/theme/default.style.ts","../../src/common/theme/body.style.ts","../../src/common/input/form.theme-settings.ts","../../src/common/input/validation-result.ts","../../src/common/input/in-error.component.ts","../../src/common/input/input-support.feature.ts","../../src/common/layout/main.component.ts","../../src/common/layout/nav.component.ts","../../src/common/layout/container.component.ts","../../src/common/layout/layout-support.feature.ts","../../src/common/theme/body-style-support.feature.ts","../../src/common/app.feature.ts","../../src/common/input/input.style.ts","../../src/common/index.ts"],"sourcesContent":["import { NamespaceDef } from 'namespace-aliaser';\n\nexport const BEX__NS = new NamespaceDef(\n    'https://wesib.github.io/examples',\n    'bex',\n    'wesib-examples',\n);\n","import { ComponentInControl, ComponentNode, ElementNode, ProduceStyle } from '@wesib/generic';\nimport { Component, ComponentContext } from '@wesib/wesib';\nimport { AfterEvent, eventSupply, noEventSupply, trackValue } from 'fun-events';\nimport { InControl, inText } from 'input-aspects';\nimport { stypRoot, StypRules } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\n\n@Component({\n  name: ['in-element', BEX__NS],\n  setup: ComponentInControl.setup,\n})\nexport class InElementComponent<Ctrl extends InControl<any> = InControl<any>> {\n\n  private readonly _control = trackValue<Ctrl>();\n  readonly control: AfterEvent<[Ctrl?]> = this._control.read;\n\n  constructor(context: ComponentContext) {\n\n    const inControl = context.get(ComponentInControl);\n    const root = context.get(ComponentNode);\n\n    context.whenOn(onSupply => {\n\n      const supply = eventSupply().needs(onSupply);\n      let inSupply = noEventSupply();\n\n      root.select(this.inputSelector(), { all: true, deep: true })\n          .first({\n            supply,\n            receive: (_ctx, node ) => {\n              this._control.it = node && this.nodeControl(node);\n            },\n          });\n      this._control.read({\n        supply,\n        receive: (_ctx, ctrl) => {\n          inSupply.off();\n          if (ctrl) {\n            inSupply = inControl.enable(ctrl)\n                .needs(supply)\n                .whenOff(() => this._control.it = undefined);\n          }\n        },\n      });\n    });\n  }\n\n  @ProduceStyle()\n  inputStyle(): StypRules.Source {\n    return stypRoot({\n      display: 'block',\n    }).rules;\n  }\n\n  protected inputSelector(): string {\n    return 'input';\n  }\n\n  protected nodeControl(node: ElementNode): Ctrl {\n    return inText(node.element) as any;\n  }\n\n}\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypProperties, StypRGB } from 'style-producer';\n\nexport interface ThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $linkFontWeight: string;\n  $layoutBreakpoint: StypLength;\n}\n\nexport const ThemeSettings: RefStypRule<ThemeSettings> = RefStypRule.by(\n    { $: 'settings' },\n    {\n      $color: new StypRGB({ r: 161, g: 185, b: 142 }),\n      $bgColor: new StypRGB({ r: 40, g: 43, b: 36 }),\n      $fontFace: `'Exo 2', sans-serif`,\n      $fontSize: StypLengthPt.of(1, 'em'),\n      $lineHeight: 1.2,\n      $fontWeight: '400',\n      $linkFontWeight: '600',\n      $layoutBreakpoint: StypLength.of(576, 'px'),\n    },\n);\n\nexport function mediaStyle({ $layoutBreakpoint }: ThemeSettings): StypProperties {\n  return {\n    '@media:sm': `(max-width: ${$layoutBreakpoint})`,\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, StypRules } from 'style-producer';\nimport { ThemeSettings } from './theme-settings';\n\nexport function LinkStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const selector = { e: 'a' };\n\n  theme.root.rules.add(selector, settings.thru(linkStyle));\n  theme.root.rules.add({ e: 'a', s: ':visited' }, settings.thru(linkStyle));\n  theme.root.rules.add({ e: 'a', s: ':hover' }, { textDecoration: 'underline' });\n  theme.root.rules.add({ e: 'a', s: ':active' }, { textDecoration: 'underline dotted' });\n  theme.root.rules.add({ e: 'a', s: ':focus' }, { textDecoration: 'underline dotted' });\n\n  return theme.root.rules.grab(selector);\n}\n\nfunction linkStyle(\n    {\n      $color,\n      $linkFontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    fontWeight: $linkFontWeight,\n    textDecoration: 'none',\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { LinkStyle } from './link.style';\nimport { mediaStyle, ThemeSettings } from './theme-settings';\n\nexport function DefaultStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n\n  theme.root.add(settings.thru(defaultStyle));\n  theme.root.add(settings.thru(mediaStyle));\n\n  return stypRules(\n      theme.root.rules.self,\n      theme.style(LinkStyle),\n  );\n}\n\nfunction defaultStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { QualifiedName } from 'namespace-aliaser';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { DefaultStyle } from './default.style';\nimport { ThemeSettings } from './theme-settings';\n\nexport const displayBlockCssClass: QualifiedName = ['display-block', BEX__NS];\n\nexport function BodyStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const bodySelector = { e: 'body' };\n  const htmlSelector = { e: 'html' };\n  const { root: { rules } } = theme;\n\n  rules.add(bodySelector, settings.thru(bodyStyle));\n  rules.add(\n      htmlSelector,\n      {\n        height: '100%',\n        margin: 0,\n        padding: 0,\n      },\n  );\n  rules.add(\n      { c: displayBlockCssClass },\n      {\n        display: 'block !important',\n      },\n  );\n\n  return stypRules(\n      rules.grab(htmlSelector),\n      rules.grab(bodySelector),\n      rules.grab({ c: displayBlockCssClass }),\n      theme.style(DefaultStyle),\n  );\n}\n\nfunction bodyStyle(\n    {\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $bgColor,\n    height: '100%',\n    margin: 0,\n    padding: 0,\n  };\n}\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypMapper, StypRuleRefs } from 'style-producer';\nimport { ThemeSettings } from '../theme';\n\nexport interface FormThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $roBgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $errorFontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $borderColor: StypColor;\n  $marginV: StypLengthPt;\n  $marginH: StypLengthPt;\n  $paddingV: StypLengthPt;\n  $paddingH: StypLengthPt;\n  $borderW: StypLength;\n}\n\nexport const FormThemeSettings: RefStypRule<FormThemeSettings> = RefStypRule.by(\n    { $: 'settings:form' },\n    root => StypRuleRefs.by<{ global: ThemeSettings }>(\n        {\n          global: ThemeSettings,\n        },\n        root,\n    ).read.keep.thru(formMappings),\n);\n\nfunction formMappings(\n    {\n      global: {\n        $color,\n        $bgColor,\n        $fontFace,\n        $fontSize,\n        $lineHeight,\n        $fontWeight,\n      },\n    }: {\n      global: ThemeSettings,\n    },\n): StypMapper.Mappings<FormThemeSettings> {\n  return {\n    $color,\n    $bgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 })),\n    $roBgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.94 })),\n    $fontFace,\n    $fontSize,\n    $errorFontSize: $fontSize.mul(0.8),\n    $lineHeight,\n    $fontWeight,\n    $borderColor: $bgColor,\n    $marginV: $fontSize.div(4),\n    $marginH: $fontSize.div(4),\n    $paddingV: $fontSize.div(2),\n    $paddingH: $fontSize,\n    $borderW: StypLength.of(1, 'px'),\n  };\n}\n","import { ComponentInContext } from '@wesib/generic';\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { AfterEvent, EventSupply, trackValue } from 'fun-events';\nimport { InValidation, inValidationResult } from 'input-aspects';\n\nconst ValidationResult__key = (/*#__PURE__*/ new SingleContextKey<ValidationResult>('error-receiver'));\n\nexport class ValidationResult {\n\n  static get [ContextKey__symbol](): ContextKey<ValidationResult> {\n    return ValidationResult__key;\n  }\n\n  private readonly _result = trackValue<InValidation.Result>(inValidationResult());\n  readonly read: AfterEvent<[InValidation.Result]> = this._result.read;\n\n  enable({ control }: ComponentInContext): EventSupply {\n    return control.aspect(InValidation)\n        .read(result => this._result.it = result)\n        .whenOff(() => this._result.it = inValidationResult());\n  }\n\n}\n","import { ComponentIn, ProduceStyle, Theme } from '@wesib/generic';\nimport { AttributeChanged, Component, ComponentContext, DefaultNamespaceAliaser, Render } from '@wesib/wesib';\nimport { itsEvery } from 'a-iterable';\nimport { afterThe } from 'fun-events';\nimport { InValidation, inValidationResult } from 'input-aspects';\nimport { css__naming } from 'namespace-aliaser';\nimport { StypLengthPt, stypRoot, StypRules } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { displayBlockCssClass } from '../theme';\nimport { FormThemeSettings } from './form.theme-settings';\nimport { ValidationResult } from './validation-result';\n\n@Component({\n  name: ['in-error', BEX__NS],\n  setup(setup) {\n    setup.perComponent({ as: ValidationResult });\n    setup.perComponent({\n      a: ComponentIn,\n      by: (receiver: ValidationResult) => afterThe<[ComponentIn]>(context => receiver.enable(context)),\n      with: [ValidationResult],\n    });\n  },\n})\nexport class InErrorComponent {\n\n  private _validationResult: InValidation.Result = inValidationResult();\n  private _codes = new Set<string>();\n\n  constructor(private readonly _context: ComponentContext) {\n\n    const result = _context.get(ValidationResult);\n\n    _context.whenOn(supply => {\n      result.read(r => this.validationResult = r)\n          .needs(supply)\n          .whenOff(() => this.validationResult = inValidationResult());\n    });\n  }\n\n  get validationResult(): InValidation.Result {\n    return this._validationResult;\n  }\n\n  set validationResult(value: InValidation.Result) {\n\n    const oldValue = this._validationResult;\n\n    this._validationResult = value;\n    this._context.updateState('validationResult', value, oldValue);\n  }\n\n  @AttributeChanged('code')\n  setCode(code: string) {\n    this._codes = new Set(code.trim().split(/\\s+/));\n  }\n\n  @Render()\n  render() {\n\n    const element: Element = this._context.element;\n    const hasErrorsClassName = css__naming.name(\n        displayBlockCssClass,\n        this._context.get(DefaultNamespaceAliaser),\n    );\n\n    return () => {\n      if (itsEvery(this._codes, code => !this.validationResult.has(code))) {\n        element.classList.remove(hasErrorsClassName);\n      } else {\n        element.classList.add(hasErrorsClassName);\n      }\n    };\n  }\n\n  @ProduceStyle()\n  style(): StypRules {\n\n    const borderW = StypLengthPt.of(4, 'px');\n    const settings = this._context.get(Theme).ref(FormThemeSettings).read.keep;\n\n    return stypRoot(\n        settings.thru(({ $color, $errorFontSize }) => ({\n          display: 'none',\n          fontSize: $errorFontSize,\n          padding: $errorFontSize.div(2),\n          borderLeft: `${borderW} dotted ${$color}`,\n          paddingLeft: $errorFontSize.sub(borderW),\n        })),\n    ).rules;\n  }\n\n}\n","import { ComponentTreeSupport, ThemeSupport } from '@wesib/generic';\nimport { Feature } from '@wesib/wesib';\nimport { InElementComponent } from './in-element.component';\nimport { InErrorComponent } from './in-error.component';\n\n@Feature({\n  needs: [\n    ComponentTreeSupport,\n    InElementComponent,\n    InErrorComponent,\n    ThemeSupport,\n  ],\n})\nexport class InputSupport {\n}\n","import { importNodeContent, Navigation, pageLoadParam, PageLoadResponse, ProduceStyle, Theme } from '@wesib/generic';\nimport { BootstrapWindow, Component, ComponentContext, Render } from '@wesib/wesib';\nimport { trackValue } from 'fun-events';\nimport { StypProperties, stypRoot } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { ThemeSettings } from '../theme';\n\n@Component({\n  name: ['main', BEX__NS],\n})\nexport class MainComponent {\n\n  private readonly _response = trackValue<PageLoadResponse>();\n\n  constructor(private readonly _context: ComponentContext) {\n    this._response.on((n, o) => _context.updateState('response', n, o));\n\n    const navigation = _context.get(Navigation);\n\n    _context.whenOn(supply => {\n      navigation.read.once(page => {\n        page.put(\n            pageLoadParam,\n            {\n              fragment: { tag: _context.element.tagName },\n              receiver: {\n                supply,\n                receive: (_ctx, response) => this._response.it = response,\n              },\n            },\n        );\n      });\n    });\n  }\n\n  @Render()\n  render() {\n\n    const document = this._context.get(BootstrapWindow).document;\n    const range = document.createRange();\n\n    range.selectNodeContents(this._context.element);\n\n    return () => {\n\n      const response = this._response.it;\n\n      if (response) {\n        range.deleteContents();\n        if (response.ok) {\n\n          const target = document.createDocumentFragment();\n          const { fragment } = response;\n\n          if (fragment) {\n            importNodeContent(fragment, target);\n            range.insertNode(target);\n          }\n        } else if (response.ok == null) {\n          range.insertNode(document.createTextNode('Loading...'));\n        } else {\n          range.insertNode(document.createTextNode(`Error. ${response.error}`));\n        }\n      }\n    };\n  }\n\n  @ProduceStyle()\n  style() {\n\n    const settings = this._context.get(Theme).ref(ThemeSettings).read.keep;\n    const root = stypRoot(settings.thru(bexBodyStyle));\n\n    return root.rules;\n  }\n\n}\n\nfunction bexBodyStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    padding: 0,\n    margin: `0 0 0 ${$fontSize.div(2)}`,\n  };\n}\n","import { ComponentNode, ElementNode, Navigation, ProduceStyle, Theme } from '@wesib/generic';\nimport { Component, ComponentContext, DefaultNamespaceAliaser } from '@wesib/wesib';\nimport { afterAll, DomEventDispatcher, EventSupply } from 'fun-events';\nimport { css__naming, QualifiedName } from 'namespace-aliaser';\nimport { StypColor, StypLengthPt, StypProperties, stypRoot } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { ThemeSettings } from '../theme';\n\nconst activeNavLinkClass: QualifiedName = ['nav-active', BEX__NS];\n\n@Component({\n  name: ['nav', BEX__NS],\n})\nexport class NavComponent {\n\n  private readonly _theme: Theme;\n\n  constructor(context: ComponentContext) {\n    this._theme = context.get(Theme);\n\n    const nsAlias = context.get(DefaultNamespaceAliaser);\n    const activeClass = css__naming.name(activeNavLinkClass, nsAlias);\n    const node = context.get(ComponentNode);\n    const navigation = context.get(Navigation);\n\n    context.whenOn(supply => {\n\n      const navLinks = node.select('a', { all: true });\n      const linkSupplies = new Map<ElementNode, EventSupply>();\n\n      navLinks.track.tillOff(supply)((added, removed) => {\n        removed.forEach(link => {\n\n          const linkSupply = linkSupplies.get(link);\n\n          if (linkSupply) {\n            linkSupplies.delete(link);\n            linkSupply.off();\n          }\n        });\n        added.forEach(\n            link => {\n\n              const element: Element = link.element;\n              const linkSupply = new DomEventDispatcher(element)\n                  .on('click')\n                  .instead(() => {\n                    if (!element.classList.contains(activeClass)) {\n                      navigation.open(element.getAttribute('href') || '');\n                    }\n                  })\n                  .needs(supply);\n\n              linkSupplies.set(link, linkSupply);\n            },\n        );\n      });\n      afterAll({\n        links: navLinks,\n        page: navigation,\n      })({\n        supply,\n        receive(\n            _ctx,\n            {\n              links: [links],\n              page: [page],\n            },\n        ) {\n\n          const pageDir = dirName(page.url);\n          let activeElement: Element | undefined;\n          let activeDir = '';\n\n          links.forEach(link => {\n\n            const element: HTMLAnchorElement = link.element;\n            const linkDir = dirName(new URL(element.href));\n\n            element.classList.remove(activeClass);\n\n            if (pageDir.startsWith(linkDir) && activeDir.length < linkDir.length) {\n              activeElement = element;\n              activeDir = linkDir;\n            }\n          });\n\n          if (activeElement) {\n            activeElement.classList.add(activeClass);\n          }\n        },\n      });\n    });\n  }\n\n  @ProduceStyle()\n  style() {\n\n    const settings = this._theme.ref(ThemeSettings).read.keep;\n    const root = stypRoot(settings.thru(navStyle));\n\n    root.rules.add({ e: 'a' }, settings.thru(navLinkStyle));\n    root.rules.add({ e: 'a', c: activeNavLinkClass }, settings.thru(activeNavLinkStyle));\n\n    return root.rules;\n  }\n\n}\n\nfunction dirName(url: URL): string {\n\n  const path = url.pathname;\n\n  if (path.endsWith('/')) {\n    return path;\n  }\n\n  return path + '/';\n}\n\nfunction navStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    padding: 0,\n    margin: `0 ${$fontSize.div(2)} 0 0`,\n  };\n}\n\nexport function navLinkBackground({ $bgColor }: ThemeSettings): StypColor {\n  return $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 }));\n}\n\nfunction navLinkStyle(\n    settings: ThemeSettings,\n): StypProperties {\n\n  const { $fontSize } = settings;\n\n  return {\n    display: 'block',\n    margin: 0,\n    padding: `${$fontSize.div(2)} ${$fontSize}`,\n    border: 0,\n    outline: 0,\n    background: navLinkBackground(settings),\n  };\n}\n\nfunction activeNavLinkStyle(\n    {\n      $fontSize,\n      $color,\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n\n  const borderW = StypLengthPt.of(4, 'px');\n\n  return {\n    background: $bgColor,\n    borderLeft: `${borderW} solid ${$color}`,\n    paddingLeft: $fontSize.sub(borderW),\n  };\n}\n","import { ProduceStyle, Theme } from '@wesib/generic';\nimport { BootstrapContext, Component, ComponentContext } from '@wesib/wesib';\nimport { stypRoot, StypRules } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { mediaStyle, ThemeSettings } from '../theme';\nimport { MainComponent } from './main.component';\nimport { NavComponent, navLinkBackground } from './nav.component';\n\n@Component({\n  name: ['container', BEX__NS],\n  feature: {\n    needs: [\n      MainComponent,\n      NavComponent,\n    ],\n  },\n})\nexport class ContainerComponent {\n\n  constructor(private readonly _context: ComponentContext) {\n  }\n\n  @ProduceStyle()\n  async style(): Promise<StypRules> {\n\n    const bsContext = this._context.get(BootstrapContext);\n    const { elementDef: { name: navName } } = await bsContext.whenDefined(NavComponent);\n    const { elementDef: { name: mainName } } = await bsContext.whenDefined(MainComponent);\n    const theme = this._context.get(Theme);\n    const settings = theme.ref(ThemeSettings).read.keep;\n\n    const { rules } = stypRoot({\n      height: '100%',\n      display: 'flex',\n      flexFlow: 'row wrap',\n      alignItems: 'stretch',\n      alignContent: 'flex-start',\n    }).add(\n        settings.thru(mediaStyle),\n    );\n    rules.add(\n        { s: ' ', $: '@media:sm' },\n        {\n          height: 'auto',\n        },\n    );\n    rules.add(\n        { e: navName },\n        settings.thru(sts => ({\n          flex: '0 1 200px',\n          height: '100%',\n          background: navLinkBackground(sts),\n        })),\n    );\n    rules.add(\n        { e: navName, $: '@media:sm' },\n        {\n          flex: '0 1 100%',\n        },\n    );\n    rules.add(\n        { e: mainName },\n        settings.thru(({ $fontSize }) => ({\n          flex: '1 1 auto',\n          margin: $fontSize,\n        })),\n    );\n\n    return rules;\n  }\n\n}\n","import { ComponentTreeSupport, PageLoadSupport, StyleProducerSupport, ThemeSupport } from '@wesib/generic';\nimport { Feature, RenderSupport } from '@wesib/wesib';\nimport { ContainerComponent } from './container.component';\n\n@Feature({\n  needs: [\n    ContainerComponent,\n    ComponentTreeSupport,\n    PageLoadSupport,\n    RenderSupport,\n    StyleProducerSupport,\n    ThemeSupport,\n  ],\n})\nexport class LayoutSupportFeature {\n}\n","import { Theme, ThemeSupport } from '@wesib/generic';\nimport { BootstrapContext, Feature } from '@wesib/wesib';\nimport { produceBasicStyle } from 'style-producer';\nimport { BodyStyle } from './body.style';\n\n@Feature({\n  needs: ThemeSupport,\n  init: addBodyStyle,\n})\nexport class BodyStyleSupport {}\n\nfunction addBodyStyle(context: BootstrapContext) {\n  context.whenReady(() => {\n    produceBasicStyle(context.get(Theme).style(BodyStyle));\n  });\n}\n","import { Feature } from '@wesib/wesib';\nimport { InputSupport } from './input/input-support.feature';\nimport { LayoutSupportFeature } from './layout';\nimport { BodyStyleSupport } from './theme/body-style-support.feature';\n\n@Feature({\n  needs: [\n    BodyStyleSupport,\n    InputSupport,\n    LayoutSupportFeature,\n  ],\n})\nexport class AppFeature {}\n","import { Theme } from '@wesib/generic';\nimport { mixStypColors, StypProperties, StypRules } from 'style-producer';\nimport { FormThemeSettings } from './form.theme-settings';\n\nexport function InputStyle(theme: Theme): StypRules {\n\n  const formSettings = theme.ref(FormThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  rules.add({ e: 'input' }, formSettings.thru(inStyle));\n  rules.add({ e: 'input', s: '[readonly]' }, formSettings.thru(readonlyInStyle));\n  rules.add({ e: 'input', s: '[disabled]' }, formSettings.thru(readonlyInStyle));\n  rules.add({ e: 'input', s: ':focus' }, formSettings.thru(focusedInStyle));\n  rules.add({ e: 'input', c: ['inap-invalid', 'inap-touched'] }, formSettings.thru(invalidInStyle));\n  rules.add({ e: 'input', c: ['inap-missing', 'inap-touched'] }, { outlineStyle: 'dotted' });\n  rules.add({ e: 'input', c: ['inap-incomplete', 'inap-touched'] }, { outlineStyle: 'dotted' });\n\n  return rules.grab({ e: 'input' });\n}\n\nexport function inStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n      $marginV,\n      $marginH,\n      $paddingV,\n      $paddingH,\n      $bgColor,\n      $borderColor,\n      $borderW,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n    padding: `${$paddingV} ${$paddingH}`,\n    margin: `${$marginV} ${$marginH}`,\n    backgroundColor: $bgColor,\n    border: '0 none',\n    outline: `${$borderW} solid ${$borderColor}`,\n    boxShadow: 'inset 1px 1px 2px -2px black',\n    boxSizing: 'border-box',\n    width: '100%',\n  };\n}\n\nexport function readonlyInStyle(\n    {\n      $roBgColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $roBgColor,\n  };\n}\n\nfunction focusedInStyle(\n    {\n      $color,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outlineColor: mixStypColors($borderColor, $color, 0.5),\n  };\n}\n\nfunction invalidInStyle(\n    {\n      $color,\n      $borderW,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outline: `${$borderW.mul(2)} dashed ${mixStypColors($borderColor, $color, 0.25)}`,\n  };\n}\n","import { bootstrapComponents } from '@wesib/wesib';\nimport { AppFeature } from './app.feature';\n\nexport * from './app.feature';\nexport * from './bex.ns';\nexport * from './input';\nexport * from './theme';\n\nexport const examplesContext = bootstrapComponents(AppFeature);\n"],"names":["BEX__NS","NamespaceDef","InElementComponent","[object Object]","context","this","trackValue","_control","read","inControl","get","ComponentInControl","root","ComponentNode","whenOn","onSupply","supply","eventSupply","needs","inSupply","noEventSupply","select","inputSelector","all","deep","first","receive","_ctx","node","it","nodeControl","ctrl","off","enable","whenOff","undefined","stypRoot","display","rules","inText","element","__decorate","ProduceStyle","Component","name","setup","ThemeSettings","RefStypRule","by","$","$color","StypRGB","r","g","b","$bgColor","$fontFace","$fontSize","StypLengthPt","of","$lineHeight","$fontWeight","$linkFontWeight","$layoutBreakpoint","StypLength","mediaStyle","@media:sm","LinkStyle","theme","settings","ref","keep","selector","e","add","thru","linkStyle","s","textDecoration","grab","color","fontWeight","DefaultStyle","defaultStyle","stypRules","self","style","font","displayBlockCssClass","BodyStyle","bodySelector","htmlSelector","bodyStyle","height","margin","padding","c","backgroundColor","FormThemeSettings","StypRuleRefs","global","formMappings","hsl","set","l","$roBgColor","$errorFontSize","mul","$borderColor","$marginV","div","$marginH","$paddingV","$paddingH","$borderW","ValidationResult__key","SingleContextKey","ValidationResult","inValidationResult","_result","ContextKey__symbol","control","aspect","InValidation","result","InErrorComponent","_context","Set","validationResult","_validationResult","value","oldValue","updateState","code","_codes","trim","split","hasErrorsClassName","css__naming","DefaultNamespaceAliaser","itsEvery","has","classList","remove","borderW","Theme","fontSize","borderLeft","paddingLeft","sub","AttributeChanged","Render","perComponent","as","a","ComponentIn","receiver","afterThe","with","InputSupport","Feature","ComponentTreeSupport","ThemeSupport","MainComponent","_response","on","n","o","navigation","Navigation","once","page","put","pageLoadParam","fragment","tag","tagName","response","document","BootstrapWindow","range","createRange","selectNodeContents","deleteContents","ok","target","createDocumentFragment","importNodeContent","insertNode","createTextNode","error","bexBodyStyle","activeNavLinkClass","NavComponent","_theme","nsAlias","activeClass","navLinks","linkSupplies","Map","track","tillOff","added","removed","forEach","link","linkSupply","delete","DomEventDispatcher","instead","contains","open","getAttribute","afterAll","links","pageDir","dirName","url","activeElement","activeDir","linkDir","URL","href","startsWith","length","navStyle","navLinkStyle","activeNavLinkStyle","path","pathname","endsWith","navLinkBackground","border","outline","background","ContainerComponent","bsContext","BootstrapContext","elementDef","navName","whenDefined","mainName","flexFlow","alignItems","alignContent","sts","flex","feature","LayoutSupportFeature","PageLoadSupport","RenderSupport","StyleProducerSupport","BodyStyleSupport","init","whenReady","produceBasicStyle","AppFeature","InputStyle","formSettings","inStyle","readonlyInStyle","focusedInStyle","invalidInStyle","outlineStyle","boxShadow","boxSizing","width","outlineColor","mixStypColors","examplesContext","bootstrapComponents"],"mappings":"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"}