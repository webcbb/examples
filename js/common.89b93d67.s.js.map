{"version":3,"file":"common.89b93d67.s.js","sources":["../../src/common/input/input.style.ts","../../src/common/bex.ns.ts","../../src/common/input/in-element.component.ts","../../src/common/theme/theme-settings.ts","../../src/common/theme/link.style.ts","../../src/common/theme/default.style.ts","../../src/common/theme/body.style.ts","../../src/common/input/form.theme-settings.ts","../../src/common/input/validation-result.ts","../../src/common/input/in-error.component.ts","../../src/common/input/input-support.feature.ts","../../src/common/layout/main.component.ts","../../src/common/layout/nav.component.ts","../../src/common/layout/container.component.ts","../../src/common/layout/layout-support.feature.ts","../../src/common/theme/body-style-support.feature.ts","../../src/common/app.feature.ts","../../src/common/index.ts"],"sourcesContent":["import { Theme } from '@wesib/generic';\nimport { mixStypColors, StypProperties, StypRules } from 'style-producer';\nimport { FormThemeSettings } from './form.theme-settings';\n\nexport function InputStyle(theme: Theme): StypRules {\n\n  const formSettings = theme.ref(FormThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  rules.add({ e: 'input' }, formSettings.thru(inStyle));\n  rules.add({ e: 'input', s: '[readonly]' }, formSettings.thru(readonlyInStyle));\n  rules.add({ e: 'input', s: '[disabled]' }, formSettings.thru(readonlyInStyle));\n  rules.add({ e: 'input', s: ':focus' }, formSettings.thru(focusedInStyle));\n  rules.add({ e: 'input', c: ['inap-invalid', 'inap-touched'] }, formSettings.thru(invalidInStyle));\n  rules.add({ e: 'input', c: ['inap-missing', 'inap-touched'] }, { outlineStyle: 'dotted' });\n  rules.add({ e: 'input', c: ['inap-incomplete', 'inap-touched'] }, { outlineStyle: 'dotted' });\n\n  return rules.grab({ e: 'input' });\n}\n\nexport function inStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n      $marginV,\n      $marginH,\n      $paddingV,\n      $paddingH,\n      $bgColor,\n      $borderColor,\n      $borderW,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n    padding: `${$paddingV} ${$paddingH}`,\n    margin: `${$marginV} ${$marginH}`,\n    backgroundColor: $bgColor,\n    border: '0 none',\n    outline: `${$borderW} solid ${$borderColor}`,\n    boxShadow: 'inset 1px 1px 2px -2px black',\n    boxSizing: 'border-box',\n    width: '100%',\n  };\n}\n\nexport function readonlyInStyle(\n    {\n      $roBgColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $roBgColor,\n  };\n}\n\nfunction focusedInStyle(\n    {\n      $color,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outlineColor: mixStypColors($borderColor, $color, 0.5),\n  };\n}\n\nfunction invalidInStyle(\n    {\n      $color,\n      $borderW,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outline: `${$borderW.mul(2)} dashed ${mixStypColors($borderColor, $color, 0.25)}`,\n  };\n}\n","import { NamespaceDef } from 'namespace-aliaser';\n\nexport const BEX__NS = new NamespaceDef(\n    'https://wesib.github.io/examples',\n    'bex',\n    'wesib-examples',\n);\n","import { ComponentInControl, ComponentNode, ElementNode, ProduceStyle } from '@wesib/generic';\nimport { Component, ComponentContext } from '@wesib/wesib';\nimport { AfterEvent, eventSupply, noEventSupply, trackValue } from 'fun-events';\nimport { InControl, inText } from 'input-aspects';\nimport { stypRoot, StypRules } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\n\n@Component({\n  name: ['in-element', BEX__NS],\n  setup: ComponentInControl.setup,\n})\nexport class InElementComponent<Ctrl extends InControl<any> = InControl<any>> {\n\n  private readonly _control = trackValue<Ctrl>();\n  readonly control: AfterEvent<[Ctrl?]> = this._control.read;\n\n  constructor(context: ComponentContext) {\n\n    const inControl = context.get(ComponentInControl);\n    const root = context.get(ComponentNode);\n\n    context.whenOn(onSupply => {\n\n      const supply = eventSupply().needs(onSupply);\n      let inSupply = noEventSupply();\n\n      root.select(this.inputSelector(), { all: true, deep: true })\n          .first({\n            supply,\n            receive: (_ctx, node ) => {\n              this._control.it = node && this.nodeControl(node);\n            },\n          });\n      this._control.read({\n        supply,\n        receive: (_ctx, ctrl) => {\n          inSupply.off();\n          if (ctrl) {\n            inSupply = inControl.enable(ctrl)\n                .needs(supply)\n                .whenOff(() => this._control.it = undefined);\n          }\n        },\n      });\n    });\n  }\n\n  @ProduceStyle()\n  inputStyle(): StypRules.Source {\n    return stypRoot({\n      display: 'block',\n    }).rules;\n  }\n\n  protected inputSelector(): string {\n    return 'input';\n  }\n\n  protected nodeControl(node: ElementNode): Ctrl {\n    return inText(node.element) as any;\n  }\n\n}\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypProperties, StypRGB } from 'style-producer';\n\nexport interface ThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $linkFontWeight: string;\n  $layoutBreakpoint: StypLength;\n}\n\nexport const ThemeSettings: RefStypRule<ThemeSettings> = RefStypRule.by(\n    { $: 'settings' },\n    {\n      $color: new StypRGB({ r: 161, g: 185, b: 142 }),\n      $bgColor: new StypRGB({ r: 40, g: 43, b: 36 }),\n      $fontFace: `'Exo 2', sans-serif`,\n      $fontSize: StypLengthPt.of(1, 'em'),\n      $lineHeight: 1.2,\n      $fontWeight: '400',\n      $linkFontWeight: '600',\n      $layoutBreakpoint: StypLength.of(576, 'px'),\n    },\n);\n\nexport function mediaStyle({ $layoutBreakpoint }: ThemeSettings): StypProperties {\n  return {\n    '@media:sm': `(max-width: ${$layoutBreakpoint})`,\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, StypRules } from 'style-producer';\nimport { ThemeSettings } from './theme-settings';\n\nexport function LinkStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const selector = { e: 'a' };\n\n  theme.root.rules.add(selector, settings.thru(linkStyle));\n  theme.root.rules.add({ e: 'a', s: ':visited' }, settings.thru(linkStyle));\n  theme.root.rules.add({ e: 'a', s: ':hover' }, { textDecoration: 'underline' });\n  theme.root.rules.add({ e: 'a', s: ':active' }, { textDecoration: 'underline dotted' });\n  theme.root.rules.add({ e: 'a', s: ':focus' }, { textDecoration: 'underline dotted' });\n\n  return theme.root.rules.grab(selector);\n}\n\nfunction linkStyle(\n    {\n      $color,\n      $linkFontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    fontWeight: $linkFontWeight,\n    textDecoration: 'none',\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { LinkStyle } from './link.style';\nimport { mediaStyle, ThemeSettings } from './theme-settings';\n\nexport function DefaultStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n\n  theme.root.add(settings.thru(defaultStyle));\n  theme.root.add(settings.thru(mediaStyle));\n\n  return stypRules(\n      theme.root.rules.self,\n      theme.style(LinkStyle),\n  );\n}\n\nfunction defaultStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { QualifiedName } from 'namespace-aliaser';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { DefaultStyle } from './default.style';\nimport { ThemeSettings } from './theme-settings';\n\nexport const displayBlockCssClass: QualifiedName = ['display-block', BEX__NS];\n\nexport function BodyStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const bodySelector = { e: 'body' };\n  const htmlSelector = { e: 'html' };\n  const { root: { rules } } = theme;\n\n  rules.add(bodySelector, settings.thru(bodyStyle));\n  rules.add(\n      htmlSelector,\n      {\n        height: '100%',\n        margin: 0,\n        padding: 0,\n      },\n  );\n  rules.add(\n      { c: displayBlockCssClass },\n      {\n        display: 'block !important',\n      },\n  );\n\n  return stypRules(\n      rules.grab(htmlSelector),\n      rules.grab(bodySelector),\n      rules.grab({ c: displayBlockCssClass }),\n      theme.style(DefaultStyle),\n  );\n}\n\nfunction bodyStyle(\n    {\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $bgColor,\n    height: '100%',\n    margin: 0,\n    padding: 0,\n  };\n}\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypMapper, StypRuleRefs } from 'style-producer';\nimport { ThemeSettings } from '../theme';\n\nexport interface FormThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $roBgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $errorFontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $borderColor: StypColor;\n  $marginV: StypLengthPt;\n  $marginH: StypLengthPt;\n  $paddingV: StypLengthPt;\n  $paddingH: StypLengthPt;\n  $borderW: StypLength;\n}\n\nexport const FormThemeSettings: RefStypRule<FormThemeSettings> = RefStypRule.by(\n    { $: 'settings:form' },\n    root => StypRuleRefs.by<{ global: ThemeSettings }>(\n        {\n          global: ThemeSettings,\n        },\n        root,\n    ).read.keep.thru(formMappings),\n);\n\nfunction formMappings(\n    {\n      global: {\n        $color,\n        $bgColor,\n        $fontFace,\n        $fontSize,\n        $lineHeight,\n        $fontWeight,\n      },\n    }: {\n      global: ThemeSettings,\n    },\n): StypMapper.Mappings<FormThemeSettings> {\n  return {\n    $color,\n    $bgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 })),\n    $roBgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.94 })),\n    $fontFace,\n    $fontSize,\n    $errorFontSize: $fontSize.mul(0.8),\n    $lineHeight,\n    $fontWeight,\n    $borderColor: $bgColor,\n    $marginV: $fontSize.div(4),\n    $marginH: $fontSize.div(4),\n    $paddingV: $fontSize.div(2),\n    $paddingH: $fontSize,\n    $borderW: StypLength.of(1, 'px'),\n  };\n}\n","import { ComponentInContext } from '@wesib/generic';\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { AfterEvent, EventSupply, trackValue } from 'fun-events';\nimport { InValidation, inValidationResult } from 'input-aspects';\n\nconst ValidationResult__key = (/*#__PURE__*/ new SingleContextKey<ValidationResult>('error-receiver'));\n\nexport class ValidationResult {\n\n  static get [ContextKey__symbol](): ContextKey<ValidationResult> {\n    return ValidationResult__key;\n  }\n\n  private readonly _result = trackValue<InValidation.Result>(inValidationResult());\n  readonly read: AfterEvent<[InValidation.Result]> = this._result.read;\n\n  enable({ control }: ComponentInContext): EventSupply {\n    return control.aspect(InValidation)\n        .read(result => this._result.it = result)\n        .whenOff(() => this._result.it = inValidationResult());\n  }\n\n}\n","import { ComponentIn, ProduceStyle, Theme } from '@wesib/generic';\nimport { AttributeChanged, Component, ComponentContext, DefaultNamespaceAliaser, Render } from '@wesib/wesib';\nimport { itsEvery } from 'a-iterable';\nimport { afterThe } from 'fun-events';\nimport { InValidation, inValidationResult } from 'input-aspects';\nimport { css__naming } from 'namespace-aliaser';\nimport { StypLengthPt, stypRoot, StypRules } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { displayBlockCssClass } from '../theme';\nimport { FormThemeSettings } from './form.theme-settings';\nimport { ValidationResult } from './validation-result';\n\n@Component({\n  name: ['in-error', BEX__NS],\n  setup(setup) {\n    setup.perComponent({ as: ValidationResult });\n    setup.perComponent({\n      a: ComponentIn,\n      by: (receiver: ValidationResult) => afterThe<[ComponentIn]>(context => receiver.enable(context)),\n      with: [ValidationResult],\n    });\n  },\n})\nexport class InErrorComponent {\n\n  private _validationResult: InValidation.Result = inValidationResult();\n  private _codes = new Set<string>();\n\n  constructor(private readonly _context: ComponentContext) {\n\n    const result = _context.get(ValidationResult);\n\n    _context.whenOn(supply => {\n      result.read(r => this.validationResult = r)\n          .needs(supply)\n          .whenOff(() => this.validationResult = inValidationResult());\n    });\n  }\n\n  get validationResult(): InValidation.Result {\n    return this._validationResult;\n  }\n\n  set validationResult(value: InValidation.Result) {\n\n    const oldValue = this._validationResult;\n\n    this._validationResult = value;\n    this._context.updateState('validationResult', value, oldValue);\n  }\n\n  @AttributeChanged('code')\n  setCode(code: string) {\n    this._codes = new Set(code.trim().split(/\\s+/));\n  }\n\n  @Render()\n  render() {\n\n    const element: Element = this._context.element;\n    const hasErrorsClassName = css__naming.name(\n        displayBlockCssClass,\n        this._context.get(DefaultNamespaceAliaser),\n    );\n\n    return () => {\n      if (itsEvery(this._codes, code => !this.validationResult.has(code))) {\n        element.classList.remove(hasErrorsClassName);\n      } else {\n        element.classList.add(hasErrorsClassName);\n      }\n    };\n  }\n\n  @ProduceStyle()\n  style(): StypRules {\n\n    const borderW = StypLengthPt.of(4, 'px');\n    const settings = this._context.get(Theme).ref(FormThemeSettings).read.keep;\n\n    return stypRoot(\n        settings.thru(({ $color, $errorFontSize }) => ({\n          display: 'none',\n          fontSize: $errorFontSize,\n          padding: $errorFontSize.div(2),\n          borderLeft: `${borderW} dotted ${$color}`,\n          paddingLeft: $errorFontSize.sub(borderW),\n        })),\n    ).rules;\n  }\n\n}\n","import { ComponentTreeSupport, ThemeSupport } from '@wesib/generic';\nimport { Feature } from '@wesib/wesib';\nimport { InElementComponent } from './in-element.component';\nimport { InErrorComponent } from './in-error.component';\n\n@Feature({\n  needs: [\n    ComponentTreeSupport,\n    InElementComponent,\n    InErrorComponent,\n    ThemeSupport,\n  ],\n})\nexport class InputSupport {\n}\n","import { importNodeContent, Navigation, pageLoadParam, PageLoadResponse, ProduceStyle, Theme } from '@wesib/generic';\nimport { BootstrapWindow, Component, ComponentContext, Render } from '@wesib/wesib';\nimport { trackValue } from 'fun-events';\nimport { StypProperties, stypRoot } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { ThemeSettings } from '../theme';\n\n@Component({\n  name: ['main', BEX__NS],\n})\nexport class MainComponent {\n\n  private readonly _response = trackValue<PageLoadResponse>();\n\n  constructor(private readonly _context: ComponentContext) {\n    this._response.on((n, o) => _context.updateState('response', n, o));\n\n    const navigation = _context.get(Navigation);\n\n    _context.whenOn(supply => {\n      navigation.read.once(page => {\n        page.put(\n            pageLoadParam,\n            {\n              fragment: { tag: _context.element.tagName },\n              receiver: {\n                supply,\n                receive: (_ctx, response) => this._response.it = response,\n              },\n            },\n        );\n      });\n    });\n  }\n\n  @Render()\n  render() {\n\n    const document = this._context.get(BootstrapWindow).document;\n    const range = document.createRange();\n\n    range.selectNodeContents(this._context.element);\n\n    return () => {\n\n      const response = this._response.it;\n\n      if (response) {\n        range.deleteContents();\n        if (response.ok) {\n\n          const target = document.createDocumentFragment();\n          const { fragment } = response;\n\n          if (fragment) {\n            importNodeContent(fragment, target);\n            range.insertNode(target);\n          }\n        } else if (response.ok == null) {\n          range.insertNode(document.createTextNode('Loading...'));\n        } else {\n          range.insertNode(document.createTextNode(`Error. ${response.error}`));\n        }\n      }\n    };\n  }\n\n  @ProduceStyle()\n  style() {\n\n    const settings = this._context.get(Theme).ref(ThemeSettings).read.keep;\n    const root = stypRoot(settings.thru(bexBodyStyle));\n\n    return root.rules;\n  }\n\n}\n\nfunction bexBodyStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    padding: 0,\n    margin: `0 0 0 ${$fontSize.div(2)}`,\n  };\n}\n","import { ComponentNode, ElementNode, Navigation, ProduceStyle, Theme } from '@wesib/generic';\nimport { Component, ComponentContext, DefaultNamespaceAliaser } from '@wesib/wesib';\nimport { afterAll, DomEventDispatcher, EventSupply } from 'fun-events';\nimport { css__naming, QualifiedName } from 'namespace-aliaser';\nimport { StypColor, StypLengthPt, StypProperties, stypRoot } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { ThemeSettings } from '../theme';\n\nconst activeNavLinkClass: QualifiedName = ['nav-active', BEX__NS];\n\n@Component({\n  name: ['nav', BEX__NS],\n})\nexport class NavComponent {\n\n  private readonly _theme: Theme;\n\n  constructor(context: ComponentContext) {\n    this._theme = context.get(Theme);\n\n    const nsAlias = context.get(DefaultNamespaceAliaser);\n    const activeClass = css__naming.name(activeNavLinkClass, nsAlias);\n    const node = context.get(ComponentNode);\n    const navigation = context.get(Navigation);\n\n    context.whenOn(supply => {\n\n      const navLinks = node.select('a', { all: true });\n      const linkSupplies = new Map<ElementNode, EventSupply>();\n\n      navLinks.track.tillOff(supply)((added, removed) => {\n        removed.forEach(link => {\n\n          const linkSupply = linkSupplies.get(link);\n\n          if (linkSupply) {\n            linkSupplies.delete(link);\n            linkSupply.off();\n          }\n        });\n        added.forEach(\n            link => {\n\n              const element: Element = link.element;\n              const linkSupply = new DomEventDispatcher(element)\n                  .on('click')\n                  .instead(() => {\n                    if (!element.classList.contains(activeClass)) {\n                      navigation.open(element.getAttribute('href') || '');\n                    }\n                  })\n                  .needs(supply);\n\n              linkSupplies.set(link, linkSupply);\n            },\n        );\n      });\n      afterAll({\n        links: navLinks,\n        page: navigation,\n      })({\n        supply,\n        receive(\n            _ctx,\n            {\n              links: [links],\n              page: [page],\n            },\n        ) {\n\n          const pageDir = dirName(page.url);\n          let activeElement: Element | undefined;\n          let activeDir = '';\n\n          links.forEach(link => {\n\n            const element: HTMLAnchorElement = link.element;\n            const linkDir = dirName(new URL(element.href));\n\n            element.classList.remove(activeClass);\n\n            if (pageDir.startsWith(linkDir) && activeDir.length < linkDir.length) {\n              activeElement = element;\n              activeDir = linkDir;\n            }\n          });\n\n          if (activeElement) {\n            activeElement.classList.add(activeClass);\n          }\n        },\n      });\n    });\n  }\n\n  @ProduceStyle()\n  style() {\n\n    const settings = this._theme.ref(ThemeSettings).read.keep;\n    const root = stypRoot(settings.thru(navStyle));\n\n    root.rules.add({ e: 'a' }, settings.thru(navLinkStyle));\n    root.rules.add({ e: 'a', c: activeNavLinkClass }, settings.thru(activeNavLinkStyle));\n\n    return root.rules;\n  }\n\n}\n\nfunction dirName(url: URL): string {\n\n  const path = url.pathname;\n\n  if (path.endsWith('/')) {\n    return path;\n  }\n\n  return path + '/';\n}\n\nfunction navStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    padding: 0,\n    margin: `0 ${$fontSize.div(2)} 0 0`,\n  };\n}\n\nexport function navLinkBackground({ $bgColor }: ThemeSettings): StypColor {\n  return $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 }));\n}\n\nfunction navLinkStyle(\n    settings: ThemeSettings,\n): StypProperties {\n\n  const { $fontSize } = settings;\n\n  return {\n    display: 'block',\n    margin: 0,\n    padding: `${$fontSize.div(2)} ${$fontSize}`,\n    border: 0,\n    outline: 0,\n    background: navLinkBackground(settings),\n  };\n}\n\nfunction activeNavLinkStyle(\n    {\n      $fontSize,\n      $color,\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n\n  const borderW = StypLengthPt.of(4, 'px');\n\n  return {\n    background: $bgColor,\n    borderLeft: `${borderW} solid ${$color}`,\n    paddingLeft: $fontSize.sub(borderW),\n  };\n}\n","import { ProduceStyle, Theme } from '@wesib/generic';\nimport { BootstrapContext, Component, ComponentContext } from '@wesib/wesib';\nimport { stypRoot, StypRules } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { mediaStyle, ThemeSettings } from '../theme';\nimport { MainComponent } from './main.component';\nimport { NavComponent, navLinkBackground } from './nav.component';\n\n@Component({\n  name: ['container', BEX__NS],\n  feature: {\n    needs: [\n      MainComponent,\n      NavComponent,\n    ],\n  },\n})\nexport class ContainerComponent {\n\n  constructor(private readonly _context: ComponentContext) {\n  }\n\n  @ProduceStyle()\n  async style(): Promise<StypRules> {\n\n    const bsContext = this._context.get(BootstrapContext);\n    const { elementDef: { name: navName } } = await bsContext.whenDefined(NavComponent);\n    const { elementDef: { name: mainName } } = await bsContext.whenDefined(MainComponent);\n    const theme = this._context.get(Theme);\n    const settings = theme.ref(ThemeSettings).read.keep;\n\n    const { rules } = stypRoot({\n      height: '100%',\n      display: 'flex',\n      flexFlow: 'row wrap',\n      alignItems: 'stretch',\n      alignContent: 'flex-start',\n    }).add(\n        settings.thru(mediaStyle),\n    );\n    rules.add(\n        { s: ' ', $: '@media:sm' },\n        {\n          height: 'auto',\n        },\n    );\n    rules.add(\n        { e: navName },\n        settings.thru(sts => ({\n          flex: '0 1 200px',\n          height: '100%',\n          background: navLinkBackground(sts),\n        })),\n    );\n    rules.add(\n        { e: navName, $: '@media:sm' },\n        {\n          flex: '0 1 100%',\n        },\n    );\n    rules.add(\n        { e: mainName },\n        settings.thru(({ $fontSize }) => ({\n          flex: '1 1 auto',\n          margin: $fontSize,\n        })),\n    );\n\n    return rules;\n  }\n\n}\n","import { ComponentTreeSupport, PageLoadSupport, StyleProducerSupport, ThemeSupport } from '@wesib/generic';\nimport { Feature, RenderSupport } from '@wesib/wesib';\nimport { ContainerComponent } from './container.component';\n\n@Feature({\n  needs: [\n    ContainerComponent,\n    ComponentTreeSupport,\n    PageLoadSupport,\n    RenderSupport,\n    StyleProducerSupport,\n    ThemeSupport,\n  ],\n})\nexport class LayoutSupportFeature {\n}\n","import { Theme, ThemeSupport } from '@wesib/generic';\nimport { BootstrapContext, Feature } from '@wesib/wesib';\nimport { produceBasicStyle } from 'style-producer';\nimport { BodyStyle } from './body.style';\n\n@Feature({\n  needs: ThemeSupport,\n  init: addBodyStyle,\n})\nexport class BodyStyleSupport {}\n\nfunction addBodyStyle(context: BootstrapContext) {\n  context.whenReady(() => {\n    produceBasicStyle(context.get(Theme).style(BodyStyle));\n  });\n}\n","import { Feature } from '@wesib/wesib';\nimport { InputSupport } from './input/input-support.feature';\nimport { LayoutSupportFeature } from './layout';\nimport { BodyStyleSupport } from './theme/body-style-support.feature';\n\n@Feature({\n  needs: [\n    BodyStyleSupport,\n    InputSupport,\n    LayoutSupportFeature,\n  ],\n})\nexport class AppFeature {}\n","import { bootstrapComponents } from '@wesib/wesib';\nimport { AppFeature } from './app.feature';\n\nexport * from './app.feature';\nexport * from './bex.ns';\nexport * from './input';\nexport * from './theme';\n\nexport const examplesContext = bootstrapComponents(AppFeature);\n"],"names":["theme","formSettings","ref","FormThemeSettings","read","keep","rules","add","e","thru","inStyle","s","readonlyInStyle","focusedInStyle","c","invalidInStyle","outlineStyle","grab","BEX__NS","NamespaceDef","context","this","trackValue","_control","inControl","get","ComponentInControl","root","ComponentNode","whenOn","onSupply","supply","eventSupply","needs","inSupply","noEventSupply","select","_this","inputSelector","all","deep","first","receive","_ctx","node","it","nodeControl","ctrl","off","enable","whenOff","undefined","InElementComponent","stypRoot","display","inText","element","__decorate","ProduceStyle","Component","name","setup","ThemeSettings","RefStypRule","by","$","$color","StypRGB","r","g","b","$bgColor","$fontFace","$fontSize","StypLengthPt","of","$lineHeight","$fontWeight","$linkFontWeight","$layoutBreakpoint","StypLength","mediaStyle","_a","@media:sm","LinkStyle","settings","selector","linkStyle","textDecoration","color","fontWeight","DefaultStyle","defaultStyle","stypRules","self","style","font","displayBlockCssClass","BodyStyle","bodySelector","htmlSelector","bodyStyle","height","margin","padding","backgroundColor","StypRuleRefs","global","formMappings","_b","hsl","set","l","$roBgColor","$errorFontSize","mul","$borderColor","$marginV","div","$marginH","$paddingV","$paddingH","$borderW","ValidationResult__key","SingleContextKey","inValidationResult","_result","Object","ValidationResult","aspect","InValidation","result","_context","Set","validationResult","InErrorComponent","_validationResult","value","oldValue","updateState","code","_codes","trim","split","hasErrorsClassName","css__naming","DefaultNamespaceAliaser","itsEvery","has","classList","remove","borderW","Theme","fontSize","borderLeft","paddingLeft","sub","AttributeChanged","Render","perComponent","as","a","ComponentIn","receiver","afterThe","with","InputSupport","Feature","ComponentTreeSupport","ThemeSupport","_response","on","n","o","navigation","Navigation","once","page","put","pageLoadParam","fragment","tag","tagName","response","MainComponent","document","BootstrapWindow","range","createRange","selectNodeContents","deleteContents","ok","target","createDocumentFragment","importNodeContent","insertNode","createTextNode","error","bexBodyStyle","activeNavLinkClass","_theme","nsAlias","activeClass","navLinks","linkSupplies","Map","track","tillOff","added","removed","forEach","link","linkSupply","delete","DomEventDispatcher","instead","contains","open","getAttribute","afterAll","links","activeElement","pageDir","dirName","url","activeDir","linkDir","URL","href","startsWith","length","NavComponent","navStyle","navLinkStyle","activeNavLinkStyle","path","pathname","endsWith","navLinkBackground","border","outline","background","ContainerComponent","bsContext","BootstrapContext","whenDefined","navName","mainName","flexFlow","alignItems","alignContent","sts","flex","feature","LayoutSupportFeature","PageLoadSupport","RenderSupport","StyleProducerSupport","BodyStyleSupport","init","addBodyStyle","whenReady","produceBasicStyle","AppFeature","boxShadow","boxSizing","width","outlineColor","mixStypColors","bootstrapComponents"],"mappings":"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"}