{"version":3,"file":"common.8de727fe.s.js","sources":["../../src/common/input/input.style.ts","../../src/common/examples.ns.ts","../../src/common/theme/theme-settings.ts","../../src/common/theme/link.style.ts","../../src/common/theme/default.style.ts","../../src/common/theme/body.style.ts","../../src/common/input/form.theme-settings.ts","../../src/common/input/in-error.component.ts","../../src/common/input/input-support.feature.ts","../../src/common/layout/main.component.ts","../../src/common/layout/nav.component.ts","../../src/common/layout/container.component.ts","../../src/common/layout/layout-support.feature.ts","../../src/common/theme/body-style-support.feature.ts","../../src/common/app.feature.ts","../../src/common/index.ts"],"sourcesContent":["import { Theme } from '@wesib/generic/styp';\nimport { InputAspects__NS } from 'input-aspects';\nimport { mixStypColors, StypProperties, stypRules, StypRules } from 'style-producer';\nimport { FormThemeSettings } from './form.theme-settings';\n\nexport function InputStyle(theme: Theme): StypRules {\n\n  const formSettings = theme.ref(FormThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add({ e: 'input' }, formSettings.thru(inStyle)),\n      rules.add({ e: 'input', s: '[readonly]' }, formSettings.thru(readonlyInStyle)),\n      rules.add({ e: 'input', s: '[disabled]' }, formSettings.thru(readonlyInStyle)),\n      rules.add({ e: 'input', s: ':focus' }, formSettings.thru(focusedInStyle)),\n      rules.add(\n          {\n            e: 'input',\n            c: [\n              ['invalid', InputAspects__NS],\n              ['touched', InputAspects__NS],\n            ],\n          },\n          formSettings.thru(invalidInStyle),\n      ),\n      rules.add(\n          {\n            e: 'input',\n            c: [\n              ['missing', InputAspects__NS],\n              ['touched', InputAspects__NS],\n            ],\n          },\n          {\n            outlineStyle: 'dotted',\n          },\n      ),\n      rules.add(\n          {\n            e: 'input',\n            c: [\n              ['incomplete', InputAspects__NS],\n              ['touched', InputAspects__NS],\n            ],\n          },\n          {\n            outlineStyle: 'dotted',\n          },\n      ),\n  );\n}\n\nexport function inStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n      $marginV,\n      $marginH,\n      $paddingV,\n      $paddingH,\n      $bgColor,\n      $borderColor,\n      $borderW,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n    padding: `${$paddingV} ${$paddingH}`,\n    margin: `${$marginV} ${$marginH}`,\n    backgroundColor: $bgColor,\n    border: '0 none',\n    outline: `${$borderW} solid ${$borderColor}`,\n    boxShadow: 'inset 1px 1px 2px -2px black',\n    boxSizing: 'border-box',\n    width: '100%',\n  };\n}\n\nexport function readonlyInStyle(\n    {\n      $roBgColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $roBgColor,\n  };\n}\n\nfunction focusedInStyle(\n    {\n      $color,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outlineColor: mixStypColors($borderColor, $color, 0.5),\n  };\n}\n\nfunction invalidInStyle(\n    {\n      $color,\n      $borderW,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outline: `${$borderW.mul(2)} dashed ${mixStypColors($borderColor, $color, 0.25)}`,\n  };\n}\n","import { NamespaceDef } from 'namespace-aliaser';\n\nexport const Examples__NS = new NamespaceDef(\n    'https://wesib.github.io/examples',\n    'bex',\n    'wesib-examples',\n);\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypProperties, StypRGB } from 'style-producer';\n\nexport interface ThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $linkFontWeight: string;\n  $layoutBreakpoint: StypLength;\n}\n\nexport const ThemeSettings: RefStypRule<ThemeSettings> = RefStypRule.by(\n    { $: 'settings' },\n    {\n      $color: new StypRGB({ r: 161, g: 185, b: 142 }),\n      $bgColor: new StypRGB({ r: 40, g: 43, b: 36 }),\n      $fontFace: `'Exo 2', sans-serif`,\n      $fontSize: StypLengthPt.of(1, 'em'),\n      $lineHeight: 1.2,\n      $fontWeight: '400',\n      $linkFontWeight: '600',\n      $layoutBreakpoint: StypLength.of(576, 'px'),\n    },\n);\n\nexport function mediaStyle({ $layoutBreakpoint }: ThemeSettings): StypProperties {\n  return {\n    '@media:sm': `(max-width: ${$layoutBreakpoint})`,\n  };\n}\n","import { Theme } from '@wesib/generic/styp';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { ThemeSettings } from './theme-settings';\n\nexport function LinkStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add({ e: 'a' }, settings.thru(linkStyle)),\n      rules.add({ e: 'a', s: ':visited' }, settings.thru(linkStyle)),\n      rules.add({ e: 'a', s: ':hover' }, { textDecoration: 'underline' }),\n      rules.add({ e: 'a', s: ':active' }, { textDecoration: 'underline dotted' }),\n      rules.add({ e: 'a', s: ':focus' }, { textDecoration: 'underline dotted' }),\n  );\n}\n\nfunction linkStyle(\n    {\n      $color,\n      $linkFontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    fontWeight: $linkFontWeight,\n    textDecoration: 'none',\n  };\n}\n","import { Theme } from '@wesib/generic/styp';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { LinkStyle } from './link.style';\nimport { mediaStyle, ThemeSettings } from './theme-settings';\n\nexport function DefaultStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n\n  return stypRules(\n      theme.root\n          .add(settings.thru(defaultStyle))\n          .add(settings.thru(mediaStyle)),\n      theme.style(LinkStyle),\n  );\n}\n\nfunction defaultStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n  };\n}\n","import { Theme } from '@wesib/generic/styp';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { DefaultStyle } from './default.style';\nimport { ThemeSettings } from './theme-settings';\n\nexport function BodyStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add(\n          { e: 'html' },\n          {\n            height: '100%',\n            margin: 0,\n            padding: 0,\n          },\n      ),\n      rules.add(\n          { e: 'body' },\n          settings.thru(bodyStyle),\n      ),\n      theme.style(DefaultStyle),\n  );\n}\n\nfunction bodyStyle(\n    {\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $bgColor,\n    height: '100%',\n    margin: 0,\n    padding: 0,\n  };\n}\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypMapper, StypRuleRefs } from 'style-producer';\nimport { ThemeSettings } from '../theme';\n\nexport interface FormThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $roBgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $errorFontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $borderColor: StypColor;\n  $marginV: StypLengthPt;\n  $marginH: StypLengthPt;\n  $paddingV: StypLengthPt;\n  $paddingH: StypLengthPt;\n  $borderW: StypLength;\n}\n\nexport const FormThemeSettings: RefStypRule<FormThemeSettings> = RefStypRule.by(\n    { $: 'settings:form' },\n    root => StypRuleRefs.by<{ global: ThemeSettings }>(\n        {\n          global: ThemeSettings,\n        },\n        root,\n    ).read.keep.thru(formMappings),\n);\n\nfunction formMappings(\n    {\n      global: {\n        $color,\n        $bgColor,\n        $fontFace,\n        $fontSize,\n        $lineHeight,\n        $fontWeight,\n      },\n    }: {\n      global: ThemeSettings;\n    },\n): StypMapper.Mappings<FormThemeSettings> {\n  return {\n    $color,\n    $bgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 })),\n    $roBgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.94 })),\n    $fontFace,\n    $fontSize,\n    $errorFontSize: $fontSize.mul(0.8),\n    $lineHeight,\n    $fontWeight,\n    $borderColor: $bgColor,\n    $marginV: $fontSize.div(4),\n    $marginH: $fontSize.div(4),\n    $paddingV: $fontSize.div(2),\n    $paddingH: $fontSize,\n    $borderW: StypLength.of(1, 'px'),\n  };\n}\n","import { ConvertInput } from '@wesib/generic/input';\nimport { ProduceStyle, Theme } from '@wesib/generic/styp';\nimport { Attributes, Component, ComponentContext, trackAttribute } from '@wesib/wesib';\nimport { AfterEvent } from 'fun-events';\nimport { InCssClasses, inCssError, inCssInfo, InputAspects__NS, InStyledElement } from 'input-aspects';\nimport { QualifiedName } from 'namespace-aliaser';\nimport { StypLengthPt, stypRules, StypRules } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { FormThemeSettings } from './form.theme-settings';\n\n@Component(\n    ['in-error', Examples__NS],\n    Attributes('code'),\n    ConvertInput(\n        ({ control: { control }, aspects, context }) => {\n\n          const codes: AfterEvent<[string[]]> = trackAttribute(context, 'code')\n              .read.keep.thru_(\n                  code => code ? code.trim().split(/\\s+/) : [],\n              );\n\n          return codes.keep.thru(\n              when => control.convert(\n                  InStyledElement.to(context.element),\n                  aspects,\n              ).setup(\n                  InCssClasses,\n                  cssClasses => {\n                    cssClasses.add(inCssInfo());\n                    cssClasses.add(inCssError({ when }));\n                  },\n              ),\n          );\n        },\n    ),\n)\nexport class InErrorComponent {\n\n  constructor(private readonly _context: ComponentContext) {\n  }\n\n  @ProduceStyle()\n  style(): StypRules {\n    return this._context.get(Theme).style(InErrorStyle);\n  }\n\n}\n\nconst InError__qualifier = 'bex:in-error';\nconst hasError__cssClass: QualifiedName = ['has-error', InputAspects__NS];\n\nfunction InErrorStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(FormThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n  const borderW = StypLengthPt.of(4, 'px');\n\n  return stypRules(\n      rules.add(\n          { u: [':', 'host'], $: InError__qualifier },\n          settings.thru(({ $color, $errorFontSize }) => ({\n            display: 'none',\n            fontSize: $errorFontSize,\n            padding: $errorFontSize.div(2),\n            borderLeft: `${borderW} dotted ${$color}`,\n            paddingLeft: $errorFontSize.sub(borderW),\n          })),\n      ),\n      rules.add(\n          {\n            u: [\n              ':',\n              'host',\n              {\n                c: [hasError__cssClass, ['touched', InputAspects__NS]],\n                u: [':', 'not', { c: ['has-focus', InputAspects__NS] }],\n              },\n            ],\n            $: InError__qualifier,\n          },\n          {\n            display: 'block',\n          },\n      ),\n      rules.add(\n          {\n            u: [\n              ':',\n              'host',\n              {\n                c: hasError__cssClass,\n                u: [\n                  [':', 'not', { u: ['code', '~=', 'missing'] }],\n                  [':', 'not', { u: ['code', '~=', 'incomplete'] }],\n                ],\n              },\n            ],\n            $: InError__qualifier,\n          },\n          {\n            display: 'block',\n          },\n      ),\n  );\n}\n","import { ComponentTreeSupport } from '@wesib/generic';\nimport { ThemeSupport } from '@wesib/generic/styp';\nimport { Feature } from '@wesib/wesib';\nimport { InErrorComponent } from './in-error.component';\n\n@Feature({\n  needs: [\n    ComponentTreeSupport,\n    InErrorComponent,\n    ThemeSupport,\n  ],\n})\nexport class InputSupport {\n}\n","import { IncludePage } from '@wesib/generic';\nimport { Component } from '@wesib/wesib';\nimport { StypProperties } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { ThemeSettings } from '../theme';\n\n@Component(\n    ['main', Examples__NS],\n    IncludePage({\n      onResponse({ response, range }) {\n        if (!response.ok) {\n          range.deleteContents();\n          if (response.ok == null) {\n            range.insertNode(document.createTextNode('Loading...'));\n          } else {\n            range.insertNode(document.createTextNode(`Error. ${response.error}`));\n          }\n        }\n      },\n    }),\n)\nexport class MainComponent {\n}\n\nexport function mainStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    flex: '1 1 auto',\n    padding: 0,\n    margin: `0 0 0 ${$fontSize.div(2)}`,\n  };\n}\n","import { ActivateNavLink, HandleNavLinks } from '@wesib/generic';\nimport { ProduceStyle, Theme } from '@wesib/generic/styp';\nimport { Component, ComponentContext, Wesib__NS } from '@wesib/wesib';\nimport { StypColor, StypLengthPt, StypProperties, stypRules, StypRules } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { ThemeSettings } from '../theme';\n\n@Component(\n    ['nav', Examples__NS],\n    HandleNavLinks(),\n    ActivateNavLink(),\n)\nexport class NavComponent {\n\n  private readonly _theme: Theme;\n\n  constructor(context: ComponentContext) {\n    this._theme = context.get(Theme);\n  }\n\n  @ProduceStyle()\n  style(): StypRules {\n    return this._theme.style(NavStyle);\n  }\n\n}\n\nconst Nav__qualifier = 'bex:nav';\n\nfunction NavStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add(\n          { u: [':', 'host'], $: Nav__qualifier },\n          settings.thru(navStyle),\n      ),\n      rules.add(\n          { u: [':', 'host'], $: Nav__qualifier },\n          settings.thru(sts => ({\n            flex: '0 1 200px',\n            height: '100%',\n            background: navLinkBackground(sts),\n          })),\n      ),\n      rules.add(\n          { u: [':', 'host'], $: [Nav__qualifier, '@media:sm'] },\n          {\n            flex: '0 1 100%',\n          },\n      ),\n      rules.add(\n          [{ u: [':', 'host'], $: Nav__qualifier }, { e: 'a', $: Nav__qualifier }],\n          settings.thru(navLinkStyle),\n      ),\n      rules.add(\n          [{ u: [':', 'host'], $: Nav__qualifier }, { e: 'a', c: ['active', Wesib__NS], $: Nav__qualifier }],\n          settings.thru(activeNavLinkStyle),\n      ),\n  );\n}\n\nfunction navStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    padding: 0,\n    margin: `0 ${$fontSize.div(2)} 0 0`,\n  };\n}\n\nexport function navLinkBackground({ $bgColor }: ThemeSettings): StypColor {\n  return $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 }));\n}\n\nfunction navLinkStyle(\n    settings: ThemeSettings,\n): StypProperties {\n\n  const { $fontSize } = settings;\n\n  return {\n    display: 'block',\n    margin: 0,\n    padding: `${$fontSize.div(2)} ${$fontSize}`,\n    border: 0,\n    outline: 0,\n    background: navLinkBackground(settings),\n  };\n}\n\nfunction activeNavLinkStyle(\n    {\n      $fontSize,\n      $color,\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n\n  const borderW = StypLengthPt.of(4, 'px');\n\n  return {\n    background: $bgColor,\n    borderLeft: `${borderW} solid ${$color}`,\n    paddingLeft: $fontSize.sub(borderW),\n  };\n}\n","import { ProduceStyle, Theme } from '@wesib/generic/styp';\nimport { BootstrapContext, Component, ComponentContext } from '@wesib/wesib';\nimport { QualifiedName } from 'namespace-aliaser';\nimport { stypRules, StypRules } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { mediaStyle, ThemeSettings } from '../theme';\nimport { MainComponent, mainStyle } from './main.component';\nimport { NavComponent } from './nav.component';\n\n@Component({\n  name: ['container', Examples__NS],\n  feature: {\n    needs: [\n      MainComponent,\n      NavComponent,\n    ],\n  },\n})\nexport class ContainerComponent {\n\n  constructor(private readonly _context: ComponentContext) {\n  }\n\n  @ProduceStyle()\n  async style(): Promise<StypRules> {\n\n    const { elementDef: { name: mainName } } = await this._context.get(BootstrapContext).whenDefined(MainComponent);\n\n    return this._context.get(Theme).style(ContainerStyle(mainName!));\n  }\n\n}\n\nconst Container__qualifier = 'bex:container';\n\nfunction ContainerStyle(mainName: QualifiedName): (theme: Theme) => StypRules {\n  return theme => {\n\n    const settings = theme.ref(ThemeSettings).read.keep;\n    const { root: { rules } } = theme;\n\n    return stypRules(\n        rules.add(\n            { u: [':', 'host'], $: Container__qualifier },\n            {\n              height: '100%',\n              display: 'flex',\n              flexFlow: 'row wrap',\n              alignItems: 'stretch',\n              alignContent: 'flex-start',\n            },\n        ).add(\n            settings.thru(mediaStyle),\n        ),\n        rules.add(\n            { u: [':', 'host'], $: [Container__qualifier, '@media:sm'] },\n            {\n              height: 'auto',\n            },\n        ),\n        rules.add(\n            [{ u: [':', 'host'], $: Container__qualifier }, { e: mainName, $: Container__qualifier }],\n            settings.thru(mainStyle),\n        ),\n    );\n  };\n}\n","import { ComponentTreeSupport, PageLoadSupport } from '@wesib/generic';\nimport { StyleProducerSupport, ThemeSupport } from '@wesib/generic/styp';\nimport { Feature } from '@wesib/wesib';\nimport { ContainerComponent } from './container.component';\n\n@Feature({\n  needs: [\n    ContainerComponent,\n    ComponentTreeSupport,\n    PageLoadSupport,\n    StyleProducerSupport,\n    ThemeSupport,\n  ],\n})\nexport class LayoutSupportFeature {\n}\n","import { Theme, ThemeSupport } from '@wesib/generic/styp';\nimport { Feature } from '@wesib/wesib';\nimport { produceBasicStyle } from 'style-producer';\nimport { BodyStyle } from './body.style';\n\n@Feature({\n  needs: ThemeSupport,\n  init(context) {\n    context.whenReady(() => {\n      produceBasicStyle(context.get(Theme).style(BodyStyle));\n    });\n  },\n})\nexport class BodyStyleSupport {}\n\n","import { Feature } from '@wesib/wesib';\nimport { InputSupport } from './input/input-support.feature';\nimport { LayoutSupportFeature } from './layout';\nimport { BodyStyleSupport } from './theme/body-style-support.feature';\n\n@Feature({\n  needs: [\n    BodyStyleSupport,\n    InputSupport,\n    LayoutSupportFeature,\n  ],\n})\nexport class AppFeature {}\n","import { bootstrapComponents } from '@wesib/wesib';\nimport { AppFeature } from './app.feature';\n\nexport * from './app.feature';\nexport * from './examples.ns';\nexport * from './input';\nexport * from './theme';\n\nexport const examplesContext = bootstrapComponents(AppFeature);\n"],"names":["theme","formSettings","ref","FormThemeSettings","read","keep","rules","stypRules","add","e","thru","inStyle","s","readonlyInStyle","focusedInStyle","c","InputAspects__NS","invalidInStyle","outlineStyle","Examples__NS","NamespaceDef","ThemeSettings","RefStypRule","by","$","$color","StypRGB","r","g","b","$bgColor","$fontFace","$fontSize","StypLengthPt","of","$lineHeight","$fontWeight","$linkFontWeight","$layoutBreakpoint","StypLength","mediaStyle","_a","@media:sm","LinkStyle","settings","linkStyle","textDecoration","color","fontWeight","DefaultStyle","root","defaultStyle","style","font","BodyStyle","height","margin","padding","bodyStyle","backgroundColor","StypRuleRefs","global","formMappings","_b","hsl","set","l","$roBgColor","$errorFontSize","mul","$borderColor","$marginV","div","$marginH","$paddingV","$paddingH","$borderW","_context","this","InErrorComponent","get","Theme","InErrorStyle","__decorate","ProduceStyle","Component","Attributes","ConvertInput","control","aspects","context","trackAttribute","thru_","code","trim","split","when","convert","InStyledElement","to","element","setup","InCssClasses","cssClasses","inCssInfo","inCssError","hasError__cssClass","borderW","u","display","fontSize","borderLeft","paddingLeft","sub","InputSupport","Feature","needs","ComponentTreeSupport","ThemeSupport","MainComponent","IncludePage","onResponse","response","range","ok","deleteContents","insertNode","document","createTextNode","error","mainStyle","flex","_theme","NavComponent","NavStyle","HandleNavLinks","ActivateNavLink","navStyle","sts","background","navLinkBackground","navLinkStyle","Wesib__NS","activeNavLinkStyle","border","outline","ContainerComponent","BootstrapContext","whenDefined","mainName","ContainerStyle","name","feature","flexFlow","alignItems","alignContent","LayoutSupportFeature","PageLoadSupport","StyleProducerSupport","BodyStyleSupport","init","whenReady","produceBasicStyle","AppFeature","boxShadow","boxSizing","width","outlineColor","mixStypColors","bootstrapComponents"],"mappings":"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"}