{"version":3,"file":"common.a3f8ddc9.s.js","sources":["../../src/common/input/input.style.ts","../../src/common/examples.ns.ts","../../src/common/theme/theme-settings.ts","../../src/common/theme/link.style.ts","../../src/common/theme/default.style.ts","../../src/common/theme/body.style.ts","../../src/common/input/form.theme-settings.ts","../../src/common/input/in-error.component.ts","../../src/common/input/input-support.feature.ts","../../src/common/layout/main.component.ts","../../src/common/layout/nav.component.ts","../../src/common/layout/container.component.ts","../../src/common/layout/layout-support.feature.ts","../../src/common/theme/body-style-support.feature.ts","../../src/common/app.feature.ts","../../src/common/index.ts"],"sourcesContent":["import { Theme } from '@wesib/generic';\nimport { mixStypColors, StypProperties, stypRules, StypRules } from 'style-producer';\nimport { FormThemeSettings } from './form.theme-settings';\n\nexport function InputStyle(theme: Theme): StypRules {\n\n  const formSettings = theme.ref(FormThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add({ e: 'input' }, formSettings.thru(inStyle)),\n      rules.add({ e: 'input', s: '[readonly]' }, formSettings.thru(readonlyInStyle)),\n      rules.add({ e: 'input', s: '[disabled]' }, formSettings.thru(readonlyInStyle)),\n      rules.add({ e: 'input', s: ':focus' }, formSettings.thru(focusedInStyle)),\n      rules.add({ e: 'input', c: ['inap-invalid', 'inap-touched'] }, formSettings.thru(invalidInStyle)),\n      rules.add({ e: 'input', c: ['inap-missing', 'inap-touched'] }, { outlineStyle: 'dotted' }),\n      rules.add({ e: 'input', c: ['inap-incomplete', 'inap-touched'] }, { outlineStyle: 'dotted' }),\n  );\n}\n\nexport function inStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n      $marginV,\n      $marginH,\n      $paddingV,\n      $paddingH,\n      $bgColor,\n      $borderColor,\n      $borderW,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n    padding: `${$paddingV} ${$paddingH}`,\n    margin: `${$marginV} ${$marginH}`,\n    backgroundColor: $bgColor,\n    border: '0 none',\n    outline: `${$borderW} solid ${$borderColor}`,\n    boxShadow: 'inset 1px 1px 2px -2px black',\n    boxSizing: 'border-box',\n    width: '100%',\n  };\n}\n\nexport function readonlyInStyle(\n    {\n      $roBgColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $roBgColor,\n  };\n}\n\nfunction focusedInStyle(\n    {\n      $color,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outlineColor: mixStypColors($borderColor, $color, 0.5),\n  };\n}\n\nfunction invalidInStyle(\n    {\n      $color,\n      $borderW,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outline: `${$borderW.mul(2)} dashed ${mixStypColors($borderColor, $color, 0.25)}`,\n  };\n}\n","import { NamespaceDef } from 'namespace-aliaser';\n\nexport const Examples__NS = new NamespaceDef(\n    'https://wesib.github.io/examples',\n    'bex',\n    'wesib-examples',\n);\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypProperties, StypRGB } from 'style-producer';\n\nexport interface ThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $linkFontWeight: string;\n  $layoutBreakpoint: StypLength;\n}\n\nexport const ThemeSettings: RefStypRule<ThemeSettings> = RefStypRule.by(\n    { $: 'settings' },\n    {\n      $color: new StypRGB({ r: 161, g: 185, b: 142 }),\n      $bgColor: new StypRGB({ r: 40, g: 43, b: 36 }),\n      $fontFace: `'Exo 2', sans-serif`,\n      $fontSize: StypLengthPt.of(1, 'em'),\n      $lineHeight: 1.2,\n      $fontWeight: '400',\n      $linkFontWeight: '600',\n      $layoutBreakpoint: StypLength.of(576, 'px'),\n    },\n);\n\nexport function mediaStyle({ $layoutBreakpoint }: ThemeSettings): StypProperties {\n  return {\n    '@media:sm': `(max-width: ${$layoutBreakpoint})`,\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { ThemeSettings } from './theme-settings';\n\nexport function LinkStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add({ e: 'a' }, settings.thru(linkStyle)),\n      rules.add({ e: 'a', s: ':visited' }, settings.thru(linkStyle)),\n      rules.add({ e: 'a', s: ':hover' }, { textDecoration: 'underline' }),\n      rules.add({ e: 'a', s: ':active' }, { textDecoration: 'underline dotted' }),\n      rules.add({ e: 'a', s: ':focus' }, { textDecoration: 'underline dotted' }),\n  );\n}\n\nfunction linkStyle(\n    {\n      $color,\n      $linkFontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    fontWeight: $linkFontWeight,\n    textDecoration: 'none',\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { LinkStyle } from './link.style';\nimport { mediaStyle, ThemeSettings } from './theme-settings';\n\nexport function DefaultStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n\n  return stypRules(\n      theme.root\n          .add(settings.thru(defaultStyle))\n          .add(settings.thru(mediaStyle)),\n      theme.style(LinkStyle),\n  );\n}\n\nfunction defaultStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { DefaultStyle } from './default.style';\nimport { ThemeSettings } from './theme-settings';\n\nexport function BodyStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add(\n          { e: 'html' },\n          {\n            height: '100%',\n            margin: 0,\n            padding: 0,\n          },\n      ),\n      rules.add(\n          { e: 'body' },\n          settings.thru(bodyStyle),\n      ),\n      theme.style(DefaultStyle),\n  );\n}\n\nfunction bodyStyle(\n    {\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $bgColor,\n    height: '100%',\n    margin: 0,\n    padding: 0,\n  };\n}\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypMapper, StypRuleRefs } from 'style-producer';\nimport { ThemeSettings } from '../theme';\n\nexport interface FormThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $roBgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $errorFontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $borderColor: StypColor;\n  $marginV: StypLengthPt;\n  $marginH: StypLengthPt;\n  $paddingV: StypLengthPt;\n  $paddingH: StypLengthPt;\n  $borderW: StypLength;\n}\n\nexport const FormThemeSettings: RefStypRule<FormThemeSettings> = RefStypRule.by(\n    { $: 'settings:form' },\n    root => StypRuleRefs.by<{ global: ThemeSettings }>(\n        {\n          global: ThemeSettings,\n        },\n        root,\n    ).read.keep.thru(formMappings),\n);\n\nfunction formMappings(\n    {\n      global: {\n        $color,\n        $bgColor,\n        $fontFace,\n        $fontSize,\n        $lineHeight,\n        $fontWeight,\n      },\n    }: {\n      global: ThemeSettings,\n    },\n): StypMapper.Mappings<FormThemeSettings> {\n  return {\n    $color,\n    $bgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 })),\n    $roBgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.94 })),\n    $fontFace,\n    $fontSize,\n    $errorFontSize: $fontSize.mul(0.8),\n    $lineHeight,\n    $fontWeight,\n    $borderColor: $bgColor,\n    $marginV: $fontSize.div(4),\n    $marginH: $fontSize.div(4),\n    $paddingV: $fontSize.div(2),\n    $paddingH: $fontSize,\n    $borderW: StypLength.of(1, 'px'),\n  };\n}\n","import { HierarchyContext, InputFromControl, inputValidity, ProduceStyle, Theme } from '@wesib/generic';\nimport { AttributeChanged, Component, ComponentContext, DefaultNamespaceAliaser, Render } from '@wesib/wesib';\nimport { itsEvery } from 'a-iterable';\nimport { DeltaSet } from 'delta-set';\nimport { InCssClasses, InValidation, inValidationResult } from 'input-aspects';\nimport { css__naming, QualifiedName } from 'namespace-aliaser';\nimport { StypLengthPt, stypRules, StypRules } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { FormThemeSettings } from './form.theme-settings';\n\n@Component(['in-error', Examples__NS])\nexport class InErrorComponent {\n\n  private _validity: InValidation.Result = inValidationResult();\n  private readonly _cssClasses = new DeltaSet<string>();\n  private _codes = new Set<string>();\n\n  constructor(private readonly _context: ComponentContext) {\n    inputValidity(_context)(validity => this.validity = validity);\n    this._context.get(HierarchyContext).get(InputFromControl).consume(\n        ({ control }) => control && control.aspect(InCssClasses).track(\n            (add, remove) => this.updateCssClasses(add, remove),\n        ),\n    );\n  }\n\n  get validity(): InValidation.Result {\n    return this._validity;\n  }\n\n  set validity(value: InValidation.Result) {\n\n    const oldValue = this._validity;\n\n    this._validity = value;\n    this._context.updateState('validity', value, oldValue);\n  }\n\n  updateCssClasses(add: readonly string[], remove: readonly string[]) {\n    this._cssClasses.clear();\n    this._cssClasses.delta(add, remove);\n    this._context.updateState('cssClasses', this._cssClasses, this._cssClasses);\n  }\n\n  @AttributeChanged('code')\n  setCode(code: string) {\n    this._codes = new Set(code.trim().split(/\\s+/));\n  }\n\n  @Render()\n  render() {\n\n    const element: Element = this._context.element;\n    const { classList } = element;\n    const hasErrorsClassName = css__naming.name(\n        hasError__cssClass,\n        this._context.get(DefaultNamespaceAliaser),\n    );\n    const cssDeltaReceiver: DeltaSet.DeltaReceiver<string> = {\n      add: name => classList.add(name),\n      delete: name => classList.remove(name),\n    };\n\n    return () => {\n      if (itsEvery(this._codes, code => !this.validity.has(code))) {\n        classList.remove(hasErrorsClassName);\n      } else {\n        classList.add(hasErrorsClassName);\n      }\n      this._cssClasses.redelta(cssDeltaReceiver).undelta();\n    };\n  }\n\n  @ProduceStyle()\n  style(): StypRules {\n    return this._context.get(Theme).style(InErrorStyle);\n  }\n\n}\n\nconst InError__qualifier = 'bex:in-error';\nconst hasError__cssClass: QualifiedName = ['has-error', Examples__NS];\n\nfunction InErrorStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(FormThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n  const borderW = StypLengthPt.of(4, 'px');\n\n  return stypRules(\n      rules.add(\n          { u: [':', 'host'], $: InError__qualifier },\n          settings.thru(({ $color, $errorFontSize }) => ({\n            display: 'none',\n            fontSize: $errorFontSize,\n            padding: $errorFontSize.div(2),\n            borderLeft: `${borderW} dotted ${$color}`,\n            paddingLeft: $errorFontSize.sub(borderW),\n          })),\n      ),\n      rules.add(\n          {\n            u: [\n              ':', 'host',\n              {\n                c: hasError__cssClass,\n                u: [':', 'not', { c: 'inap-has-focus' }],\n              },\n            ],\n            $: InError__qualifier,\n          },\n          {\n            display: 'block',\n          },\n      ),\n      rules.add(\n          {\n            u: [\n              ':', 'host',\n              {\n                c: hasError__cssClass,\n                u: [\n                  [':', 'not', { u: ['code', '~=', 'missing'] }],\n                  [':', 'not', { u: ['code', '~=', 'incomplete'] }],\n                ],\n              },\n            ],\n            $: InError__qualifier,\n          },\n          {\n            display: 'block',\n          },\n      ),\n  );\n}\n","import { ComponentTreeSupport, ThemeSupport } from '@wesib/generic';\nimport { Feature } from '@wesib/wesib';\nimport { InErrorComponent } from './in-error.component';\n\n@Feature({\n  needs: [\n    ComponentTreeSupport,\n    InErrorComponent,\n    ThemeSupport,\n  ],\n})\nexport class InputSupport {\n}\n","import { importNodeContent, Navigation, pageLoadParam, PageLoadResponse } from '@wesib/generic';\nimport { BootstrapWindow, Component, ComponentContext, Render } from '@wesib/wesib';\nimport { trackValue } from 'fun-events';\nimport { StypProperties } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { ThemeSettings } from '../theme';\n\n@Component(['main', Examples__NS])\nexport class MainComponent {\n\n  private readonly _response = trackValue<PageLoadResponse>();\n\n  constructor(private readonly _context: ComponentContext) {\n    this._response.on((n, o) => _context.updateState('response', n, o));\n\n    const navigation = _context.get(Navigation);\n\n    _context.whenOn(supply => {\n      navigation.read.once(page => {\n        page.put(\n            pageLoadParam,\n            {\n              fragment: { tag: _context.element.tagName },\n              receiver: {\n                supply,\n                receive: (_ctx, response) => this._response.it = response,\n              },\n            },\n        );\n      });\n    });\n  }\n\n  @Render()\n  render() {\n\n    const document = this._context.get(BootstrapWindow).document;\n    const range = document.createRange();\n\n    range.selectNodeContents(this._context.element);\n\n    return () => {\n\n      const response = this._response.it;\n\n      if (response) {\n        range.deleteContents();\n        if (response.ok) {\n\n          const target = document.createDocumentFragment();\n          const { fragment } = response;\n\n          if (fragment) {\n            importNodeContent(fragment, target);\n            range.insertNode(target);\n          }\n        } else if (response.ok == null) {\n          range.insertNode(document.createTextNode('Loading...'));\n        } else {\n          range.insertNode(document.createTextNode(`Error. ${response.error}`));\n        }\n      }\n    };\n  }\n\n}\n\nexport function mainStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    flex: '1 1 auto',\n    padding: 0,\n    margin: `0 0 0 ${$fontSize.div(2)}`,\n  };\n}\n","import { ComponentNode, ElementNode, Navigation, ProduceStyle, Theme } from '@wesib/generic';\nimport { Component, ComponentContext, DefaultNamespaceAliaser } from '@wesib/wesib';\nimport { afterAll, DomEventDispatcher, EventSupply } from 'fun-events';\nimport { css__naming, QualifiedName } from 'namespace-aliaser';\nimport { StypColor, StypLengthPt, StypProperties, stypRules, StypRules } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { ThemeSettings } from '../theme';\n\n@Component(['nav', Examples__NS])\nexport class NavComponent {\n\n  private readonly _theme: Theme;\n\n  constructor(context: ComponentContext) {\n    this._theme = context.get(Theme);\n\n    const nsAlias = context.get(DefaultNamespaceAliaser);\n    const activeClass = css__naming.name(activeNavLinkClass, nsAlias);\n    const node = context.get(ComponentNode);\n    const navigation = context.get(Navigation);\n\n    context.whenOn(supply => {\n\n      const navLinks = node.select('a', { all: true });\n      const linkSupplies = new Map<ElementNode, EventSupply>();\n\n      navLinks.track.tillOff(supply)((added, removed) => {\n        removed.forEach(link => {\n\n          const linkSupply = linkSupplies.get(link);\n\n          if (linkSupply) {\n            linkSupplies.delete(link);\n            linkSupply.off();\n          }\n        });\n        added.forEach(\n            link => {\n\n              const element: Element = link.element;\n              const linkSupply = new DomEventDispatcher(element)\n                  .on('click')\n                  .instead(() => {\n                    if (!element.classList.contains(activeClass)) {\n                      navigation.open(element.getAttribute('href') || '');\n                    }\n                  })\n                  .needs(supply);\n\n              linkSupplies.set(link, linkSupply);\n            },\n        );\n      });\n      afterAll({\n        links: navLinks,\n        page: navigation,\n      })({\n        supply,\n        receive(\n            _ctx,\n            {\n              links: [links],\n              page: [page],\n            },\n        ) {\n\n          const pageDir = dirName(page.url);\n          let activeElement: Element | undefined;\n          let activeDir = '';\n\n          links.forEach(link => {\n\n            const element: HTMLAnchorElement = link.element;\n            const linkDir = dirName(new URL(element.href));\n\n            element.classList.remove(activeClass);\n\n            if (pageDir.startsWith(linkDir) && activeDir.length < linkDir.length) {\n              activeElement = element;\n              activeDir = linkDir;\n            }\n          });\n\n          if (activeElement) {\n            activeElement.classList.add(activeClass);\n          }\n        },\n      });\n    });\n  }\n\n  @ProduceStyle()\n  style() {\n    return this._theme.style(NavStyle);\n  }\n\n}\n\nfunction dirName(url: URL): string {\n\n  const path = url.pathname;\n\n  if (path.endsWith('/')) {\n    return path;\n  }\n\n  return path + '/';\n}\n\nconst Nav__qualifier = 'bex:nav';\n\nfunction NavStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add(\n          { u: [':', 'host'], $: Nav__qualifier },\n          settings.thru(navStyle),\n      ),\n      rules.add(\n          { u: [':', 'host'], $: Nav__qualifier },\n          settings.thru(sts => ({\n            flex: '0 1 200px',\n            height: '100%',\n            background: navLinkBackground(sts),\n          })),\n      ),\n      rules.add(\n          { u: [':', 'host'], $: [Nav__qualifier, '@media:sm'] },\n          {\n            flex: '0 1 100%',\n          },\n      ),\n      rules.add(\n          [{ u: [':', 'host'], $: Nav__qualifier }, { e: 'a', $: Nav__qualifier }],\n          settings.thru(navLinkStyle),\n      ),\n      rules.add(\n          [{ u: [':', 'host'], $: Nav__qualifier }, { e: 'a', c: activeNavLinkClass, $: Nav__qualifier }],\n          settings.thru(activeNavLinkStyle),\n      ),\n  );\n}\n\nfunction navStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    padding: 0,\n    margin: `0 ${$fontSize.div(2)} 0 0`,\n  };\n}\n\nconst activeNavLinkClass: QualifiedName = ['nav-active', Examples__NS];\n\nexport function navLinkBackground({ $bgColor }: ThemeSettings): StypColor {\n  return $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 }));\n}\n\nfunction navLinkStyle(\n    settings: ThemeSettings,\n): StypProperties {\n\n  const { $fontSize } = settings;\n\n  return {\n    display: 'block',\n    margin: 0,\n    padding: `${$fontSize.div(2)} ${$fontSize}`,\n    border: 0,\n    outline: 0,\n    background: navLinkBackground(settings),\n  };\n}\n\nfunction activeNavLinkStyle(\n    {\n      $fontSize,\n      $color,\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n\n  const borderW = StypLengthPt.of(4, 'px');\n\n  return {\n    background: $bgColor,\n    borderLeft: `${borderW} solid ${$color}`,\n    paddingLeft: $fontSize.sub(borderW),\n  };\n}\n","import { ProduceStyle, Theme } from '@wesib/generic';\nimport { BootstrapContext, Component, ComponentContext } from '@wesib/wesib';\nimport { QualifiedName } from 'namespace-aliaser';\nimport { stypRules, StypRules } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { mediaStyle, ThemeSettings } from '../theme';\nimport { MainComponent, mainStyle } from './main.component';\nimport { NavComponent } from './nav.component';\n\n@Component({\n  name: ['container', Examples__NS],\n  feature: {\n    needs: [\n      MainComponent,\n      NavComponent,\n    ],\n  },\n})\nexport class ContainerComponent {\n\n  constructor(private readonly _context: ComponentContext) {\n  }\n\n  @ProduceStyle()\n  async style(): Promise<StypRules> {\n\n    const { elementDef: { name: mainName } } = await this._context.get(BootstrapContext).whenDefined(MainComponent);\n\n    return this._context.get(Theme).style(ContainerStyle(mainName!));\n  }\n\n}\n\nconst Container__qualifier = 'bex:container';\n\nfunction ContainerStyle(mainName: QualifiedName): (theme: Theme) => StypRules {\n  return theme => {\n\n    const settings = theme.ref(ThemeSettings).read.keep;\n    const { root: { rules } } = theme;\n\n    return stypRules(\n        rules.add(\n            { u: [':', 'host'], $: Container__qualifier },\n            {\n              height: '100%',\n              display: 'flex',\n              flexFlow: 'row wrap',\n              alignItems: 'stretch',\n              alignContent: 'flex-start',\n            },\n        ).add(\n            settings.thru(mediaStyle),\n        ),\n        rules.add(\n            { u: [':', 'host'], $: [Container__qualifier, '@media:sm'] },\n            {\n              height: 'auto',\n            },\n        ),\n        rules.add(\n            [{ u: [':', 'host'], $: Container__qualifier }, { e: mainName, $: Container__qualifier }],\n            settings.thru(mainStyle),\n        ),\n    );\n  };\n}\n","import { ComponentTreeSupport, PageLoadSupport, StyleProducerSupport, ThemeSupport } from '@wesib/generic';\nimport { Feature, RenderSupport } from '@wesib/wesib';\nimport { ContainerComponent } from './container.component';\n\n@Feature({\n  needs: [\n    ContainerComponent,\n    ComponentTreeSupport,\n    PageLoadSupport,\n    RenderSupport,\n    StyleProducerSupport,\n    ThemeSupport,\n  ],\n})\nexport class LayoutSupportFeature {\n}\n","import { Theme, ThemeSupport } from '@wesib/generic';\nimport { BootstrapContext, Feature } from '@wesib/wesib';\nimport { produceBasicStyle } from 'style-producer';\nimport { BodyStyle } from './body.style';\n\n@Feature({\n  needs: ThemeSupport,\n  init: addBodyStyle,\n})\nexport class BodyStyleSupport {}\n\nfunction addBodyStyle(context: BootstrapContext) {\n  context.whenReady(() => {\n    produceBasicStyle(context.get(Theme).style(BodyStyle));\n  });\n}\n","import { Feature } from '@wesib/wesib';\nimport { InputSupport } from './input/input-support.feature';\nimport { LayoutSupportFeature } from './layout';\nimport { BodyStyleSupport } from './theme/body-style-support.feature';\n\n@Feature({\n  needs: [\n    BodyStyleSupport,\n    InputSupport,\n    LayoutSupportFeature,\n  ],\n})\nexport class AppFeature {}\n","import { bootstrapComponents } from '@wesib/wesib';\nimport { AppFeature } from './app.feature';\n\nexport * from './app.feature';\nexport * from './examples.ns';\nexport * from './input';\nexport * from './theme';\n\nexport const examplesContext = bootstrapComponents(AppFeature);\n"],"names":["theme","formSettings","ref","FormThemeSettings","read","keep","rules","stypRules","add","e","thru","inStyle","s","readonlyInStyle","focusedInStyle","c","invalidInStyle","outlineStyle","Examples__NS","NamespaceDef","ThemeSettings","RefStypRule","by","$","$color","StypRGB","r","g","b","$bgColor","$fontFace","$fontSize","StypLengthPt","of","$lineHeight","$fontWeight","$linkFontWeight","$layoutBreakpoint","StypLength","mediaStyle","_a","@media:sm","LinkStyle","settings","linkStyle","textDecoration","color","fontWeight","DefaultStyle","root","defaultStyle","style","font","BodyStyle","height","margin","padding","bodyStyle","backgroundColor","StypRuleRefs","global","formMappings","_b","hsl","set","l","$roBgColor","$errorFontSize","mul","$borderColor","$marginV","div","$marginH","$paddingV","$paddingH","$borderW","_context","this","inValidationResult","DeltaSet","Set","inputValidity","validity","_this","get","HierarchyContext","InputFromControl","consume","control","aspect","InCssClasses","track","remove","updateCssClasses","Object","InErrorComponent","_validity","value","oldValue","updateState","_cssClasses","clear","delta","code","_codes","trim","split","classList","element","hasErrorsClassName","css__naming","name","hasError__cssClass","DefaultNamespaceAliaser","cssDeltaReceiver","delete","itsEvery","has","redelta","undelta","Theme","InErrorStyle","__decorate","AttributeChanged","Render","ProduceStyle","Component","borderW","u","display","fontSize","borderLeft","paddingLeft","sub","InputSupport","Feature","needs","ComponentTreeSupport","ThemeSupport","trackValue","_response","on","n","o","navigation","Navigation","whenOn","supply","once","page","put","pageLoadParam","fragment","tag","tagName","receiver","receive","_ctx","response","it","MainComponent","document","BootstrapWindow","range","createRange","selectNodeContents","deleteContents","ok","target","createDocumentFragment","importNodeContent","insertNode","createTextNode","error","mainStyle","flex","context","_theme","nsAlias","activeClass","activeNavLinkClass","node","ComponentNode","navLinks","select","all","linkSupplies","Map","tillOff","added","removed","forEach","link","linkSupply","off","DomEventDispatcher","instead","contains","open","getAttribute","afterAll","links","activeElement","pageDir","dirName","url","activeDir","linkDir","URL","href","startsWith","length","NavComponent","NavStyle","path","pathname","endsWith","navStyle","sts","background","navLinkBackground","navLinkStyle","activeNavLinkStyle","border","outline","ContainerComponent","BootstrapContext","whenDefined","mainName","ContainerStyle","feature","flexFlow","alignItems","alignContent","LayoutSupportFeature","PageLoadSupport","RenderSupport","StyleProducerSupport","BodyStyleSupport","init","addBodyStyle","whenReady","produceBasicStyle","AppFeature","boxShadow","boxSizing","width","outlineColor","mixStypColors","bootstrapComponents"],"mappings":"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"}