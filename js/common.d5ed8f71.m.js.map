{"version":3,"file":"common.d5ed8f71.m.js","sources":["../../src/common/examples.ns.ts","../../src/common/theme/theme-settings.ts","../../src/common/theme/link.style.ts","../../src/common/theme/default.style.ts","../../src/common/theme/body.style.ts","../../src/common/input/form.theme-settings.ts","../../src/common/input/in-error.component.ts","../../src/common/input/input-support.feature.ts","../../src/common/layout/main.component.ts","../../src/common/layout/nav.component.ts","../../src/common/layout/container.component.ts","../../src/common/layout/layout-support.feature.ts","../../src/common/theme/body-style-support.feature.ts","../../src/common/app.feature.ts","../../src/common/input/input.style.ts","../../src/common/index.ts"],"sourcesContent":["import { NamespaceDef } from 'namespace-aliaser';\n\nexport const Examples__NS = new NamespaceDef(\n    'https://wesib.github.io/examples',\n    'bex',\n    'wesib-examples',\n);\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypProperties, StypRGB } from 'style-producer';\n\nexport interface ThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $linkFontWeight: string;\n  $layoutBreakpoint: StypLength;\n}\n\nexport const ThemeSettings: RefStypRule<ThemeSettings> = RefStypRule.by(\n    { $: 'settings' },\n    {\n      $color: new StypRGB({ r: 161, g: 185, b: 142 }),\n      $bgColor: new StypRGB({ r: 40, g: 43, b: 36 }),\n      $fontFace: `'Exo 2', sans-serif`,\n      $fontSize: StypLengthPt.of(1, 'em'),\n      $lineHeight: 1.2,\n      $fontWeight: '400',\n      $linkFontWeight: '600',\n      $layoutBreakpoint: StypLength.of(576, 'px'),\n    },\n);\n\nexport function mediaStyle({ $layoutBreakpoint }: ThemeSettings): StypProperties {\n  return {\n    '@media:sm': `(max-width: ${$layoutBreakpoint})`,\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { ThemeSettings } from './theme-settings';\n\nexport function LinkStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add({ e: 'a' }, settings.thru(linkStyle)),\n      rules.add({ e: 'a', s: ':visited' }, settings.thru(linkStyle)),\n      rules.add({ e: 'a', s: ':hover' }, { textDecoration: 'underline' }),\n      rules.add({ e: 'a', s: ':active' }, { textDecoration: 'underline dotted' }),\n      rules.add({ e: 'a', s: ':focus' }, { textDecoration: 'underline dotted' }),\n  );\n}\n\nfunction linkStyle(\n    {\n      $color,\n      $linkFontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    fontWeight: $linkFontWeight,\n    textDecoration: 'none',\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { LinkStyle } from './link.style';\nimport { mediaStyle, ThemeSettings } from './theme-settings';\n\nexport function DefaultStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n\n  return stypRules(\n      theme.root\n          .add(settings.thru(defaultStyle))\n          .add(settings.thru(mediaStyle)),\n      theme.style(LinkStyle),\n  );\n}\n\nfunction defaultStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { DefaultStyle } from './default.style';\nimport { ThemeSettings } from './theme-settings';\n\nexport function BodyStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add(\n          { e: 'html' },\n          {\n            height: '100%',\n            margin: 0,\n            padding: 0,\n          },\n      ),\n      rules.add(\n          { e: 'body' },\n          settings.thru(bodyStyle),\n      ),\n      theme.style(DefaultStyle),\n  );\n}\n\nfunction bodyStyle(\n    {\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $bgColor,\n    height: '100%',\n    margin: 0,\n    padding: 0,\n  };\n}\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypMapper, StypRuleRefs } from 'style-producer';\nimport { ThemeSettings } from '../theme';\n\nexport interface FormThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $roBgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $errorFontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $borderColor: StypColor;\n  $marginV: StypLengthPt;\n  $marginH: StypLengthPt;\n  $paddingV: StypLengthPt;\n  $paddingH: StypLengthPt;\n  $borderW: StypLength;\n}\n\nexport const FormThemeSettings: RefStypRule<FormThemeSettings> = RefStypRule.by(\n    { $: 'settings:form' },\n    root => StypRuleRefs.by<{ global: ThemeSettings }>(\n        {\n          global: ThemeSettings,\n        },\n        root,\n    ).read.keep.thru(formMappings),\n);\n\nfunction formMappings(\n    {\n      global: {\n        $color,\n        $bgColor,\n        $fontFace,\n        $fontSize,\n        $lineHeight,\n        $fontWeight,\n      },\n    }: {\n      global: ThemeSettings,\n    },\n): StypMapper.Mappings<FormThemeSettings> {\n  return {\n    $color,\n    $bgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 })),\n    $roBgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.94 })),\n    $fontFace,\n    $fontSize,\n    $errorFontSize: $fontSize.mul(0.8),\n    $lineHeight,\n    $fontWeight,\n    $borderColor: $bgColor,\n    $marginV: $fontSize.div(4),\n    $marginH: $fontSize.div(4),\n    $paddingV: $fontSize.div(2),\n    $paddingH: $fontSize,\n    $borderW: StypLength.of(1, 'px'),\n  };\n}\n","import { HierarchyContext, InputFromControl, inputValidity, ProduceStyle, Theme } from '@wesib/generic';\nimport {\n  AttributeChanged,\n  Component,\n  ComponentContext,\n  DefaultNamespaceAliaser,\n  DefaultRenderScheduler,\n  Render,\n} from '@wesib/wesib';\nimport { itsEvery } from 'a-iterable';\nimport { InCssClasses, InValidation, inValidationResult } from 'input-aspects';\nimport { css__naming, QualifiedName } from 'namespace-aliaser';\nimport { StypLengthPt, stypRules, StypRules } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { FormThemeSettings } from './form.theme-settings';\n\n@Component(['in-error', Examples__NS])\nexport class InErrorComponent {\n\n  private _validity: InValidation.Result = inValidationResult();\n  private _codes = new Set<string>();\n\n  constructor(private readonly _context: ComponentContext) {\n    inputValidity(_context)(validity => this.validity = validity);\n    this._context.get(HierarchyContext).get(InputFromControl).consume(\n        ({ control }) => control && control.aspect(InCssClasses)\n            .applyTo(\n                _context.element,\n                _context.get(DefaultRenderScheduler)(),\n            ),\n    );\n  }\n\n  get validity(): InValidation.Result {\n    return this._validity;\n  }\n\n  set validity(value: InValidation.Result) {\n\n    const oldValue = this._validity;\n\n    this._validity = value;\n    this._context.updateState('validity', value, oldValue);\n  }\n\n  @AttributeChanged('code')\n  setCode(code: string) {\n    this._codes = new Set(code ? code.trim().split(/\\s+/) : []);\n  }\n\n  @Render()\n  render() {\n\n    const element: Element = this._context.element;\n    const { classList } = element;\n    const hasErrorsClassName = css__naming.name(\n        hasError__cssClass,\n        this._context.get(DefaultNamespaceAliaser),\n    );\n\n    return () => {\n      if (itsEvery(this._codes, code => this.validity.has(code))) {\n        classList.add(hasErrorsClassName);\n      } else {\n        classList.remove(hasErrorsClassName);\n      }\n    };\n  }\n\n  @ProduceStyle()\n  style(): StypRules {\n    return this._context.get(Theme).style(InErrorStyle);\n  }\n\n}\n\nconst InError__qualifier = 'bex:in-error';\nconst hasError__cssClass: QualifiedName = ['has-error', Examples__NS];\n\nfunction InErrorStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(FormThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n  const borderW = StypLengthPt.of(4, 'px');\n\n  return stypRules(\n      rules.add(\n          { u: [':', 'host'], $: InError__qualifier },\n          settings.thru(({ $color, $errorFontSize }) => ({\n            display: 'none',\n            fontSize: $errorFontSize,\n            padding: $errorFontSize.div(2),\n            borderLeft: `${borderW} dotted ${$color}`,\n            paddingLeft: $errorFontSize.sub(borderW),\n          })),\n      ),\n      rules.add(\n          {\n            u: [\n              ':', 'host',\n              {\n                c: hasError__cssClass,\n                u: [':', 'not', { c: 'inap-has-focus' }],\n              },\n            ],\n            $: InError__qualifier,\n          },\n          {\n            display: 'block',\n          },\n      ),\n      rules.add(\n          {\n            u: [\n              ':', 'host',\n              {\n                c: hasError__cssClass,\n                u: [\n                  [':', 'not', { u: ['code', '~=', 'missing'] }],\n                  [':', 'not', { u: ['code', '~=', 'incomplete'] }],\n                ],\n              },\n            ],\n            $: InError__qualifier,\n          },\n          {\n            display: 'block',\n          },\n      ),\n  );\n}\n","import { ComponentTreeSupport, ThemeSupport } from '@wesib/generic';\nimport { Feature } from '@wesib/wesib';\nimport { InErrorComponent } from './in-error.component';\n\n@Feature({\n  needs: [\n    ComponentTreeSupport,\n    InErrorComponent,\n    ThemeSupport,\n  ],\n})\nexport class InputSupport {\n}\n","import { importNodeContent, Navigation, pageLoadParam, PageLoadResponse } from '@wesib/generic';\nimport { BootstrapWindow, Component, ComponentContext, Render } from '@wesib/wesib';\nimport { trackValue } from 'fun-events';\nimport { StypProperties } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { ThemeSettings } from '../theme';\n\n@Component(['main', Examples__NS])\nexport class MainComponent {\n\n  private readonly _response = trackValue<PageLoadResponse>();\n\n  constructor(private readonly _context: ComponentContext) {\n    this._response.on((n, o) => _context.updateState('response', n, o));\n\n    const navigation = _context.get(Navigation);\n\n    _context.whenOn(supply => {\n      navigation.read.once(page => {\n        page.put(\n            pageLoadParam,\n            {\n              fragment: { tag: _context.element.tagName },\n              receiver: {\n                supply,\n                receive: (_ctx, response) => this._response.it = response,\n              },\n            },\n        );\n      });\n    });\n  }\n\n  @Render()\n  render() {\n\n    const document = this._context.get(BootstrapWindow).document;\n    const range = document.createRange();\n\n    range.selectNodeContents(this._context.element);\n\n    return () => {\n\n      const response = this._response.it;\n\n      if (response) {\n        range.deleteContents();\n        if (response.ok) {\n\n          const target = document.createDocumentFragment();\n          const { fragment } = response;\n\n          if (fragment) {\n            importNodeContent(fragment, target);\n            range.insertNode(target);\n          }\n        } else if (response.ok == null) {\n          range.insertNode(document.createTextNode('Loading...'));\n        } else {\n          range.insertNode(document.createTextNode(`Error. ${response.error}`));\n        }\n      }\n    };\n  }\n\n}\n\nexport function mainStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    flex: '1 1 auto',\n    padding: 0,\n    margin: `0 0 0 ${$fontSize.div(2)}`,\n  };\n}\n","import { ComponentNode, ElementNode, Navigation, ProduceStyle, Theme } from '@wesib/generic';\nimport { Component, ComponentContext, DefaultNamespaceAliaser } from '@wesib/wesib';\nimport { afterAll, DomEventDispatcher, EventSupply } from 'fun-events';\nimport { css__naming, QualifiedName } from 'namespace-aliaser';\nimport { StypColor, StypLengthPt, StypProperties, stypRules, StypRules } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { ThemeSettings } from '../theme';\n\n@Component(['nav', Examples__NS])\nexport class NavComponent {\n\n  private readonly _theme: Theme;\n\n  constructor(context: ComponentContext) {\n    this._theme = context.get(Theme);\n\n    const nsAlias = context.get(DefaultNamespaceAliaser);\n    const activeClass = css__naming.name(activeNavLinkClass, nsAlias);\n    const node = context.get(ComponentNode);\n    const navigation = context.get(Navigation);\n\n    context.whenOn(supply => {\n\n      const navLinks = node.select('a', { all: true });\n      const linkSupplies = new Map<ElementNode, EventSupply>();\n\n      navLinks.track.tillOff(supply)((added, removed) => {\n        removed.forEach(link => {\n\n          const linkSupply = linkSupplies.get(link);\n\n          if (linkSupply) {\n            linkSupplies.delete(link);\n            linkSupply.off();\n          }\n        });\n        added.forEach(\n            link => {\n\n              const element: Element = link.element;\n              const linkSupply = new DomEventDispatcher(element)\n                  .on('click')\n                  .instead(() => {\n                    if (!element.classList.contains(activeClass)) {\n                      navigation.open(element.getAttribute('href') || '');\n                    }\n                  })\n                  .needs(supply);\n\n              linkSupplies.set(link, linkSupply);\n            },\n        );\n      });\n      afterAll({\n        links: navLinks,\n        page: navigation,\n      })({\n        supply,\n        receive(\n            _ctx,\n            {\n              links: [links],\n              page: [page],\n            },\n        ) {\n\n          const pageDir = dirName(page.url);\n          let activeElement: Element | undefined;\n          let activeDir = '';\n\n          links.forEach(link => {\n\n            const element: HTMLAnchorElement = link.element;\n            const linkDir = dirName(new URL(element.href));\n\n            element.classList.remove(activeClass);\n\n            if (pageDir.startsWith(linkDir) && activeDir.length < linkDir.length) {\n              activeElement = element;\n              activeDir = linkDir;\n            }\n          });\n\n          if (activeElement) {\n            activeElement.classList.add(activeClass);\n          }\n        },\n      });\n    });\n  }\n\n  @ProduceStyle()\n  style() {\n    return this._theme.style(NavStyle);\n  }\n\n}\n\nfunction dirName(url: URL): string {\n\n  const path = url.pathname;\n\n  if (path.endsWith('/')) {\n    return path;\n  }\n\n  return path + '/';\n}\n\nconst Nav__qualifier = 'bex:nav';\n\nfunction NavStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add(\n          { u: [':', 'host'], $: Nav__qualifier },\n          settings.thru(navStyle),\n      ),\n      rules.add(\n          { u: [':', 'host'], $: Nav__qualifier },\n          settings.thru(sts => ({\n            flex: '0 1 200px',\n            height: '100%',\n            background: navLinkBackground(sts),\n          })),\n      ),\n      rules.add(\n          { u: [':', 'host'], $: [Nav__qualifier, '@media:sm'] },\n          {\n            flex: '0 1 100%',\n          },\n      ),\n      rules.add(\n          [{ u: [':', 'host'], $: Nav__qualifier }, { e: 'a', $: Nav__qualifier }],\n          settings.thru(navLinkStyle),\n      ),\n      rules.add(\n          [{ u: [':', 'host'], $: Nav__qualifier }, { e: 'a', c: activeNavLinkClass, $: Nav__qualifier }],\n          settings.thru(activeNavLinkStyle),\n      ),\n  );\n}\n\nfunction navStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    padding: 0,\n    margin: `0 ${$fontSize.div(2)} 0 0`,\n  };\n}\n\nconst activeNavLinkClass: QualifiedName = ['nav-active', Examples__NS];\n\nexport function navLinkBackground({ $bgColor }: ThemeSettings): StypColor {\n  return $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 }));\n}\n\nfunction navLinkStyle(\n    settings: ThemeSettings,\n): StypProperties {\n\n  const { $fontSize } = settings;\n\n  return {\n    display: 'block',\n    margin: 0,\n    padding: `${$fontSize.div(2)} ${$fontSize}`,\n    border: 0,\n    outline: 0,\n    background: navLinkBackground(settings),\n  };\n}\n\nfunction activeNavLinkStyle(\n    {\n      $fontSize,\n      $color,\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n\n  const borderW = StypLengthPt.of(4, 'px');\n\n  return {\n    background: $bgColor,\n    borderLeft: `${borderW} solid ${$color}`,\n    paddingLeft: $fontSize.sub(borderW),\n  };\n}\n","import { ProduceStyle, Theme } from '@wesib/generic';\nimport { BootstrapContext, Component, ComponentContext } from '@wesib/wesib';\nimport { QualifiedName } from 'namespace-aliaser';\nimport { stypRules, StypRules } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { mediaStyle, ThemeSettings } from '../theme';\nimport { MainComponent, mainStyle } from './main.component';\nimport { NavComponent } from './nav.component';\n\n@Component({\n  name: ['container', Examples__NS],\n  feature: {\n    needs: [\n      MainComponent,\n      NavComponent,\n    ],\n  },\n})\nexport class ContainerComponent {\n\n  constructor(private readonly _context: ComponentContext) {\n  }\n\n  @ProduceStyle()\n  async style(): Promise<StypRules> {\n\n    const { elementDef: { name: mainName } } = await this._context.get(BootstrapContext).whenDefined(MainComponent);\n\n    return this._context.get(Theme).style(ContainerStyle(mainName!));\n  }\n\n}\n\nconst Container__qualifier = 'bex:container';\n\nfunction ContainerStyle(mainName: QualifiedName): (theme: Theme) => StypRules {\n  return theme => {\n\n    const settings = theme.ref(ThemeSettings).read.keep;\n    const { root: { rules } } = theme;\n\n    return stypRules(\n        rules.add(\n            { u: [':', 'host'], $: Container__qualifier },\n            {\n              height: '100%',\n              display: 'flex',\n              flexFlow: 'row wrap',\n              alignItems: 'stretch',\n              alignContent: 'flex-start',\n            },\n        ).add(\n            settings.thru(mediaStyle),\n        ),\n        rules.add(\n            { u: [':', 'host'], $: [Container__qualifier, '@media:sm'] },\n            {\n              height: 'auto',\n            },\n        ),\n        rules.add(\n            [{ u: [':', 'host'], $: Container__qualifier }, { e: mainName, $: Container__qualifier }],\n            settings.thru(mainStyle),\n        ),\n    );\n  };\n}\n","import { ComponentTreeSupport, PageLoadSupport, StyleProducerSupport, ThemeSupport } from '@wesib/generic';\nimport { Feature } from '@wesib/wesib';\nimport { ContainerComponent } from './container.component';\n\n@Feature({\n  needs: [\n    ContainerComponent,\n    ComponentTreeSupport,\n    PageLoadSupport,\n    StyleProducerSupport,\n    ThemeSupport,\n  ],\n})\nexport class LayoutSupportFeature {\n}\n","import { Theme, ThemeSupport } from '@wesib/generic';\nimport { BootstrapContext, Feature } from '@wesib/wesib';\nimport { produceBasicStyle } from 'style-producer';\nimport { BodyStyle } from './body.style';\n\n@Feature({\n  needs: ThemeSupport,\n  init: addBodyStyle,\n})\nexport class BodyStyleSupport {}\n\nfunction addBodyStyle(context: BootstrapContext) {\n  context.whenReady(() => {\n    produceBasicStyle(context.get(Theme).style(BodyStyle));\n  });\n}\n","import { Feature } from '@wesib/wesib';\nimport { InputSupport } from './input/input-support.feature';\nimport { LayoutSupportFeature } from './layout';\nimport { BodyStyleSupport } from './theme/body-style-support.feature';\n\n@Feature({\n  needs: [\n    BodyStyleSupport,\n    InputSupport,\n    LayoutSupportFeature,\n  ],\n})\nexport class AppFeature {}\n","import { Theme } from '@wesib/generic';\nimport { mixStypColors, StypProperties, stypRules, StypRules } from 'style-producer';\nimport { FormThemeSettings } from './form.theme-settings';\n\nexport function InputStyle(theme: Theme): StypRules {\n\n  const formSettings = theme.ref(FormThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add({ e: 'input' }, formSettings.thru(inStyle)),\n      rules.add({ e: 'input', s: '[readonly]' }, formSettings.thru(readonlyInStyle)),\n      rules.add({ e: 'input', s: '[disabled]' }, formSettings.thru(readonlyInStyle)),\n      rules.add({ e: 'input', s: ':focus' }, formSettings.thru(focusedInStyle)),\n      rules.add({ e: 'input', c: ['inap-invalid', 'inap-touched'] }, formSettings.thru(invalidInStyle)),\n      rules.add({ e: 'input', c: ['inap-missing', 'inap-touched'] }, { outlineStyle: 'dotted' }),\n      rules.add({ e: 'input', c: ['inap-incomplete', 'inap-touched'] }, { outlineStyle: 'dotted' }),\n  );\n}\n\nexport function inStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n      $marginV,\n      $marginH,\n      $paddingV,\n      $paddingH,\n      $bgColor,\n      $borderColor,\n      $borderW,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n    padding: `${$paddingV} ${$paddingH}`,\n    margin: `${$marginV} ${$marginH}`,\n    backgroundColor: $bgColor,\n    border: '0 none',\n    outline: `${$borderW} solid ${$borderColor}`,\n    boxShadow: 'inset 1px 1px 2px -2px black',\n    boxSizing: 'border-box',\n    width: '100%',\n  };\n}\n\nexport function readonlyInStyle(\n    {\n      $roBgColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $roBgColor,\n  };\n}\n\nfunction focusedInStyle(\n    {\n      $color,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outlineColor: mixStypColors($borderColor, $color, 0.5),\n  };\n}\n\nfunction invalidInStyle(\n    {\n      $color,\n      $borderW,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outline: `${$borderW.mul(2)} dashed ${mixStypColors($borderColor, $color, 0.25)}`,\n  };\n}\n","import { bootstrapComponents } from '@wesib/wesib';\nimport { AppFeature } from './app.feature';\n\nexport * from './app.feature';\nexport * from './examples.ns';\nexport * from './input';\nexport * from './theme';\n\nexport const examplesContext = bootstrapComponents(AppFeature);\n"],"names":["Examples__NS","NamespaceDef","ThemeSettings","RefStypRule","by","$","$color","StypRGB","r","g","b","$bgColor","$fontFace","$fontSize","StypLengthPt","of","$lineHeight","$fontWeight","$linkFontWeight","$layoutBreakpoint","StypLength","mediaStyle","@media:sm","LinkStyle","theme","settings","ref","read","keep","root","rules","stypRules","add","e","thru","linkStyle","s","textDecoration","color","fontWeight","DefaultStyle","defaultStyle","style","font","BodyStyle","height","margin","padding","bodyStyle","backgroundColor","FormThemeSettings","StypRuleRefs","global","formMappings","hsl","set","l","$roBgColor","$errorFontSize","mul","$borderColor","$marginV","div","$marginH","$paddingV","$paddingH","$borderW","InErrorComponent","[object Object]","_context","this","inValidationResult","Set","inputValidity","validity","get","HierarchyContext","InputFromControl","consume","control","aspect","InCssClasses","applyTo","element","DefaultRenderScheduler","_validity","value","oldValue","updateState","code","_codes","trim","split","classList","hasErrorsClassName","css__naming","name","hasError__cssClass","DefaultNamespaceAliaser","itsEvery","has","remove","Theme","InErrorStyle","__decorate","AttributeChanged","Render","ProduceStyle","Component","borderW","u","display","fontSize","borderLeft","paddingLeft","sub","c","InputSupport","Feature","needs","ComponentTreeSupport","ThemeSupport","MainComponent","trackValue","_response","on","n","o","navigation","Navigation","whenOn","supply","once","page","put","pageLoadParam","fragment","tag","tagName","receiver","receive","_ctx","response","it","document","BootstrapWindow","range","createRange","selectNodeContents","deleteContents","ok","target","createDocumentFragment","importNodeContent","insertNode","createTextNode","error","mainStyle","flex","NavComponent","context","_theme","nsAlias","activeClass","activeNavLinkClass","node","ComponentNode","navLinks","select","all","linkSupplies","Map","track","tillOff","added","removed","forEach","link","linkSupply","delete","off","DomEventDispatcher","instead","contains","open","getAttribute","afterAll","links","pageDir","dirName","url","activeElement","activeDir","linkDir","URL","href","startsWith","length","NavStyle","path","pathname","endsWith","navStyle","sts","background","navLinkBackground","navLinkStyle","activeNavLinkStyle","border","outline","ContainerComponent","elementDef","mainName","BootstrapContext","whenDefined","flexFlow","alignItems","alignContent","ContainerStyle","feature","LayoutSupportFeature","PageLoadSupport","StyleProducerSupport","BodyStyleSupport","init","whenReady","produceBasicStyle","AppFeature","InputStyle","formSettings","inStyle","readonlyInStyle","focusedInStyle","invalidInStyle","outlineStyle","boxShadow","boxSizing","width","outlineColor","mixStypColors","examplesContext","bootstrapComponents"],"mappings":"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"}