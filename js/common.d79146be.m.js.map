{"version":3,"file":"common.d79146be.m.js","sources":["../../src/common/bex.ns.ts","../../src/common/theme/theme-settings.ts","../../src/common/theme/link.style.ts","../../src/common/theme/default.style.ts","../../src/common/theme/body.style.ts","../../src/common/input/form.theme-settings.ts","../../src/common/input/validation-result.ts","../../src/common/input/in-error.component.ts","../../src/common/input/input-support.feature.ts","../../src/common/layout/main.component.ts","../../src/common/layout/nav.component.ts","../../src/common/layout/container.component.ts","../../src/common/layout/layout-support.feature.ts","../../src/common/theme/body-style-support.feature.ts","../../src/common/app.feature.ts","../../src/common/input/in-element.component.ts","../../src/common/input/input.style.ts","../../src/common/index.ts"],"sourcesContent":["import { NamespaceDef } from 'namespace-aliaser';\n\nexport const BEX__NS = new NamespaceDef(\n    'https://wesib.github.io/examples',\n    'bex',\n    'wesib-examples',\n);\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypProperties, StypRGB } from 'style-producer';\n\nexport interface ThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $linkFontWeight: string;\n  $layoutBreakpoint: StypLength;\n}\n\nexport const ThemeSettings: RefStypRule<ThemeSettings> = RefStypRule.by(\n    { $: 'settings' },\n    {\n      $color: new StypRGB({ r: 161, g: 185, b: 142 }),\n      $bgColor: new StypRGB({ r: 40, g: 43, b: 36 }),\n      $fontFace: `'Exo 2', sans-serif`,\n      $fontSize: StypLengthPt.of(1, 'em'),\n      $lineHeight: 1.2,\n      $fontWeight: '400',\n      $linkFontWeight: '600',\n      $layoutBreakpoint: StypLength.of(576, 'px'),\n    },\n);\n\nexport function mediaStyle({ $layoutBreakpoint }: ThemeSettings): StypProperties {\n  return {\n    '@media:sm': `(max-width: ${$layoutBreakpoint})`,\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, StypRules } from 'style-producer';\nimport { ThemeSettings } from './theme-settings';\n\nexport function LinkStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const selector = { e: 'a' };\n\n  theme.root.rules.add(selector, settings.thru(linkStyle));\n  theme.root.rules.add({ e: 'a', s: ':visited' }, settings.thru(linkStyle));\n  theme.root.rules.add({ e: 'a', s: ':hover' }, { textDecoration: 'underline' });\n  theme.root.rules.add({ e: 'a', s: ':active' }, { textDecoration: 'underline dotted' });\n  theme.root.rules.add({ e: 'a', s: ':focus' }, { textDecoration: 'underline dotted' });\n\n  return theme.root.rules.grab(selector);\n}\n\nfunction linkStyle(\n    {\n      $color,\n      $linkFontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    fontWeight: $linkFontWeight,\n    textDecoration: 'none',\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { LinkStyle } from './link.style';\nimport { mediaStyle, ThemeSettings } from './theme-settings';\n\nexport function DefaultStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n\n  theme.root.add(settings.thru(defaultStyle));\n  theme.root.add(settings.thru(mediaStyle));\n\n  return stypRules(\n      theme.root.rules.self,\n      theme.style(LinkStyle),\n  );\n}\n\nfunction defaultStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { QualifiedName } from 'namespace-aliaser';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { DefaultStyle } from './default.style';\nimport { ThemeSettings } from './theme-settings';\n\nexport const displayBlockCssClass: QualifiedName = ['display-block', BEX__NS];\n\nexport function BodyStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const bodySelector = { e: 'body' };\n  const htmlSelector = { e: 'html' };\n  const { root: { rules } } = theme;\n\n  rules.add(bodySelector, settings.thru(bodyStyle));\n  rules.add(\n      htmlSelector,\n      {\n        height: '100%',\n        margin: 0,\n        padding: 0,\n      },\n  );\n  rules.add(\n      { c: displayBlockCssClass },\n      {\n        display: 'block !important',\n      },\n  );\n\n  return stypRules(\n      rules.grab(htmlSelector),\n      rules.grab(bodySelector),\n      rules.grab({ c: displayBlockCssClass }),\n      theme.style(DefaultStyle),\n  );\n}\n\nfunction bodyStyle(\n    {\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $bgColor,\n    height: '100%',\n    margin: 0,\n    padding: 0,\n  };\n}\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypMapper, StypRuleRefs } from 'style-producer';\nimport { ThemeSettings } from '../theme';\n\nexport interface FormThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $roBgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $errorFontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $borderColor: StypColor;\n  $marginV: StypLengthPt;\n  $marginH: StypLengthPt;\n  $paddingV: StypLengthPt;\n  $paddingH: StypLengthPt;\n  $borderW: StypLength;\n}\n\nexport const FormThemeSettings: RefStypRule<FormThemeSettings> = RefStypRule.by(\n    { $: 'settings:form' },\n    root => StypRuleRefs.by<{ global: ThemeSettings }>(\n        {\n          global: ThemeSettings,\n        },\n        root,\n    ).read.keep.thru(formMappings),\n);\n\nfunction formMappings(\n    {\n      global: {\n        $color,\n        $bgColor,\n        $fontFace,\n        $fontSize,\n        $lineHeight,\n        $fontWeight,\n      },\n    }: {\n      global: ThemeSettings,\n    },\n): StypMapper.Mappings<FormThemeSettings> {\n  return {\n    $color,\n    $bgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 })),\n    $roBgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.94 })),\n    $fontFace,\n    $fontSize,\n    $errorFontSize: $fontSize.mul(0.8),\n    $lineHeight,\n    $fontWeight,\n    $borderColor: $bgColor,\n    $marginV: $fontSize.div(4),\n    $marginH: $fontSize.div(4),\n    $paddingV: $fontSize.div(2),\n    $paddingH: $fontSize,\n    $borderW: StypLength.of(1, 'px'),\n  };\n}\n","import { ComponentInContext } from '@wesib/generic';\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { AfterEvent, EventSupply, trackValue } from 'fun-events';\nimport { InValidation, inValidationResult } from 'input-aspects';\n\nconst ValidationResult__key = (/*#__PURE__*/ new SingleContextKey<ValidationResult>('error-receiver'));\n\nexport class ValidationResult {\n\n  static get [ContextKey__symbol](): ContextKey<ValidationResult> {\n    return ValidationResult__key;\n  }\n\n  private readonly _result = trackValue<InValidation.Result>(inValidationResult());\n  readonly read: AfterEvent<[InValidation.Result]> = this._result.read;\n\n  enable({ control }: ComponentInContext): EventSupply {\n    return control.aspect(InValidation)\n        .read(result => this._result.it = result)\n        .whenOff(() => this._result.it = inValidationResult());\n  }\n\n}\n","import { ComponentIn, ProduceStyle, Theme } from '@wesib/generic';\nimport { AttributeChanged, Component, ComponentContext, DefaultNamespaceAliaser, Render } from '@wesib/wesib';\nimport { itsEvery } from 'a-iterable';\nimport { afterThe } from 'fun-events';\nimport { InValidation, inValidationResult } from 'input-aspects';\nimport { css__naming } from 'namespace-aliaser';\nimport { StypLengthPt, stypRoot, StypRules } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { displayBlockCssClass } from '../theme';\nimport { FormThemeSettings } from './form.theme-settings';\nimport { ValidationResult } from './validation-result';\n\n@Component({\n  name: ['in-error', BEX__NS],\n  setup(setup) {\n    setup.perComponent({ as: ValidationResult });\n    setup.perComponent({\n      a: ComponentIn,\n      by: (receiver: ValidationResult) => afterThe<[ComponentIn]>(context => receiver.enable(context)),\n      with: [ValidationResult],\n    });\n  },\n})\nexport class InErrorComponent {\n\n  private _validationResult: InValidation.Result = inValidationResult();\n  private _codes = new Set<string>();\n\n  constructor(private readonly _context: ComponentContext) {\n\n    const result = _context.get(ValidationResult);\n\n    _context.whenOn(supply => {\n      result.read(r => this.validationResult = r)\n          .needs(supply)\n          .whenOff(() => this.validationResult = inValidationResult());\n    });\n  }\n\n  get validationResult(): InValidation.Result {\n    return this._validationResult;\n  }\n\n  set validationResult(value: InValidation.Result) {\n\n    const oldValue = this._validationResult;\n\n    this._validationResult = value;\n    this._context.updateState('validationResult', value, oldValue);\n  }\n\n  @AttributeChanged('code')\n  setCode(code: string) {\n    this._codes = new Set(code.trim().split(/\\s+/));\n  }\n\n  @Render()\n  render() {\n\n    const element: Element = this._context.element;\n    const hasErrorsClassName = css__naming.name(\n        displayBlockCssClass,\n        this._context.get(DefaultNamespaceAliaser),\n    );\n\n    return () => {\n      if (itsEvery(this._codes, code => !this.validationResult.has(code))) {\n        element.classList.remove(hasErrorsClassName);\n      } else {\n        element.classList.add(hasErrorsClassName);\n      }\n    };\n  }\n\n  @ProduceStyle()\n  style(): StypRules {\n\n    const borderW = StypLengthPt.of(4, 'px');\n    const settings = this._context.get(Theme).ref(FormThemeSettings).read.keep;\n\n    return stypRoot(\n        settings.thru(({ $color, $errorFontSize }) => ({\n          display: 'none',\n          fontSize: $errorFontSize,\n          padding: $errorFontSize.div(2),\n          borderLeft: `${borderW} dotted ${$color}`,\n          paddingLeft: $errorFontSize.sub(borderW),\n        })),\n    ).rules;\n  }\n\n}\n","import { ComponentTreeSupport, ThemeSupport } from '@wesib/generic';\nimport { Feature } from '@wesib/wesib';\nimport { InErrorComponent } from './in-error.component';\n\n@Feature({\n  needs: [\n    ComponentTreeSupport,\n    InErrorComponent,\n    ThemeSupport,\n  ],\n})\nexport class InputSupport {\n}\n","import { importNodeContent, Navigation, pageLoadParam, PageLoadResponse, ProduceStyle, Theme } from '@wesib/generic';\nimport { BootstrapWindow, Component, ComponentContext, Render } from '@wesib/wesib';\nimport { trackValue } from 'fun-events';\nimport { StypProperties, stypRoot } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { ThemeSettings } from '../theme';\n\n@Component({\n  name: ['main', BEX__NS],\n})\nexport class MainComponent {\n\n  private readonly _response = trackValue<PageLoadResponse>();\n\n  constructor(private readonly _context: ComponentContext) {\n    this._response.on((n, o) => _context.updateState('response', n, o));\n\n    const navigation = _context.get(Navigation);\n\n    _context.whenOn(supply => {\n      navigation.read.once(page => {\n        page.put(\n            pageLoadParam,\n            {\n              fragment: { tag: _context.element.tagName },\n              receiver: {\n                supply,\n                receive: (_ctx, response) => this._response.it = response,\n              },\n            },\n        );\n      });\n    });\n  }\n\n  @Render()\n  render() {\n\n    const document = this._context.get(BootstrapWindow).document;\n    const range = document.createRange();\n\n    range.selectNodeContents(this._context.element);\n\n    return () => {\n\n      const response = this._response.it;\n\n      if (response) {\n        range.deleteContents();\n        if (response.ok) {\n\n          const target = document.createDocumentFragment();\n          const { fragment } = response;\n\n          if (fragment) {\n            importNodeContent(fragment, target);\n            range.insertNode(target);\n          }\n        } else if (response.ok == null) {\n          range.insertNode(document.createTextNode('Loading...'));\n        } else {\n          range.insertNode(document.createTextNode(`Error. ${response.error}`));\n        }\n      }\n    };\n  }\n\n  @ProduceStyle()\n  style() {\n\n    const settings = this._context.get(Theme).ref(ThemeSettings).read.keep;\n    const root = stypRoot(settings.thru(bexBodyStyle));\n\n    return root.rules;\n  }\n\n}\n\nfunction bexBodyStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    padding: 0,\n    margin: `0 0 0 ${$fontSize.div(2)}`,\n  };\n}\n","import { ComponentNode, ElementNode, Navigation, ProduceStyle, Theme } from '@wesib/generic';\nimport { Component, ComponentContext, DefaultNamespaceAliaser } from '@wesib/wesib';\nimport { afterAll, DomEventDispatcher, EventSupply } from 'fun-events';\nimport { css__naming, QualifiedName } from 'namespace-aliaser';\nimport { StypColor, StypLengthPt, StypProperties, stypRoot } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { ThemeSettings } from '../theme';\n\nconst activeNavLinkClass: QualifiedName = ['nav-active', BEX__NS];\n\n@Component({\n  name: ['nav', BEX__NS],\n})\nexport class NavComponent {\n\n  private readonly _theme: Theme;\n\n  constructor(context: ComponentContext) {\n    this._theme = context.get(Theme);\n\n    const nsAlias = context.get(DefaultNamespaceAliaser);\n    const activeClass = css__naming.name(activeNavLinkClass, nsAlias);\n    const node = context.get(ComponentNode);\n    const navigation = context.get(Navigation);\n\n    context.whenOn(supply => {\n\n      const navLinks = node.select('a', { all: true });\n      const linkSupplies = new Map<ElementNode, EventSupply>();\n\n      navLinks.track.tillOff(supply)((added, removed) => {\n        removed.forEach(link => {\n\n          const linkSupply = linkSupplies.get(link);\n\n          if (linkSupply) {\n            linkSupplies.delete(link);\n            linkSupply.off();\n          }\n        });\n        added.forEach(\n            link => {\n\n              const element: Element = link.element;\n              const linkSupply = new DomEventDispatcher(element)\n                  .on('click')\n                  .instead(() => {\n                    if (!element.classList.contains(activeClass)) {\n                      navigation.open(element.getAttribute('href') || '');\n                    }\n                  })\n                  .needs(supply);\n\n              linkSupplies.set(link, linkSupply);\n            },\n        );\n      });\n      afterAll({\n        links: navLinks,\n        page: navigation,\n      })({\n        supply,\n        receive(\n            _ctx,\n            {\n              links: [links],\n              page: [page],\n            },\n        ) {\n\n          const pageDir = dirName(page.url);\n          let activeElement: Element | undefined;\n          let activeDir = '';\n\n          links.forEach(link => {\n\n            const element: HTMLAnchorElement = link.element;\n            const linkDir = dirName(new URL(element.href));\n\n            element.classList.remove(activeClass);\n\n            if (pageDir.startsWith(linkDir) && activeDir.length < linkDir.length) {\n              activeElement = element;\n              activeDir = linkDir;\n            }\n          });\n\n          if (activeElement) {\n            activeElement.classList.add(activeClass);\n          }\n        },\n      });\n    });\n  }\n\n  @ProduceStyle()\n  style() {\n\n    const settings = this._theme.ref(ThemeSettings).read.keep;\n    const root = stypRoot(settings.thru(navStyle));\n\n    root.rules.add({ e: 'a' }, settings.thru(navLinkStyle));\n    root.rules.add({ e: 'a', c: activeNavLinkClass }, settings.thru(activeNavLinkStyle));\n\n    return root.rules;\n  }\n\n}\n\nfunction dirName(url: URL): string {\n\n  const path = url.pathname;\n\n  if (path.endsWith('/')) {\n    return path;\n  }\n\n  return path + '/';\n}\n\nfunction navStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    padding: 0,\n    margin: `0 ${$fontSize.div(2)} 0 0`,\n  };\n}\n\nexport function navLinkBackground({ $bgColor }: ThemeSettings): StypColor {\n  return $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 }));\n}\n\nfunction navLinkStyle(\n    settings: ThemeSettings,\n): StypProperties {\n\n  const { $fontSize } = settings;\n\n  return {\n    display: 'block',\n    margin: 0,\n    padding: `${$fontSize.div(2)} ${$fontSize}`,\n    border: 0,\n    outline: 0,\n    background: navLinkBackground(settings),\n  };\n}\n\nfunction activeNavLinkStyle(\n    {\n      $fontSize,\n      $color,\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n\n  const borderW = StypLengthPt.of(4, 'px');\n\n  return {\n    background: $bgColor,\n    borderLeft: `${borderW} solid ${$color}`,\n    paddingLeft: $fontSize.sub(borderW),\n  };\n}\n","import { ProduceStyle, Theme } from '@wesib/generic';\nimport { BootstrapContext, Component, ComponentContext } from '@wesib/wesib';\nimport { stypRoot, StypRules } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { mediaStyle, ThemeSettings } from '../theme';\nimport { MainComponent } from './main.component';\nimport { NavComponent, navLinkBackground } from './nav.component';\n\n@Component({\n  name: ['container', BEX__NS],\n  feature: {\n    needs: [\n      MainComponent,\n      NavComponent,\n    ],\n  },\n})\nexport class ContainerComponent {\n\n  constructor(private readonly _context: ComponentContext) {\n  }\n\n  @ProduceStyle()\n  async style(): Promise<StypRules> {\n\n    const bsContext = this._context.get(BootstrapContext);\n    const { elementDef: { name: navName } } = await bsContext.whenDefined(NavComponent);\n    const { elementDef: { name: mainName } } = await bsContext.whenDefined(MainComponent);\n    const theme = this._context.get(Theme);\n    const settings = theme.ref(ThemeSettings).read.keep;\n\n    const { rules } = stypRoot({\n      height: '100%',\n      display: 'flex',\n      flexFlow: 'row wrap',\n      alignItems: 'stretch',\n      alignContent: 'flex-start',\n    }).add(\n        settings.thru(mediaStyle),\n    );\n    rules.add(\n        { s: ' ', $: '@media:sm' },\n        {\n          height: 'auto',\n        },\n    );\n    rules.add(\n        { e: navName },\n        settings.thru(sts => ({\n          flex: '0 1 200px',\n          height: '100%',\n          background: navLinkBackground(sts),\n        })),\n    );\n    rules.add(\n        { e: navName, $: '@media:sm' },\n        {\n          flex: '0 1 100%',\n        },\n    );\n    rules.add(\n        { e: mainName },\n        settings.thru(({ $fontSize }) => ({\n          flex: '1 1 auto',\n          margin: $fontSize,\n        })),\n    );\n\n    return rules;\n  }\n\n}\n","import { ComponentTreeSupport, PageLoadSupport, StyleProducerSupport, ThemeSupport } from '@wesib/generic';\nimport { Feature, RenderSupport } from '@wesib/wesib';\nimport { ContainerComponent } from './container.component';\n\n@Feature({\n  needs: [\n    ContainerComponent,\n    ComponentTreeSupport,\n    PageLoadSupport,\n    RenderSupport,\n    StyleProducerSupport,\n    ThemeSupport,\n  ],\n})\nexport class LayoutSupportFeature {\n}\n","import { Theme, ThemeSupport } from '@wesib/generic';\nimport { BootstrapContext, Feature } from '@wesib/wesib';\nimport { produceBasicStyle } from 'style-producer';\nimport { BodyStyle } from './body.style';\n\n@Feature({\n  needs: ThemeSupport,\n  init: addBodyStyle,\n})\nexport class BodyStyleSupport {}\n\nfunction addBodyStyle(context: BootstrapContext) {\n  context.whenReady(() => {\n    produceBasicStyle(context.get(Theme).style(BodyStyle));\n  });\n}\n","import { Feature } from '@wesib/wesib';\nimport { InputSupport } from './input/input-support.feature';\nimport { LayoutSupportFeature } from './layout';\nimport { BodyStyleSupport } from './theme/body-style-support.feature';\n\n@Feature({\n  needs: [\n    BodyStyleSupport,\n    InputSupport,\n    LayoutSupportFeature,\n  ],\n})\nexport class AppFeature {}\n","import { ComponentInControl, ComponentNode, ElementNode, ProduceStyle } from '@wesib/generic';\nimport { Component, ComponentContext } from '@wesib/wesib';\nimport { AfterEvent, eventSupply, noEventSupply, trackValue } from 'fun-events';\nimport { InControl, inText } from 'input-aspects';\nimport { stypRoot, StypRules } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\n\n@Component({\n  name: ['in-element', BEX__NS],\n  setup: ComponentInControl.setup,\n})\nexport class InElementComponent<Ctrl extends InControl<any> = InControl<any>> {\n\n  private readonly _control = trackValue<Ctrl>();\n  readonly control: AfterEvent<[Ctrl?]> = this._control.read;\n\n  constructor(context: ComponentContext) {\n\n    const inControl = context.get(ComponentInControl);\n    const root = context.get(ComponentNode);\n\n    context.whenOn(onSupply => {\n\n      const supply = eventSupply().needs(onSupply);\n      let inSupply = noEventSupply();\n\n      root.select(this.inputSelector(), { all: true, deep: true })\n          .first({\n            supply,\n            receive: (_ctx, node ) => {\n              this._control.it = node && this.nodeControl(node);\n            },\n          });\n      this._control.read({\n        supply,\n        receive: (_ctx, ctrl) => {\n          inSupply.off();\n          if (ctrl) {\n            inSupply = inControl.enable(ctrl)\n                .needs(supply)\n                .whenOff(() => this._control.it = undefined);\n          }\n        },\n      });\n    });\n  }\n\n  @ProduceStyle()\n  inputStyle(): StypRules.Source {\n    return stypRoot({\n      display: 'block',\n    }).rules;\n  }\n\n  protected inputSelector(): string {\n    return 'input';\n  }\n\n  protected nodeControl(node: ElementNode): Ctrl {\n    return inText(node.element) as any;\n  }\n\n}\n","import { Theme } from '@wesib/generic';\nimport { mixStypColors, StypProperties, StypRules } from 'style-producer';\nimport { FormThemeSettings } from './form.theme-settings';\n\nexport function InputStyle(theme: Theme): StypRules {\n\n  const formSettings = theme.ref(FormThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  rules.add({ e: 'input' }, formSettings.thru(inStyle));\n  rules.add({ e: 'input', s: '[readonly]' }, formSettings.thru(readonlyInStyle));\n  rules.add({ e: 'input', s: '[disabled]' }, formSettings.thru(readonlyInStyle));\n  rules.add({ e: 'input', s: ':focus' }, formSettings.thru(focusedInStyle));\n  rules.add({ e: 'input', c: ['inap-invalid', 'inap-touched'] }, formSettings.thru(invalidInStyle));\n  rules.add({ e: 'input', c: ['inap-missing', 'inap-touched'] }, { outlineStyle: 'dotted' });\n  rules.add({ e: 'input', c: ['inap-incomplete', 'inap-touched'] }, { outlineStyle: 'dotted' });\n\n  return rules.grab({ e: 'input' });\n}\n\nexport function inStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n      $marginV,\n      $marginH,\n      $paddingV,\n      $paddingH,\n      $bgColor,\n      $borderColor,\n      $borderW,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n    padding: `${$paddingV} ${$paddingH}`,\n    margin: `${$marginV} ${$marginH}`,\n    backgroundColor: $bgColor,\n    border: '0 none',\n    outline: `${$borderW} solid ${$borderColor}`,\n    boxShadow: 'inset 1px 1px 2px -2px black',\n    boxSizing: 'border-box',\n    width: '100%',\n  };\n}\n\nexport function readonlyInStyle(\n    {\n      $roBgColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $roBgColor,\n  };\n}\n\nfunction focusedInStyle(\n    {\n      $color,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outlineColor: mixStypColors($borderColor, $color, 0.5),\n  };\n}\n\nfunction invalidInStyle(\n    {\n      $color,\n      $borderW,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outline: `${$borderW.mul(2)} dashed ${mixStypColors($borderColor, $color, 0.25)}`,\n  };\n}\n","import { bootstrapComponents } from '@wesib/wesib';\nimport { AppFeature } from './app.feature';\n\nexport * from './app.feature';\nexport * from './bex.ns';\nexport * from './input';\nexport * from './theme';\n\nexport const examplesContext = bootstrapComponents(AppFeature);\n"],"names":["BEX__NS","NamespaceDef","ThemeSettings","RefStypRule","by","$","$color","StypRGB","r","g","b","$bgColor","$fontFace","$fontSize","StypLengthPt","of","$lineHeight","$fontWeight","$linkFontWeight","$layoutBreakpoint","StypLength","mediaStyle","@media:sm","LinkStyle","theme","settings","ref","read","keep","selector","e","root","rules","add","thru","linkStyle","s","textDecoration","grab","color","fontWeight","DefaultStyle","defaultStyle","stypRules","self","style","font","displayBlockCssClass","BodyStyle","bodySelector","htmlSelector","bodyStyle","height","margin","padding","c","display","backgroundColor","FormThemeSettings","StypRuleRefs","global","formMappings","hsl","set","l","$roBgColor","$errorFontSize","mul","$borderColor","$marginV","div","$marginH","$paddingV","$paddingH","$borderW","ValidationResult__key","SingleContextKey","ValidationResult","[object Object]","this","trackValue","inValidationResult","_result","ContextKey__symbol","control","aspect","InValidation","result","it","whenOff","InErrorComponent","_context","Set","get","whenOn","supply","validationResult","needs","_validationResult","value","oldValue","updateState","code","_codes","trim","split","element","hasErrorsClassName","css__naming","name","DefaultNamespaceAliaser","itsEvery","has","classList","remove","borderW","Theme","stypRoot","fontSize","borderLeft","paddingLeft","sub","__decorate","AttributeChanged","Render","ProduceStyle","Component","setup","perComponent","as","a","ComponentIn","receiver","afterThe","context","enable","with","InputSupport","Feature","ComponentTreeSupport","ThemeSupport","MainComponent","_response","on","n","o","navigation","Navigation","once","page","put","pageLoadParam","fragment","tag","tagName","receive","_ctx","response","document","BootstrapWindow","range","createRange","selectNodeContents","deleteContents","ok","target","createDocumentFragment","importNodeContent","insertNode","createTextNode","error","bexBodyStyle","activeNavLinkClass","NavComponent","_theme","nsAlias","activeClass","node","ComponentNode","navLinks","select","all","linkSupplies","Map","track","tillOff","added","removed","forEach","link","linkSupply","delete","off","DomEventDispatcher","instead","contains","open","getAttribute","afterAll","links","pageDir","dirName","url","activeElement","activeDir","linkDir","URL","href","startsWith","length","navStyle","navLinkStyle","activeNavLinkStyle","path","pathname","endsWith","navLinkBackground","border","outline","background","ContainerComponent","bsContext","BootstrapContext","elementDef","navName","whenDefined","mainName","flexFlow","alignItems","alignContent","sts","flex","feature","LayoutSupportFeature","PageLoadSupport","RenderSupport","StyleProducerSupport","BodyStyleSupport","init","whenReady","produceBasicStyle","AppFeature","InElementComponent","_control","inControl","ComponentInControl","onSupply","eventSupply","inSupply","noEventSupply","inputSelector","deep","first","nodeControl","ctrl","undefined","inText","InputStyle","formSettings","inStyle","readonlyInStyle","focusedInStyle","invalidInStyle","outlineStyle","boxShadow","boxSizing","width","outlineColor","mixStypColors","examplesContext","bootstrapComponents"],"mappings":"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"}