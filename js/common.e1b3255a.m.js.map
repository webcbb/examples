{"version":3,"file":"common.e1b3255a.m.js","sources":["../../src/common/examples.ns.ts","../../src/common/theme/theme-settings.ts","../../src/common/theme/link.style.ts","../../src/common/theme/default.style.ts","../../src/common/theme/body.style.ts","../../src/common/input/form.theme-settings.ts","../../src/common/input/in-error.component.ts","../../src/common/input/input-support.feature.ts","../../src/common/layout/main.component.ts","../../src/common/layout/nav.component.ts","../../src/common/layout/container.component.ts","../../src/common/layout/layout-support.feature.ts","../../src/common/theme/body-style-support.feature.ts","../../src/common/app.feature.ts","../../src/common/input/input.style.ts","../../src/common/index.ts"],"sourcesContent":["import { NamespaceDef } from 'namespace-aliaser';\n\nexport const Examples__NS = new NamespaceDef(\n    'https://wesib.github.io/examples',\n    'bex',\n    'wesib-examples',\n);\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypProperties, StypRGB } from 'style-producer';\n\nexport interface ThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $linkFontWeight: string;\n  $layoutBreakpoint: StypLength;\n}\n\nexport const ThemeSettings: RefStypRule<ThemeSettings> = RefStypRule.by(\n    { $: 'settings' },\n    {\n      $color: new StypRGB({ r: 161, g: 185, b: 142 }),\n      $bgColor: new StypRGB({ r: 40, g: 43, b: 36 }),\n      $fontFace: `'Exo 2', sans-serif`,\n      $fontSize: StypLengthPt.of(1, 'em'),\n      $lineHeight: 1.2,\n      $fontWeight: '400',\n      $linkFontWeight: '600',\n      $layoutBreakpoint: StypLength.of(576, 'px'),\n    },\n);\n\nexport function mediaStyle({ $layoutBreakpoint }: ThemeSettings): StypProperties {\n  return {\n    '@media:sm': `(max-width: ${$layoutBreakpoint})`,\n  };\n}\n","import { Theme } from '@wesib/generic/styp';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { ThemeSettings } from './theme-settings';\n\nexport function LinkStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read();\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add({ e: 'a' }, settings.keepThru(linkStyle)),\n      rules.add({ e: 'a', s: ':visited' }, settings.keepThru(linkStyle)),\n      rules.add({ e: 'a', s: ':hover' }, { textDecoration: 'underline' }),\n      rules.add({ e: 'a', s: ':active' }, { textDecoration: 'underline dotted' }),\n      rules.add({ e: 'a', s: ':focus' }, { textDecoration: 'underline dotted' }),\n  );\n}\n\nfunction linkStyle(\n    {\n      $color,\n      $linkFontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    fontWeight: $linkFontWeight,\n    textDecoration: 'none',\n  };\n}\n","import { Theme } from '@wesib/generic/styp';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { LinkStyle } from './link.style';\nimport { mediaStyle, ThemeSettings } from './theme-settings';\n\nexport function DefaultStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read();\n\n  return stypRules(\n      theme.root\n          .add(settings.keepThru(defaultStyle))\n          .add(settings.keepThru(mediaStyle)),\n      theme.style(LinkStyle),\n  );\n}\n\nfunction defaultStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n  };\n}\n","import { Theme } from '@wesib/generic/styp';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { DefaultStyle } from './default.style';\nimport { ThemeSettings } from './theme-settings';\n\nexport function BodyStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read();\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add(\n          { e: 'html' },\n          {\n            height: '100%',\n            margin: 0,\n            padding: 0,\n          },\n      ),\n      rules.add(\n          { e: 'body' },\n          settings.keepThru(bodyStyle),\n      ),\n      theme.style(DefaultStyle),\n  );\n}\n\nfunction bodyStyle(\n    {\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $bgColor,\n    height: '100%',\n    margin: 0,\n    padding: 0,\n  };\n}\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypMapper, StypRuleRefs } from 'style-producer';\nimport { ThemeSettings } from '../theme';\n\nexport interface FormThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $roBgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $errorFontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $borderColor: StypColor;\n  $marginV: StypLengthPt;\n  $marginH: StypLengthPt;\n  $paddingV: StypLengthPt;\n  $paddingH: StypLengthPt;\n  $borderW: StypLength;\n}\n\nexport const FormThemeSettings: RefStypRule<FormThemeSettings> = RefStypRule.by(\n    { $: 'settings:form' },\n    root => StypRuleRefs.by<{ global: ThemeSettings }>(\n        {\n          global: ThemeSettings,\n        },\n        root,\n    ).read().keepThru(formMappings),\n);\n\nfunction formMappings(\n    {\n      global: {\n        $color,\n        $bgColor,\n        $fontFace,\n        $fontSize,\n        $lineHeight,\n        $fontWeight,\n      },\n    }: {\n      global: ThemeSettings;\n    },\n): StypMapper.Mappings<FormThemeSettings> {\n  return {\n    $color,\n    $bgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 })),\n    $roBgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.94 })),\n    $fontFace,\n    $fontSize,\n    $errorFontSize: $fontSize.mul(0.8),\n    $lineHeight,\n    $fontWeight,\n    $borderColor: $bgColor,\n    $marginV: $fontSize.div(4),\n    $marginH: $fontSize.div(4),\n    $paddingV: $fontSize.div(2),\n    $paddingH: $fontSize,\n    $borderW: StypLength.of(1, 'px'),\n  };\n}\n","import { ConvertInput } from '@wesib/generic/input';\nimport { ProduceStyle, Theme } from '@wesib/generic/styp';\nimport { Attributes, Component, ComponentContext, trackAttribute } from '@wesib/wesib';\nimport { AfterEvent } from 'fun-events';\nimport { InCssClasses, inCssError, inCssInfo, InputAspects__NS, InStyledElement } from 'input-aspects';\nimport { QualifiedName } from 'namespace-aliaser';\nimport { StypLengthPt, stypRules, StypRules } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { FormThemeSettings } from './form.theme-settings';\n\n@Component(\n    ['in-error', Examples__NS],\n    Attributes('code'),\n    ConvertInput(\n        ({ control: { control }, aspects, context }) => {\n\n          const codes: AfterEvent<[string[]]> = trackAttribute(context, 'code')\n              .read()\n              .keepThru_(\n                  code => code ? code.trim().split(/\\s+/) : [],\n              );\n\n          return codes.keepThru(\n              when => control.convert(\n                  InStyledElement.to(context.element),\n                  aspects,\n              ).setup(\n                  InCssClasses,\n                  cssClasses => {\n                    cssClasses.add(inCssInfo());\n                    cssClasses.add(inCssError({ when }));\n                  },\n              ),\n          );\n        },\n    ),\n)\nexport class InErrorComponent {\n\n  constructor(private readonly _context: ComponentContext) {\n  }\n\n  @ProduceStyle()\n  style(): StypRules {\n    return this._context.get(Theme).style(InErrorStyle);\n  }\n\n}\n\nconst InError__qualifier = 'bex:in-error';\nconst hasError__cssClass: QualifiedName = ['has-error', InputAspects__NS];\n\nfunction InErrorStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(FormThemeSettings).read();\n  const { root: { rules } } = theme;\n  const borderW = StypLengthPt.of(4, 'px');\n\n  return stypRules(\n      rules.add(\n          { u: [':', 'host'], $: InError__qualifier },\n          settings.keepThru(({ $color, $errorFontSize }) => ({\n            display: 'none',\n            fontSize: $errorFontSize,\n            padding: $errorFontSize.div(2),\n            borderLeft: `${borderW} dotted ${$color}`,\n            paddingLeft: $errorFontSize.sub(borderW),\n          })),\n      ),\n      rules.add(\n          {\n            u: [\n              ':',\n              'host',\n              {\n                c: [hasError__cssClass, ['touched', InputAspects__NS]],\n                u: [':', 'not', { c: ['has-focus', InputAspects__NS] }],\n              },\n            ],\n            $: InError__qualifier,\n          },\n          {\n            display: 'block',\n          },\n      ),\n      rules.add(\n          {\n            u: [\n              ':',\n              'host',\n              {\n                c: hasError__cssClass,\n                u: [\n                  [':', 'not', { u: ['code', '~=', 'missing'] }],\n                  [':', 'not', { u: ['code', '~=', 'incomplete'] }],\n                ],\n              },\n            ],\n            $: InError__qualifier,\n          },\n          {\n            display: 'block',\n          },\n      ),\n  );\n}\n","import { ComponentTreeSupport } from '@wesib/generic';\nimport { ThemeSupport } from '@wesib/generic/styp';\nimport { Feature } from '@wesib/wesib';\nimport { InErrorComponent } from './in-error.component';\n\n@Feature({\n  needs: [\n    ComponentTreeSupport,\n    InErrorComponent,\n    ThemeSupport,\n  ],\n})\nexport class InputSupport {\n}\n","import { IncludePage } from '@wesib/generic';\nimport { Component } from '@wesib/wesib';\nimport { StypProperties } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { ThemeSettings } from '../theme';\n\n@Component(\n    ['main', Examples__NS],\n    IncludePage({\n      onResponse({ response, range }) {\n        if (!response.ok) {\n          range.deleteContents();\n          if (response.ok == null) {\n            range.insertNode(document.createTextNode('Loading...'));\n          } else {\n            range.insertNode(document.createTextNode(`Error. ${response.error}`));\n          }\n        }\n      },\n    }),\n)\nexport class MainComponent {\n}\n\nexport function mainStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    flex: '1 1 auto',\n    padding: 0,\n    margin: `0 0 0 ${$fontSize.div(2)}`,\n  };\n}\n","import { ActivateNavLink, HandleNavLinks } from '@wesib/generic';\nimport { ProduceStyle, Theme } from '@wesib/generic/styp';\nimport { Component, ComponentContext, Wesib__NS } from '@wesib/wesib';\nimport { StypColor, StypLengthPt, StypProperties, stypRules, StypRules } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { ThemeSettings } from '../theme';\n\n@Component(\n    ['nav', Examples__NS],\n    HandleNavLinks(),\n    ActivateNavLink(),\n)\nexport class NavComponent {\n\n  private readonly _theme: Theme;\n\n  constructor(context: ComponentContext) {\n    this._theme = context.get(Theme);\n  }\n\n  @ProduceStyle()\n  style(): StypRules {\n    return this._theme.style(NavStyle);\n  }\n\n}\n\nconst Nav__qualifier = 'bex:nav';\n\nfunction NavStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read();\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add(\n          { u: [':', 'host'], $: Nav__qualifier },\n          settings.keepThru(navStyle),\n      ),\n      rules.add(\n          { u: [':', 'host'], $: Nav__qualifier },\n          settings.keepThru(sts => ({\n            flex: '0 1 200px',\n            height: '100%',\n            background: navLinkBackground(sts),\n          })),\n      ),\n      rules.add(\n          { u: [':', 'host'], $: [Nav__qualifier, '@media:sm'] },\n          {\n            flex: '0 1 100%',\n          },\n      ),\n      rules.add(\n          [{ u: [':', 'host'], $: Nav__qualifier }, { e: 'a', $: Nav__qualifier }],\n          settings.keepThru(navLinkStyle),\n      ),\n      rules.add(\n          [{ u: [':', 'host'], $: Nav__qualifier }, { e: 'a', c: ['active', Wesib__NS], $: Nav__qualifier }],\n          settings.keepThru(activeNavLinkStyle),\n      ),\n  );\n}\n\nfunction navStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    padding: 0,\n    margin: `0 ${$fontSize.div(2)} 0 0`,\n  };\n}\n\nexport function navLinkBackground({ $bgColor }: ThemeSettings): StypColor {\n  return $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 }));\n}\n\nfunction navLinkStyle(\n    settings: ThemeSettings,\n): StypProperties {\n\n  const { $fontSize } = settings;\n\n  return {\n    display: 'block',\n    margin: 0,\n    padding: `${$fontSize.div(2)} ${$fontSize}`,\n    border: 0,\n    outline: 0,\n    background: navLinkBackground(settings),\n  };\n}\n\nfunction activeNavLinkStyle(\n    {\n      $fontSize,\n      $color,\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n\n  const borderW = StypLengthPt.of(4, 'px');\n\n  return {\n    background: $bgColor,\n    borderLeft: `${borderW} solid ${$color}`,\n    paddingLeft: $fontSize.sub(borderW),\n  };\n}\n","import { ProduceStyle, Theme } from '@wesib/generic/styp';\nimport { BootstrapContext, Component, ComponentContext } from '@wesib/wesib';\nimport { QualifiedName } from 'namespace-aliaser';\nimport { stypRules, StypRules } from 'style-producer';\nimport { Examples__NS } from '../examples.ns';\nimport { mediaStyle, ThemeSettings } from '../theme';\nimport { MainComponent, mainStyle } from './main.component';\nimport { NavComponent } from './nav.component';\n\n@Component({\n  name: ['container', Examples__NS],\n  feature: {\n    needs: [\n      MainComponent,\n      NavComponent,\n    ],\n  },\n})\nexport class ContainerComponent {\n\n  constructor(private readonly _context: ComponentContext) {\n  }\n\n  @ProduceStyle()\n  async style(): Promise<StypRules> {\n\n    const { elementDef: { name: mainName } } = await this._context.get(BootstrapContext).whenDefined(MainComponent);\n\n    return this._context.get(Theme).style(ContainerStyle(mainName!));\n  }\n\n}\n\nconst Container__qualifier = 'bex:container';\n\nfunction ContainerStyle(mainName: QualifiedName): (theme: Theme) => StypRules {\n  return theme => {\n\n    const settings = theme.ref(ThemeSettings).read();\n    const { root: { rules } } = theme;\n\n    return stypRules(\n        rules.add(\n            { u: [':', 'host'], $: Container__qualifier },\n            {\n              height: '100%',\n              display: 'flex',\n              flexFlow: 'row wrap',\n              alignItems: 'stretch',\n              alignContent: 'flex-start',\n            },\n        ).add(\n            settings.keepThru(mediaStyle),\n        ),\n        rules.add(\n            { u: [':', 'host'], $: [Container__qualifier, '@media:sm'] },\n            {\n              height: 'auto',\n            },\n        ),\n        rules.add(\n            [{ u: [':', 'host'], $: Container__qualifier }, { e: mainName, $: Container__qualifier }],\n            settings.keepThru(mainStyle),\n        ),\n    );\n  };\n}\n","import { ComponentTreeSupport, PageLoadSupport } from '@wesib/generic';\nimport { StyleProducerSupport, ThemeSupport } from '@wesib/generic/styp';\nimport { Feature } from '@wesib/wesib';\nimport { ContainerComponent } from './container.component';\n\n@Feature({\n  needs: [\n    ContainerComponent,\n    ComponentTreeSupport,\n    PageLoadSupport,\n    StyleProducerSupport,\n    ThemeSupport,\n  ],\n})\nexport class LayoutSupportFeature {\n}\n","import { Theme, ThemeSupport } from '@wesib/generic/styp';\nimport { Feature } from '@wesib/wesib';\nimport { produceBasicStyle } from 'style-producer';\nimport { BodyStyle } from './body.style';\n\n@Feature({\n  needs: ThemeSupport,\n  init(context) {\n    context.whenReady(() => {\n      produceBasicStyle(context.get(Theme).style(BodyStyle));\n    });\n  },\n})\nexport class BodyStyleSupport {}\n\n","import { Feature } from '@wesib/wesib';\nimport { InputSupport } from './input/input-support.feature';\nimport { LayoutSupportFeature } from './layout';\nimport { BodyStyleSupport } from './theme/body-style-support.feature';\n\n@Feature({\n  needs: [\n    BodyStyleSupport,\n    InputSupport,\n    LayoutSupportFeature,\n  ],\n})\nexport class AppFeature {}\n","import { Theme } from '@wesib/generic/styp';\nimport { InputAspects__NS } from 'input-aspects';\nimport { mixStypColors, StypProperties, stypRules, StypRules } from 'style-producer';\nimport { FormThemeSettings } from './form.theme-settings';\n\nexport function InputStyle(theme: Theme): StypRules {\n\n  const formSettings = theme.ref(FormThemeSettings).read();\n  const { root: { rules } } = theme;\n\n  return stypRules(\n      rules.add({ e: 'input' }, formSettings.thru(inStyle)),\n      rules.add({ e: 'input', s: '[readonly]' }, formSettings.thru(readonlyInStyle)),\n      rules.add({ e: 'input', s: '[disabled]' }, formSettings.thru(readonlyInStyle)),\n      rules.add({ e: 'input', s: ':focus' }, formSettings.thru(focusedInStyle)),\n      rules.add(\n          {\n            e: 'input',\n            c: [\n              ['invalid', InputAspects__NS],\n              ['touched', InputAspects__NS],\n            ],\n          },\n          formSettings.keepThru(invalidInStyle),\n      ),\n      rules.add(\n          {\n            e: 'input',\n            c: [\n              ['missing', InputAspects__NS],\n              ['touched', InputAspects__NS],\n            ],\n          },\n          {\n            outlineStyle: 'dotted',\n          },\n      ),\n      rules.add(\n          {\n            e: 'input',\n            c: [\n              ['incomplete', InputAspects__NS],\n              ['touched', InputAspects__NS],\n            ],\n          },\n          {\n            outlineStyle: 'dotted',\n          },\n      ),\n  );\n}\n\nexport function inStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n      $marginV,\n      $marginH,\n      $paddingV,\n      $paddingH,\n      $bgColor,\n      $borderColor,\n      $borderW,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n    padding: `${$paddingV} ${$paddingH}`,\n    margin: `${$marginV} ${$marginH}`,\n    backgroundColor: $bgColor,\n    border: '0 none',\n    outline: `${$borderW} solid ${$borderColor}`,\n    boxShadow: 'inset 1px 1px 2px -2px black',\n    boxSizing: 'border-box',\n    width: '100%',\n  };\n}\n\nexport function readonlyInStyle(\n    {\n      $roBgColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $roBgColor,\n  };\n}\n\nfunction focusedInStyle(\n    {\n      $color,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outlineColor: mixStypColors($borderColor, $color, 0.5),\n  };\n}\n\nfunction invalidInStyle(\n    {\n      $color,\n      $borderW,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outline: `${$borderW.mul(2)} dashed ${mixStypColors($borderColor, $color, 0.25)}`,\n  };\n}\n","import { bootstrapComponents } from '@wesib/wesib';\nimport { AppFeature } from './app.feature';\n\nexport * from './app.feature';\nexport * from './examples.ns';\nexport * from './input';\nexport * from './theme';\n\nexport const examplesContext = bootstrapComponents(AppFeature);\n"],"names":["Examples__NS","NamespaceDef","ThemeSettings","RefStypRule","by","$","$color","StypRGB","r","g","b","$bgColor","$fontFace","$fontSize","StypLengthPt","of","$lineHeight","$fontWeight","$linkFontWeight","$layoutBreakpoint","StypLength","mediaStyle","@media:sm","LinkStyle","theme","settings","ref","read","root","rules","stypRules","add","e","keepThru","linkStyle","s","textDecoration","color","fontWeight","DefaultStyle","defaultStyle","style","font","BodyStyle","height","margin","padding","bodyStyle","backgroundColor","FormThemeSettings","StypRuleRefs","global","formMappings","hsl","set","l","$roBgColor","$errorFontSize","mul","$borderColor","$marginV","div","$marginH","$paddingV","$paddingH","$borderW","InErrorComponent","[object Object]","_context","this","get","Theme","InErrorStyle","__decorate","ProduceStyle","Component","Attributes","ConvertInput","control","aspects","context","trackAttribute","keepThru_","code","trim","split","when","convert","InStyledElement","to","element","setup","InCssClasses","cssClasses","inCssInfo","inCssError","hasError__cssClass","InputAspects__NS","borderW","u","display","fontSize","borderLeft","paddingLeft","sub","c","InputSupport","Feature","needs","ComponentTreeSupport","ThemeSupport","MainComponent","mainStyle","flex","IncludePage","response","range","ok","deleteContents","insertNode","document","createTextNode","error","NavComponent","_theme","NavStyle","HandleNavLinks","ActivateNavLink","navStyle","sts","background","navLinkBackground","navLinkStyle","Wesib__NS","activeNavLinkStyle","border","outline","ContainerComponent","elementDef","name","mainName","BootstrapContext","whenDefined","flexFlow","alignItems","alignContent","ContainerStyle","feature","LayoutSupportFeature","PageLoadSupport","StyleProducerSupport","BodyStyleSupport","whenReady","produceBasicStyle","AppFeature","InputStyle","formSettings","thru","inStyle","readonlyInStyle","focusedInStyle","invalidInStyle","outlineStyle","boxShadow","boxSizing","width","outlineColor","mixStypColors","examplesContext","bootstrapComponents"],"mappings":"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"}