{"version":3,"file":"common.e72a1c4a.module.js","sources":["../../src/common/bex.ns.ts","../../src/common/theme/theme-settings.ts","../../src/common/theme/link.style.ts","../../src/common/theme/default.style.ts","../../src/common/theme/body.style.ts","../../src/common/theme/form.theme-settings.ts","../../src/common/theme/input.style.ts","../../src/common/layout/nav-body.component.ts","../../src/common/layout/nav.component.ts","../../src/common/layout/container.component.ts","../../src/common/layout/layout-support.feature.ts","../../src/common/theme/body-style-support.feature.ts","../../src/common/app.feature.ts","../../src/common/index.ts"],"sourcesContent":["import { NamespaceDef } from 'namespace-aliaser';\n\nexport const BEX__NS = new NamespaceDef(\n    'https://wesib.github.io/examples',\n    'bex',\n    'wesib-examples',\n);\n","import { RefStypRule, StypColor, StypLengthPt, StypRGB } from 'style-producer';\n\nexport interface ThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $linkFontWeight: string;\n}\n\nexport const ThemeSettings: RefStypRule<ThemeSettings> = RefStypRule.by(\n    { $: 'settings' },\n    {\n      $color: new StypRGB({ r: 161, g: 185, b: 142 }),\n      $bgColor: new StypRGB({ r: 40, g: 43, b: 36 }),\n      $fontFace: `'Exo 2', sans-serif`,\n      $fontSize: StypLengthPt.of(1, 'em'),\n      $lineHeight: 1.2,\n      $fontWeight: '400',\n      $linkFontWeight: '600',\n    });\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, StypRules } from 'style-producer';\nimport { ThemeSettings } from './theme-settings';\n\nexport function LinkStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const selector = { e: 'a' };\n\n  theme.root.rules.add(selector, settings.thru(linkStyle));\n  theme.root.rules.add({ e: 'a', s: ':visited' }, settings.thru(linkStyle));\n  theme.root.rules.add({ e: 'a', s: ':hover' }, { textDecoration: 'underline' });\n  theme.root.rules.add({ e: 'a', s: ':active' }, { textDecoration: 'underline dotted' });\n  theme.root.rules.add({ e: 'a', s: ':focus' }, { textDecoration: 'underline dotted' });\n\n  return theme.root.rules.grab(selector);\n}\n\nfunction linkStyle(\n    {\n      $color,\n      $linkFontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    fontWeight: $linkFontWeight,\n    textDecoration: 'none',\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { LinkStyle } from './link.style';\nimport { ThemeSettings } from './theme-settings';\n\nexport function DefaultStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n\n  theme.root.add(settings.thru(defaultStyle));\n\n  return stypRules(\n      theme.root.rules.self,\n      theme.style(LinkStyle),\n  );\n}\n\nfunction defaultStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { DefaultStyle } from './default.style';\nimport { ThemeSettings } from './theme-settings';\n\nexport function BodyStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const bodySelector = { e: 'body' };\n  const htmlSelector = { e: 'html' };\n\n  theme.root.rules.add(bodySelector, settings.thru(bodyStyle));\n  theme.root.rules.add(\n      htmlSelector,\n      {\n        height: '100%',\n        margin: 0,\n        padding: 0,\n      },\n  );\n\n  return stypRules(\n      theme.root.rules.grab(htmlSelector),\n      theme.root.rules.grab(bodySelector),\n      theme.style(DefaultStyle),\n  );\n}\n\nfunction bodyStyle(\n    {\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $bgColor,\n    height: '100%',\n    margin: 0,\n    padding: 0,\n  };\n}\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypMapper, StypRuleRefs } from 'style-producer';\nimport { ThemeSettings } from './theme-settings';\n\nexport interface FormThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $roBgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $borderColor: StypColor;\n  $marginV: StypLengthPt;\n  $marginH: StypLengthPt;\n  $paddingV: StypLengthPt;\n  $paddingH: StypLengthPt;\n  $borderW: StypLength;\n}\n\nexport const FormThemeSettings: RefStypRule<FormThemeSettings> = RefStypRule.by(\n    { $: 'settings:form' },\n    root => StypRuleRefs.by<{ global: ThemeSettings }>(\n        {\n          global: ThemeSettings,\n        },\n        root,\n    ).read.keep.thru(formMappings));\n\nfunction formMappings(\n    {\n      global: {\n        $color,\n        $bgColor,\n        $fontFace,\n        $fontSize,\n        $lineHeight,\n        $fontWeight,\n      },\n    }: {\n      global: ThemeSettings,\n    },\n): StypMapper.Mappings<FormThemeSettings> {\n  return {\n    $color,\n    $bgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 })),\n    $roBgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.94 })),\n    $fontFace,\n    $fontSize,\n    $lineHeight,\n    $fontWeight,\n    $borderColor: $bgColor,\n    $marginV: $fontSize.div(4),\n    $marginH: $fontSize.div(4),\n    $paddingV: $fontSize.div(2),\n    $paddingH: $fontSize,\n    $borderW: StypLength.of(1, 'px'),\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { mixStypColors, StypProperties, StypRules } from 'style-producer';\nimport { FormThemeSettings } from './form.theme-settings';\n\nexport function InputStyle(theme: Theme): StypRules {\n\n  const formSettings = theme.ref(FormThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  rules.add({ e: 'input' }, formSettings.thru(inStyle));\n  rules.add({ e: 'input', s: '[readonly]' }, formSettings.thru(readonlyInStyle));\n  rules.add({ e: 'input', s: '[disabled]' }, formSettings.thru(readonlyInStyle));\n  rules.add({ e: 'input', s: ':focus' }, formSettings.thru(focusedInStyle));\n  rules.add({ e: 'input', c: ['inap-invalid', 'inap-touched'] }, formSettings.thru(invalidInStyle));\n  rules.add({ e: 'input', c: ['inap-missing', 'inap-touched'] }, { outlineStyle: 'dotted' });\n  rules.add({ e: 'input', c: ['inap-incomplete', 'inap-touched'] }, { outlineStyle: 'dotted' });\n\n  return rules.grab({ e: 'input' });\n}\n\nexport function inStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n      $marginV,\n      $marginH,\n      $paddingV,\n      $paddingH,\n      $bgColor,\n      $borderColor,\n      $borderW,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n    padding: `${$paddingV} ${$paddingH}`,\n    margin: `${$marginV} ${$marginH}`,\n    backgroundColor: $bgColor,\n    border: '0 none',\n    outline: `${$borderW} solid ${$borderColor}`,\n    boxShadow: 'inset 1px 1px 2px -2px black',\n    boxSizing: 'border-box',\n    width: '100%',\n  };\n}\n\nexport function readonlyInStyle(\n    {\n      $roBgColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $roBgColor,\n  };\n}\n\nfunction focusedInStyle(\n    {\n      $color,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outlineColor: mixStypColors($borderColor, $color, 0.5),\n  };\n}\n\nfunction invalidInStyle(\n    {\n      $color,\n      $borderW,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outline: `${$borderW.mul(2)} dashed ${mixStypColors($borderColor, $color, 0.25)}`,\n  };\n}\n","import { importNodeContent, Navigation, pageLoadParam, ProduceStyle, Theme } from '@wesib/generic';\nimport { BootstrapWindow, Component, ComponentContext } from '@wesib/wesib';\nimport { StypProperties, stypRoot } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { ThemeSettings } from '../theme';\n\n@Component({\n  name: ['body', BEX__NS],\n})\nexport class NavBodyComponent {\n\n  private readonly _theme: Theme;\n\n  constructor(context: ComponentContext) {\n    this._theme = context.get(Theme);\n\n    const document = context.get(BootstrapWindow).document;\n    const navigation = context.get(Navigation);\n\n    context.whenOn(supply => {\n\n      const element: Element = context.element;\n      const range = document.createRange();\n\n      supply.whenOff(() => range.deleteContents());\n      range.selectNodeContents(element);\n\n      navigation.read.once(page => {\n        page.put(\n            pageLoadParam,\n            {\n              fragment: { tag: element.tagName },\n              receiver: {\n                supply,\n                receive(_ctx, response) {\n                  if (response.ok) {\n                    range.deleteContents();\n\n                    const target = document.createDocumentFragment();\n                    const { fragment } = response;\n\n                    if (fragment) {\n                      importNodeContent(fragment, target);\n                      range.insertNode(target);\n                    }\n                  } else if (response.ok === false) {\n                    range.deleteContents();\n                    range.insertNode(document.createTextNode(`Error. ${response.error}`));\n                  } else {\n                    range.deleteContents();\n                    range.insertNode(document.createTextNode('Loading...'));\n                  }\n                },\n              },\n            },\n        );\n      });\n    });\n  }\n\n  @ProduceStyle()\n  style() {\n\n    const settings = this._theme.ref(ThemeSettings).read.keep;\n    const root = stypRoot(settings.thru(bexBodyStyle));\n\n    return root.rules;\n  }\n\n}\n\nfunction bexBodyStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    padding: 0,\n    margin: `0 0 0 ${$fontSize.div(2)}`,\n  };\n}\n","import { ComponentNode, Navigation, ProduceStyle, Theme } from '@wesib/generic';\nimport { Component, ComponentContext, DefaultNamespaceAliaser } from '@wesib/wesib';\nimport { afterAll, DomEventDispatcher } from 'fun-events';\nimport { css__naming, QualifiedName } from 'namespace-aliaser';\nimport { StypColor, StypLengthPt, StypProperties, stypRoot } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { ThemeSettings } from '../theme';\n\nconst activeNavLinkClass: QualifiedName = ['nav-active', BEX__NS];\n\n@Component({\n  name: ['nav', BEX__NS],\n})\nexport class NavComponent {\n\n  private readonly _theme: Theme;\n\n  constructor(context: ComponentContext) {\n    this._theme = context.get(Theme);\n\n    const nsAlias = context.get(DefaultNamespaceAliaser);\n    const activeClass = css__naming.name(activeNavLinkClass, nsAlias);\n    const node = context.get(ComponentNode);\n    const navigation = context.get(Navigation);\n\n    context.whenOn(supply => {\n\n      const navLinks = node.select('a', { all: true });\n\n      navLinks.read({\n        supply,\n        receive(_, links) {\n          links.forEach(\n              link => {\n\n                const element: Element = link.element;\n\n                new DomEventDispatcher(element)\n                    .on('click')\n                    .instead(() => {\n                      if (!element.classList.contains(activeClass)) {\n                        navigation.open(element.getAttribute('href') || '');\n                      }\n                    })\n                    .needs(supply);\n              },\n          );\n        },\n      });\n      afterAll({\n        links: navLinks,\n        page: navigation,\n      })({\n        supply,\n        receive(\n            _ctx,\n            {\n              links: [links],\n              page: [page],\n            },\n        ) {\n\n          const pageDir = dirName(page.url);\n          let activeElement: Element | undefined;\n          let activeDir = '';\n\n          links.forEach(link => {\n\n            const element: HTMLAnchorElement = link.element;\n            const linkDir = dirName(new URL(element.href));\n\n            element.classList.remove(activeClass);\n\n            if (pageDir.startsWith(linkDir) && activeDir.length < linkDir.length) {\n              activeElement = element;\n              activeDir = linkDir;\n            }\n          });\n\n          if (activeElement) {\n            activeElement.classList.add(activeClass);\n          }\n        },\n      });\n    });\n  }\n\n  @ProduceStyle()\n  style() {\n\n    const settings = this._theme.ref(ThemeSettings).read.keep;\n    const root = stypRoot(settings.thru(navStyle));\n\n    root.rules.add({ e: 'a' }, settings.thru(navLinkStyle));\n    root.rules.add({ e: 'a', c: activeNavLinkClass }, settings.thru(activeNavLinkStyle));\n\n    return root.rules;\n  }\n\n}\n\nfunction dirName(url: URL): string {\n\n  const path = url.pathname;\n\n  if (path.endsWith('/')) {\n    return path;\n  }\n\n  return path + '/';\n}\n\nfunction navStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    padding: 0,\n    margin: `0 ${$fontSize.div(2)} 0 0`,\n  };\n}\n\nexport function navLinkBackground({ $bgColor }: ThemeSettings): StypColor {\n  return $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 }));\n}\n\nfunction navLinkStyle(\n    settings: ThemeSettings,\n): StypProperties {\n\n  const { $fontSize } = settings;\n\n  return {\n    display: 'block',\n    margin: 0,\n    padding: `${$fontSize.div(2)} ${$fontSize}`,\n    border: 0,\n    outline: 0,\n    background: navLinkBackground(settings),\n  };\n}\n\nfunction activeNavLinkStyle(\n    {\n      $fontSize,\n      $color,\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n\n  const borderW = StypLengthPt.of(4, 'px');\n\n  return {\n    background: $bgColor,\n    borderLeft: `${borderW} solid ${$color}`,\n    paddingLeft: $fontSize.sub(borderW),\n  };\n}\n","import { ProduceStyle, Theme } from '@wesib/generic';\nimport { Component, ComponentContext, ComponentDef } from '@wesib/wesib';\nimport { stypRoot } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { ThemeSettings } from '../theme';\nimport { NavBodyComponent } from './nav-body.component';\nimport { NavComponent, navLinkBackground } from './nav.component';\n\n@Component({\n  name: ['container', BEX__NS],\n})\nexport class ContainerComponent {\n\n  private readonly _theme: Theme;\n\n  constructor(context: ComponentContext) {\n    this._theme = context.get(Theme);\n  }\n\n  @ProduceStyle()\n  style() {\n\n    const root = stypRoot({\n      height: '100%',\n      display: 'flex',\n      flexFlow: 'row wrap',\n      alignItems: 'stretch',\n      alignContent: 'flex-start',\n    });\n\n    const settings = this._theme.ref(ThemeSettings).read.keep;\n\n    root.rules.add(\n        { e: ComponentDef.of(NavComponent).name! },\n        settings.thru(sts => ({\n          flex: '0 1 200px',\n          height: '100%',\n          background: navLinkBackground(sts),\n        })),\n    );\n    root.rules.add(\n        { e: ComponentDef.of(NavBodyComponent).name! },\n        settings.thru(({ $fontSize }) => ({\n          flex: '1 1 auto',\n          margin: $fontSize,\n        })),\n    );\n\n    return root.rules;\n  }\n\n}\n","import { ComponentTreeSupport, PageLoadSupport, ThemeSupport } from '@wesib/generic';\nimport { Feature } from '@wesib/wesib';\nimport { NavBodyComponent } from './nav-body.component';\nimport { ContainerComponent } from './container.component';\nimport { NavComponent } from './nav.component';\n\n@Feature({\n  needs: [\n    NavBodyComponent,\n    ContainerComponent,\n    NavComponent,\n    ComponentTreeSupport,\n    PageLoadSupport,\n    ThemeSupport,\n  ],\n})\nexport class LayoutSupportFeature {\n}\n","import { Theme, ThemeSupport } from '@wesib/generic';\nimport { BootstrapContext, Feature } from '@wesib/wesib';\nimport { produceBasicStyle } from 'style-producer';\nimport { BodyStyle } from './body.style';\n\n@Feature({\n  needs: ThemeSupport,\n  init: addBodyStyle,\n})\nexport class BodyStyleSupport {}\n\nfunction addBodyStyle(context: BootstrapContext) {\n  context.whenReady(() => {\n    produceBasicStyle(context.get(Theme).style(BodyStyle));\n  });\n}\n","import { Feature } from '@wesib/wesib';\nimport { LayoutSupportFeature } from './layout';\nimport { BodyStyleSupport } from './theme/body-style-support.feature';\n\n@Feature({\n  needs: [\n    BodyStyleSupport,\n    LayoutSupportFeature,\n  ],\n})\nexport class AppFeature {}\n","import { bootstrapComponents } from '@wesib/wesib';\nimport { AppFeature } from './app.feature';\n\nexport * from './app.feature';\nexport * from './bex.ns';\nexport * from './theme';\n\nexport const examplesContext = bootstrapComponents(AppFeature);\n"],"names":["BEX__NS","NamespaceDef","ThemeSettings","RefStypRule","by","$","$color","StypRGB","r","g","b","$bgColor","$fontFace","$fontSize","StypLengthPt","of","$lineHeight","$fontWeight","$linkFontWeight","LinkStyle","theme","settings","ref","read","keep","selector","e","root","rules","add","thru","linkStyle","s","textDecoration","grab","color","fontWeight","DefaultStyle","defaultStyle","stypRules","self","style","font","BodyStyle","bodySelector","htmlSelector","bodyStyle","height","margin","padding","backgroundColor","FormThemeSettings","StypRuleRefs","global","formMappings","hsl","set","l","$roBgColor","$borderColor","$marginV","div","$marginH","$paddingV","$paddingH","$borderW","StypLength","InputStyle","formSettings","inStyle","readonlyInStyle","focusedInStyle","c","invalidInStyle","outlineStyle","border","outline","boxShadow","boxSizing","width","outlineColor","mixStypColors","mul","NavBodyComponent","[object Object]","context","this","_theme","get","Theme","document","BootstrapWindow","navigation","Navigation","whenOn","supply","element","range","createRange","whenOff","deleteContents","selectNodeContents","once","page","put","pageLoadParam","fragment","tag","tagName","receiver","_ctx","response","ok","target","createDocumentFragment","importNodeContent","insertNode","createTextNode","error","stypRoot","bexBodyStyle","__decorate","ProduceStyle","Component","name","activeNavLinkClass","NavComponent","nsAlias","DefaultNamespaceAliaser","activeClass","css__naming","node","ComponentNode","navLinks","select","all","_","links","forEach","link","DomEventDispatcher","on","instead","classList","contains","open","getAttribute","needs","afterAll","pageDir","dirName","url","activeElement","activeDir","linkDir","URL","href","remove","startsWith","length","navStyle","navLinkStyle","activeNavLinkStyle","path","pathname","endsWith","navLinkBackground","display","background","borderW","borderLeft","paddingLeft","sub","ContainerComponent","flexFlow","alignItems","alignContent","ComponentDef","sts","flex","LayoutSupportFeature","Feature","ComponentTreeSupport","PageLoadSupport","ThemeSupport","BodyStyleSupport","init","whenReady","produceBasicStyle","AppFeature","examplesContext","bootstrapComponents"],"mappings":"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"}