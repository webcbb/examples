{"version":3,"file":"common.f26f270c.m.js","sources":["../../src/common/bex.ns.ts","../../src/common/theme/theme-settings.ts","../../src/common/theme/link.style.ts","../../src/common/theme/default.style.ts","../../src/common/theme/body.style.ts","../../src/common/theme/form.theme-settings.ts","../../src/common/theme/input.style.ts","../../src/common/layout/main.component.ts","../../src/common/layout/nav.component.ts","../../src/common/layout/container.component.ts","../../src/common/layout/layout-support.feature.ts","../../src/common/theme/body-style-support.feature.ts","../../src/common/app.feature.ts","../../src/common/index.ts"],"sourcesContent":["import { NamespaceDef } from 'namespace-aliaser';\n\nexport const BEX__NS = new NamespaceDef(\n    'https://wesib.github.io/examples',\n    'bex',\n    'wesib-examples',\n);\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypProperties, StypRGB } from 'style-producer';\n\nexport interface ThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $linkFontWeight: string;\n  $layoutBreakpoint: StypLength;\n}\n\nexport const ThemeSettings: RefStypRule<ThemeSettings> = RefStypRule.by(\n    { $: 'settings' },\n    {\n      $color: new StypRGB({ r: 161, g: 185, b: 142 }),\n      $bgColor: new StypRGB({ r: 40, g: 43, b: 36 }),\n      $fontFace: `'Exo 2', sans-serif`,\n      $fontSize: StypLengthPt.of(1, 'em'),\n      $lineHeight: 1.2,\n      $fontWeight: '400',\n      $linkFontWeight: '600',\n      $layoutBreakpoint: StypLength.of(576, 'px'),\n    });\n\nexport function mediaStyle({ $layoutBreakpoint }: ThemeSettings): StypProperties {\n  return {\n    '@media:sm': `(max-width: ${$layoutBreakpoint})`,\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, StypRules } from 'style-producer';\nimport { ThemeSettings } from './theme-settings';\n\nexport function LinkStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const selector = { e: 'a' };\n\n  theme.root.rules.add(selector, settings.thru(linkStyle));\n  theme.root.rules.add({ e: 'a', s: ':visited' }, settings.thru(linkStyle));\n  theme.root.rules.add({ e: 'a', s: ':hover' }, { textDecoration: 'underline' });\n  theme.root.rules.add({ e: 'a', s: ':active' }, { textDecoration: 'underline dotted' });\n  theme.root.rules.add({ e: 'a', s: ':focus' }, { textDecoration: 'underline dotted' });\n\n  return theme.root.rules.grab(selector);\n}\n\nfunction linkStyle(\n    {\n      $color,\n      $linkFontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    fontWeight: $linkFontWeight,\n    textDecoration: 'none',\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { LinkStyle } from './link.style';\nimport { mediaStyle, ThemeSettings } from './theme-settings';\n\nexport function DefaultStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n\n  theme.root.add(settings.thru(defaultStyle));\n  theme.root.add(settings.thru(mediaStyle));\n\n  return stypRules(\n      theme.root.rules.self,\n      theme.style(LinkStyle),\n  );\n}\n\nfunction defaultStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { StypProperties, stypRules, StypRules } from 'style-producer';\nimport { DefaultStyle } from './default.style';\nimport { ThemeSettings } from './theme-settings';\n\nexport function BodyStyle(theme: Theme): StypRules {\n\n  const settings = theme.ref(ThemeSettings).read.keep;\n  const bodySelector = { e: 'body' };\n  const htmlSelector = { e: 'html' };\n\n  theme.root.rules.add(bodySelector, settings.thru(bodyStyle));\n  theme.root.rules.add(\n      htmlSelector,\n      {\n        height: '100%',\n        margin: 0,\n        padding: 0,\n      },\n  );\n\n  return stypRules(\n      theme.root.rules.grab(htmlSelector),\n      theme.root.rules.grab(bodySelector),\n      theme.style(DefaultStyle),\n  );\n}\n\nfunction bodyStyle(\n    {\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $bgColor,\n    height: '100%',\n    margin: 0,\n    padding: 0,\n  };\n}\n","import { RefStypRule, StypColor, StypLength, StypLengthPt, StypMapper, StypRuleRefs } from 'style-producer';\nimport { ThemeSettings } from './theme-settings';\n\nexport interface FormThemeSettings {\n  $color: StypColor;\n  $bgColor: StypColor;\n  $roBgColor: StypColor;\n  $fontFace: string;\n  $fontSize: StypLengthPt;\n  $lineHeight: number;\n  $fontWeight: string;\n  $borderColor: StypColor;\n  $marginV: StypLengthPt;\n  $marginH: StypLengthPt;\n  $paddingV: StypLengthPt;\n  $paddingH: StypLengthPt;\n  $borderW: StypLength;\n}\n\nexport const FormThemeSettings: RefStypRule<FormThemeSettings> = RefStypRule.by(\n    { $: 'settings:form' },\n    root => StypRuleRefs.by<{ global: ThemeSettings }>(\n        {\n          global: ThemeSettings,\n        },\n        root,\n    ).read.keep.thru(formMappings));\n\nfunction formMappings(\n    {\n      global: {\n        $color,\n        $bgColor,\n        $fontFace,\n        $fontSize,\n        $lineHeight,\n        $fontWeight,\n      },\n    }: {\n      global: ThemeSettings,\n    },\n): StypMapper.Mappings<FormThemeSettings> {\n  return {\n    $color,\n    $bgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 })),\n    $roBgColor: $bgColor.hsl.set(({ l }) => ({ l: l * 0.94 })),\n    $fontFace,\n    $fontSize,\n    $lineHeight,\n    $fontWeight,\n    $borderColor: $bgColor,\n    $marginV: $fontSize.div(4),\n    $marginH: $fontSize.div(4),\n    $paddingV: $fontSize.div(2),\n    $paddingH: $fontSize,\n    $borderW: StypLength.of(1, 'px'),\n  };\n}\n","import { Theme } from '@wesib/generic';\nimport { mixStypColors, StypProperties, StypRules } from 'style-producer';\nimport { FormThemeSettings } from './form.theme-settings';\n\nexport function InputStyle(theme: Theme): StypRules {\n\n  const formSettings = theme.ref(FormThemeSettings).read.keep;\n  const { root: { rules } } = theme;\n\n  rules.add({ e: 'input' }, formSettings.thru(inStyle));\n  rules.add({ e: 'input', s: '[readonly]' }, formSettings.thru(readonlyInStyle));\n  rules.add({ e: 'input', s: '[disabled]' }, formSettings.thru(readonlyInStyle));\n  rules.add({ e: 'input', s: ':focus' }, formSettings.thru(focusedInStyle));\n  rules.add({ e: 'input', c: ['inap-invalid', 'inap-touched'] }, formSettings.thru(invalidInStyle));\n  rules.add({ e: 'input', c: ['inap-missing', 'inap-touched'] }, { outlineStyle: 'dotted' });\n  rules.add({ e: 'input', c: ['inap-incomplete', 'inap-touched'] }, { outlineStyle: 'dotted' });\n\n  return rules.grab({ e: 'input' });\n}\n\nexport function inStyle(\n    {\n      $color,\n      $fontFace,\n      $fontSize,\n      $lineHeight,\n      $fontWeight,\n      $marginV,\n      $marginH,\n      $paddingV,\n      $paddingH,\n      $bgColor,\n      $borderColor,\n      $borderW,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    color: $color,\n    font: `normal ${$fontWeight} ${$fontSize}/${$lineHeight} ${$fontFace}`,\n    padding: `${$paddingV} ${$paddingH}`,\n    margin: `${$marginV} ${$marginH}`,\n    backgroundColor: $bgColor,\n    border: '0 none',\n    outline: `${$borderW} solid ${$borderColor}`,\n    boxShadow: 'inset 1px 1px 2px -2px black',\n    boxSizing: 'border-box',\n    width: '100%',\n  };\n}\n\nexport function readonlyInStyle(\n    {\n      $roBgColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    backgroundColor: $roBgColor,\n  };\n}\n\nfunction focusedInStyle(\n    {\n      $color,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outlineColor: mixStypColors($borderColor, $color, 0.5),\n  };\n}\n\nfunction invalidInStyle(\n    {\n      $color,\n      $borderW,\n      $borderColor,\n    }: FormThemeSettings,\n): StypProperties {\n  return {\n    outline: `${$borderW.mul(2)} dashed ${mixStypColors($borderColor, $color, 0.25)}`,\n  };\n}\n","import { importNodeContent, Navigation, pageLoadParam, PageLoadResponse, ProduceStyle, Theme } from '@wesib/generic';\nimport { BootstrapWindow, Component, ComponentContext, Render } from '@wesib/wesib';\nimport { trackValue } from 'fun-events';\nimport { StypProperties, stypRoot } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { ThemeSettings } from '../theme';\n\n@Component({\n  name: ['main', BEX__NS],\n})\nexport class MainComponent {\n\n  private readonly _response = trackValue<PageLoadResponse>();\n\n  constructor(private readonly _context: ComponentContext) {\n    this._response.on((n, o) => _context.updateState('response', n, o));\n\n    const navigation = _context.get(Navigation);\n\n    _context.whenOn(supply => {\n      navigation.read.once(page => {\n        page.put(\n            pageLoadParam,\n            {\n              fragment: { tag: _context.element.tagName },\n              receiver: {\n                supply,\n                receive: (_ctx, response) => this._response.it = response,\n              },\n            },\n        );\n      });\n    });\n  }\n\n  @Render()\n  render() {\n\n    const document = this._context.get(BootstrapWindow).document;\n    const range = document.createRange();\n\n    range.selectNodeContents(this._context.element);\n\n    return () => {\n\n      const response = this._response.it;\n\n      if (response) {\n        range.deleteContents();\n        if (response.ok) {\n\n          const target = document.createDocumentFragment();\n          const { fragment } = response;\n\n          if (fragment) {\n            importNodeContent(fragment, target);\n            range.insertNode(target);\n          }\n        } else if (response.ok == null) {\n          range.insertNode(document.createTextNode('Loading...'));\n        } else {\n          range.insertNode(document.createTextNode(`Error. ${response.error}`));\n        }\n      }\n    };\n  }\n\n  @ProduceStyle()\n  style() {\n\n    const settings = this._context.get(Theme).ref(ThemeSettings).read.keep;\n    const root = stypRoot(settings.thru(bexBodyStyle));\n\n    return root.rules;\n  }\n\n}\n\nfunction bexBodyStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    padding: 0,\n    margin: `0 0 0 ${$fontSize.div(2)}`,\n  };\n}\n","import { ComponentNode, ElementNode, Navigation, ProduceStyle, Theme } from '@wesib/generic';\nimport { Component, ComponentContext, DefaultNamespaceAliaser } from '@wesib/wesib';\nimport { afterAll, DomEventDispatcher, EventSupply } from 'fun-events';\nimport { css__naming, QualifiedName } from 'namespace-aliaser';\nimport { StypColor, StypLengthPt, StypProperties, stypRoot } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { ThemeSettings } from '../theme';\n\nconst activeNavLinkClass: QualifiedName = ['nav-active', BEX__NS];\n\n@Component({\n  name: ['nav', BEX__NS],\n})\nexport class NavComponent {\n\n  private readonly _theme: Theme;\n\n  constructor(context: ComponentContext) {\n    this._theme = context.get(Theme);\n\n    const nsAlias = context.get(DefaultNamespaceAliaser);\n    const activeClass = css__naming.name(activeNavLinkClass, nsAlias);\n    const node = context.get(ComponentNode);\n    const navigation = context.get(Navigation);\n\n    context.whenOn(supply => {\n\n      const navLinks = node.select('a', { all: true });\n      const linkSupplies = new Map<ElementNode, EventSupply>();\n\n      navLinks.track.tillOff(supply)((added, removed) => {\n        removed.forEach(link => {\n\n          const linkSupply = linkSupplies.get(link);\n\n          if (linkSupply) {\n            linkSupplies.delete(link);\n            linkSupply.off();\n          }\n        });\n        added.forEach(\n            link => {\n\n              const element: Element = link.element;\n              const linkSupply = new DomEventDispatcher(element)\n                  .on('click')\n                  .instead(() => {\n                    if (!element.classList.contains(activeClass)) {\n                      navigation.open(element.getAttribute('href') || '');\n                    }\n                  })\n                  .needs(supply);\n\n              linkSupplies.set(link, linkSupply);\n            },\n        );\n      });\n      afterAll({\n        links: navLinks,\n        page: navigation,\n      })({\n        supply,\n        receive(\n            _ctx,\n            {\n              links: [links],\n              page: [page],\n            },\n        ) {\n\n          const pageDir = dirName(page.url);\n          let activeElement: Element | undefined;\n          let activeDir = '';\n\n          links.forEach(link => {\n\n            const element: HTMLAnchorElement = link.element;\n            const linkDir = dirName(new URL(element.href));\n\n            element.classList.remove(activeClass);\n\n            if (pageDir.startsWith(linkDir) && activeDir.length < linkDir.length) {\n              activeElement = element;\n              activeDir = linkDir;\n            }\n          });\n\n          if (activeElement) {\n            activeElement.classList.add(activeClass);\n          }\n        },\n      });\n    });\n  }\n\n  @ProduceStyle()\n  style() {\n\n    const settings = this._theme.ref(ThemeSettings).read.keep;\n    const root = stypRoot(settings.thru(navStyle));\n\n    root.rules.add({ e: 'a' }, settings.thru(navLinkStyle));\n    root.rules.add({ e: 'a', c: activeNavLinkClass }, settings.thru(activeNavLinkStyle));\n\n    return root.rules;\n  }\n\n}\n\nfunction dirName(url: URL): string {\n\n  const path = url.pathname;\n\n  if (path.endsWith('/')) {\n    return path;\n  }\n\n  return path + '/';\n}\n\nfunction navStyle(\n    {\n      $fontSize,\n    }: ThemeSettings,\n): StypProperties {\n  return {\n    padding: 0,\n    margin: `0 ${$fontSize.div(2)} 0 0`,\n  };\n}\n\nexport function navLinkBackground({ $bgColor }: ThemeSettings): StypColor {\n  return $bgColor.hsl.set(({ l }) => ({ l: l * 0.8 }));\n}\n\nfunction navLinkStyle(\n    settings: ThemeSettings,\n): StypProperties {\n\n  const { $fontSize } = settings;\n\n  return {\n    display: 'block',\n    margin: 0,\n    padding: `${$fontSize.div(2)} ${$fontSize}`,\n    border: 0,\n    outline: 0,\n    background: navLinkBackground(settings),\n  };\n}\n\nfunction activeNavLinkStyle(\n    {\n      $fontSize,\n      $color,\n      $bgColor,\n    }: ThemeSettings,\n): StypProperties {\n\n  const borderW = StypLengthPt.of(4, 'px');\n\n  return {\n    background: $bgColor,\n    borderLeft: `${borderW} solid ${$color}`,\n    paddingLeft: $fontSize.sub(borderW),\n  };\n}\n","import { ProduceStyle, Theme } from '@wesib/generic';\nimport { BootstrapContext, Component, ComponentContext } from '@wesib/wesib';\nimport { stypRoot, StypRules } from 'style-producer';\nimport { BEX__NS } from '../bex.ns';\nimport { mediaStyle, ThemeSettings } from '../theme';\nimport { MainComponent } from './main.component';\nimport { NavComponent, navLinkBackground } from './nav.component';\n\n@Component({\n  name: ['container', BEX__NS],\n  feature: {\n    needs: [\n      MainComponent,\n      NavComponent,\n    ],\n  },\n})\nexport class ContainerComponent {\n\n  constructor(private readonly _context: ComponentContext) {\n  }\n\n  @ProduceStyle()\n  async style(): Promise<StypRules> {\n\n    const bsContext = this._context.get(BootstrapContext);\n    const { elementDef: { name: navName } } = await bsContext.whenDefined(NavComponent);\n    const { elementDef: { name: mainName } } = await bsContext.whenDefined(MainComponent);\n    const theme = this._context.get(Theme);\n    const settings = theme.ref(ThemeSettings).read.keep;\n\n    const { rules } = stypRoot({\n      height: '100%',\n      display: 'flex',\n      flexFlow: 'row wrap',\n      alignItems: 'stretch',\n      alignContent: 'flex-start',\n    }).add(\n        settings.thru(mediaStyle),\n    );\n    rules.add(\n        { s: ' ', $: '@media:sm' },\n        {\n          height: 'auto',\n        },\n    );\n    rules.add(\n        { e: navName },\n        settings.thru(sts => ({\n          flex: '0 1 200px',\n          height: '100%',\n          background: navLinkBackground(sts),\n        })),\n    );\n    rules.add(\n        { e: navName, $: '@media:sm' },\n        {\n          flex: '0 1 100%',\n        },\n    );\n    rules.add(\n        { e: mainName },\n        settings.thru(({ $fontSize }) => ({\n          flex: '1 1 auto',\n          margin: $fontSize,\n        })),\n    );\n\n    return rules;\n  }\n\n}\n","import { ComponentTreeSupport, PageLoadSupport, StyleProducerSupport, ThemeSupport } from '@wesib/generic';\nimport { Feature, RenderSupport } from '@wesib/wesib';\nimport { ContainerComponent } from './container.component';\n\n@Feature({\n  needs: [\n    ContainerComponent,\n    ComponentTreeSupport,\n    PageLoadSupport,\n    RenderSupport,\n    StyleProducerSupport,\n    ThemeSupport,\n  ],\n})\nexport class LayoutSupportFeature {\n}\n","import { Theme, ThemeSupport } from '@wesib/generic';\nimport { BootstrapContext, Feature } from '@wesib/wesib';\nimport { produceBasicStyle } from 'style-producer';\nimport { BodyStyle } from './body.style';\n\n@Feature({\n  needs: ThemeSupport,\n  init: addBodyStyle,\n})\nexport class BodyStyleSupport {}\n\nfunction addBodyStyle(context: BootstrapContext) {\n  context.whenReady(() => {\n    produceBasicStyle(context.get(Theme).style(BodyStyle));\n  });\n}\n","import { Feature } from '@wesib/wesib';\nimport { LayoutSupportFeature } from './layout';\nimport { BodyStyleSupport } from './theme/body-style-support.feature';\n\n@Feature({\n  needs: [\n    BodyStyleSupport,\n    LayoutSupportFeature,\n  ],\n})\nexport class AppFeature {}\n","import { bootstrapComponents } from '@wesib/wesib';\nimport { AppFeature } from './app.feature';\n\nexport * from './app.feature';\nexport * from './bex.ns';\nexport * from './theme';\n\nexport const examplesContext = bootstrapComponents(AppFeature);\n"],"names":["BEX__NS","NamespaceDef","ThemeSettings","RefStypRule","by","$","$color","StypRGB","r","g","b","$bgColor","$fontFace","$fontSize","StypLengthPt","of","$lineHeight","$fontWeight","$linkFontWeight","$layoutBreakpoint","StypLength","mediaStyle","@media:sm","LinkStyle","theme","settings","ref","read","keep","selector","e","root","rules","add","thru","linkStyle","s","textDecoration","grab","color","fontWeight","DefaultStyle","defaultStyle","stypRules","self","style","font","BodyStyle","bodySelector","htmlSelector","bodyStyle","height","margin","padding","backgroundColor","FormThemeSettings","StypRuleRefs","global","formMappings","hsl","set","l","$roBgColor","$borderColor","$marginV","div","$marginH","$paddingV","$paddingH","$borderW","InputStyle","formSettings","inStyle","readonlyInStyle","focusedInStyle","c","invalidInStyle","outlineStyle","border","outline","boxShadow","boxSizing","width","outlineColor","mixStypColors","mul","MainComponent","[object Object]","_context","this","trackValue","_response","on","n","o","updateState","navigation","get","Navigation","whenOn","supply","once","page","put","pageLoadParam","fragment","tag","element","tagName","receiver","receive","_ctx","response","it","document","BootstrapWindow","range","createRange","selectNodeContents","deleteContents","ok","target","createDocumentFragment","importNodeContent","insertNode","createTextNode","error","Theme","stypRoot","bexBodyStyle","__decorate","Render","ProduceStyle","Component","name","activeNavLinkClass","NavComponent","context","_theme","nsAlias","DefaultNamespaceAliaser","activeClass","css__naming","node","ComponentNode","navLinks","select","all","linkSupplies","Map","track","tillOff","added","removed","forEach","link","linkSupply","delete","off","DomEventDispatcher","instead","classList","contains","open","getAttribute","needs","afterAll","links","pageDir","dirName","url","activeElement","activeDir","linkDir","URL","href","remove","startsWith","length","navStyle","navLinkStyle","activeNavLinkStyle","path","pathname","endsWith","navLinkBackground","display","background","borderW","borderLeft","paddingLeft","sub","ContainerComponent","bsContext","BootstrapContext","elementDef","navName","whenDefined","mainName","flexFlow","alignItems","alignContent","sts","flex","feature","LayoutSupportFeature","Feature","ComponentTreeSupport","PageLoadSupport","RenderSupport","StyleProducerSupport","ThemeSupport","BodyStyleSupport","init","whenReady","produceBasicStyle","AppFeature","examplesContext","bootstrapComponents"],"mappings":"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"}