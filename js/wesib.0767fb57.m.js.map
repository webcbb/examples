{"version":3,"file":"wesib.0767fb57.m.js","sources":["../../node_modules/@wesib/wesib/src/boot/bootstrap-context.key.impl.ts","../../node_modules/@wesib/wesib/src/boot/bootstrap-context.ts","../../node_modules/@wesib/wesib/src/boot/bootstrap-default.ts","../../node_modules/@wesib/wesib/src/component/definition/component-factory.ts","../../node_modules/@wesib/wesib/src/boot/globals/bootstrap-window.ts","../../node_modules/@wesib/wesib/src/boot/globals/default-namespace-aliaser.ts","../../node_modules/@wesib/wesib/src/common/types.impl.ts","../../node_modules/@wesib/wesib/src/common/array-set.ts","../../node_modules/@wesib/wesib/src/common/classes.ts","../../node_modules/@wesib/wesib/src/common/functions.ts","../../node_modules/@wesib/wesib/src/common/is-element.ts","../../node_modules/@wesib/wesib/src/common/meta-accessor.ts","../../node_modules/@wesib/wesib/src/common/promises.ts","../../node_modules/@wesib/wesib/src/feature/feature-def.ts","../../node_modules/@wesib/wesib/src/feature/feature.decorator.ts","../../node_modules/@wesib/wesib/src/feature/feature-context.ts","../../node_modules/@wesib/wesib/src/feature/feature-needs-error.ts","../../node_modules/@wesib/wesib/src/feature/feature-ref.ts","../../node_modules/@wesib/wesib/src/component/component-def.ts","../../node_modules/@wesib/wesib/src/component/component.decorator.ts","../../node_modules/@wesib/wesib/src/component/component-context.key.impl.ts","../../node_modules/@wesib/wesib/src/component/component-event.key.impl.ts","../../node_modules/@wesib/wesib/src/component/content-root.ts","../../node_modules/@wesib/wesib/src/component/state-updater.ts","../../node_modules/@wesib/wesib/src/component/component-context.ts","../../node_modules/@wesib/wesib/src/component/component-event.ts","../../node_modules/@wesib/wesib/src/component/component-mount.ts","../../node_modules/@wesib/wesib/src/boot/globals/element-adapter.ts","../../node_modules/@wesib/wesib/src/boot/globals/element-observer.ts","../../node_modules/@wesib/wesib/src/boot/impl/component-factory.symbol.impl.ts","../../node_modules/@wesib/wesib/src/component/definition/custom-elements.ts","../../node_modules/@wesib/wesib/src/component/definition/definition.context.key.impl.ts","../../node_modules/@wesib/wesib/src/component/definition/element-def.ts","../../node_modules/@wesib/wesib/src/component/definition/definition-context.ts","../../node_modules/@wesib/wesib/src/boot/impl/bootstrap-context-registry.impl.ts","../../node_modules/@wesib/wesib/src/boot/impl/component-context-registry.impl.ts","../../node_modules/@wesib/wesib/src/boot/impl/definition-context-registry.impl.ts","../../node_modules/@wesib/wesib/src/boot/impl/post-def-setup.impl.ts","../../node_modules/@wesib/wesib/src/boot/impl/when-component.impl.ts","../../node_modules/@wesib/wesib/src/boot/impl/element-builder.impl.ts","../../node_modules/@wesib/wesib/src/boot/impl/unloader.impl.ts","../../node_modules/@wesib/wesib/src/feature/loader/component-registry.impl.ts","../../node_modules/@wesib/wesib/src/feature/loader/feature-loader.impl.ts","../../node_modules/@wesib/wesib/src/feature/loader/feature-request.impl.ts","../../node_modules/@wesib/wesib/src/feature/loader/feature-requester.impl.ts","../../node_modules/@wesib/wesib/src/boot/bootstrap/bootstrap-components.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-path.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-state-update.impl.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-def.impl.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-registrar.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-registry.impl.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attributes-support.feature.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute.decorator.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-changed.decorator.ts","../../node_modules/@wesib/wesib/src/feature/dom-properties/dom-property-path.ts","../../node_modules/@wesib/wesib/src/feature/state/component-state.ts","../../node_modules/@wesib/wesib/src/feature/state/state-support.feature.ts","../../node_modules/@wesib/wesib/src/feature/render/render-scheduler.ts","../../node_modules/@wesib/wesib/src/feature/render/element-render.ts","../../node_modules/@wesib/wesib/src/feature/render/render-support.feature.ts","../../node_modules/@wesib/wesib/src/feature/render/render.decorator.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/shadow-content-root.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/shadow-dom-event.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/shadow-root-builder.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/shadow-dom-support.feature.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/shadow-content-def.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/attach-shadow.decorator.ts","../../node_modules/@wesib/generic/src/fetch/fetch-agent-key.impl.ts","../../node_modules/@wesib/generic/src/fetch/http-fetch-agent.ts","../../node_modules/@wesib/generic/src/fetch/http-fetch.impl.ts","../../node_modules/@wesib/generic/src/fetch/http-fetch.ts","../../node_modules/@wesib/generic/src/input/component-in.ts","../../node_modules/@wesib/generic/src/tree/element-node.ts","../../node_modules/@wesib/generic/src/tree/element-node-list.ts","../../node_modules/@wesib/generic/src/tree/element-node-list.impl.ts","../../node_modules/@wesib/generic/src/tree/node-attributes.impl.ts","../../node_modules/@wesib/generic/src/tree/node-properties.impl.ts","../../node_modules/@wesib/generic/src/tree/element-node.impl.ts","../../node_modules/@wesib/generic/src/tree/component-tree-support.feature.ts","../../node_modules/@wesib/generic/src/input/component-in-receiver.ts","../../node_modules/@wesib/generic/src/input/receive-component-in.ts","../../node_modules/@wesib/generic/src/input/component-in-control.ts","../../node_modules/@wesib/generic/src/input/component-in-element.ts","../../node_modules/@wesib/generic/src/input/component-in-validity.ts","../../node_modules/@wesib/generic/src/navigation/navigation.event.ts","../../node_modules/@wesib/generic/src/navigation/navigation.ts","../../node_modules/@wesib/generic/src/navigation/navigation-agent.ts","../../node_modules/@wesib/generic/src/navigation/page-param.ts","../../node_modules/@wesib/generic/src/navigation/page-param-context.ts","../../node_modules/@wesib/generic/src/navigation/nav-history.impl.ts","../../node_modules/@wesib/generic/src/navigation/navigation.impl.ts","../../node_modules/@wesib/generic/src/navigation/navigation-support.feature.ts","../../node_modules/@wesib/generic/src/navigation/page-load/caching-page-loader.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-load-requests.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-load-agent.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-load-url-modifier.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-loader.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-load-param.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-cache-buster.impl.ts","../../node_modules/@wesib/generic/src/util/import-node.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-scripts-agent.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-style-agent.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-title-agent.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-load-support.feature.ts","../../node_modules/@wesib/generic/src/styp/component-style-producer.ts","../../node_modules/@wesib/generic/src/styp/component-styp-render.ts","../../node_modules/@wesib/generic/src/styp/element-id-class.impl.ts","../../node_modules/@wesib/generic/src/styp/component-style-producer.impl.ts","../../node_modules/@wesib/generic/src/styp/basic-style-producer-support.feature.ts","../../node_modules/@wesib/generic/src/styp/component-styp-options.ts","../../node_modules/@wesib/generic/src/styp/produce-style.decorator.ts","../../node_modules/@wesib/generic/src/styp/style-producer-support.feature.ts","../../node_modules/@wesib/generic/src/theme/theme.ts","../../node_modules/@wesib/generic/src/theme/theme-factory.ts","../../node_modules/@wesib/generic/src/theme/theme-style.ts","../../node_modules/@wesib/generic/src/theme/theme.impl.ts","../../node_modules/@wesib/generic/src/theme/theme-factory.impl.ts","../../node_modules/@wesib/generic/src/theme/theme-support.feature.ts"],"sourcesContent":["import { SingleContextKey } from 'context-values';\nimport { BootstrapContext } from './bootstrap-context';\n\n/**\n * @internal\n */\nexport const BootstrapContext__key = (/*#__PURE__*/ new SingleContextKey<BootstrapContext>('bootstrap-context'));\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, ContextValues } from 'context-values';\nimport { OnEvent } from 'fun-events';\nimport { Class } from '../common';\nimport { ComponentClass, ComponentFactory } from '../component/definition';\nimport { FeatureRef } from '../feature';\nimport { BootstrapContext__key } from './bootstrap-context.key.impl';\n\n/**\n * Components bootstrap context.\n *\n * An instance of this class is passed to [[FeatureDef.Options.init]] method so that the feature can configure itself.\n *\n * Extends `BootstrapValues` interface. The values could be {@link BootstrapSetup.provide pre-configured} in feature\n * definitions.\n *\n * @category Core\n */\nexport abstract class BootstrapContext extends ContextValues {\n\n  /**\n   * A key of bootstrap context value containing the bootstrap context itself.\n   */\n  static get [ContextKey__symbol](): ContextKey<BootstrapContext> {\n    return BootstrapContext__key;\n  }\n\n  /**\n   * An `OnEvent` sender of bootstrap readiness event.\n   *\n   * The registered receiver will be notified once bootstrap is complete.\n   *\n   * If bootstrap is complete already, the receiver will be notified immediately.\n   */\n  abstract readonly whenReady: OnEvent<[BootstrapContext]>;\n\n  /**\n   * Allows to wait for component definition.\n   *\n   * This corresponds to `window.customElements.whenDefined()` method.\n   *\n   * @param componentType  Component class constructor.\n   *\n   * @return A promise that is resolved to component factory when the given `componentType` is registered.\n   *\n   * @throws TypeError  If `componentType` does not contain a component definition.\n   */\n  abstract whenDefined<C extends object>(componentType: ComponentClass<C>): Promise<ComponentFactory<C>>;\n\n  /**\n   * Allows to loads the given `feature`.\n   *\n   * @param feature  The feature to load.\n   *\n   * @returns  Loaded feature reference.\n   */\n  abstract load(feature: Class): FeatureRef;\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKeyDefault } from 'context-values';\nimport { BootstrapContext } from './bootstrap-context';\n\n/**\n * Provides a default value for bootstrap context key.\n *\n * @category Core\n * @param provide  A function accepting bootstrap context and target key as parameters, and returning either a default\n * value, or `null`/`undefined` if unknown.\n *\n * @returns A provider of default value for bootstrap context value key.\n */\nexport function bootstrapDefault<Value, Key extends ContextKey<any, any, any>>(\n    provide: (this: void, context: BootstrapContext, key: Key) => Value | null | undefined,\n): ContextKeyDefault<Value, Key> {\n  return (context, key) => {\n\n    const bootstrapContext = context.get(BootstrapContext);\n\n    return context === bootstrapContext ? provide(bootstrapContext, key) : bootstrapContext.get(key);\n  };\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { Class } from '../../common';\nimport { ComponentMount } from '../component-mount';\nimport { ComponentClass } from './component-class';\nimport { ElementDef } from './element-def';\n\nconst ComponentFactory__key = (/*#__PURE__*/ new SingleContextKey<ComponentFactory>('component-factory'));\n\n/**\n * A factory of components of particular type.\n *\n * @category Core\n * @typeparam T  A type of component.\n */\nexport abstract class ComponentFactory<T extends object = any> {\n\n  /**\n   * A key of definition context value containing a component factory.\n   */\n  static get [ContextKey__symbol](): ContextKey<ComponentFactory> {\n    return ComponentFactory__key;\n  }\n\n  /**\n   * Component class constructor.\n   */\n  abstract readonly componentType: ComponentClass<T>;\n\n  /**\n   * Custom element class constructor.\n   *\n   * It is an error accessing this property before the element class is created, e.g. from inside of\n   * `DefinitionListener` or `ComponentDef.define()` function. In these cases you may wish to add a `whenReady()`\n   * callback.\n   */\n  abstract readonly elementType: Class;\n\n  /**\n   * Custom element definition.\n   */\n  abstract readonly elementDef: ElementDef;\n\n  /**\n   * Mounts a component to arbitrary element.\n   *\n   * This method creates a component, but instead of creating a custom element for, it mounts it to the target\n   * `element`.\n   *\n   * It is up to the features to update the target element. They can use a `ComponentContext.mount` property to check\n   * whether the component is mounted or is constructed in standard way.\n   *\n   * The constructed component will be in disconnected state. To update its connection state either update a\n   * `ComponentMount.connected` property, or use a `connectTo()` method.\n   *\n   * @param element  Target element to mount new component to.\n   *\n   * @returns New component mount.\n   *\n   * @throws Error If target element is already bound to some component.\n   */\n  abstract mountTo(element: any): ComponentMount<T>;\n\n  /**\n   * Connects a component to arbitrary element.\n   *\n   * This method does the same as `mountTo()`, but also marks the mounted component as connected.\n   *\n   * @param element  Target element to mount new component to.\n   *\n   * @returns New component mount.\n   *\n   * @throws Error If target element is already bound to some component.\n   */\n  connectTo(element: any): ComponentMount<T> {\n\n    const mount = this.mountTo(element);\n\n    mount.connected = true;\n\n    return mount;\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\n\n/**\n * A window the components bootstrap is performed against.\n *\n * @category Core\n */\nexport type BootstrapWindow = Window & typeof globalThis;\n\n/**\n * A key of bootstrap context value containing a window instance the bootstrap is performed against.\n *\n * Target value defaults to current window.\n *\n * @category Core\n */\nexport const BootstrapWindow: SingleContextRef<BootstrapWindow> = (/*#__PURE__*/ new SingleContextKey(\n    'window',\n    {\n      byDefault() {\n        return window;\n      },\n    },\n));\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport { NamespaceAliaser } from 'namespace-aliaser';\n\n/**\n * Namespace aliaser used by default.\n *\n * Maps namespaces to their unique aliases.\n *\n * @category Core\n */\nexport type DefaultNamespaceAliaser = NamespaceAliaser;\n\n/**\n * A key of bootstrap context value containing the default namespace aliaser.\n *\n * @category Core\n */\nexport const DefaultNamespaceAliaser: SingleContextRef<DefaultNamespaceAliaser> =\n    (/*#__PURE__*/ new SingleContextKey<DefaultNamespaceAliaser>('default-namespace-aliaser'));\n","/**\n * @internal\n */\nexport function isArray<T>(value: T | T[]): value is T[];\n\n/**\n * @internal\n */\nexport function isArray<T>(value: T | readonly T[]): value is readonly T[];\n\nexport function isArray<T>(value: T | readonly T[]): value is T[] {\n  return Array.isArray(value);\n}\n","/**\n * @module @wesib/wesib\n */\nimport { AIterable } from 'a-iterable';\nimport { isArray } from './types.impl';\n\n/**\n * @category Utility\n */\nexport class ArraySet<T> extends AIterable<T> {\n\n  readonly items: Set<T>;\n\n  constructor(value?: T | readonly T[]) {\n    super();\n    this.items = value == null ? new Set() : isArray(value) ? new Set(value) : new Set([value]);\n  }\n\n  get value(): T | T[] | undefined {\n    switch (this.items.size) {\n    case 0: return;\n    case 1: return this.items[Symbol.iterator]().next().value;\n    default: return [...this.items];\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.items[Symbol.iterator]();\n  }\n\n  add(...items: T[]): this {\n    items.forEach(item => this.items.add(item));\n    return this;\n  }\n\n  get size(): number {\n    return this.items.size;\n  }\n\n  merge(items: readonly T[] | T | undefined): this {\n    if (items == null) {\n      return this;\n    }\n    if (isArray(items)) {\n      return this.add(...items);\n    }\n    return this.add(items);\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\n/**\n * Arbitrary class constructor.\n *\n * @category Utility\n * @typeparam T  A type of object.\n */\nexport interface Class<T extends object = any> extends Function {\n  new(...args: any[]): T;\n  prototype: T;\n}\n\n/**\n * Detects super class of the given class optionally satisfying the given criteria.\n *\n * Traverses all class ancestors until reaches the one satisfying the given criteria, or stops when there is no more\n * ancestors.\n *\n * @category Utility\n * @param type  The class constructor to find super class of.\n * @param satisfying  The criteria of super class matching. It is a function accepting a super class constructor\n * as the only parameter and returning `true` if the given super class matches, or `false` otherwise. Always returns\n * `true` by default.\n *\n * @return A super class `satisfying` the given criteria, or `undefined` if there is no such super class, or there is no\n * super class at all (e.g. when `Object` is passed in).\n */\nexport function superClassOf(type: Class, satisfying: (type: Class) => boolean = () => true): Class | undefined {\n\n  const prototype = Object.getPrototypeOf(type.prototype);\n\n  if (prototype == null) {\n    return;\n  }\n\n  const superType = prototype.constructor as Class;\n\n  if (satisfying(superType)) {\n    return superType;\n  }\n\n  return superClassOf(superType, satisfying);\n}\n","/**\n * @module @wesib/wesib\n */\n/**\n * Merges two functions by calling one after another.\n *\n * Optionally merges function call results.\n *\n * @category Utility\n * @typeparam P  Function parameter types as tuple.\n * @typeparam R  A type of function result.\n * @typeparam T  A type if `this` object expected by function.\n * @param first  The first function to call.\n * @param second  The second function to call.\n * @param merge  Optional function call results merger. Accepts two function results as arguments and returns the final\n * result. When omitted the first function call result is ignored and the second function's call result is returned.\n *\n * @return A function that calls both of the given ones and merges their results. If one of the functions is absent,\n * then just returns another one. If both are absent, then returns `undefined`.\n */\nexport function mergeFunctions<P extends any[], R, T>(\n    first: (this: T, ...args: P) => R,\n    second: ((this: T, ...args: P) => R) | undefined,\n    merge: (first: R, second: R) => R,\n): (this: T, ...args: P) => R;\n\nexport function mergeFunctions<P extends any[], R, T>(\n    first: ((this: T, ...args: P) => R) | undefined,\n    second: (this: T, ...args: P) => R,\n    merge?: (first: R, second: R) => R,\n): (this: T, ...args: P) => R;\n\nexport function mergeFunctions<P extends any[], R, T>(\n    first: ((this: T, ...args: P) => R) | undefined,\n    second: ((this: T, ...args: P) => R) | undefined,\n    merge?: (first: R, second: R) => R,\n): ((this: T, ...args: P) => R) | undefined;\n\nexport function mergeFunctions<P extends any[], R, T>(\n    first: ((this: T, ...args: P) => R) | undefined,\n    second: ((this: T, ...args: P) => R) | undefined,\n    merge: (first: R, second: R) => R = (_f, s) => s,\n): ((this: T, ...args: P) => R) | undefined {\n  if (!first) {\n    return second;\n  }\n  if (!second) {\n    return first;\n  }\n  return function(this: T, ...args: P) {\n    return merge(\n        first.apply(this, args),\n        second.apply(this, args),\n    );\n  };\n}\n","/**\n * Checks whether the given DOM node is element.\n *\n * @category Utility\n * @param node  A DOM node to check.\n *\n * @returns `true` is `node` is element, or `false` otherwise.\n */\nexport function isElement(node: Node): node is Element {\n  return node.nodeType === Node.ELEMENT_NODE;\n}\n","/**\n * @module @wesib/wesib\n */\nimport { flatMapIt, mapIt } from 'a-iterable';\nimport { asis } from 'call-thru';\nimport { Class, superClassOf } from './classes';\n\n/**\n * @category Utility\n */\nexport abstract class MetaAccessor<M, S = M> {\n\n  readonly symbol: symbol;\n\n  protected constructor(symbol: symbol) {\n    this.symbol = symbol;\n  }\n\n  own(type: Class): M | undefined {\n    return type.hasOwnProperty(this.symbol) ? (type as any)[this.symbol] : undefined;\n  }\n\n  of(type: Class): M | undefined {\n\n    const ownDef: M | undefined = this.own(type);\n    const superType = superClassOf(type);\n    const superDef = superType && this.of(superType);\n\n    return ownDef ? (superDef ? this.merge([superDef, ownDef]) : ownDef) : superDef;\n  }\n\n  define<C extends Class>(type: C, sources: Iterable<S>): C {\n\n    const prevMeta = this.own(type);\n    const updates = mapIt(sources, source => this.meta(source, type));\n    const newMeta: M = this.merge(prevMeta ? flatMapIt([[prevMeta], updates], asis) : updates);\n\n    Object.defineProperty(\n        type,\n        this.symbol,\n        {\n          configurable: true,\n          value: newMeta,\n        },\n    );\n\n    return type;\n  }\n\n  abstract merge(metas: Iterable<M>): M;\n\n  protected abstract meta(source: S, type: Class): M;\n\n}\n","/**\n * @module @wesib/wesib\n */\n/**\n * @category Utility\n */\nexport class PromiseResolver<T = void> {\n\n  readonly promise: Promise<T>;\n  private _resolve!: (value: T) => void;\n  private _reject!: (error: any) => void;\n\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  resolve(value: T) {\n    this._resolve(value);\n  }\n\n  reject(error: any) {\n    this._reject(error);\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { itsReduction } from 'a-iterable';\nimport { BootstrapSetup } from '../boot';\nimport { ArraySet, Class, mergeFunctions, MetaAccessor } from '../common';\nimport { FeatureContext } from './feature-context';\n\n/**\n * A key of a property holding a feature definition within its class constructor.\n *\n * @category Core\n */\nexport const FeatureDef__symbol = (/*#__PURE__*/ Symbol('feature-def'));\n\n/**\n * Feature definition.\n *\n * This can be one of:\n * - feature definition options object,\n * - feature definition holder, or\n * - feature definition factory.\n *\n * @category Core\n */\nexport type FeatureDef =\n    | FeatureDef.Options\n    | FeatureDef.Holder\n    | FeatureDef.Factory;\n\nexport namespace FeatureDef {\n\n  /**\n   * Feature definition options.\n   */\n  export interface Options {\n\n    readonly [FeatureDef__symbol]?: undefined;\n\n    /**\n     * Features this one requires.\n     */\n    readonly needs?: Class | readonly Class[];\n\n    /**\n     * Features this one provides.\n     *\n     * The feature always provides itself.\n     */\n    readonly has?: Class | readonly Class[];\n\n    /**\n     * Sets up bootstrap.\n     *\n     * This method is called before bootstrap context created.\n     *\n     * @param setup  Bootstrap setup.\n     */\n    setup?(setup: BootstrapSetup): void;\n\n    /**\n     * Bootstraps this feature by calling the given bootstrap context constructed.\n     *\n     * @param context  Feature initialization context.\n     */\n    init?(context: FeatureContext): void;\n\n  }\n\n  /**\n   * Feature definition holder.\n   */\n  export interface Holder {\n\n    /**\n     * The feature definition this holder contains.\n     */\n    readonly [FeatureDef__symbol]: FeatureDef;\n\n  }\n\n  /**\n   * Feature definition factory.\n   */\n  export interface Factory {\n\n    /**\n     * Builds feature definition.\n     *\n     * @param featureType  A feature class constructor to build definition for.\n     *\n     * @returns Built feature definition.\n     */\n    [FeatureDef__symbol](featureType: Class): FeatureDef;\n\n  }\n\n}\n\nclass FeatureMeta extends MetaAccessor<FeatureDef.Options, FeatureDef> {\n\n  constructor() {\n    super(FeatureDef__symbol);\n  }\n\n  merge(defs: Iterable<FeatureDef.Options>): FeatureDef.Options {\n    return itsReduction<FeatureDef.Options, FeatureDef.Options>(\n        defs,\n        (prev, def) => ({\n          needs: new ArraySet(prev.needs).merge(def.needs).value,\n          has: new ArraySet(prev.has).merge(def.has).value,\n          setup: mergeFunctions<[BootstrapSetup], void, Class>(prev.setup, def.setup),\n          init: mergeFunctions<[FeatureContext], void, Class>(prev.init, def.init),\n        }),\n        {},\n    );\n  }\n\n  meta(source: FeatureDef, type: Class): FeatureDef.Options {\n\n    const def = source[FeatureDef__symbol];\n\n    return def == null\n        ? source as FeatureDef.Options\n        : this.meta(\n            typeof def === 'function' ? (source as FeatureDef.Factory)[FeatureDef__symbol](type) : def,\n            type,\n        );\n  }\n\n}\n\nconst meta = (/*#__PURE__*/ new FeatureMeta());\n\nconst noFeatureDef: FeatureDef.Factory = {\n  [FeatureDef__symbol]() {\n    return {};\n  },\n};\n\n/**\n * @category Core\n */\nexport const FeatureDef = {\n\n  /**\n   * Extracts feature definition options from its type.\n   *\n   * @param featureType  Target feature class constructor.\n   *\n   * @returns Feature definition options. May be empty when there is no feature definition found in the given\n   * `featureType`.\n   */\n  of(this: void, featureType: Class): FeatureDef.Options {\n    return meta.of(featureType) || {};\n  },\n\n  /**\n   * Builds feature definition options for the given feature class.\n   *\n   * @param featureType  Target feature class constructor.\n   * @param def  A feature definition.\n   *\n   * @returns Feature definition options.\n   */\n  for(this: void, featureType: Class, def: FeatureDef): FeatureDef.Options {\n    return meta.meta(def, featureType);\n  },\n\n  /**\n   * Merges multiple feature definition options.\n   *\n   * @param defs  Feature definition options to merge.\n   *\n   * @returns Merged feature definition options.\n   */\n  merge(this: void, ...defs: readonly FeatureDef.Options[]): FeatureDef.Options {\n    return meta.merge(defs);\n  },\n\n  /**\n   * Merges multiple feature definitions.\n   *\n   * @param defs  Feature definitions to merge.\n   *\n   * @returns Merged feature definition.\n   */\n  all(this: void, ...defs: readonly FeatureDef[]): FeatureDef {\n    return itsReduction<FeatureDef, FeatureDef.Factory>(\n        defs,\n        (prev, def) => ({\n          [FeatureDef__symbol](featureType: Class) {\n            return FeatureDef.merge(\n                FeatureDef.for(featureType, prev),\n                FeatureDef.for(featureType, def),\n            );\n          },\n        }),\n        noFeatureDef,\n    );\n  },\n\n  /**\n   * Defines a feature.\n   *\n   * Either creates new or extends an existing feature definition and stores it under `[FeatureDef__symbol]` key.\n   *\n   * @typeparam T  Feature type.\n   * @param featureType  Feature class constructor.\n   * @param defs  Feature definitions.\n   *\n   * @returns The `type` instance.\n   */\n  define<T extends Class>(this: void, featureType: T, ...defs: readonly FeatureDef[]): T {\n    return meta.define(featureType, defs);\n  },\n\n};\n","/**\n * @module @wesib/wesib\n */\nimport { Class, TypedClassDecorator } from '../common';\nimport { FeatureDef } from './feature-def';\n\n/**\n * Feature class decorator.\n *\n * Decorate a class with this decorator to define it as a feature like this:\n * ```TypeScript\n * @Feature({ needs: [OtherFeature, MyComponent] })\n * class MyFeature {\n *   // ...\n * }\n * ```\n *\n * Such feature can be passed to [[bootstrapComponents]] function or referenced by other features.\n *\n * This is an alternative to direct call to [[FeatureDef.define]] method.\n *\n * @category Core\n * @typeparam T  A type of decorated feature class.\n * @param defs  Feature definitions.\n *\n * @returns A feature class decorator.\n */\nexport function Feature<T extends Class = any>(...defs: FeatureDef[]): TypedClassDecorator<T> {\n  return (type: T) => FeatureDef.define(type, ...defs);\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, ContextValueSpec, SingleContextKey } from 'context-values';\nimport { OnEvent } from 'fun-events';\nimport { BootstrapContext, BootstrapSetup } from '../boot';\nimport { Class } from '../common';\nimport { ComponentContext } from '../component';\nimport { ComponentClass, ComponentFactory, DefinitionContext, DefinitionSetup } from '../component/definition';\nimport { FeatureRef } from './feature-ref';\n\nconst FeatureContext_key = new SingleContextKey<FeatureContext>('feature-context');\n\n/**\n * Feature initialization context.\n *\n * @category Core\n */\nexport abstract class FeatureContext extends BootstrapContext implements BootstrapSetup {\n\n  /**\n   * A key of feature context value containing the feature context itself.\n   */\n  static get [ContextKey__symbol](): ContextKey<FeatureContext> {\n    return FeatureContext_key;\n  }\n\n  /**\n   * Feature class this context is created for.\n   */\n  abstract readonly feature: Class;\n\n  abstract readonly whenReady: OnEvent<[FeatureContext]>;\n\n  abstract readonly onDefinition: OnEvent<[DefinitionContext]>;\n\n  abstract readonly onComponent: OnEvent<[ComponentContext]>;\n\n  /**\n   * Provides bootstrap context value.\n   *\n   * Note that this happens when bootstrap context already exists. To provide a value before bootstrap context created\n   * a [[BootstrapSetup.provide]] method can be used.\n   *\n   * @typeparam Deps  Dependencies tuple type.\n   * @typeparam Src  Source value type.\n   * @typeparam Seed  Value seed type.\n   * @param spec  Context value specifier.\n   *\n   * @returns A function that removes the given context value specifier when called.\n   */\n  abstract provide<Deps extends any[], Src, Seed>(\n      spec: ContextValueSpec<BootstrapContext, any, Deps, Src, Seed>,\n  ): () => void;\n\n  abstract perDefinition<Deps extends any[], Src, Seed>(\n      spec: ContextValueSpec<DefinitionContext, any, Deps, Src, Seed>,\n  ): () => void;\n\n  abstract perComponent<Deps extends any[], Src, Seed>(\n      spec: ContextValueSpec<ComponentContext, any, Deps, Src, Seed>,\n  ): () => void;\n\n  abstract setupDefinition<T extends object>(componentType: ComponentClass<T>): OnEvent<[DefinitionSetup]>;\n\n  /**\n   * Defines a component.\n   *\n   * Creates a custom element according to component definition, and registers it with custom elements registry.\n   *\n   * Note that custom element definition will happen only when all features configuration complete.\n   *\n   * @typeparam T  A type of component.\n   * @param componentType  Component class constructor.\n   *\n   * @return Custom element class constructor registered as custom element.\n   *\n   * @throws TypeError  If `componentType` does not contain a component definition.\n   */\n  abstract define<T extends object>(componentType: ComponentClass<T>): void;\n\n  whenDefined<C extends object>(componentType: ComponentClass<C>): Promise<ComponentFactory<C>> {\n    return this.get(BootstrapContext).whenDefined(componentType);\n  }\n\n  load(feature: Class): FeatureRef {\n    return this.get(BootstrapContext).load(feature);\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { Class } from '../common';\n\n/**\n * Feature need.\n *\n * Indicates why one feature needs another one. The reason can be one of:\n *\n * - `needs` when feature {@link FeatureDef.Options.needs depends} on another one, or\n * - `has` when feature {@link FeatureDef.Options.has provides} another one.\n *\n * @category Core\n */\nexport type FeatureNeed = [Class, 'needs' | 'has', Class];\n\n/**\n * An error in feature needs. I.e. circular dependency.\n *\n * @category Core\n */\nexport class FeatureNeedsError extends Error {\n\n  /**\n   * Feature needs causing this error.\n   */\n  readonly needs: readonly FeatureNeed[];\n\n  /**\n   * Constructs feature needs error.\n   *\n   * @param needs  Feature needs causing the error.\n   */\n  constructor(needs: readonly FeatureNeed[]) {\n    super(\n        'Circular feature needs: ' + needs.reduce(\n        (prev, [feature, reason, need]) =>\n            (prev ? prev : feature.name) + ` ${reason} ${need.name}`,\n        '',\n        ),\n    );\n    this.needs = needs;\n  }\n\n}\n","/**\n * @module wesib/wesib\n */\nimport { AfterEvent, AfterEvent__symbol, EventKeeper } from 'fun-events';\nimport { FeatureStatus } from './feature-status';\n\n/**\n * Dynamically loaded feature reference.\n *\n * It is returned from [[BootstrapContext.load]] and can be used to read feature load status and unload it.\n *\n * Implements an `EventKeeper` interface by sending a feature load status updates.\n *\n * @category Core\n */\nexport abstract class FeatureRef implements EventKeeper<[FeatureStatus]> {\n\n  /**\n   * An `AfterEvent` sender of feature load status updates.\n   *\n   * The `[AfterEvent__symbol]` property is an alias of this one.\n   */\n  abstract readonly read: AfterEvent<[FeatureStatus]>;\n\n  get [AfterEvent__symbol](): AfterEvent<[FeatureStatus]> {\n    return this.read;\n  }\n\n  /**\n   * A promise resolved when feature is unloaded.\n   *\n   * This happens after all feature references dismissed.\n   */\n  abstract readonly down: Promise<void>;\n\n  /**\n   * Dismisses feature reference.\n   *\n   * When all feature references dismissed, then unloads the feature. This removes everything set up by the\n   * feature via [[BootstrapSetup]] and [[DefinitionSetup]].\n   *\n   * @param reason  Arbitrary reason of feature reference dismiss. This will be reported by load status supplies\n   * as their cut off reason.\n   *\n   * @returns A promise resolved when feature is unloaded. This happens only after all feature references dismissed.\n   */\n  abstract dismiss(reason?: any): Promise<void>;\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { itsReduction, mapIt } from 'a-iterable';\nimport { isQualifiedName, QualifiedName } from 'namespace-aliaser';\nimport { Class, mergeFunctions, MetaAccessor } from '../common';\nimport { FeatureDef, FeatureDef__symbol } from '../feature';\nimport { ComponentClass, DefinitionContext, DefinitionSetup, ElementDef } from './definition';\n\n/**\n * A key of a property holding a component definition within its class constructor.\n *\n * @category Core\n */\nexport const ComponentDef__symbol = (/*#__PURE__*/ Symbol('component-def'));\n\n/**\n * Component definition.\n *\n * A custom element class will be created for each registered component in accordance to this definition.\n *\n * This can be one of:\n * - custom element name (possibly qualified),\n * - component definition options,\n * - component definition holder,\n * - component definition factory,\n * - feature definition holder, or\n * - feature definition factory.\n *\n * @category Core\n * @typeparam T  A type of component.\n */\nexport type ComponentDef<T extends object = any> =\n    | QualifiedName\n    | ComponentDef.Options<T>\n    | ComponentDef.Holder<T>\n    | ComponentDef.Factory<T>\n    | FeatureDef.Holder\n    | FeatureDef.Factory;\n\nexport namespace ComponentDef {\n\n  /**\n   * Component definition options.\n   */\n  export interface Options<T extends object = any> {\n\n    readonly [ComponentDef__symbol]?: undefined;\n\n    /**\n     * Custom element name.\n     *\n     * The name may belong to some namespace to avoid naming conflicts. I.e. it can be either a string, or\n     * name/namespace tuple.\n     *\n     * When omitted an anonymous component will be registered. Such component is not bound to custom element, but it\n     * still can be mounted.\n     */\n    readonly name?: QualifiedName;\n\n    /**\n     * Existing element to extend by custom one.\n     */\n    readonly extend?: ElementDef.Extend;\n\n    /**\n     * Additional feature definition options.\n     */\n    readonly feature?: FeatureDef.Options;\n\n    /**\n     * Sets up component definition.\n     *\n     * This method is called before component definition context constructed.\n     *\n     * @param setup  Component definition setup.\n     */\n    setup?(setup: DefinitionSetup<T>): void;\n\n    /**\n     * Defines this component by calling the given component definition context methods.\n     *\n     * This function is called before the custom element is defined.\n     *\n     * @param context  Component definition context.\n     */\n    define?(context: DefinitionContext<T>): void;\n\n  }\n\n  /**\n   * Component definition holder.\n   *\n   * @typeparam T  A type of component.\n   */\n  export interface Holder<T extends object = any> {\n\n    /**\n     * The component definition this holder contains.\n     */\n    readonly [ComponentDef__symbol]: ComponentDef<T>;\n\n  }\n\n  /**\n   * Component definition factory.\n   *\n   * @typeparam T  A type of component.\n   */\n  export interface Factory<T extends object = any> {\n\n    /**\n     * Builds component definition.\n     *\n     * @param componentType  A component class constructor to build definition for.\n     *\n     * @returns Built component definition.\n     */\n    [ComponentDef__symbol](componentType: ComponentClass<T>): ComponentDef<T>;\n\n  }\n\n}\n\nclass ComponentMeta extends MetaAccessor<ComponentDef.Options, ComponentDef> {\n\n  constructor() {\n    super(ComponentDef__symbol);\n  }\n\n  merge<T extends object>(defs: Iterable<ComponentDef.Options<T>>): ComponentDef.Options<T> {\n    return itsReduction<ComponentDef.Options<T>, ComponentDef.Options<T>>(\n        defs,\n        (prev, def) => ({\n          ...prev,\n          ...def,\n          setup: mergeFunctions(prev.setup, def.setup),\n          define: mergeFunctions(prev.define, def.define),\n          feature: prev.feature\n              ? def.feature ? FeatureDef.merge(prev.feature, def.feature) : prev.feature\n              : def.feature,\n        }),\n        {},\n    );\n  }\n\n  meta<T extends object>(source: ComponentDef<T>, componentType: ComponentClass<T>): ComponentDef.Options<T> {\n\n    const def = (source as any)[ComponentDef__symbol];\n\n    if (def != null) {\n      return this.meta(\n          typeof def === 'function' ? (source as ComponentDef.Factory<T>)[ComponentDef__symbol](componentType) : def,\n          componentType,\n      );\n    }\n    if ((source as any)[FeatureDef__symbol] != null) {\n      return {\n        feature: FeatureDef.for(componentType, source as FeatureDef),\n      };\n    }\n    if (isQualifiedName(source)) {\n      return { name: source };\n    }\n\n    return source as ComponentDef.Options;\n  }\n\n}\n\nconst meta = (/*#__PURE__*/ new ComponentMeta());\nconst componentDefined = (/*#__PURE__*/ Symbol('component-defined'));\nconst noComponentDef: ComponentDef.Factory = {\n  [ComponentDef__symbol]() {\n    return {};\n  },\n};\n\n/**\n * @category Core\n */\nexport const ComponentDef = {\n\n  /**\n   * Extracts component definition options from its type.\n   *\n   * @typeparam T  A type of component.\n   * @param componentType  Target component class constructor.\n   *\n   * @returns Component definition options. May be empty if there is not definition attached to component type.\n   */\n  of<T extends object>(this: void, componentType: ComponentClass<T>): ComponentDef.Options<T> {\n    return meta.of(componentType) as ComponentDef.Options<T> || {};\n  },\n\n  /**\n   * Builds component definition options for the given component class.\n   *\n   * @param componentType  Target component class constructor.\n   * @param source  A source of component definition.\n   *\n   * @returns Component definition.\n   */\n  for<T extends object>(\n      this: void,\n      componentType: ComponentClass<T>,\n      source: ComponentDef<T>,\n  ): ComponentDef.Options<T> {\n    return meta.meta(source, componentType);\n  },\n\n  /**\n   * Merges multiple component definition options.\n   *\n   * @typeparam T  A type of component.\n   * @param defs  Component definition options to merge.\n   *\n   * @returns Merged component definition options.\n   */\n  merge<T extends object>(this: void, ...defs: ComponentDef.Options<T>[]): ComponentDef.Options<T> {\n    return meta.merge(defs);\n  },\n\n  /**\n   * Merges multiple component definitions.\n   *\n   * @typeparam T  A type of component.\n   * @param defs  Component definitions to merge.\n   *\n   * @returns Merged component definition.\n   */\n  all<T extends object>(this: void, ...defs: ComponentDef<T>[]): ComponentDef<T> {\n    return itsReduction<ComponentDef<T>, ComponentDef.Factory<T>>(\n        defs,\n        (prev, def) => ({\n          [ComponentDef__symbol](componentType: ComponentClass<T>) {\n            return ComponentDef.merge(\n                ComponentDef.for(componentType, prev),\n                ComponentDef.for(componentType, def),\n            );\n          },\n        }),\n        noComponentDef,\n    );\n  },\n\n  /**\n   * Defines a component.\n   *\n   * Either assigns new or extends an existing component definition and stores it under [[ComponentDef__symbol]] key.\n   *\n   * Note that each component is also a feature able to register itself, so it can be passed directly to\n   * [[bootstrapComponents]] function or added as a requirement of another feature.\n   *\n   * @typeparam T  A type of component.\n   * @param componentType  Component class constructor.\n   * @param defs  Component definitions.\n   *\n   * @returns The `type` instance.\n   */\n  define<T extends ComponentClass>(\n      this: void,\n      componentType: T,\n      ...defs: ComponentDef<InstanceType<T>>[]\n  ): T {\n\n    const def = meta.merge(mapIt(defs, source => ComponentDef.for(componentType, source)));\n\n    meta.define(componentType, [def]);\n    FeatureDef.define(componentType, ComponentDef.featureDef(def));\n\n    return componentType;\n  },\n\n  /**\n   * Builds feature definition for the given component definition.\n   *\n   * @param def  Component definition options.\n   *\n   * @returns Feature definition that defines the component and applies other definitions from\n   * [[ComponentDef.Options.feature]] property.\n   */\n  featureDef<T extends object>(this: void, def: ComponentDef.Options<T>): FeatureDef {\n    return {\n      [FeatureDef__symbol](featureType: Class) {\n\n        const registrar: FeatureDef = {\n          init(context) {\n            if (context.feature === featureType && !featureType.hasOwnProperty(componentDefined)) {\n              Object.defineProperty(featureType, componentDefined, { value: 1 });\n              context.define(featureType);\n            }\n          },\n        };\n        const { feature } = def;\n\n        return feature ? FeatureDef.merge(feature, registrar) : registrar;\n      },\n    };\n  },\n\n};\n","/**\n * @module @wesib/wesib\n */\nimport { TypedClassDecorator } from '../common';\nimport { ComponentDef } from './component-def';\nimport { ComponentClass } from './definition';\n\n/**\n * Component class decorator.\n *\n * Decorate a class with this decorator to define a component like this:\n * ```TypeScript\n * @Component({ name: 'my-element' })\n * class MyComponent {\n *   // ...\n * }\n * ```\n *\n * Such component can be registered with [[FeatureContext.define]] method or used as a feature, e.g. passed to\n * [[bootstrapComponents]] function, or added to [[FeatureDef.Options.needs]] property of another feature.\n *\n * This is an alternative to direct call to [[ComponentDef.Options.define]] method.\n *\n * @category Core\n * @typeparam T  A type of decorated component class.\n * @param defs  Component definitions.\n *\n * @returns A component class decorator.\n */\nexport function Component<T extends ComponentClass = any>(\n    ...defs: ComponentDef<InstanceType<T>>[]\n): TypedClassDecorator<T> {\n  return (type: T) => ComponentDef.define(type, ...defs);\n}\n","import { SingleContextKey } from 'context-values';\nimport { ComponentContext } from './component-context';\n\n/**\n * @internal\n */\nexport const ComponentContext__key = (/*#__PURE__*/ new SingleContextKey<ComponentContext>('component-context'));\n","import { SingleContextKey } from 'context-values';\nimport { DomEventDispatcher, OnDomEvent } from 'fun-events';\nimport { ComponentContext } from './component-context';\nimport { ComponentEventDispatcher } from './component-event';\n\n/**\n * @internal\n */\nexport const ComponentEventDispatcher__key = (/*#__PURE__*/ new SingleContextKey<ComponentEventDispatcher>(\n    'component-event-dispatcher',\n    {\n      byDefault() {\n        return {\n          dispatch(context: ComponentContext, event: Event): boolean {\n            return context.element.dispatchEvent(event);\n          },\n          on<E extends Event>(context: ComponentContext, type: string): OnDomEvent<E> {\n\n            const dispatcher = new DomEventDispatcher(context.element);\n\n            return dispatcher.on(type);\n          },\n        };\n      },\n    },\n));\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport { ComponentContext__key } from './component-context.key.impl';\n\n/**\n * Component content root node.\n *\n * @category Core\n */\nexport type ContentRoot = ParentNode;\n\n/**\n * A key of component context value containing a component root element.\n *\n * This is an element itself by default. But can be overridden e.g. by {@link AttachShadow @AttachShadow} decorator.\n *\n * @category Core\n */\nexport const ContentRoot: SingleContextRef<ContentRoot> = (/*#__PURE__*/ new SingleContextKey<ContentRoot>(\n    'content-root',\n    {\n      byDefault(ctx) {\n        return ctx.get(ComponentContext__key).element;\n      },\n    },\n));\n","/**\n * @module @wesib/wesib\n */\nimport { noop, valueProvider } from 'call-thru';\nimport { FnContextKey, FnContextRef } from 'context-values';\nimport { StatePath } from 'fun-events';\n\n/**\n * Component state updater function.\n *\n * @category Core\n */\nexport type StateUpdater =\n/**\n * @typeparam V  Updated value type\n * @param path  Updated state node path.\n * @param newValue  New value.\n * @param oldValue  Replaced value.\n */\n    <V>(this: void, path: StatePath, newValue: V, oldValue: V) => void;\n\n/**\n * A key of component context value containing a component state updates receiver function.\n *\n * Features are calling this function by default when component state changes, e.g. attribute value or DOM property\n * modified.\n *\n * Note that this value is not provided, unless the `StateSupport` feature is enabled.\n *\n * @category Core\n */\nexport const StateUpdater: FnContextRef<Parameters<StateUpdater>> = (/*#__PURE__*/ new FnContextKey(\n    'state-updater',\n    {\n      byDefault: valueProvider(noop),\n    },\n));\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, ContextValues } from 'context-values';\nimport { EventSupply, OnDomEvent, OnEvent, StatePath } from 'fun-events';\nimport { BootstrapContext__key } from '../boot/bootstrap-context.key.impl';\nimport { ComponentContext__key } from './component-context.key.impl';\nimport { ComponentEventDispatcher__key } from './component-event.key.impl';\nimport { ComponentMount } from './component-mount';\nimport { ContentRoot } from './content-root';\nimport { ComponentClass } from './definition';\nimport { StateUpdater } from './state-updater';\n\n/**\n * A key of a custom element and component properties containing a reference to component context.\n *\n * @category Core\n */\nexport const ComponentContext__symbol = (/*#__PURE__*/ Symbol('component-context'));\n\n/**\n * Component context.\n *\n * Passed to component constructor as its only parameter.\n *\n * Extends `ContextValues` interface. The values are provided by corresponding providers registered with\n * [[BootstrapSetup.perComponent]] and [[DefinitionSetup.perComponent]] methods.\n *\n * @category Core\n * @typeparam T  A type of component.\n */\nexport abstract class ComponentContext<T extends object = any> extends ContextValues {\n\n  /**\n   * A key of component context value containing the component context instance itself.\n   */\n  static get [ContextKey__symbol](): ContextKey<ComponentContext> {\n    return ComponentContext__key;\n  }\n\n  /**\n   * Component class constructor.\n   */\n  abstract readonly componentType: ComponentClass<T>;\n\n  /**\n   * Custom element constructed for the component according to its type.\n   *\n   * E.g. `HTMLElement` instance.\n   */\n  abstract readonly element: any;\n\n  /**\n   * A component instance.\n   *\n   * It is an error accessing this property before the component is created, e.g. from inside of component constructor\n   * or {@link DefinitionContext.whenComponent component instantiation event} receiver. A [[whenReady]] callback could\n   * be utilized to work this around.\n   */\n  abstract readonly component: T;\n\n  /**\n   * Component mount.\n   *\n   * This is defined when component is mounted to arbitrary element by [[ComponentFactory.mountTo]]. Ot is `undefined`\n   * for components created in standard way.\n   */\n  abstract readonly mount: ComponentMount<T> | undefined;\n\n  /**\n   * Whether the custom element is connected.\n   *\n   * This becomes `true` right before [[whenOn]] event is sent, and becomes `false` right before [[whenOff]] event is\n   * sent.\n   */\n  abstract readonly connected: boolean;\n\n  /**\n   * An `OnEvent` sender of custom element connection events.\n   *\n   * The registered receivers are called when custom element is connected, i.e. its `connectedCallback()` method is\n   * called. If component is connected already the receiver is called immediately.\n   *\n   * Sends a connection supply that is cut off once custom element is disconnected.\n   */\n  abstract readonly whenOn: OnEvent<[EventSupply]>;\n\n  /**\n   * An `OnEvent` sender of custom element disconnection events.\n   *\n   * The registered receivers are called when custom element is disconnected, i.e. its `disconnectedCallback()` method\n   * is called. If component is ready but disconnected, the receiver is called immediately.\n   */\n  abstract readonly whenOff: OnEvent<[]>;\n\n  /**\n   * An `OnEvent` sender of component readiness event.\n   *\n   * The component is constructed shortly after custom element. So the component may not exist when requested\n   * e.g. inside component constructor or {@link DefinitionContext.whenComponent component instantiation event}\n   * receiver. The registered receiver will be notified when the component is constructed.\n   *\n   * If the component is constructed already, the receiver will be notified immediately.\n   */\n  abstract readonly whenReady: OnEvent<[this]>;\n\n  /**\n   * An `OnEvent` sender of component destruction reason event.\n   *\n   * The registered receiver is notified when [[destroy]] method is called. If the component is destroyed already\n   * the receiver is notified immediately.\n   */\n  abstract readonly whenDestroyed: OnEvent<[any]>;\n\n  /**\n   * Updates component's state.\n   *\n   * This is a shorthand for invoking a component {@link StateUpdater state updater} .\n   *\n   * Note that state update has no effect unless [[StateSupport]] feature is enabled or [[StateUpdater]] context value\n   * is provided by other means.\n   *\n   * @typeparam V  A type of changed value.\n   * @param key  Changed value key.\n   * @param newValue  New value.\n   * @param oldValue  Previous value.\n   */\n  readonly updateState: StateUpdater = updateComponentState.bind(this);\n\n  /**\n   * Extracts component context from its custom element or from component itself.\n   *\n   * @param element  Custom element instance created for the component or the component itself.\n   *\n   * @return Component context reference stored under [[ComponentContext__symbol]] key.\n   *\n   * @throws TypeError  When the given `element` does not contain component context reference.\n   */\n  static of<T extends object>(element: any): ComponentContext<T> {\n\n    const context = element[ComponentContext__symbol];\n\n    if (!context) {\n      throw TypeError(`No component context found in ${element}`);\n    }\n\n    return context;\n  }\n\n  /**\n   * Component content root.\n   *\n   * This is a shorthand for requesting a {@link ContentRoot content root} from component context.\n   */\n  get contentRoot(): ContentRoot {\n    return this.get(ContentRoot);\n  }\n\n  /**\n   * Returns a `super` property value inherited from custom element parent.\n   *\n   * @param key  Target property key.\n   */\n  abstract elementSuper(key: PropertyKey): any;\n\n  /**\n   * Returns a DOM event producer for the given event type.\n   *\n   * This is a shorthand for invoking a component event producer function available under\n   * `[ComponentEventProducer.key]` key.\n   *\n   * @param type  An event type to listen for.\n   *\n   * @returns A producer of DOM event events of the given type.\n   */\n  on<E extends Event>(type: string): OnDomEvent<E> {\n    return this.get(ComponentEventDispatcher__key).on(this, type);\n  }\n\n  /**\n   * Dispatches an event to component element.\n   *\n   * This is a shorthand for invoking a component {@link ComponentEventDispatcher event dispatcher}.\n   *\n   * @param event  An event to dispatch.\n   */\n  dispatchEvent(event: Event): void {\n    this.get(BootstrapContext__key).get(ComponentEventDispatcher__key).dispatch(this, event);\n  }\n\n  /**\n   * Destroys the component.\n   *\n   * Removes element from the DOM tree. I.e. disconnects custom element first.\n   *\n   * After this method call the component should no longer be used.\n   *\n   * Note that component destruction is virtual. It is up to developer to decide when component is no longer needed.\n   *\n   * @param reason  Optional reason of destruction.\n   */\n  abstract destroy(reason?: any): void;\n\n}\n\nfunction updateComponentState<V>(this: ComponentContext<any>, key: StatePath, newValue: V, oldValue: V) {\n  this.get(StateUpdater)(key, newValue, oldValue);\n}\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextRef } from 'context-values';\nimport { OnDomEvent } from 'fun-events';\nimport { ComponentContext } from './component-context';\nimport { ComponentEventDispatcher__key } from './component-event.key.impl';\n\n/**\n * Component event.\n *\n * Events of this type are thrown by various services to inform on component status changes.\n *\n * It is illegal to dispatch such events for elements not bound to components. It is reasonable to dispatch events\n * using [[ComponentEventDispatcher]] available in component context.\n *\n * The following event types supported:\n * - `wesib:component` is thrown when component is bound to element. I.e. when HTML element is upgraded to custom one\n *   defined by component, or component is bound to the element. This event bubbles and is not cancelable.\n *\n * @category Core\n * @event ComponentEvent#wesib:component\n */\nexport class ComponentEvent extends Event {\n\n  /**\n   * Constructs component event.\n   *\n   * @param type  Event type.\n   * @param eventInitDict  Event initialization dictionary.\n   */\n  constructor(type: string, eventInitDict?: EventInit) {\n    super(type, eventInitDict);\n  }\n\n  /**\n   * Target component context.\n   */\n  get context(): ComponentContext {\n    return ComponentContext.of(this.target);\n  }\n\n}\n\n/**\n * Component event dispatcher is used to listen for and dispatch component events.\n *\n * It is available in bootstrap context context.\n *\n * By default treats a component element as event target.\n *\n * @category Core\n */\nexport interface ComponentEventDispatcher {\n\n  /**\n   * Dispatches the DOM event for the given component.\n   *\n   * @param context  Target component context.\n   * @param event  An event to dispatch.\n   *\n   * @returns `true` if either event's `cancelable` attribute value is `false` or its `preventDefault()` method was not\n   * invoked, or `false` otherwise.\n   */\n  dispatch(context: ComponentContext, event: Event): boolean;\n\n  /**\n   * Returns an `OnDomEvent` sender of DOM events of the given type.\n   *\n   * @param context  Target component context.\n   * @param type  An event type to listen for.\n   *\n   * @returns A producer of DOM event events of the given type.\n   */\n  on<E extends Event>(context: ComponentContext, type: string): OnDomEvent<E>;\n\n}\n\n/**\n * A key of bootstrap context value containing component event dispatcher.\n *\n * @category Core\n */\nexport const ComponentEventDispatcher: SingleContextRef<ComponentEventDispatcher> =\n    (/*#__PURE__*/ ComponentEventDispatcher__key);\n","/**\n * @module @wesib/wesib\n */\nimport { ComponentContext } from './component-context';\n\n/**\n * A mount of the component to an element.\n *\n * This is constructed when a component is mounted to arbitrary element by [[ComponentFactory.mountTo]] method.\n *\n * Mounted components do not maintain their connection state automatically. It is a calling code responsibility to set\n * their connection state by updating [[ComponentMount.connected]] property. E.g. by calling a\n * [[ComponentMount.checkConnected]] method. An [[ElementObserver]] and [[AutoConnectSupport]] feature could be used to\n * do it automatically.\n *\n * @category Core\n * @typeparam T  A type of component.\n */\nexport abstract class ComponentMount<T extends object = any> {\n\n  /**\n   * Mounted component context.\n   */\n  abstract readonly context: ComponentContext<T>;\n\n  /**\n   * Component connection state.\n   *\n   * Updating this property triggers appropriate listeners registered in [[ComponentContext]].\n   *\n   * The initial state is set by [[checkConnected]] method.\n   */\n  abstract connected: boolean;\n\n  /**\n   * Mounted component.\n   */\n  get component(): T {\n    return this.context.component;\n  }\n\n  /**\n   * An element the component is mounted to.\n   */\n  get element(): any {\n    return this.context.element;\n  }\n\n  /**\n   * Checks whether the mounted component element is actually connected to its owning document.\n   *\n   * Updates the `connected` property and returns its value.\n   *\n   * @returns `true` if the component element is connected, or `false` otherwise.\n   */\n  abstract checkConnected(): boolean;\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextUpKey, ContextUpRef, ContextValueOpts, ContextValues } from 'context-values';\nimport { AfterEvent, EventKeeper } from 'fun-events';\nimport { ComponentContext, ComponentContext__symbol } from '../../component';\n\n/**\n * Element adapter is a function able to convert a raw element to component. E.g. mount a component to it.\n *\n * Features may use it internally. E.g. an `AutoConnectSupport` applies it to each added DOM element.\n *\n * Multiple element adapters can be registered in bootstrap context.\n *\n * @category Core\n */\nexport type ElementAdapter =\n/**\n * @param element  Target raw element to adapt.\n *\n * @returns An adapted component's context, or `undefined` if element can not be adapted.\n */\n    (this: void, element: any) => ComponentContext | undefined;\n\nclass ElementAdapterKey extends ContextUpKey<ElementAdapter, ElementAdapter> {\n\n  constructor() {\n    super('element-adapter');\n  }\n\n  grow<Ctx extends ContextValues>(\n      opts: ContextValueOpts<\n          Ctx,\n          ElementAdapter,\n          EventKeeper<ElementAdapter[]> | ElementAdapter, AfterEvent<ElementAdapter[]>>,\n  ): ElementAdapter {\n\n    const defaultElementAdapter = (element: any) => element[ComponentContext__symbol];\n\n    let result: ElementAdapter;\n\n    opts.seed((...adapters) => {\n\n      const combined = adapters.reduce(\n          (prev, adapter) => (element: any) => prev(element) || adapter(element),\n          defaultElementAdapter,\n      );\n\n      result = combined !== defaultElementAdapter\n          ? combined\n          : opts.byDefault(() => defaultElementAdapter) || defaultElementAdapter;\n    });\n\n    return element => result(element);\n  }\n\n}\n\n/**\n * A key of bootstrap context value containing combined [[ElementAdapter]] instance.\n *\n * @category Core\n */\nexport const ElementAdapter: ContextUpRef<ElementAdapter, ElementAdapter> = (/*#__PURE__*/ new ElementAdapterKey());\n","/**\n * @module wesib/wesib\n */\nimport { filterIt, itsEach, overArray } from 'a-iterable';\nimport { FnContextKey } from 'context-values';\nimport { isElement } from '../../common';\nimport { ComponentContext__symbol, ComponentMount } from '../../component';\nimport { bootstrapDefault } from '../bootstrap-default';\nimport { ElementAdapter } from './element-adapter';\n\n/**\n * Element mutations observer.\n *\n * It is a `MutationObserver` implementation that:\n * - always observes target's children,\n * - applies {@link ElementAdapter element adapter} to added elements,\n * - tracks mounted components {@link ComponentMount.connected connection state}.\n *\n * A function constructing element observer instance could be obtained from bootstrap context.\n *\n * @category Core\n */\nexport interface ElementObserver extends MutationObserver {\n\n  /**\n   * Configures the observer callback to begin receiving notifications of changes to the DOM that match the given\n   * options.\n   * To stop the MutationObserver (so that none of its callbacks will be triggered any longer), call\n   * [[disconnect]].\n   *\n   * @param target  A DOM node within the DOM tree to watch for changes, and to be the root of a subtree of nodes\n   * to be watched.\n   * @param options  An options that describe what DOM mutations should be reported to the observer's callback.\n   */\n  observe(target: Node, options?: ElementObserverInit): void;\n\n}\n\n/**\n * A key of bootstrap context value containing a function constructing a new [[ElementObserver]] instance.\n *\n * @category Core\n */\nexport const ElementObserver: FnContextKey<[MutationCallback], ElementObserver> = (/*#__PURE__*/ new FnContextKey(\n    'element-observer',\n    {\n      byDefault: bootstrapDefault(bsContext => {\n\n        const adapter = bsContext.get(ElementAdapter);\n        class DefaultElementObserver extends MutationObserver implements ElementObserver {\n\n          constructor(callback: MutationCallback) {\n            super(mutations => {\n              mutations.forEach(mutation => {\n                itsEach(\n                    overArray(mutation.removedNodes),\n                    node => mountOf(node)?.checkConnected(),\n                );\n                itsEach(\n                    filterIt(\n                        overArray(mutation.addedNodes),\n                        isElement,\n                    ),\n                    element => adapter(element)?.mount?.checkConnected(),\n                );\n              });\n              callback(mutations, this);\n            });\n          }\n\n          observe(target: Node, options?: ElementObserverInit): void {\n            super.observe(target, { ...options, childList: true });\n          }\n\n        }\n\n        return callback => new DefaultElementObserver(callback);\n      }),\n    },\n));\n\n/**\n * Element observer initialization options.\n *\n * @category Core\n */\nexport interface ElementObserverInit extends MutationObserverInit {\n\n  /**\n   * Whether mutations to target's children are to be observed.\n   *\n   * Always `true`.\n   */\n  childList?: true;\n\n}\n\nfunction mountOf(node: any): ComponentMount | undefined {\n  return node[ComponentContext__symbol]?.mount;\n}\n","import { ComponentClass, ComponentFactory } from '../../component/definition';\n\n/**\n * @internal\n */\nexport const ComponentFactory__symbol = (/*#__PURE__*/ Symbol('component-factory'));\n\n/**\n * @internal\n */\nexport function componentFactoryOf<T extends object>(componentType: ComponentClass<T>): ComponentFactory<T> {\n\n  const factory = (componentType as any)[ComponentFactory__symbol];\n\n  if (!factory) {\n    throw new TypeError(`Component is not defined: ${componentType}`);\n  }\n\n  return factory;\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, ContextValues, SingleContextKey } from 'context-values';\nimport { html__naming, isQualifiedName, QualifiedName } from 'namespace-aliaser';\nimport { BootstrapWindow, DefaultNamespaceAliaser } from '../../boot/globals';\nimport { componentFactoryOf } from '../../boot/impl/component-factory.symbol.impl';\nimport { Class, PromiseResolver } from '../../common';\nimport { ComponentClass } from './component-class';\n\nconst CustomElements__key = (/*#__PURE__*/ new SingleContextKey<CustomElements>(\n    'custom-elements',\n    {\n      byDefault: createCustomElements,\n    },\n));\n\n/**\n * Custom elements registry.\n *\n * This is used to register custom elements.\n *\n * Typically implemented by `window.customElements`.\n *\n * @category Core\n */\nexport abstract class CustomElements {\n\n  /**\n   * A key of bootstrap context value containing a `CustomElements` instance used to register custom\n   * elements.\n   *\n   * Target value defaults to `window.customElements` from the window provided under `[BootstrapWindow.key]`.\n   */\n  static get [ContextKey__symbol](): ContextKey<CustomElements> {\n    return CustomElements__key;\n  }\n\n  /**\n   * Defines custom element.\n   *\n   * @param componentTypeOrName  A component class constructor or custom element name. The latter may belong to\n   * namespace to avoid naming conflicts.\n   * @param elementType  A constructor of custom element to define.\n   */\n  abstract define(componentTypeOrName: ComponentClass | QualifiedName, elementType: Class): void;\n\n  /**\n   * Allows to wait for component definition.\n   *\n   * This corresponds to `window.customElements.whenDefined()` method.\n   *\n   * @param componentTypeOrName  Component class constructor or custom element name possibly belonging to some\n   * namespace.\n   *\n   * @return A promise that is resolved when custom element is registered.\n   *\n   * @throws TypeError If `componentType` does not contain a component definition.\n   */\n  abstract whenDefined(componentTypeOrName: ComponentClass | QualifiedName): Promise<void>;\n\n}\n\nfunction createCustomElements(values: ContextValues) {\n\n  const customElements: CustomElementRegistry = values.get(BootstrapWindow).customElements;\n  const nsAlias = values.get(DefaultNamespaceAliaser);\n\n  class WindowCustomElements extends CustomElements {\n\n    define(componentTypeOrName: ComponentClass | string, elementType: Class): void {\n      if (isQualifiedName(componentTypeOrName)) {\n        customElements.define(html__naming.name(componentTypeOrName, nsAlias), elementType);\n        return;\n      }\n\n      const factory = componentFactoryOf(componentTypeOrName);\n      const { name, extend } = factory.elementDef;\n\n      if (!name) {\n        componentResolver(componentTypeOrName).resolve(undefined);\n        return; // Anonymous component.\n      }\n      if (extend && extend.name) {\n        customElements.define(\n            html__naming.name(name, nsAlias),\n            elementType,\n            {\n              extends: extend.name,\n            },\n        );\n      } else {\n        customElements.define(html__naming.name(name, nsAlias), elementType);\n      }\n    }\n\n    whenDefined(componentTypeOrName: ComponentClass | string): Promise<void> {\n      if (isQualifiedName(componentTypeOrName)) {\n        return customElements.whenDefined(html__naming.name(componentTypeOrName, nsAlias));\n      }\n\n      const factory = componentFactoryOf(componentTypeOrName);\n      const { name } = factory.elementDef;\n\n      if (!name) {\n        return componentResolver(componentTypeOrName).promise;\n      }\n\n      return customElements.whenDefined(html__naming.name(name, nsAlias));\n    }\n\n  }\n\n  return new WindowCustomElements();\n}\n\nconst ComponentResolver__symbol = (/*#__PURE__*/ Symbol('component-resolver'));\n\nfunction componentResolver(componentType: ComponentClass): PromiseResolver<void> {\n  return (componentType as any)[ComponentResolver__symbol]\n      || ((componentType as any)[ComponentResolver__symbol] = new PromiseResolver());\n}\n","import { SingleContextKey } from 'context-values';\nimport { DefinitionContext } from './definition-context';\n\n/**\n * @internal\n */\nexport const DefinitionContext__key = (/*#__PURE__*/ new SingleContextKey<DefinitionContext>('definition-context'));\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport { QualifiedName } from 'namespace-aliaser';\nimport { BootstrapWindow } from '../../boot/globals';\nimport { Class } from '../../common';\nimport { ComponentDef } from '../component-def';\nimport { DefinitionContext__key } from './definition.context.key.impl';\n\n/**\n * Custom element definition meta.\n *\n * @category Core\n */\nexport interface ElementDef {\n\n  /**\n   * Custom element name.\n   *\n   * The name may belong to some namespace to avoid naming conflicts. I.e. it can be either a string, or\n   * name/namespace tuple.\n   *\n   * When omitted an anonymous component will be registered. Such component is not bound to custom element, but it\n   * still can be mounted.\n   */\n  readonly name?: QualifiedName;\n\n  /**\n   * Existing element to extend by custom one.\n   */\n  readonly extend: ElementDef.Extend;\n\n}\n\n/**\n * A key of definition context value containing a custom element definition.\n *\n * Target value defaults to `HTMLElement` from the window provided under `[BootstrapWindow.key]`,\n * unless `ComponentDef.extend.type` is specified.\n */\nexport const ElementDef: SingleContextRef<ElementDef> = (/*#__PURE__*/ new SingleContextKey<ElementDef>(\n    'element-def',\n    {\n      byDefault(values) {\n\n        const componentType = values.get(DefinitionContext__key).componentType;\n        const { name, extend } = ComponentDef.of(componentType);\n\n        const elementExtend: ElementDef.Extend = {\n          get type() {\n            return extend && extend.type || values.get(BootstrapWindow).HTMLElement;\n          },\n          get name() {\n            return extend && extend.name;\n          },\n        };\n\n        return {\n          get name() {\n            return name;\n          },\n          get extend() {\n            return elementExtend;\n          },\n        };\n      },\n    },\n));\n\n/**\n * @category Core\n */\nexport namespace ElementDef {\n\n  /**\n   * The definition of element to extend by custom one.\n   */\n  export interface Extend {\n\n    /**\n     * The class constructor of element to extend.\n     */\n    readonly type: Class;\n\n    /**\n     * The name of element to extend.\n     *\n     * This is to support `as` attribute of standard HTML element. Note that this is not supported by polyfills.\n     */\n    readonly name?: string;\n\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, ContextValues, ContextValueSpec } from 'context-values';\nimport { OnEvent } from 'fun-events';\nimport { Class } from '../../common';\nimport { ComponentContext } from '../component-context';\nimport { ComponentClass } from './component-class';\nimport { DefinitionContext__key } from './definition.context.key.impl';\nimport { ElementDef } from './element-def';\n\n/**\n * Component definition context.\n *\n * Extends `ContextValues` interface. The values are provided by corresponding providers registered with\n * [[BootstrapSetup.perDefinition]] and [[DefinitionSetup.perDefinition]] methods. All [[BootstrapContext]] values\n * are available too.\n *\n * @category Core\n * @typeparam T  A type of component.\n */\nexport abstract class DefinitionContext<T extends object = any> extends ContextValues {\n\n  /**\n   * A key of definition context value containing the definition context itself.\n   */\n  static get [ContextKey__symbol](): ContextKey<DefinitionContext> {\n    return DefinitionContext__key;\n  }\n\n  /**\n   * Component class constructor.\n   */\n  abstract readonly componentType: ComponentClass<T>;\n\n  /**\n   * Custom element class constructor.\n   *\n   * It is an error accessing this property before the element class is created, e.g. from inside of\n   * `DefinitionListener` or `ComponentDef.define()` function. In these cases you may wish to add a `whenReady()`\n   * callback.\n   */\n  abstract readonly elementType: Class;\n\n  /**\n   * An `OnEvent` sender of component definition context upon its readiness.\n   *\n   * The custom element class is not constructed until component definition is complete.\n   * The registered receiver will be notified when the custom element class is constructed.\n   *\n   * If the custom element class is constructed already, the receiver will be notified immediately.\n   */\n  abstract readonly whenReady: OnEvent<[this]>;\n\n  /**\n   * An `OnEvent` sender of component context upon its instantiation.\n   *\n   * If component instantiated after the receiver is registered, that receiver would receive an instantiated component's\n   * context immediately.\n   *\n   * If component already exists when the receiver is registered, that receiver would receive instantiated component's\n   * context only when/if component is {@link ComponentContext.whenOn connected}. This is to prevent resource leaking\n   * on disconnected components that may be never used again.\n   */\n  abstract readonly whenComponent: OnEvent<[ComponentContext<T>]>;\n\n  /**\n   * Custom element definition.\n   */\n  get elementDef(): ElementDef {\n    return this.get(ElementDef);\n  }\n\n  /**\n   * Provides a value available in the context of each component of the defined component type.\n   *\n   * @typeparam Deps  A type of dependencies.\n   * @typeparam Src  The type of context value sources.\n   * @typeparam Seed  Value seed type.\n   * @param spec  Component context value specifier.\n   *\n   * @returns A function that removes the given context value specifier when called.\n   */\n  abstract perComponent<Deps extends any[], Src, Seed>(\n      spec: ContextValueSpec<ComponentContext<T>, any, Deps, Src, Seed>,\n  ): () => void;\n\n}\n","import { ContextKey, ContextKey__symbol, ContextRegistry, ContextValues, SingleContextKey } from 'context-values';\nimport { BootstrapContext } from '../bootstrap-context';\n\nconst BootstrapContextRegistry__key =\n    (/*#__PURE__*/ new SingleContextKey<BootstrapContextRegistry>('bootstrap-context-registry'));\n\n/**\n * @internal\n */\nexport class BootstrapContextRegistry extends ContextRegistry<BootstrapContext> {\n\n  static get [ContextKey__symbol](): ContextKey<BootstrapContextRegistry> {\n    return BootstrapContextRegistry__key;\n  }\n\n  readonly values: ContextValues;\n\n  static create(): BootstrapContextRegistry {\n    return new BootstrapContextRegistry();\n  }\n\n  private constructor() {\n    super();\n    this.provide({ a: BootstrapContextRegistry, is: this });\n    this.values = this.newValues();\n  }\n\n}\n","import { ContextKey, ContextKey__symbol, ContextRegistry, ContextSeeds, SingleContextKey } from 'context-values';\nimport { ComponentContext } from '../../component';\nimport { bootstrapDefault } from '../bootstrap-default';\n\nconst ComponentContextRegistry__key = new SingleContextKey<ComponentContextRegistry>(\n    'component-context-registry',\n    {\n      byDefault: bootstrapDefault(() => new ComponentContextRegistry()),\n    },\n);\n\n/**\n * @internal\n */\nexport class ComponentContextRegistry extends ContextRegistry<ComponentContext> {\n\n  static get [ContextKey__symbol](): ContextKey<ComponentContextRegistry> {\n    return ComponentContextRegistry__key;\n  }\n\n  constructor(initial?: ContextSeeds<ComponentContext>) {\n    super(initial);\n  }\n\n}\n","import {\n  ContextKey,\n  ContextKey__symbol,\n  ContextRegistry,\n  ContextSeeds,\n  ContextValues,\n  SingleContextKey,\n} from 'context-values';\nimport { DefinitionContext } from '../../component/definition';\nimport { bootstrapDefault } from '../bootstrap-default';\n\nconst DefinitionContextRegistry__key = new SingleContextKey<DefinitionContextRegistry>(\n    'definition-context-registry',\n    {\n      byDefault: bootstrapDefault(context => new DefinitionContextRegistry(context)),\n    },\n);\n\n/**\n * @internal\n */\nexport class DefinitionContextRegistry extends ContextRegistry<DefinitionContext> {\n\n  static get [ContextKey__symbol](): ContextKey<DefinitionContextRegistry> {\n    return DefinitionContextRegistry__key;\n  }\n\n  constructor(initial?: ContextSeeds<DefinitionContext> | ContextValues) {\n    super(initial);\n  }\n\n}\n","import { nextArgs, nextSkip } from 'call-thru';\nimport { EventEmitter, onAny, OnEvent, onEventBy, trackValue } from 'fun-events';\nimport { superClassOf } from '../../common';\nimport { ComponentDef__symbol } from '../../component';\nimport { ComponentClass, DefinitionSetup } from '../../component/definition';\nimport { Unloader } from './unloader.impl';\n\n/**\n * @internal\n */\nexport function onPostDefSetup(\n    componentType: ComponentClass,\n    unloader: Unloader,\n): OnEvent<[DefinitionSetup]> {\n\n  const { on } = postDefSetup(componentType);\n\n  return onEventBy(receiver => {\n    on({\n      supply: receiver.supply.needs(unloader.supply),\n      receive(ctx, setup) {\n\n        const whenReady = setup.whenReady.tillOff(unloader.supply);\n        const whenComponent = setup.whenComponent.tillOff(unloader.supply);\n\n        receiver.receive(ctx, {\n          get componentType() {\n            return setup.componentType;\n          },\n          get whenReady() {\n            return whenReady;\n          },\n          get whenComponent() {\n            return whenComponent;\n          },\n          perDefinition(spec) {\n            return unloader.add(() => setup.perDefinition(spec));\n          },\n          perComponent(spec) {\n            return unloader.add(() => setup.perComponent(spec));\n          },\n        });\n      },\n    });\n  });\n}\n\n/**\n * @internal\n */\nexport interface PostDefSetup<T extends object = any> {\n  readonly on: OnEvent<[DefinitionSetup<T>]>;\n  send(setup: DefinitionSetup): void;\n  setup(setup: DefinitionSetup<T>): void;\n}\n\nconst PostDefSetup__symbol = (/*#__PURE__*/ Symbol('post-def-setup'));\n\n/**\n * @internal\n */\nexport function postDefSetup<T extends object>(componentType: ComponentClass<T>): PostDefSetup<T> {\n  if (componentType.hasOwnProperty(PostDefSetup__symbol)) {\n    return (componentType as any)[PostDefSetup__symbol];\n  }\n\n  const tracker = trackValue<DefinitionSetup<T>>();\n  const emitter = new EventEmitter<[DefinitionSetup]>();\n  const onSetup: OnEvent<[DefinitionSetup<T>]> = tracker.read.thru(setup => setup ? nextArgs(setup) : nextSkip());\n  const on = onAny(onSetup, emitter);\n  const superType = superClassOf(componentType, type => ComponentDef__symbol in type);\n\n  if (superType) {\n\n    const superPostDefSetup = postDefSetup(superType);\n\n    on(setup => superPostDefSetup.send(setup));\n  }\n\n  const result: PostDefSetup<T> = {\n    on,\n    send(setup) {\n      emitter.send(setup);\n    },\n    setup(setup) {\n      tracker.it = setup;\n    },\n  };\n\n  Object.defineProperty(componentType, PostDefSetup__symbol, { value: result });\n\n  return result;\n}\n","import { AfterEvent, EventEmitter, OnEvent, onEventBy, trackValue } from 'fun-events';\nimport { ComponentContext } from '../../component';\n\nexport class WhenComponent<T extends object> {\n\n  readonly onCreated: OnEvent<[ComponentContext<T>]>;\n  readonly readNotifier: AfterEvent<[ComponentNotifier<T>]>;\n\n  constructor() {\n\n    const currentRev = trackValue(0);\n    const created = new EventEmitter<[ComponentContext<T>, number]>();\n\n    this.onCreated = onEventBy(receiver => {\n\n      const receiverRev = currentRev.it + 1;\n\n      created.on({\n        supply: receiver.supply,\n        receive: (eventContext, componentContext, notifiedRev) => {\n          if (notifiedRev < receiverRev) {\n            // Notify only receivers added after the last notification\n            receiver.receive(\n                {\n                  onRecurrent(recurrentReceiver) {\n                    eventContext.onRecurrent(recurrentContext => recurrentReceiver(recurrentContext));\n                  },\n                },\n                componentContext,\n            );\n          }\n        },\n      });\n\n      ++currentRev.it;\n    });\n    this.readNotifier = currentRev.read.keep.thru_(\n        rev => (context, notifiedRev) => {\n          created.send(context, notifiedRev);\n          return rev;\n        },\n    );\n  }\n\n}\n\nexport type ComponentNotifier<T extends object> = (\n    this: void,\n    context: ComponentContext<T>,\n    notifiedRev: number,\n) => number;\n","import { nextArgs, nextSkip, noop } from 'call-thru';\nimport { ContextValues, ContextValueSpec, SingleContextKey, SingleContextRef } from 'context-values';\nimport { EventEmitter, eventSupply, EventSupply, OnEvent, trackValue, ValueTracker } from 'fun-events';\nimport { Class } from '../../common';\nimport {\n  ComponentContext as ComponentContext_,\n  ComponentContext__symbol,\n  ComponentDef,\n  ComponentEvent,\n  ComponentMount as ComponentMount_,\n} from '../../component';\nimport {\n  ComponentClass,\n  ComponentFactory as ComponentFactory_,\n  DefinitionContext as DefinitionContext_,\n  DefinitionSetup,\n  ElementDef,\n} from '../../component/definition';\nimport { BootstrapContext } from '../bootstrap-context';\nimport { bootstrapDefault } from '../bootstrap-default';\nimport { ComponentContextRegistry } from './component-context-registry.impl';\nimport { DefinitionContextRegistry } from './definition-context-registry.impl';\nimport { postDefSetup } from './post-def-setup.impl';\nimport { WhenComponent } from './when-component.impl';\n\n/**\n * @internal\n */\nexport interface ElementBuilder {\n  readonly definitions: EventEmitter<[DefinitionContext_]>;\n  readonly components: EventEmitter<[ComponentContext_]>;\n  buildElement<T extends object>(this: void, componentType: ComponentClass<T>): ComponentFactory_<T>;\n}\n\n/**\n * @internal\n */\nexport const ElementBuilder: SingleContextRef<ElementBuilder> = (/*#__PURE__*/ new SingleContextKey<ElementBuilder>(\n    'element-builder',\n    {\n      byDefault: bootstrapDefault(newElementBuilder),\n    },\n));\n\nfunction newElementBuilder(bsContext: BootstrapContext): ElementBuilder {\n\n  const definitionContextRegistry_global = bsContext.get(DefinitionContextRegistry);\n  const componentContextRegistry_global = bsContext.get(ComponentContextRegistry);\n  const definitions = new EventEmitter<[DefinitionContext_]>();\n  const components = new EventEmitter<[ComponentContext_]>();\n\n  return {\n    definitions,\n    components,\n    buildElement<T extends object>(componentType: ComponentClass<T>) {\n\n      const def = ComponentDef.of(componentType);\n      const whenComponent = new WhenComponent<T>();\n      let componentContextRegistry_perType!: ComponentContextRegistry;\n      const ready = trackValue(false);\n      const whenReady: OnEvent<[]> = ready.read.thru(cls => cls ? nextArgs() : nextSkip());\n      let definitionContext: DefinitionContext;\n\n      function createComponentContextRegistry() {\n        return componentContextRegistry_global.append(componentContextRegistry_perType);\n      }\n\n      class ComponentFactory extends ComponentFactory_ < T > {\n\n        get componentType() {\n          return definitionContext.componentType;\n        }\n\n        get elementType() {\n          return definitionContext.elementType;\n        }\n\n        get elementDef() {\n          return definitionContext.elementDef;\n        }\n\n        mountTo(element: any): ComponentMount_<T> {\n          if (element[ComponentContext__symbol]) {\n            throw new Error(`Element ${element} already bound to component`);\n          }\n\n          const mount = createComponent({\n            definitionContext,\n            whenComponent,\n            registry: createComponentContextRegistry(),\n            element,\n            elementSuper(key) {\n              return element[key];\n            },\n            createMount(context: ComponentContext_<T>) {\n\n              class ComponentMount extends ComponentMount_<T> {\n\n                get context() {\n                  return context;\n                }\n\n                get connected() {\n                  return elementStatus(element).it === ComponentStatus.On;\n                }\n\n                set connected(value: boolean) {\n                  elementStatus(element).it = value ? ComponentStatus.On : ComponentStatus.Off;\n                }\n\n                checkConnected(): boolean {\n\n                  const el: Element = element;\n                  const doc = el.ownerDocument;\n\n                  return this.connected = doc != null && doc.contains(el);\n                }\n\n              }\n\n              return new ComponentMount();\n            },\n          }).mount as ComponentMount_<T>;\n\n          mount.checkConnected();\n          componentCreated(mount.context);\n\n          return mount;\n        }\n\n      }\n\n      const componentFactory = new ComponentFactory();\n\n      class DefinitionContext extends DefinitionContext_<T> {\n\n        readonly get: ContextValues['get'];\n        readonly whenReady: OnEvent<[this]>;\n\n        get componentType() {\n          return componentType;\n        }\n\n        get whenComponent() {\n          return whenComponent.onCreated;\n        }\n\n        get elementType(): Class {\n          throw new Error('Custom element class is not constructed yet. Consider to use a `whenReady()` callback');\n        }\n\n        constructor() {\n          super();\n\n          const context = this;\n\n          this.whenReady = whenReady.thru_(() => this).once;\n\n          const definitionContextRegistry =\n              new DefinitionContextRegistry(definitionContextRegistry_global.seedIn(this));\n\n          definitionContextRegistry.provide({ a: DefinitionContext_, is: this });\n          definitionContextRegistry.provide({ a: ComponentFactory_, is: componentFactory });\n          this.get = definitionContextRegistry.newValues().get;\n          componentContextRegistry_perType = new ComponentContextRegistry(definitionContextRegistry.seedIn(this));\n\n          const definitionSetup: DefinitionSetup<T> = {\n            get componentType() {\n              return componentType;\n            },\n            get whenReady() {\n              return context.whenReady;\n            },\n            get whenComponent() {\n              return context.whenComponent;\n            },\n            perDefinition(spec) {\n              return definitionContextRegistry.provide(spec);\n            },\n            perComponent(spec) {\n              return componentContextRegistry_perType.provide(spec);\n            },\n          };\n\n          def.setup?.(definitionSetup);\n          postDefSetup(componentType).setup(definitionSetup);\n        }\n\n        perComponent<Deps extends any[], Src, Seed>(\n            spec: ContextValueSpec<ComponentContext_<T>, any, Deps, Src, Seed>,\n        ): () => void {\n          return componentContextRegistry_perType.provide(spec);\n        }\n\n      }\n\n      definitionContext = new DefinitionContext();\n\n      def.define?.(definitionContext);\n      definitions.send(definitionContext);\n\n      const elementType = createElementType(\n          definitionContext,\n          whenComponent,\n          createComponentContextRegistry(),\n      );\n\n      Object.defineProperty(definitionContext, 'elementType', {\n        configurable: true,\n        enumerable: true,\n        value: elementType,\n      });\n\n      ready.it = true;\n\n      return componentFactory;\n    },\n  };\n\n  function createElementType<T extends object>(\n      definitionContext: DefinitionContext_<T>,\n      whenComponent: WhenComponent<T>,\n      componentContextRegistry: ComponentContextRegistry,\n  ) {\n\n    const elementDef = definitionContext.get(ElementDef);\n\n    class Element extends elementDef.extend.type {\n\n      // Component context reference\n      [ComponentContext__symbol]: ComponentContext_<T>;\n\n      constructor() {\n        super();\n\n        const context = createComponent({\n          definitionContext,\n          whenComponent,\n          registry: componentContextRegistry,\n          element: this,\n          createMount: noop,\n          elementSuper: (key) => {\n            // @ts-ignore\n            return super[key] as any;\n          },\n        });\n\n        componentCreated(context);\n      }\n\n      // noinspection JSUnusedGlobalSymbols\n      connectedCallback() {\n        elementStatus(this).it = ComponentStatus.On;\n      }\n\n      // noinspection JSUnusedGlobalSymbols\n      disconnectedCallback() {\n        elementStatus(this).it = ComponentStatus.Off;\n      }\n\n    }\n\n    return Element;\n  }\n\n  function createComponent<T extends object>(\n      {\n        definitionContext,\n        whenComponent,\n        registry,\n        element,\n        createMount,\n        elementSuper,\n      }: {\n        definitionContext: DefinitionContext_<T>;\n        whenComponent: WhenComponent<T>,\n        registry: ComponentContextRegistry;\n        element: any;\n        elementSuper(name: PropertyKey): any;\n        createMount(context: ComponentContext_<T>): ComponentMount_<T> | undefined;\n      },\n  ): ComponentContext_<T> {\n\n    const status = trackValue<ComponentStatus>(ComponentStatus.Building);\n    const destructionReason = trackValue<[any] | undefined>();\n\n    status.on(noop).whenOff(reason => destructionReason.it = [reason]);\n\n    const destroyed: OnEvent<[any]> = destructionReason.read.thru(reason => reason ? nextArgs(reason[0]) : nextSkip());\n    const whenDestroyed: OnEvent<[any]> = destroyed.once;\n\n    const whenOff: OnEvent<[]> = status.read.thru_(sts => sts === ComponentStatus.Off ? nextArgs() : nextSkip());\n    const whenOn: OnEvent<[EventSupply]> = status.read.thru_(\n        sts => {\n          if (sts !== ComponentStatus.On) {\n            return nextSkip();\n          }\n\n          const offSupply = eventSupply();\n\n          whenOff.once(() => offSupply.off());\n\n          return nextArgs(offSupply);\n        },\n    );\n\n    let mount: ComponentMount_<T> | undefined;\n    const values = registry.newValues();\n\n    class ComponentContext extends ComponentContext_<T> {\n\n      readonly get = values.get;\n      readonly elementSuper = elementSuper;\n      readonly whenReady: OnEvent<[this]>;\n\n      constructor() {\n        super();\n\n        const whenReady: OnEvent<[this]> = status.read.thru(sts => sts ? nextArgs(this) : nextSkip());\n\n        this.whenReady = whenReady.once;\n      }\n\n      get componentType() {\n        return definitionContext.componentType;\n      }\n\n      get element() {\n        return element;\n      }\n\n      get component(): T {\n        throw new Error('The component is not constructed yet. Consider to use a `whenReady()` callback');\n      }\n\n      get mount(): ComponentMount_<T> | undefined {\n        return mount || (mount = createMount(this));\n      }\n\n      get connected(): boolean {\n        return status.it === ComponentStatus.On;\n      }\n\n      get whenOn(): OnEvent<[EventSupply]> {\n        return whenOn;\n      }\n\n      get whenOff(): OnEvent<[]> {\n        return whenOff;\n      }\n\n      get whenDestroyed() {\n        return whenDestroyed;\n      }\n\n      destroy(reason?: any): void {\n        status.done(reason);\n      }\n\n    }\n\n    const context = new ComponentContext();\n    let lastRev = 0;\n\n    context.whenDestroyed(() => removeElement(context));\n    registry.provide({ a: ComponentContext_, is: context });\n\n    augmentElement();\n\n    whenComponent.readNotifier.once(notifier => lastRev = notifier(context, lastRev));\n    context.whenOn(supply => {\n      whenComponent.readNotifier({\n        supply,\n        receive(_, notifier) {\n          lastRev = notifier(context, lastRev);\n        },\n      });\n    });\n    components.send(context);\n\n    const component = newComponent(definitionContext.componentType, context);\n\n    Object.defineProperty(context, 'component', {\n      configurable: true,\n      enumerable: true,\n      value: component,\n    });\n\n    status.it = ComponentStatus.Ready;\n\n    return context;\n\n    function augmentElement() {\n      Object.defineProperty(element, ComponentContext__symbol, { value: context });\n      Object.defineProperty(element, ComponentStatus__symbol, { writable: true, value: status });\n    }\n  }\n\n}\n\n/**\n * Creates new component of the given type.\n *\n * It makes component context available under `[ComponentContext__symbol]` key in constructed component.\n * The component context is also available inside component constructor by temporarily assigning it to component\n * prototype.\n *\n * @typeparam T  A type of component.\n * @param type  Component class constructor.\n * @param context  Target component context.\n */\nfunction newComponent<T extends object>(type: ComponentClass<T>, context: ComponentContext_<T>): T {\n\n  const proto = type.prototype as any;\n  const prevContext = proto[ComponentContext__symbol];\n\n  proto[ComponentContext__symbol] = context;\n  try {\n\n    const component = new type(context);\n\n    Object.defineProperty(component, ComponentContext__symbol, { value: context });\n\n    return component;\n  } finally {\n    proto[ComponentContext__symbol] = prevContext;\n  }\n}\n\nconst enum ComponentStatus {\n  Building,\n  Ready,\n  Off,\n  On,\n}\n\nconst ComponentStatus__symbol = (/*#__PURE__*/ Symbol('component-status'));\n\nfunction elementStatus(element: any): ValueTracker<ComponentStatus> {\n  return element[ComponentStatus__symbol];\n}\n\nfunction componentCreated(context: ComponentContext_) {\n  context.dispatchEvent(new ComponentEvent('wesib:component', { bubbles: true }));\n}\n\nfunction removeElement(context: ComponentContext_) {\n\n  const { element, mount } = context;\n\n  if (mount) {\n    mount.connected = false; // Disconnect mounted element\n  }\n\n  const parentNode: Element = element.parentElement;\n\n  if (parentNode) {\n    parentNode.removeChild(element);\n  }\n}\n","import { itsEach, overArray } from 'a-iterable';\nimport { noop, valueProvider } from 'call-thru';\nimport { EventSupply, eventSupply } from 'fun-events';\n\n/**\n * @internal\n */\nexport interface Unloader {\n  readonly supply: EventSupply;\n  add(adder: () => () => void): () => void;\n}\n\nconst doNotAdd = valueProvider(noop);\n\n/**\n * @internal\n */\nexport function newUnloader(): Unloader {\n\n  const unloads: (() => void)[] = [];\n  let add = (adder: () => () => void) => {\n\n    const unload = adder();\n\n    unloads.push(unload);\n\n    return unload;\n  };\n  const supply = eventSupply(() => {\n    add = doNotAdd;\n    itsEach(\n        overArray(unloads).reverse(),\n        unload => unload(),\n    );\n    unloads.length = 0;\n  });\n\n  return {\n    supply,\n    add(adder) {\n      return add(adder);\n    },\n  };\n}\n","import { ElementBuilder } from '../../boot/impl';\nimport { ComponentFactory__symbol } from '../../boot/impl/component-factory.symbol.impl';\nimport { ComponentClass, CustomElements } from '../../component/definition';\nimport { FeatureContext } from '../feature-context';\n\n/**\n * @internal\n */\nexport class ComponentRegistry {\n\n  private _definitionQueue: (() => void)[] = [];\n\n  constructor(private readonly _context: FeatureContext) {\n    _context.whenReady(() => {\n      this._definitionQueue.forEach(definition => definition());\n      delete this._definitionQueue;\n    });\n  }\n\n  get customElements(): CustomElements {\n    return this._context.get(CustomElements);\n  }\n\n  define<T extends object>(componentType: ComponentClass<T>) {\n    this._definitionQueue.push(() => {\n\n      const elementBuilder = this._context.get(ElementBuilder);\n      const factory = elementBuilder.buildElement(componentType);\n\n      (componentType as any)[ComponentFactory__symbol] = factory;\n\n      this.customElements.define(componentType, factory.elementType);\n    });\n  }\n\n}\n","import { filterIt, mapIt } from 'a-iterable';\nimport { isPresent, NextArgs, nextArgs, NextSkip, nextSkip } from 'call-thru';\nimport { ContextRegistry, ContextUpKey, ContextValueOpts, ContextValues, ContextValueSpec } from 'context-values';\nimport {\n  afterAll,\n  afterEach,\n  AfterEvent,\n  afterEventBy,\n  afterThe,\n  EventKeeper,\n  EventSupply,\n  OnEvent,\n  trackValue,\n} from 'fun-events';\nimport { BootstrapContext } from '../../boot';\nimport {\n  BootstrapContextRegistry,\n  ComponentContextRegistry,\n  DefinitionContextRegistry,\n  ElementBuilder,\n  newUnloader,\n  onPostDefSetup,\n} from '../../boot/impl';\nimport { ArraySet, Class } from '../../common';\nimport { ComponentContext } from '../../component';\nimport { ComponentClass, DefinitionContext, DefinitionSetup } from '../../component/definition';\nimport { FeatureContext } from '../feature-context';\nimport { ComponentRegistry } from './component-registry.impl';\nimport { FeatureClause, FeatureRequest } from './feature-request.impl';\n\nconst FeatureKey__symbol = (/*#__PURE__*/ Symbol('feature-key'));\n\n/**\n * @internal\n */\nexport class FeatureKey extends ContextUpKey<AfterEvent<[FeatureLoader?]>, FeatureClause> {\n\n  static of(feature: Class): FeatureKey {\n    return feature.hasOwnProperty(FeatureKey__symbol)\n        ? (feature as any)[FeatureKey__symbol]\n        : ((feature as any)[FeatureKey__symbol] = new FeatureKey(feature));\n  }\n\n  private constructor(feature: Class) {\n    super(`feature:${feature.name}`);\n  }\n\n  grow<Ctx extends ContextValues>(\n      opts: ContextValueOpts<\n          Ctx,\n          AfterEvent<[FeatureLoader?]>,\n          EventKeeper<FeatureClause[]> | FeatureClause,\n          AfterEvent<FeatureClause[]>>,\n  ): AfterEvent<[FeatureLoader?]> | null | undefined {\n    return loadFeature(\n        opts.context.get(BootstrapContext),\n        opts.seed.keep.thru(preferredFeatureClause),\n    );\n  }\n\n}\n\nfunction preferredFeatureClause(...clauses: FeatureClause[]): FeatureClause | undefined {\n\n  let required = false;\n  let preferred: FeatureClause | undefined;\n\n  for (const clause of clauses) {\n    switch (clause[1]) {\n      case 'is':\n        required = true;\n        if (!preferred) {\n          preferred = clause;\n        }\n        break;\n      case 'has':\n        preferred = clause;\n        break;\n      case 'needs':\n        required = true;\n    }\n  }\n\n  return required ? preferred : undefined;\n}\n\nfunction loadFeature(\n    bsContext: BootstrapContext,\n    from: AfterEvent<[FeatureClause?]>,\n): AfterEvent<[FeatureLoader?]> {\n  return afterEventBy<[FeatureLoader?]>(receiver => {\n\n    let origin: Class | undefined;\n    let source: OnEvent<[FeatureLoader?]> = afterThe();\n    let stageId: Promise<FeatureStageId> = Promise.resolve('idle');\n\n    return afterAll({\n      clause: from,\n      deps: loadFeatureDeps(bsContext, from),\n    }).dig_(({ clause: [clause], deps }) => {\n      if (!clause) {\n        return afterThe();\n      }\n\n      const [request, , target] = clause;\n\n      if (request.feature === origin) {\n        return source; // Origin didn't change. Reuse the source.\n      }\n\n      origin = request.feature;\n\n      if (target !== origin) {\n        // Originated from replacement feature provider. Reuse its loader.\n        return source = bsContext.get(FeatureKey.of(origin)).thru_(\n            loader => {\n              loader!.to(stageId);\n              stageId = loader!.stage;\n              return loader;\n            },\n        );\n      }\n\n      // Create feature's own loader\n      const ownLoader = new FeatureLoader(bsContext, request, deps).to(stageId);\n      const ownSource = afterThe(ownLoader);\n\n      return source = afterEventBy<[FeatureLoader]>(\n          rcv => ownSource(rcv).whenOff(() => {\n            stageId = ownLoader.unload();\n          }),\n      ).share(); // Can be accessed again when reused\n    })(receiver);\n  }).keep.thru(\n      preventDuplicateLoader(),\n  );\n}\n\nfunction preventDuplicateLoader():\n    <NextReturn>(\n        loader?: FeatureLoader,\n    ) => NextArgs<[FeatureLoader?], NextReturn> | NextSkip<[FeatureLoader?], NextReturn> {\n\n  let lastLoader: FeatureLoader | null | undefined = null; // Initially `null` to differ from `undefined`\n\n  return <NextReturn>(loader?: FeatureLoader) => {\n    if (lastLoader === loader) {\n      return nextSkip();\n    }\n    lastLoader = loader;\n\n    if (!loader) {\n      return nextArgs<[FeatureLoader?], NextReturn>();\n    }\n\n    return nextArgs<[FeatureLoader?], NextReturn>(loader);\n  };\n}\n\nfunction loadFeatureDeps(\n    bsContext: BootstrapContext,\n    from: AfterEvent<[FeatureClause?]>,\n): AfterEvent<FeatureLoader[]> {\n  return from.keep.dig_(clause => {\n    if (!clause) {\n      return afterThe();\n    }\n\n    const [{ def }] = clause;\n    const needs = new ArraySet(def.needs);\n\n    if (!needs.size) {\n      return afterThe();\n    }\n\n    return afterEach(...needs.map(dep => bsContext.get(FeatureKey.of(dep))))\n        .keep.thru_(presentFeatureDeps);\n  });\n}\n\nfunction presentFeatureDeps<NextReturn>(...deps: [FeatureLoader?][]): NextArgs<FeatureLoader[], NextReturn> {\n  return nextArgs<FeatureLoader[], NextReturn>(\n      ...filterIt<FeatureLoader | undefined, FeatureLoader>(\n          mapIt(deps, dep => dep[0]),\n          isPresent,\n      ),\n  );\n}\n\n/**\n * @internal\n */\nexport class FeatureLoader {\n\n  readonly down: Promise<void>;\n  private _stage: Promise<FeatureStage>;\n  private _down!: () => void;\n  readonly state = trackValue(false);\n\n  constructor(\n      readonly bsContext: BootstrapContext,\n      readonly request: FeatureRequest,\n      readonly deps: FeatureLoader[],\n  ) {\n    this.down = new Promise(resolve => this._down = resolve);\n    this._stage = Promise.resolve(new SetupFeatureStage(this));\n  }\n\n  get stage(): Promise<FeatureStageId> {\n    return this._stage.then(stage => stage.after);\n  }\n\n  get ready(): boolean {\n    return this.state.it;\n  }\n\n  to(stageId: Promise<FeatureStageId>): this {\n\n    const lastStage = this._stage;\n\n    this._stage = stageId.then(id => lastStage.then(stage => stage[id]()));\n\n    return this;\n  }\n\n  async setup(): Promise<void> {\n    await (this._stage = this._stage.then(stage => stage.setup()));\n  }\n\n  async init(): Promise<void> {\n    await (this._stage = this._stage.then(stage => stage.init()));\n  }\n\n  async unload(): Promise<FeatureStageId> {\n\n    const prevStage = this._stage;\n\n    delete this._stage; // Unloaded feature should never be accessed again.\n\n    const stage = await prevStage;\n    const stageId = await stage.stop();\n\n    this._down();\n\n    return stageId;\n  }\n\n}\n\ntype FeatureStageId = 'idle' | 'setup' | 'init';\ntype FeatureStageStop = (this: void) => Promise<any>;\n\nabstract class FeatureStage {\n\n  abstract readonly after: FeatureStageId;\n\n  constructor(\n      readonly loader: FeatureLoader,\n      private readonly _stop: FeatureStageStop = () => Promise.resolve(),\n  ) {}\n\n  async idle(): Promise<this> {\n    return this;\n  }\n\n  abstract setup(): Promise<FeatureStage>;\n\n  abstract init(): Promise<FeatureStage>;\n\n  stop(): Promise<FeatureStageId> {\n    return this._stop().then(() => this.after);\n  }\n\n  protected perDep(action: (dep: FeatureLoader) => Promise<void>): Promise<any> {\n\n    const { deps } = this.loader;\n\n    return Promise.all(deps.map(dep => action(dep)));\n  }\n\n}\n\nclass SetupFeatureStage extends FeatureStage {\n\n  get after() {\n    return 'idle' as const;\n  }\n\n  async setup(): Promise<FeatureStage> {\n    await this.perDep(loader => loader.setup());\n\n    const { bsContext, request: { def } } = this.loader;\n    const [context, supply] = newFeatureContext(bsContext, this.loader);\n\n    def.setup?.(context);\n\n    return new InitFeatureStage(\n        this.loader,\n        context,\n        async () => supply.off(),\n    );\n  }\n\n  init(): Promise<FeatureStage> {\n    return this.setup().then(stage => stage.init());\n  }\n\n}\n\nclass InitFeatureStage extends FeatureStage {\n\n  get after() {\n    return 'setup' as const;\n  }\n\n  constructor(\n      state: FeatureLoader,\n      private readonly _context: FeatureContext,\n      stop: FeatureStageStop,\n  ) {\n    super(state, stop);\n  }\n\n  async setup(): Promise<FeatureStage> {\n    return this;\n  }\n\n  async init(): Promise<FeatureStage> {\n    await this.perDep(loader => loader.init());\n\n    const { request: { def } } = this.loader;\n\n    def.init?.(this._context);\n\n    return new ActiveFeatureStage(this);\n  }\n\n}\n\nclass ActiveFeatureStage extends FeatureStage {\n\n  get after() {\n    return 'init' as const;\n  }\n\n  constructor(prev: InitFeatureStage) {\n    super(prev.loader, () => prev.stop());\n    prev.loader.state.it = true;\n  }\n\n  async setup(): Promise<FeatureStage> {\n    return this;\n  }\n\n  async init(): Promise<FeatureStage> {\n    return this;\n  }\n\n}\n\nfunction newFeatureContext(\n    bsContext: BootstrapContext,\n    loader: FeatureLoader,\n): [FeatureContext, EventSupply] {\n\n  const unloader = newUnloader();\n  let componentRegistry: ComponentRegistry;\n  const definitionContextRegistry = bsContext.get(DefinitionContextRegistry);\n  const componentContextRegistry = bsContext.get(ComponentContextRegistry);\n  const registry = new ContextRegistry<FeatureContext>(bsContext);\n  const elementBuilder = bsContext.get(ElementBuilder);\n  const onDefinition = elementBuilder.definitions.on.tillOff(unloader.supply);\n  const onComponent = elementBuilder.components.on.tillOff(unloader.supply);\n\n  class Context extends FeatureContext {\n\n    readonly get = registry.newValues().get;\n    readonly whenReady: OnEvent<[FeatureContext]>;\n\n    constructor() {\n      super();\n\n      const whenReady: OnEvent<[FeatureContext]> = afterAll({\n        st: loader.state,\n        bs: trackValue<BootstrapContext>().by(bsContext.whenReady),\n      }).thru(\n          ({ st: [ready], bs: [bs] }) => bs && ready ? nextArgs(this) : nextSkip(),\n      );\n\n      this.whenReady = whenReady.once;\n      registry.provide({ a: FeatureContext, is: this });\n      componentRegistry = new ComponentRegistry(this);\n    }\n\n    get feature() {\n      return loader.request.feature;\n    }\n\n    get onDefinition() {\n      return onDefinition;\n    }\n\n    get onComponent() {\n      return onComponent;\n    }\n\n    provide<Deps extends any[], Src, Seed>(\n        spec: ContextValueSpec<BootstrapContext, any, Deps, Src, Seed>,\n    ): () => void {\n      return unloader.add(() => bsContext.get(BootstrapContextRegistry).provide(spec));\n    }\n\n    perDefinition<Deps extends any[], Src, Seed>(\n        spec: ContextValueSpec<DefinitionContext, any, Deps, Src, Seed>,\n    ): () => void {\n      return unloader.add(() => definitionContextRegistry.provide(spec));\n    }\n\n    perComponent<Deps extends any[], Src, Seed>(\n        spec: ContextValueSpec<ComponentContext, any, Deps, Src, Seed>,\n    ): () => void {\n      return unloader.add(() => componentContextRegistry.provide(spec));\n    }\n\n    setupDefinition<T extends object>(componentType: ComponentClass<T>): OnEvent<[DefinitionSetup]> {\n      return onPostDefSetup(componentType, unloader);\n    }\n\n    define<T extends object>(componentType: ComponentClass<T>): void {\n      componentRegistry.define(componentType);\n    }\n\n  }\n\n  return [new Context(), unloader.supply];\n}\n","import { ArraySet, Class, mergeFunctions } from '../../common';\nimport { FeatureDef } from '../feature-def';\nimport { FeatureNeedsError } from '../feature-needs-error';\nimport { FeatureKey } from './feature-loader.impl';\nimport { FeatureRequester } from './feature-requester.impl';\n\n/**\n * @internal\n */\nexport type FeatureClause = [FeatureRequest, 'is' | 'needs' | 'has', Class];\n\n/**\n * @internal\n */\nexport type FeatureNeedClause = [FeatureRequest, 'needs' | 'has', Class];\n\n/**\n * @internal\n */\nexport class FeatureRequest {\n\n  readonly def: FeatureDef.Options;\n  private _uses = 0;\n\n  constructor(\n      private readonly _requester: FeatureRequester,\n      readonly feature: Class,\n      private _revoke: () => void,\n  ) {\n    this.def = FeatureDef.of(feature);\n  }\n\n  request(clauses: readonly FeatureNeedClause[]): this {\n\n    const requester = this._requester;\n    const { registry } = requester;\n    const isClause: FeatureClause = [this, 'is', this.feature];\n\n    this._revokeBy(registry.provide({\n      a: FeatureKey.of(this.feature),\n      is: isClause,\n    }));\n\n    new ArraySet(this.def.has).forEach(feature => {\n\n      const clause: FeatureNeedClause = [this, 'has', feature];\n\n      this._revokeBy(registry.provide({ a: FeatureKey.of(feature), is: clause }));\n\n      // Request the provided feature _after_ provider\n      const request = requester.request(feature, [...clauses, clause]);\n\n      this._revokeBy(() => request.unuse());\n    });\n\n    new ArraySet(this.def.needs).forEach(feature => {\n\n      const clause: FeatureNeedClause = [this, 'needs', feature];\n\n      const request = requester.request(feature, [...clauses, clause]);\n\n      this._revokeBy(() => request.unuse());\n      this._revokeBy(registry.provide({ a: FeatureKey.of(feature), is: clause }));\n    });\n\n    this._uses = 1;\n\n    return this;\n  }\n\n  reuse(clauses: readonly FeatureNeedClause[]): this {\n    if (!this._uses) {\n      throw new FeatureNeedsError(clauses.map(([{ feature }, reason, need]) => [feature, reason, need]));\n    }\n\n    ++this._uses;\n\n    return this;\n  }\n\n  unuse() {\n    if (!--this._uses) {\n      this._revoke();\n    }\n  }\n\n  private _revokeBy(revoke: () => void) {\n    this._revoke = mergeFunctions(revoke, this._revoke);\n  }\n\n}\n","import { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { BootstrapContext, bootstrapDefault } from '../../boot';\nimport { BootstrapContextRegistry } from '../../boot/impl';\nimport { Class } from '../../common';\nimport { FeatureNeedClause, FeatureRequest } from './feature-request.impl';\n\nconst FeatureRequester__key = (/*#__PURE__*/ new SingleContextKey<FeatureRequester>(\n    'feature-requester',\n    {\n      byDefault: bootstrapDefault(context => new FeatureRequester(context)),\n    },\n));\n\n/**\n * @internal\n */\nexport class FeatureRequester {\n\n  static get [ContextKey__symbol](): ContextKey<FeatureRequester> {\n    return FeatureRequester__key;\n  }\n\n  readonly registry: BootstrapContextRegistry;\n  private readonly _map = new Map<Class, FeatureRequest>();\n\n  constructor(context: BootstrapContext) {\n    this.registry = context.get(BootstrapContextRegistry);\n  }\n\n  request(feature: Class, clauses: readonly FeatureNeedClause[] = []): FeatureRequest {\n\n    const existing = this._map.get(feature);\n\n    if (existing) {\n      return existing.reuse(clauses);\n    }\n\n    const request = new FeatureRequest(this, feature, () => this._map.delete(feature));\n\n    this._map.set(feature, request);\n\n    return request.request(clauses);\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { nextArgs, nextSkip } from 'call-thru';\nimport { AfterEvent, afterEventBy, OnEvent, trackValue } from 'fun-events';\nimport { newNamespaceAliaser } from 'namespace-aliaser';\nimport { Class } from '../../common';\nimport { ComponentClass, CustomElements } from '../../component/definition';\nimport { FeatureDef, FeatureRef, FeatureStatus } from '../../feature';\nimport { FeatureKey, FeatureLoader, FeatureRequester } from '../../feature/loader';\nimport { BootstrapContext } from '../bootstrap-context';\nimport { DefaultNamespaceAliaser } from '../globals';\nimport { BootstrapContextRegistry } from '../impl';\nimport { componentFactoryOf } from '../impl/component-factory.symbol.impl';\n\n/**\n * Bootstraps components.\n *\n * Note that both features and components can be passed as parameters to this function, as components are features too.\n *\n * @category Core\n * @param features  Features and components to enable.\n *\n * @returns Bootstrap context instance.\n */\nexport function bootstrapComponents(...features: Class[]): BootstrapContext {\n\n  const bootstrapContextRegistry = BootstrapContextRegistry.create();\n  const { bootstrapContext, complete } = initBootstrap(bootstrapContextRegistry);\n  const feature = features.length === 1 ? features[0] : bootstrapFeature(features);\n\n  bootstrapContext.get(FeatureRequester).request(feature);\n  bootstrapContext.get(FeatureKey.of(feature))(loader => {\n    loader!.init().then(complete);\n  });\n\n  return bootstrapContext;\n}\n\nfunction bootstrapFeature(needs: Class[]): Class {\n  return FeatureDef.define(class BootstrapFeature {}, { needs });\n}\n\nfunction initBootstrap(bootstrapContextRegistry: BootstrapContextRegistry) {\n\n  const stage = trackValue<BootstrapStage>(BootstrapStage.Init);\n  const values = bootstrapContextRegistry.values;\n\n  class Context extends BootstrapContext {\n\n    readonly get = values.get;\n    readonly whenReady: OnEvent<[BootstrapContext]>;\n\n    constructor() {\n      super();\n\n      const whenReady: OnEvent<[BootstrapContext]> = stage.read.thru(\n          s => s ? nextArgs(this) : nextSkip(),\n      );\n\n      this.whenReady = whenReady.once;\n      bootstrapContextRegistry.provide({ a: DefaultNamespaceAliaser, by: newNamespaceAliaser });\n      bootstrapContextRegistry.provide({ a: BootstrapContext, is: this });\n    }\n\n    async whenDefined<C extends object>(componentType: ComponentClass<C>) {\n      await new Promise(resolve => this.whenReady(resolve));\n      await this.get(CustomElements).whenDefined(componentType);\n      return componentFactoryOf(componentType);\n    }\n\n    load(feature: Class<any>): FeatureRef {\n\n      interface FeatureInfo {\n        status: FeatureStatus;\n        down?: Promise<void>;\n      }\n\n      const status = afterEventBy<[FeatureInfo]>(receiver => {\n\n        const request = bootstrapContext.get(FeatureRequester).request(feature);\n        const info = trackValue<FeatureInfo>({\n          status: {\n            feature,\n            ready: false,\n          },\n        });\n\n        this.get(FeatureKey.of(feature))({\n          supply: receiver.supply,\n          receive(_ctx, ldr) {\n\n            // Present until `request` revoked\n            // But that happens only when supply is cut off.\n            const loader = ldr as FeatureLoader;\n\n            info.it = {\n              status: {\n                feature: loader.request.feature,\n                ready: loader.ready,\n              },\n              down: loader.down,\n            };\n            if (!loader.ready) {\n              loader.init().then(() => {\n                info.it = {\n                  status: {\n                    feature: loader.request.feature,\n                    ready: true,\n                  },\n                  down: loader.down,\n                };\n              });\n            }\n          },\n        }).whenOff(() => {\n          request.unuse(); // Apply this callback _after_ registration complete,\n                           // to prevent receiver call.\n        });\n\n        info.read(receiver);\n      }).share();\n\n      let whenDown: Promise<void>;\n      const supply = status(({ down }) => whenDown = down!);\n      const read: AfterEvent<[FeatureStatus]> =\n          status.keep.thru(info => info.status).tillOff(supply);\n\n      class Ref extends FeatureRef {\n\n        get read() {\n          return read;\n        }\n\n        get down() {\n          return whenDown;\n        }\n\n        dismiss(reason?: any) {\n          supply.off(reason);\n          return whenDown;\n        }\n\n      }\n\n      return new Ref();\n    }\n\n  }\n\n  const bootstrapContext = new Context();\n\n  return {\n    bootstrapContext,\n    complete() {\n      stage.it = BootstrapStage.Ready;\n    },\n  };\n}\n\nconst enum BootstrapStage {\n  Init,\n  Ready,\n}\n","/**\n * @module @wesib/wesib\n */\n/**\n * A path to sub-state containing element an attributes.\n *\n * Thus, an attribute state path is always something like `[AttributePath__root, 'attribute-name']`.\n *\n * @category Feature\n */\nexport const AttributePath__root = (/*#__PURE__*/ Symbol('attribute'));\n\n/**\n * A path to the named attribute state.\n *\n * @category Feature\n */\nexport type AttributePath = readonly [keyof AttributePath__root_Keys, string];\n\n/**\n * Constructs a named attribute state path.\n *\n * @category Feature\n * @param name  Target attribute name.\n *\n * @return Attribute state path.\n */\nexport function attributePathTo(name: string): AttributePath {\n  return [AttributePath__root, name];\n}\n\n/**\n * @category Feature\n */\n// tslint:disable-next-line:class-name\nexport interface AttributePath__root_Keys {\n  [AttributePath__root]: true;\n}\n","/**\n * @module @wesib/wesib\n */\nimport { noop } from 'call-thru';\nimport { StatePath } from 'fun-events';\nimport { ComponentContext } from '../../component';\nimport { AttributeUpdateReceiver } from './attribute-def';\nimport { AttributePath, attributePathTo } from './attribute-path';\nimport { AttributeChangedCallback } from './attribute-registrar';\n\n/**\n * @internal\n */\nexport function attributeStateUpdate<T extends object>(\n    name: string,\n    updateState: boolean | AttributeUpdateReceiver<T> | StatePath = true,\n): AttributeChangedCallback<T> {\n  if (updateState === false) {\n    return noop;\n  }\n  if (updateState === true || typeof updateState === 'function') {\n\n    const key = attributePathTo(name);\n    const update: AttributeUpdateReceiver<T> = updateState === true ? defaultUpdateState : updateState;\n\n    return function (this: T, newValue, oldValue) {\n      update.call(this, key, newValue, oldValue);\n    };\n  }\n  return function (this: T, newValue, oldValue) {\n    ComponentContext.of(this).updateState(updateState, newValue, oldValue);\n  };\n}\n\nfunction defaultUpdateState<T extends object>(\n    this: T,\n    path: AttributePath,\n    newValue: string,\n    oldValue: string | null,\n) {\n  ComponentContext.of(this).updateState(path, newValue, oldValue);\n}\n","import { ComponentClass } from '../../component/definition';\nimport { AttributeDef } from './attribute-def';\nimport { AttributeChangedCallback } from './attribute-registrar';\nimport { attributeStateUpdate } from './attribute-state-update.impl';\n\n/**\n * @internal\n */\nexport function parseAttributeDef<T extends ComponentClass>(\n    target: InstanceType<T>,\n    propertyKey: string | symbol,\n    opts?: AttributeDef<InstanceType<T>> | string,\n) {\n\n  let name: string;\n  let updateState: AttributeChangedCallback<InstanceType<T>>;\n\n  if (typeof opts === 'string') {\n    name = opts;\n    updateState = attributeStateUpdate(name);\n  } else {\n    if (opts && opts.name) {\n      name = opts.name;\n    } else if (typeof propertyKey !== 'string') {\n      throw new TypeError(\n          'Attribute name is required, as property key is not a string: ' +\n          `${target.constructor.name}.${propertyKey.toString()}`,\n      );\n    } else {\n      name = propertyKey;\n    }\n\n    updateState = attributeStateUpdate(name, opts && opts.updateState);\n  }\n\n  return { name, updateState };\n}\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\n\n/**\n * Custom element attribute change callback.\n *\n * This function is called whenever a new attribute value assigned.\n *\n * @category Feature\n * @typeparam T  A type of component.\n */\nexport type AttributeChangedCallback<T extends object = any> =\n/**\n * @param this  Component instance.\n * @param newValue  New attribute value.\n * @param oldValue  Previous attribute value, or `null` if there were no value assigned.\n */\n    (this: T, newValue: string, oldValue: string | null) => void;\n\n/**\n * @category Feature\n */\nexport type AttributeRegistrar<T extends object = any> = (name: string, callback: AttributeChangedCallback<T>) => void;\n\n/**\n * @category Feature\n */\nexport const AttributeRegistrar: SingleContextRef<AttributeRegistrar> =\n    (/*#__PURE__*/ new SingleContextKey<AttributeRegistrar>('attribute-registrar'));\n","import { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { BootstrapWindow } from '../../boot/globals';\nimport { Class, mergeFunctions } from '../../common';\nimport { ComponentContext, ComponentMount } from '../../component';\nimport { DefinitionContext } from '../../component/definition';\nimport { AttributeChangedCallback } from './attribute-registrar';\n\nconst AttributeRegistry__key = (/*#__PURE__*/ new SingleContextKey<AttributeRegistry>('attribute-registry'));\n\n/**\n * @internal\n */\nexport class AttributeRegistry<T extends object = any> {\n\n  static get [ContextKey__symbol](): ContextKey<AttributeRegistry> {\n    return AttributeRegistry__key;\n  }\n\n  private readonly _MutationObserver: typeof MutationObserver;\n  private readonly _attrs: { [name: string]: AttributeChangedCallback<T> } = {};\n\n  constructor(ctx: DefinitionContext) {\n    this._MutationObserver = ctx.get(BootstrapWindow).MutationObserver;\n  }\n\n  add(name: string, callback: AttributeChangedCallback<T>): void {\n    this._attrs[name] = mergeFunctions<[string, string | null], void, T>(this._attrs[name], callback);\n  }\n\n  define(elementType: Class) {\n\n    const attrs = this._attrs;\n    const observedAttributes = Object.keys(attrs);\n\n    if (!observedAttributes.length) {\n      return; // No attributes defined\n    }\n\n    Object.defineProperty(elementType, 'observedAttributes', {\n      configurable: true,\n      enumerable: true,\n      value: observedAttributes,\n    });\n    Object.defineProperty(elementType.prototype, 'attributeChangedCallback', {\n      configurable: true,\n      enumerable: true,\n      value: function (name: string, oldValue: string | null, newValue: string) {\n        (attrs[name] as any).call(ComponentContext.of(this).component, newValue, oldValue);\n      },\n    });\n  }\n\n  mount(mount: ComponentMount<T>) {\n\n    const element = mount.element;\n    const attrs = this._attrs;\n    const attributeFilter = Object.keys(attrs);\n\n    if (!attributeFilter.length) {\n      return; // No attributes defined\n    }\n\n    const observer = new this._MutationObserver(\n        records => records.forEach(\n            record => {\n\n              const attributeName = record.attributeName as string;\n\n              return (attrs[attributeName] as any).call(\n                  ComponentContext.of(element).component,\n                  element.getAttribute(attributeName),\n                  record.oldValue,\n              );\n            },\n        ),\n    );\n\n    observer.observe(element, {\n      attributes: true,\n      attributeFilter,\n      attributeOldValue: true,\n    });\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { FeatureDef, FeatureDef__symbol } from '../feature-def';\nimport { AttributeChangedCallback, AttributeRegistrar } from './attribute-registrar';\nimport { AttributeRegistry } from './attribute-registry.impl';\n\nconst AttributesSupport__feature: FeatureDef = {\n  setup(setup) {\n    setup.perDefinition({ as: AttributeRegistry });\n    setup.perDefinition({\n      a: AttributeRegistrar,\n      by(registry: AttributeRegistry) {\n        return <T extends object>(name: string, callback: AttributeChangedCallback<T>) =>\n            registry.add(name, callback);\n      },\n      with: [AttributeRegistry],\n    });\n    setup.onDefinition(definitionContext => {\n      // Define element prototype attributes\n      definitionContext.whenReady(({ elementType }) => definitionContext.get(AttributeRegistry).define(elementType));\n    });\n    setup.onComponent(componentContext => {\n\n      const mount = componentContext.mount;\n\n      if (mount) {\n        // Mount element attributes\n        componentContext.get(AttributeRegistry).mount(mount);\n      }\n    });\n  },\n};\n\n/**\n * A feature adding attributes to custom elements.\n *\n * This feature is enabled automatically whenever an `@Attribute`, `@Attributes`, or `@AttributeChanged` decorator\n * applied to component.\n *\n * @category Feature\n */\nexport class AttributesSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return AttributesSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { TypedPropertyDecorator } from '../../common';\nimport { ComponentContext, ComponentDef } from '../../component';\nimport { ComponentClass } from '../../component/definition';\nimport { FeatureDef } from '../feature-def';\nimport { AttributeDef } from './attribute-def';\nimport { parseAttributeDef } from './attribute-def.impl';\nimport { AttributeRegistrar } from './attribute-registrar';\nimport { AttributesSupport } from './attributes-support.feature';\n\n/**\n * Creates a decorator for component's property that accesses custom element's attribute.\n *\n * The decorated property accesses corresponding attribute on read, and updates it on setting.\n *\n * This decorator automatically enables [[AttributesSupport]] feature.\n *\n * @category Feature\n * @typeparam T  A type of decorated component class.\n * @param def  Attribute definition or just an attribute name.\n *\n * @return Component property decorator.\n */\nexport function Attribute<T extends ComponentClass>(\n    def?: AttributeDef<InstanceType<T>> | string,\n): TypedPropertyDecorator<T> {\n  return <V>(target: InstanceType<T>, propertyKey: string | symbol, descriptor?: TypedPropertyDescriptor<V>) => {\n\n    const { name, updateState } = parseAttributeDef(target, propertyKey, def);\n    const componentType = target.constructor as T;\n\n    FeatureDef.define(componentType, { needs: AttributesSupport });\n    ComponentDef.define(\n        componentType,\n        {\n          define(definitionContext) {\n            definitionContext.get(AttributeRegistrar)(name, updateState);\n          },\n        },\n    );\n\n    const newDesc: TypedPropertyDescriptor<string | null> = {\n      get(this: InstanceType<T>): string | null {\n        return ComponentContext.of(this).element.getAttribute(name);\n      },\n      set(this: InstanceType<T>, newValue: string | null) {\n        ComponentContext.of(this).element.setAttribute(name, newValue as string);\n      },\n    };\n\n    if (descriptor == null) {\n      // Annotated field\n      Object.defineProperty(target, propertyKey, newDesc);\n      return;\n    }\n\n    return newDesc;\n  };\n}\n","/**\n * @module @wesib/wesib\n */\nimport { TypedPropertyDecorator } from '../../common';\nimport { ComponentDef } from '../../component';\nimport { ComponentClass } from '../../component/definition';\nimport { FeatureDef } from '../feature-def';\nimport { AttributeDef } from './attribute-def';\nimport { parseAttributeDef } from './attribute-def.impl';\nimport { AttributeChangedCallback, AttributeRegistrar } from './attribute-registrar';\nimport { AttributesSupport } from './attributes-support.feature';\n\n/**\n * Creates a component method decorator for custom element attribute change callback.\n *\n * The decorated method should have up to two parameters:\n *\n * - the first one accepts new attribute value.\n * - the second one accepts old attribute value (or `null`),\n *\n * Example:\n * ```TypeScript\n * @Component('my-component')\n * class MyComponent {\n *\n *   @AttributeChanged('my-attribute')\n *   myAttributeChanged(newValue: string, oldValue: string | null) {\n *     console.log(`my-attribute value changed from ${oldValue} to ${newValue}`);\n *   }\n *\n * }\n * ```\n *\n * This decorator automatically enables [[AttributesSupport]] feature.\n *\n * @category Feature\n * @typeparam T  A type of decorated component class.\n * @param def  Attribute definition or just an attribute name.\n *\n * @return Component method decorator.\n */\nexport function AttributeChanged<T extends ComponentClass>(\n    def?: AttributeDef<InstanceType<T>> | string,\n): TypedPropertyDecorator<T> {\n  return (target: InstanceType<T>, propertyKey: string | symbol) => {\n\n    const { name, updateState } = parseAttributeDef(target, propertyKey, def);\n    const componentType = target.constructor as T;\n\n    FeatureDef.define(componentType, { needs: AttributesSupport });\n    ComponentDef.define(\n        componentType,\n        {\n          define(defContext) {\n            defContext.get(AttributeRegistrar)(name, function (\n                this: InstanceType<T>,\n                newValue: string,\n                oldValue: string | null,\n            ) {\n\n              const callback: AttributeChangedCallback<InstanceType<T>> = (this as any)[propertyKey];\n\n              callback.call(this, newValue, oldValue);\n              updateState.call(this, newValue, oldValue);\n            });\n          },\n        },\n    );\n  };\n}\n","/**\n * @module @wesib/wesib\n */\n/**\n * A path to sub-state containing DOM properties.\n *\n * Thus a property state path is always something like `[DomPropertyPath__root, 'property-name']`.\n *\n * @category Feature\n */\nexport const DomPropertyPath__root = (/*#__PURE__*/ Symbol('dom-property'));\n\n/**\n * A path to the named DOM property state.\n *\n * @category Feature\n */\nexport type DomPropertyPath<K extends PropertyKey = PropertyKey> = readonly [keyof DomPropertyPath__root_Keys, K];\n\n/**\n * Constructs a named DOM property state path.\n *\n * @category Feature\n * @param key  Target property key.\n *\n * @return DOM property state path.\n */\nexport function domPropertyPathTo<K extends PropertyKey = PropertyKey>(key: K): DomPropertyPath<K> {\n  return [DomPropertyPath__root, key];\n}\n\n/**\n * @category Feature\n */\n// tslint:disable-next-line:class-name\nexport interface DomPropertyPath__root_Keys {\n  [DomPropertyPath__root]: true;\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { StateTracker } from 'fun-events';\n\nconst ComponentState__key = (/*#__PURE__*/ new SingleContextKey<ComponentState>('component-state'));\n\n/**\n * Component state tracker.\n *\n * @category Feature\n */\nexport class ComponentState extends StateTracker {\n\n  static get [ContextKey__symbol](): ContextKey<ComponentState> {\n    return ComponentState__key;\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ComponentContext, StateUpdater } from '../../component';\nimport { FeatureDef, FeatureDef__symbol } from '../feature-def';\nimport { ComponentState } from './component-state';\n\nconst StateSupport__feature: FeatureDef = {\n  setup(setup) {\n    setup.perComponent({\n      a: ComponentState,\n      by(context: ComponentContext) {\n\n        const state = new ComponentState();\n\n        context.whenDestroyed(reason => state.done(reason));\n\n        return state;\n      },\n    });\n    setup.perComponent({\n      a: StateUpdater,\n      by(state: ComponentState) {\n        return state.update;\n      },\n      with: [ComponentState],\n    });\n  },\n};\n\n/**\n * Component state support feature.\n *\n * When enabled, it registers the following component context values:\n *\n * - [[StateUpdater]] that allows to update the component state, and\n * - [[ComponentState]] that allows to track component state changes.\n *\n * Other features would use this to notify when the state changes. E.g. [[DomPropertiesSupport]]\n * and [[AttributesSupport]] features issue state updates when needed.\n *\n * @category Feature\n */\nexport class StateSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return StateSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\n\nconst RenderScheduler__key = (/*#__PURE__*/ new SingleContextKey<RenderScheduler>('render-scheduler'));\n\n/**\n * Rendering scheduler.\n *\n * Schedules components rendering in order to make it less often. E.g. by utilizing `requestAnimationFrame()`.\n *\n * @category Feature\n */\nexport abstract class RenderScheduler {\n\n  /**\n   * A key of bootstrap, definition, or component context value containing [[RenderScheduler]] instance.\n   */\n  static get [ContextKey__symbol](): ContextKey<RenderScheduler> {\n    return RenderScheduler__key;\n  }\n\n  /**\n   * Creates new render schedule.\n   *\n   * @returns New render schedule instance.\n   */\n  abstract newSchedule(): RenderSchedule;\n\n}\n\n/**\n * Render schedule.\n *\n * @category Feature\n */\nexport interface RenderSchedule {\n\n  /**\n   * Schedules component rendering.\n   *\n   * Only the latest rendering request has affect. I.e. if multiple rendering have been scheduled then the rendering\n   * will be performed by the latest one.\n   *\n   * @param render  A rendering function.\n   */\n  schedule(render: (this: void) => void): void;\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ComponentContext } from '../../component';\nimport { ComponentState } from '../state';\nimport { RenderDef } from './render-def';\nimport { RenderScheduler } from './render-scheduler';\n\n/**\n * Component element render function interface.\n *\n * It has no arguments. It may return either nothing, or a function. In the latter case the returned function will be\n * called immediately to render the element. It may, in turn, return a render function, and so on.\n *\n * @category Feature\n */\nexport type ElementRender =\n/**\n * @returns Either delegated render, or nothing.\n */\n    (this: void) => void | ElementRender;\n\n/**\n * @category Feature\n */\nexport const ElementRender = {\n\n  /**\n   * Enables component element rendering.\n   *\n   * The `render` call will be scheduled by [[RenderScheduler]] once component state updated.\n   *\n   * @param context  Target component context.\n   * @param render  Element render function.\n   * @param def  Optional element render definition.\n   */\n  render(\n      this: void,\n      context: ComponentContext,\n      render: ElementRender,\n      def: RenderDef = {},\n  ): void {\n\n    const { offline, path = [] } = def;\n    const stateTracker = context.get(ComponentState).track(path);\n    const schedule = context.get(RenderScheduler).newSchedule();\n\n    let rendered = false;\n    const stateSupply = stateTracker.onUpdate(() => {\n      if (offline || context.connected) {\n        scheduleRender();\n      } else {\n        rendered = false;\n      }\n    });\n\n    if (offline) {\n      scheduleRender();\n    } else {\n      context.whenOn(() => {\n        if (!rendered) {\n          scheduleRender();\n        }\n      }).whenOff(reason => {\n        stateSupply.off(reason);\n        rendered = true;\n      });\n    }\n\n    function scheduleRender() {\n      rendered = true;\n      schedule.schedule(renderElement);\n    }\n\n    function renderElement() {\n      for (;;) {\n\n        const newRender = render();\n\n        if (newRender === render || typeof newRender !== 'function') {\n          break;\n        }\n\n        render = newRender;\n      }\n    }\n  },\n\n};\n","/**\n * @module @wesib/wesib\n */\nimport { noop } from 'call-thru';\nimport { BootstrapWindow } from '../../boot/globals';\nimport { FeatureDef, FeatureDef__symbol } from '../feature-def';\nimport { RenderSchedule as RenderSchedule_, RenderScheduler as RenderScheduler_ } from './render-scheduler';\n\nconst RenderSupport__feature: FeatureDef = {\n  setup(setup) {\n    setup.provide({\n      a: RenderScheduler_,\n      by: createRenderScheduler,\n      with: [BootstrapWindow],\n    });\n  },\n};\n\n/**\n * Rendering support feature.\n *\n * This feature is automatically enabled when {@link Render @Render} decorator is used.\n *\n * @category Feature\n */\nexport class RenderSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return RenderSupport__feature;\n  }\n\n}\n\nfunction createRenderScheduler(window: BootstrapWindow) {\n\n  class RenderScheduler extends RenderScheduler_ {\n\n    newSchedule() {\n\n      let scheduled: () => void = noop;\n\n      class RenderSchedule implements RenderSchedule_ {\n\n        schedule(render: (this: void) => void): void {\n\n          const previouslyScheduled = scheduled;\n\n          scheduled = render;\n          if (previouslyScheduled === noop) {\n            window.requestAnimationFrame(() => {\n              scheduled();\n              scheduled = noop;\n            });\n          }\n        }\n\n      }\n\n      return new RenderSchedule();\n    }\n  }\n\n  return new RenderScheduler();\n}\n","/**\n * @module @wesib/wesib\n */\nimport { TypedPropertyDecorator } from '../../common';\nimport { ComponentDef } from '../../component';\nimport { ComponentClass } from '../../component/definition';\nimport { StateSupport } from '../state';\nimport { ElementRender } from './element-render';\nimport { RenderDef } from './render-def';\nimport { RenderSupport } from './render-support.feature';\n\n/**\n * Component property decorator that declares a rendering method for the component.\n *\n * The decorated method call will be scheduled by [[RenderScheduler]] once component state updated.\n *\n * The decorated method should have no arguments. It may return either nothing, or a function. In the latter case the\n * returned function will be called immediately to render the element. It may, in turn, return a renderer function,\n * and so on.\n *\n * This decorator automatically enables [[StateSupport]] and [[RenderSupport]] features.\n *\n * Utilizes [[ElementRender.render]] function to define rendering.\n *\n * @category Feature\n * @typeparam T  A type of decorated component class.\n * @param def  Non-mandatory render definition.\n *\n * @returns Component method decorator.\n */\nexport function Render<T extends ComponentClass>(def?: RenderDef): TypedPropertyDecorator<T> {\n  return (target: InstanceType<T>, propertyKey: string | symbol) => {\n\n    const componentType = target.constructor as T;\n\n    ComponentDef.define(\n        componentType,\n        {\n          define(defContext) {\n            defContext.whenComponent(componentContext => {\n              componentContext.whenReady(() => {\n\n                const component = componentContext.component as any;\n                const render: () => any = component[propertyKey].bind(component);\n\n                ElementRender.render(componentContext, render, def);\n              });\n            });\n          },\n          feature: {\n            needs: [StateSupport, RenderSupport],\n          },\n        },\n    );\n  };\n}\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\n\n/**\n * Component shadow content root.\n *\n * @category Feature\n */\nexport type ShadowContentRoot = ShadowRoot;\n\n/**\n * A key of component context value containing a shadow content root instance.\n *\n * This is only available when the component is decorated with {@link AttachShadow @AttachShadow} decorator.\n *\n * @category Feature\n */\nexport const ShadowContentRoot: SingleContextRef<ShadowContentRoot> =\n    (/*#__PURE__*/ new SingleContextKey<ShadowContentRoot>('shadow-content-root'));\n","/**\n * @module @wesib/wesib\n */\n/**\n * An event related to element's shadow DOM.\n *\n * The following event types supported:\n * - `wesib:shadowAttached` is thrown when a shadow root is attached to element.\n *   In particular, it is thrown for components decorated with {@link AttachShadow @AttachShadow}.\n *   This event bubbles and is not cancelable.\n *\n * @category Feature\n */\nexport class ShadowDomEvent extends Event {\n\n  /**\n   * Constructs shadow DOM event.\n   *\n   * @param type  Event type.\n   * @param eventInitDict  Event initialization dictionary.\n   */\n  constructor(type: string, eventInitDict?: EventInit) {\n    super(type, eventInitDict);\n  }\n\n  /**\n   * Shadow root this event relates to.\n   */\n  get shadowRoot(): ShadowRoot {\n    return (this.target as Element).shadowRoot as ShadowRoot;\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { FnContextKey, FnContextRef } from 'context-values';\nimport { ComponentContext } from '../../component';\nimport { ShadowContentDef } from './shadow-content-def';\n\n/**\n * Shadow root builder function type.\n *\n * An instance of this function is available in component context and is used by {@link AttachShadow @AttachShadow}\n * decorator to attach shadow root to decorated component's custom element.\n *\n * By default, if shadow root already exists for the component's element, it uses it.\n *\n * Dispatches a `wesib:shadowAttached` event for the found or attached shadow root.\n *\n * @category Feature\n */\nexport type ShadowRootBuilder =\n/**\n * @param context  Target component context.\n * @param init  Shadow root initialization options.\n *\n * @returns A shadow root instance for target component, or `null`/`undefined` if one can not be attached.\n */\n    (context: ComponentContext<any>, init: ShadowContentDef) => ShadowRoot | null | undefined;\n\n/**\n * A key of component context value containing a shadow root builder instance.\n *\n * @category Feature\n */\nexport const ShadowRootBuilder: FnContextRef<Parameters<ShadowRootBuilder>, ReturnType<ShadowRootBuilder>> =\n    (/*#__PURE__*/ new FnContextKey<Parameters<ShadowRootBuilder>, ReturnType<ShadowRootBuilder>>(\n        'shadow-root-builder',\n    ));\n","/**\n * @module @wesib/wesib\n */\nimport { ComponentContext, ComponentContext__symbol } from '../../component';\nimport { FeatureDef, FeatureDef__symbol } from '../feature-def';\nimport { ShadowDomEvent } from './shadow-dom-event';\nimport { ShadowRootBuilder } from './shadow-root-builder';\n\nconst ShadowDomSupport__feature: FeatureDef = {\n  setup(setup) {\n    setup.provide({ a: ShadowRootBuilder, is: attachShadow });\n  },\n};\n\n/**\n * Shadow root support feature.\n *\n * This feature is automatically enabled when {@link AttachShadow @AttachShadow} decorator is used.\n *\n * @category Feature\n */\nexport class ShadowDomSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return ShadowDomSupport__feature;\n  }\n\n}\n\nfunction attachShadow(context: ComponentContext, init: ShadowRootInit): ShadowRoot | undefined {\n\n  const element = context.element;\n  const shadowRoot = shadowRootOf(element, init);\n\n  if (shadowRoot) {\n    (shadowRoot as any)[ComponentContext__symbol] = context;\n    context.dispatchEvent(new ShadowDomEvent('wesib:shadowAttached', { bubbles: true }));\n    return shadowRoot;\n  }\n\n  return;\n}\n\nfunction shadowRootOf(element: Element, init: ShadowRootInit): ShadowRoot | undefined {\n\n  const existing = element.shadowRoot;\n\n  if (existing) {\n    // Shadow root already attached. Using it.\n    return existing;\n  }\n  if ('attachShadow' in element) {\n    return element.attachShadow(init);\n  }\n\n  return; // Unable to attach shadow root.\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ComponentContext, ComponentDef, ContentRoot } from '../../component';\nimport { ShadowContentRoot } from './shadow-content-root';\nimport { ShadowDomSupport } from './shadow-dom-support.feature';\nimport { ShadowRootBuilder } from './shadow-root-builder';\n\n/**\n * Shadow content root definition.\n *\n * This is a readonly component shadow root initialization options.\n *\n * @category Feature\n */\nexport type ShadowContentDef = Readonly<ShadowRootInit>;\n\nconst defaultShadowContentDef: ShadowContentDef = { mode: 'open' };\n\n/**\n * @category Feature\n */\nexport const ShadowContentDef = {\n\n  /**\n   * Creates component definition for the given shadow content root definition.\n   *\n   * The returned component definition enables [[ShadowDomSupport]] feature and attaches shadow content root to the\n   * component.\n   *\n   * @typeparam T  A type of component.\n   * @param def  Shadow content root definition. Uses `mode: 'open'` by default.\n   *\n   * @returns Component definition.\n   */\n  componentDef<T extends object>(\n      this: void,\n      def: ShadowContentDef = defaultShadowContentDef,\n  ): ComponentDef<T> {\n    return {\n      setup(setup) {\n        setup.perComponent(\n            {\n              a: ShadowContentRoot,\n              by(ctx: ComponentContext<T>) {\n                return ctx.get(ShadowRootBuilder)(ctx, def);\n              },\n            },\n        );\n        setup.perComponent({ // Content root is an alias of shadow root when present.\n          a: ContentRoot,\n          by(context: ComponentContext<T>) {\n            return context.get(ShadowContentRoot, { or: null });\n          },\n        });\n      },\n      feature: { needs: ShadowDomSupport },\n    };\n  },\n\n};\n","/**\n * @module @wesib/wesib\n */\nimport { TypedClassDecorator } from '../../common';\nimport { ComponentDef } from '../../component';\nimport { ComponentClass } from '../../component/definition';\nimport { ShadowContentDef } from './shadow-content-def';\n\n/**\n * Component class decorator that attaches shadow root to decorated component instance.\n *\n * Applies component definition created by [[ShadowContentDef.componentDef]] function.\n *\n * @category Feature\n * @typeparam T  A type of decorated component class.\n * @param def  Shadow content root definition. Uses `mode: 'open'` by default.\n *\n * @return Component class decorator.\n */\nexport function AttachShadow<T extends ComponentClass = any>(\n    def?: ShadowContentDef,\n): TypedClassDecorator<T> {\n  return (type: T) => {\n    ComponentDef.define(type, ShadowContentDef.componentDef(def));\n  };\n}\n","import { ContextUpKey, ContextUpRef, ContextValueOpts, ContextValues } from 'context-values';\nimport { AfterEvent, EventKeeper, EventSender, OnEvent, onSupplied } from 'fun-events';\n\ntype FetchAgent<Res extends any[]> = (\n    this: void,\n    next: (this: void, request?: Request) => OnEvent<Res>,\n    request: Request,\n) => EventSender<Res>;\n\ntype CombinedFetchAgent<Res extends any[]> = (\n    this: void,\n    next: (this: void, request: Request) => OnEvent<Res>,\n    request: Request,\n) => OnEvent<Res>;\n\n/**\n * @internal\n */\nexport class FetchAgentKey<Res extends any[]>\n    extends ContextUpKey<CombinedFetchAgent<Res>, FetchAgent<Res>>\n    implements ContextUpRef<CombinedFetchAgent<Res>, FetchAgent<Res>, AfterEvent<FetchAgent<Res>[]>> {\n\n  constructor(name: string) {\n    super(name);\n  }\n\n  grow<Ctx extends ContextValues>(\n      opts: ContextValueOpts<\n          Ctx,\n          CombinedFetchAgent<Res>,\n          EventKeeper<FetchAgent<Res>[]> | FetchAgent<Res>,\n          AfterEvent<FetchAgent<Res>[]>>,\n  ): CombinedFetchAgent<Res> {\n\n    let agent!: CombinedFetchAgent<Res>;\n\n    opts.seed((...agents) => agent = combineFetchAgents(agents));\n\n    const fallback = opts.byDefault(() => (next, request) => agent(next, request));\n\n    return fallback || defaultFetchAgent;\n  }\n\n}\n\nfunction defaultFetchAgent<Res extends any[]>(\n    next: (this: void, request: Request) => OnEvent<Res>,\n    request: Request,\n): OnEvent<Res> {\n  return next(request);\n}\n\n/**\n * @internal\n */\nexport function combineFetchAgents<Res extends any[]>(agents: FetchAgent<Res>[]): CombinedFetchAgent<Res> {\n  return (next, request) => {\n\n    const fetch: (agentIdx: number, agentRequest: Request) => OnEvent<Res> = (agentIdx, agentRequest) => {\n\n      const agent = agents[agentIdx];\n\n      if (!agent) {\n        return next(agentRequest);\n      }\n\n      return onSupplied(\n          agent(\n              (nextRequest = agentRequest) => fetch(agentIdx + 1, nextRequest),\n              agentRequest,\n          ),\n      );\n    };\n\n    return fetch(0, request);\n  };\n}\n","/**\n * @module @wesib/generic\n */\nimport { ContextUpRef } from 'context-values';\nimport { EventSender, OnEvent } from 'fun-events';\nimport { FetchAgentKey } from './fetch-agent-key.impl';\n\n/**\n * HTTP fetch agent signature.\n *\n * The agent can be used to alter [[HttpFetch]] processing. For that it should be registered in appropriate context.\n *\n * All registered agents are organized into chain. The first agent in chain is called by [[HttpFetch]].\n */\nexport type HttpFetchAgent =\n/**\n * @param next  Either calls the next agent in chain, or actually fetches the data if this agent is the last one.\n * Accepts an optional `Request` parameter. The original request will be used instead when omitted.\n * @param request  HTTP request.\n *\n * @returns An `EventSender` of response object(s). It is returned either to preceding agent in chain, or as a result of\n * [[HttpFetch]] call.\n */\n    (\n        this: void,\n        next: (this: void, request?: Request) => OnEvent<[Response]>,\n        request: Request,\n    ) => EventSender<[Response]>;\n\nexport namespace HttpFetchAgent {\n\n  /**\n   * Combined HTTP fetch agent signature.\n   *\n   * This is what is available under [[HttpFetchAgent]] key.\n   */\n  export type Combined =\n  /**\n   * @param next  Either calls the next agent in chain, or actually fetches the data if this agent is the last one.\n   * Accepts `Request` parameter.\n   * @param request  HTTP request.\n   *\n   * @returns An `OnEvent` registrar of response object(s) receivers. It is returned as a result of [[HttpFetch]] call.\n   */\n      (\n          this: void,\n          next: (this: void, request: Request) => OnEvent<[Response]>,\n          request: Request,\n      ) => OnEvent<[Response]>;\n\n}\n\n/**\n * A key of context value containing an [[HttpFetchAgent]] instance.\n *\n * The agent returned combines all registered agents into one. If no agent registered it just performs the fetch.\n */\nexport const HttpFetchAgent: ContextUpRef<HttpFetchAgent.Combined, HttpFetchAgent> =\n    (/*#__PURE__*/ new FetchAgentKey<[Response]>('http-fetch-agent'));\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { DomEventDispatcher, EventEmitter, EventSupply, eventSupply, OnEvent, onEventBy } from 'fun-events';\nimport { HttpFetch } from './http-fetch';\nimport { HttpFetchAgent } from './http-fetch-agent';\n\nconst HttpFetchAborted = {};\n\n/**\n * @internal\n */\nexport function newHttpFetch(context: BootstrapContext): HttpFetch {\n\n  const window = context.get(BootstrapWindow);\n  const agent = context.get(HttpFetchAgent);\n\n  return (input, init) => agent(fetch, new Request(input, init));\n\n  function fetch(request: Request): OnEvent<[Response]> {\n    return onEventBy(receiver => {\n\n      const responseEmitter = new EventEmitter<[Response]>();\n      let supply: EventSupply;\n\n      if ('AbortController' in window) {\n\n        const abortController = new (window as any).AbortController();\n        const { signal } = abortController;\n\n        supply = eventSupply(reason => {\n          if (reason === HttpFetchAborted) {\n            abortController.abort();\n          }\n        });\n        receiver.supply.whenOff(() => supply.off(HttpFetchAborted)).needs(supply);\n        responseEmitter.on({\n          supply,\n          receive(ctx, response) {\n            receiver.receive(ctx, response);\n          },\n        });\n\n        const customSignal = request.signal;\n\n        if (customSignal) {\n          new DomEventDispatcher(customSignal).on('abort').once(() => abortController.abort());\n          if (customSignal.aborted) {\n            abortController.abort();\n          }\n        }\n\n        request = new Request(request, { signal });\n      } else {\n        supply = responseEmitter.on(receiver);\n      }\n\n      window.fetch(request)\n          .then(response => {\n            responseEmitter.send(response);\n            supply.off();\n          })\n          .catch(reason => supply.off(reason));\n    });\n  }\n}\n","/**\n * @module @wesib/generic\n */\nimport { bootstrapDefault } from '@wesib/wesib';\nimport { FnContextKey, FnContextRef } from 'context-values';\nimport { OnEvent } from 'fun-events';\nimport { newHttpFetch } from './http-fetch.impl';\n\n/**\n * HTTP fetch function signature.\n *\n * This is a function that wraps browser's\n * [fetch()](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch) function and provides\n * additional functionality. E.g. request interception.\n *\n * This function returns an `OnEvent` sender instead of a `Promise`. This allows to report multiple responses.\n * E.g. when the resource refresh requested and delivered. The request is sent whenever a receiver is registered\n * in this sender. When the fetch completes the response supply is cut off, and callbacks registered with its\n * `whenOff()` method are notified. When fetch fails for whatever reason, this reason is passed to these callbacks.\n * The fetch can be aborted by cutting off the response supply. I.e. by calling its `off()` method.\n *\n * An instance of [[HttpFetch]] is available from bootstrap context.\n */\nexport type HttpFetch =\n/**\n * @param input  The resource to fetch. This can either an URL string, or a `Request` object.\n * @param init  Custom settings to apply to the request.\n *\n * @returns An `OnEvent` sender of responses.\n */\n    (this: void, input: RequestInfo, init?: RequestInit) => OnEvent<[Response]>;\n\n/**\n * A key of bootstrap context value containing an [[HttpFetch]] instance.\n */\nexport const HttpFetch: FnContextRef<Parameters<HttpFetch>, ReturnType<HttpFetch>> =\n    (/*#__PURE__*/ new FnContextKey<Parameters<HttpFetch>, ReturnType<HttpFetch>>(\n        'http-fetch',\n        {\n          byDefault: bootstrapDefault(newHttpFetch),\n        },\n    ));\n","/**\n * @module @wesib/generic\n */\nimport { MultiContextKey, MultiContextRef } from 'context-values';\nimport { EventKeeper, EventSupply } from 'fun-events';\nimport { InControl } from 'input-aspects';\nimport { ComponentInReceiver } from './component-in-receiver';\n\n/**\n * Component input.\n *\n * This is an event keeper that supplies component's participants in user input. A component participating in user input\n * should have this instance in its context.\n */\nexport type ComponentIn = EventKeeper<ComponentIn.Participant[]>;\n\n/**\n * A key of component context value containing an array of event keepers sending component inputs.\n */\nexport const ComponentIn: MultiContextRef<ComponentIn> =\n    (/*#__PURE__*/ new MultiContextKey<ComponentIn>('component-in'));\n\nexport namespace ComponentIn {\n\n  /**\n   * A participant in user input defined in component.\n   *\n   * This is a function invoked by parent component to enable participation in user input. E.g. via input aspects.\n   */\n  export type Participant =\n  /**\n   * @param participation  A participation in user input to set.\n   *\n   * @returns A participation supply. When this supply is cut off the participation is disabled.\n   */\n      (this: void, participation: Participation) => EventSupply;\n\n  /**\n   * A participation of component in user input context.\n   *\n   * This is passed to {@link Participant user input participant} to set its participation.\n   */\n  export interface Participation {\n\n    /**\n     * User input receiver.\n     */\n    readonly receiver: ComponentInReceiver;\n\n    /**\n     * User input control.\n     */\n    readonly control: InControl<any>;\n\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ComponentClass, ComponentContext } from '@wesib/wesib';\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport { ValueTracker } from 'fun-events';\nimport { ElementNodeList } from './element-node-list';\n\n/**\n * Arbitrary element node within component tree. Either bound to some component or not.\n */\nexport type ElementNode =\n    | RawElementNode\n    | ComponentNode;\n\n/**\n * Component tree node representing arbitrary element.\n *\n * This is a base interface of all element node implementations.\n */\nexport interface ComponentTreeNode {\n\n  /**\n   * The element itself.\n   */\n  readonly element: any;\n\n  /**\n   * A context of component bound to this element, if any.\n   */\n  readonly context?: ComponentContext<any>;\n\n  /**\n   * Parent element node, or `null` if element has no parent.\n   */\n  readonly parent: ElementNode | null;\n\n  /**\n   * Selects component nodes matching the given selector.\n   *\n   * @param selector  Simple CSS selector of nested components.\n   * @param mode  Component nodes pick mode.\n   *\n   * @returns Dynamically updatable list of matching component nodes.\n   */\n  select(\n      selector: string,\n      mode?: ComponentPickMode,\n  ): ElementNodeList<ComponentNode>;\n\n  /**\n   * Selects component nodes of the given type.\n   *\n   * @param componentType  Nested component type with custom element name.\n   * @param mode  Component nodes pick mode.\n   *\n   * @returns Dynamically updatable list of matching component nodes.\n   */\n  select<T extends object>(\n      componentType: ComponentClass<T>,\n      mode?: ComponentPickMode,\n  ): ElementNodeList<ComponentNode<T>>;\n\n  /**\n   * Selects element nodes matching the given selector.\n   *\n   * @param selector  Simple CSS selector of nested elements. E.g. CSS class selector.\n   * @param mode  A mode of node picking from component tree.\n   *\n   * @returns Dynamically updatable list of matching element nodes.\n   */\n  select(\n      selector: string,\n      mode: ElementPickMode,\n  ): ElementNodeList;\n\n  /**\n   * Tracks element attribute.\n   *\n   * @param name  Target attribute name.\n   *\n   * @returns Target attribute's value tracker.\n   */\n  attribute(name: string): ValueTracker<string | null, string>;\n\n  /**\n   * Tracks element element property.\n   *\n   * The changes are tracked with `StateTracker`. So it is expected that the target property notifies on its changes\n   * with state updater. E.g. when it is defined by `@DomProperty` decorator.\n   *\n   * @param key  Target property key.\n   *\n   * @returns Target property's value tracker.\n   */\n  property<V>(key: PropertyKey): ValueTracker<V>;\n\n}\n\n/**\n * Element node representing raw element not bound to any component.\n */\nexport interface RawElementNode extends ComponentTreeNode {\n\n  readonly context?: undefined;\n\n}\n\n/**\n * Element node representing an element bound to some component.\n */\nexport interface ComponentNode<T extends object = any> extends ComponentTreeNode {\n\n  readonly context: ComponentContext<T>;\n\n}\n\n/**\n * A key of component context value containing a component node instance.\n */\nexport const ComponentNode: SingleContextRef<ComponentNode> =\n    (/*#__PURE__*/ new SingleContextKey<ComponentNode>('component-node'));\n\n/**\n * A mode of node picking from component tree.\n */\nexport interface ElementPickMode {\n\n  /**\n   * Set to `true` to select arbitrary nodes. Otherwise - select only component nodes.\n   */\n  all?: boolean;\n\n  /**\n   * Set to `true` to select from entire subtree. Otherwise - select from element child nodes only.\n   */\n  deep?: boolean;\n\n}\n\n/**\n * A mode that picks component nodes from component tree.\n */\nexport interface ComponentPickMode extends ElementPickMode {\n\n  all?: false;\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { AIterable, ArrayLikeIterable } from 'a-iterable';\nimport { AfterEvent, AfterEvent__symbol, EventKeeper, EventSender, OnEvent, OnEvent__symbol } from 'fun-events';\nimport { ElementNode } from './element-node';\n\n/**\n * Dynamically updatable list of selected element nodes.\n *\n * It is an iterable of nodes.\n *\n * Implements an `EventSender` interface by sending added and removed nodes arrays.\n *\n * Implements an `EventKeeper` interface by sending updated node list.\n */\nexport abstract class ElementNodeList<N extends ElementNode = ElementNode>\n    extends AIterable<N>\n    implements EventSender<[N[], N[]]>, EventKeeper<[ElementNodeList<N>]> {\n\n  /**\n   * An `OnEvent` sender of list changes. Sends arrays of added and removed nodes.\n   *\n   * The `[OnEvent__symbol]` property is an alias of this one.\n   */\n  abstract readonly onUpdate: OnEvent<[N[], N[]]>;\n\n  get [OnEvent__symbol](): OnEvent<[N[], N[]]> {\n    return this.onUpdate;\n  }\n\n  /**\n   * An `AfterEvent` keeper of current node list.\n   *\n   * The `[AfterEvent__symbol]` property is an alias of this one.\n   */\n  abstract readonly read: AfterEvent<[ElementNodeList<N>]>;\n\n  get [AfterEvent__symbol](): AfterEvent<[ElementNodeList<N>]> {\n    return this.read;\n  }\n\n  /**\n   * An `AfterEvent` keeper of node list changes.\n   *\n   * Sends an iterables of added and removed nodes. Sends current nodes immediately upon receiver registration.\n   */\n  abstract readonly track: AfterEvent<[ArrayLikeIterable<N>, ArrayLikeIterable<N>]>;\n\n  /**\n   * An `AfterEvent` keeper of the first node in this list.\n   */\n  abstract readonly first: AfterEvent<[N?]>;\n\n}\n","import {\n  BootstrapContext,\n  ComponentClass,\n  DefaultNamespaceAliaser,\n  ElementObserver,\n  ElementObserverInit,\n  isElement,\n} from '@wesib/wesib';\nimport { AIterable, ArrayLikeIterable, filterIt, itsEach, itsFirst, itsIterator, mapIt, overArray } from 'a-iterable';\nimport { isPresent, nextArgs } from 'call-thru';\nimport { AfterEvent, afterEventBy, afterSupplied, EventEmitter, eventSupply, OnEvent, onEventBy } from 'fun-events';\nimport { html__naming } from 'namespace-aliaser';\nimport { ElementPickMode, ElementNode } from './element-node';\nimport { ElementNodeList as ElementNodeList_ } from './element-node-list';\n\nconst WATCH_DEEP: ElementObserverInit = { subtree: true };\n\n/**\n * @internal\n */\nexport function elementNodeList<N extends ElementNode>(\n    bsContext: BootstrapContext,\n    root: Element,\n    selectorOrType: string | ComponentClass<any>,\n    nodeOf: (node: Element, optional?: boolean) => N | undefined,\n    { deep, all }: ElementPickMode,\n): ElementNodeList_<N> {\n\n  const updates = new EventEmitter<[N[], N[]]>();\n  const init = deep ? WATCH_DEEP : undefined;\n  let cache = new Set<Element>();\n  let iterable: Iterable<N> | undefined;\n  let selector: string | undefined;\n\n  if (typeof selectorOrType === 'string') {\n    selector = selectorOrType;\n  } else {\n    bsContext.whenDefined(selectorOrType).then(({ elementDef: { name } }) => {\n      iterable = undefined;\n      if (name) {\n        selector = html__naming.name(name, bsContext.get(DefaultNamespaceAliaser));\n        if (updates.size) {\n\n          const selected = refresh();\n\n          if (selected.size) {\n\n            const added = [\n              ...filterIt<N | undefined, N>(\n                  mapIt(selected, node => nodeOf(node)),\n                  isPresent,\n              ),\n            ];\n\n            if (added.length) {\n              updates.send(added, []);\n            }\n          }\n        }\n      }\n    });\n  }\n\n  const observer = bsContext.get(ElementObserver)(update);\n  let nodeList: ElementNodeList;\n\n  const onUpdate = onEventBy<[N[], N[]]>(receiver => {\n\n    const firstReceiver = !updates.size;\n    const supply = updates.on(receiver);\n\n    if (firstReceiver) {\n      refresh();\n      observer.observe(root, init);\n    }\n\n    return eventSupply(reason => {\n      supply.off(reason);\n      if (!updates.size) {\n        observer.disconnect();\n      }\n    }).needs(supply);\n  });\n  const read = afterEventBy<[ElementNodeList]>(onUpdate.thru(() => nodeList), () => [nodeList]);\n  const onTrackUpdate: OnEvent<[ArrayLikeIterable<N>, ArrayLikeIterable<N>]> =\n      onUpdate.thru((added, removed) => nextArgs(AIterable.of(added), AIterable.of(removed)));\n  const track = afterEventBy<[ArrayLikeIterable<N>, ArrayLikeIterable<N>]>(receiver => {\n\n    const initialEmitter = new EventEmitter<[ArrayLikeIterable<N>, ArrayLikeIterable<N>]>();\n\n    initialEmitter.on(receiver);\n    initialEmitter.send(nodeList, AIterable.of([]));\n\n    onTrackUpdate(receiver);\n  });\n  const first: AfterEvent<[N?]> = afterSupplied(read).keep.thru(itsFirst);\n\n  if (!all) {\n    root.addEventListener('wesib:component', event => {\n\n      const element = event.target as Element;\n\n      if (cache.has(element)) {\n\n        const node = nodeOf(element) as N;\n\n        updates.send([node], []);\n      }\n    });\n  }\n\n  class ElementNodeList extends ElementNodeList_<N> {\n\n    get onUpdate() {\n      return onUpdate;\n    }\n\n    get read() {\n      return read;\n    }\n\n    get track() {\n      return track;\n    }\n\n    get first() {\n      return first;\n    }\n\n    [Symbol.iterator]() {\n      return itsIterator(iterable || (iterable = filterIt<N | undefined, N>(\n          mapIt(\n              elements(),\n              element => nodeOf(element),\n          ),\n          isPresent,\n      )));\n    }\n\n  }\n\n  return nodeList = new ElementNodeList();\n\n  function elements(): Set<Element> {\n    return updates.size ? cache : refresh();\n  }\n\n  function refresh(): Set<Element> {\n    iterable = undefined;\n    return cache = select();\n  }\n\n  function select(): Set<Element> {\n\n    const sel = selector;\n\n    if (!sel) {\n      return new Set();\n    }\n    if (deep) {\n      return new Set(overArray(root.querySelectorAll(sel)));\n    }\n    return new Set(\n        filterIt(\n            overArray(root.children),\n            item => item.matches(sel),\n        ),\n    );\n  }\n\n  function update(mutations: MutationRecord[]) {\n\n    const added: N[] = [];\n    const removed: N[] = [];\n\n    mutations.forEach(mutation => {\n      itsEach(\n          filterIt<N | undefined, N>(\n              mapIt(overArray(mutation.removedNodes), removeNode),\n              isPresent,\n          ),\n          node => removed.push(node),\n      );\n      itsEach(\n          filterIt<N | undefined, N>(\n              mapIt(overArray(mutation.addedNodes), addNode),\n              isPresent,\n          ),\n          node => added.push(node),\n      );\n    });\n    if (added.length || removed.length) {\n      updates.send(added, removed);\n    }\n  }\n\n  function addNode(node: Node): N | undefined {\n    if (!isElement(node)) {\n      return;\n    }\n    if (selector && node.matches(selector) && !cache.has(node)) {\n      cache.add(node);\n      return nodeOf(node);\n    }\n    return;\n  }\n\n  function removeNode(node: Node): N | undefined {\n    if (!isElement(node)) {\n      return;\n    }\n    if (!cache.delete(node)) {\n      return;\n    }\n    return nodeOf(node, true);\n  }\n\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport {\n  EventEmitter,\n  eventReceiver,\n  EventReceiver, eventSupply,\n  EventSupply,\n  noEventSupply,\n  OnEvent,\n  onEventBy,\n  ValueTracker,\n} from 'fun-events';\n\nclass AttributesObserver {\n\n  private readonly _emitters = new Map<string, EventEmitter<[string, string | null]>>();\n  private _observer?: MutationObserver;\n\n  constructor(private readonly _bs: BootstrapContext, readonly element: Element) {\n  }\n\n  private get observer(): MutationObserver {\n    if (this._observer) {\n      return this._observer;\n    }\n\n    const Observer: typeof MutationObserver = (this._bs.get(BootstrapWindow) as any).MutationObserver;\n\n    return this._observer = new Observer(mutations => this._update(mutations));\n  }\n\n  observe(name: string, receiver: EventReceiver<[string, string | null]>): EventSupply {\n\n    const self = this;\n    const observer = this.observer;\n    const emitter = this._emitter(name);\n    const rcv = eventReceiver(receiver);\n    const supply = emitter.on({\n      supply: eventSupply(() => {\n        this._emitters.delete(name);\n        observer.disconnect();\n        if (this._emitters.size) {\n          reconnect();\n        } else {\n          this._observer = undefined;\n        }\n      }).needs(rcv.supply),\n      receive: (ctx, newValue, oldValue) => rcv.receive(ctx, newValue, oldValue),\n    });\n\n    observer.disconnect();\n    reconnect();\n\n    return supply;\n\n    function reconnect() {\n      self._update(observer.takeRecords());\n      observer.observe(self.element, {\n        attributes: true,\n        attributeOldValue: true,\n        attributeFilter: [...self._emitters.keys()],\n      });\n    }\n  }\n\n  private _update(mutations: MutationRecord[]) {\n    mutations.forEach(mutation => {\n\n      const attributeName = mutation.attributeName as string;\n      const emitter = this._emitters.get(attributeName);\n\n      if (emitter) {\n        emitter.send(this.element.getAttribute(attributeName) as string, mutation.oldValue);\n      }\n    });\n  }\n\n  private _emitter(name: string): EventEmitter<[string, string | null]> {\n\n    const emitter = new EventEmitter<[string, string | null]>();\n\n    this._emitters.set(name, emitter);\n\n    return emitter;\n  }\n\n}\n\nclass AttributeTracker extends ValueTracker<string | null, string> {\n\n  private readonly _updates = new EventEmitter<[string, string | null]>();\n  readonly on: OnEvent<[string, string | null]>;\n\n  constructor(\n      private readonly _observer: AttributesObserver,\n      private readonly _name: string,\n  ) {\n    super();\n\n    let observeSupply = noEventSupply();\n\n    this.on = onEventBy(receiver => {\n      if (!this._updates.size) {\n        observeSupply = this._observer.observe(\n            _name,\n            (newValue, oldValue) => this._updates.send(newValue, oldValue),\n        );\n      }\n      receiver.supply.needs(observeSupply);\n      this._updates.on(receiver).whenOff(reason => {\n        if (!this._updates.size) {\n          observeSupply.off(reason);\n        }\n      });\n    });\n  }\n\n  get it(): string | null {\n    return this._observer.element.getAttribute(this._name);\n  }\n\n  set it(value: string | null) {\n    this._observer.element.setAttribute(this._name, value as string);\n  }\n\n  done(reason?: any): this {\n    this._updates.done(reason);\n    return this;\n  }\n\n}\n\n/**\n * @internal\n */\nexport class NodeAttributes {\n\n  private readonly _attrs = new Map<string, AttributeTracker>();\n  private readonly _observer: AttributesObserver;\n\n  constructor(bs: BootstrapContext, element: any) {\n    this._observer = new AttributesObserver(bs, element);\n  }\n\n  get(name: string): ValueTracker<string | null, string> {\n\n    const existing = this._attrs.get(name);\n\n    if (existing) {\n      return existing;\n    }\n\n    const created = new AttributeTracker(this._observer, name);\n\n    this._attrs.set(name, created);\n\n    return created;\n  }\n\n}\n","import { ComponentContext, ComponentState, domPropertyPathTo } from '@wesib/wesib';\nimport { EventEmitter, eventSupply, noEventSupply, OnEvent, ValueTracker } from 'fun-events';\n\nclass PropertyTracker<T> extends ValueTracker<T> {\n\n  private readonly _updates = new EventEmitter<[T, T]>();\n  private _supply = noEventSupply();\n\n  constructor(\n      private readonly _element: any,\n      private readonly _key: PropertyKey,\n  ) {\n    super();\n  }\n\n  get on(): OnEvent<[T, T]> {\n    return this._updates.on;\n  }\n\n  bind(context: ComponentContext) {\n\n    const propertyState = context.get(ComponentState).track(domPropertyPathTo(this._key));\n\n    this._supply = propertyState.onUpdate({\n      supply: eventSupply().whenOff(reason => this._updates.done(reason)),\n      receive: (_ctx, _path, newValue: any, oldValue: any) => this._updates.send(newValue, oldValue),\n    });\n  }\n\n  get it(): T {\n    return this._element[this._key];\n  }\n\n  set it(value: T) {\n    this._element[this._key] = value;\n  }\n\n  done(reason?: any): this {\n    this._supply.off(reason);\n    return this;\n  }\n\n}\n\n/**\n * @internal\n */\nexport class NodeProperties {\n\n  private readonly _props = new Map<PropertyKey, PropertyTracker<any>>();\n  private _context?: ComponentContext<any>;\n\n  constructor(private readonly _element: any) {\n  }\n\n  bind(context: ComponentContext) {\n    this._context = context;\n    this._props.forEach(prop => prop.bind(context));\n  }\n\n  get<T>(key: PropertyKey): ValueTracker<T> {\n\n    const existing = this._props.get(key);\n\n    if (existing) {\n      return existing;\n    }\n\n    const created = new PropertyTracker<any>(this._element, key);\n\n    if (this._context) {\n      created.bind(this._context);\n    }\n    this._props.set(key, created);\n\n    return created;\n  }\n\n}\n","import {\n  BootstrapContext,\n  ComponentClass,\n  ComponentContext,\n  ComponentContext__symbol,\n  ComponentEvent,\n  ElementAdapter,\n} from '@wesib/wesib';\nimport { ValueTracker } from 'fun-events';\nimport { ComponentNode, ComponentTreeNode, ElementPickMode, ElementNode as ElementNode_ } from './element-node';\nimport { ElementNodeList } from './element-node-list';\nimport { elementNodeList } from './element-node-list.impl';\nimport { NodeAttributes } from './node-attributes.impl';\nimport { NodeProperties } from './node-properties.impl';\n\nconst ElementNode__symbol = (/*#__PURE__*/ Symbol('element-node'));\n\nclass ElementNode implements ComponentTreeNode {\n\n  private readonly _attrs: NodeAttributes;\n  private readonly _props: NodeProperties;\n\n  constructor(private readonly _bs: BootstrapContext, readonly element: Element) {\n    this._attrs = new NodeAttributes(_bs, element);\n    this._props = new NodeProperties(element);\n    (element as any)[ElementNode__symbol] = this;\n\n    const context = (element as any)[ComponentContext__symbol] as ComponentContext<any> | undefined;\n\n    if (context) {\n      this._bind(context);\n    } else {\n      element.addEventListener('wesib:component', event => this._bind((event as ComponentEvent).context));\n    }\n  }\n\n  get context(): ComponentContext<any> | undefined {\n    return (this.element as any)[ComponentContext__symbol];\n  }\n\n  get parent() {\n\n    const parent = this.element.parentElement;\n\n    return parent != null ? elementNodeOf(this._bs, parent) : null;\n  }\n\n  select(selector: string | ComponentClass<any>, mode?: ElementPickMode): ElementNodeList<any> {\n    return selectNodes(this._bs, this.element, selector, mode);\n  }\n\n  attribute(name: string): ValueTracker<string | null, string> {\n    return this._attrs.get(name);\n  }\n\n  property<V>(key: PropertyKey): ValueTracker<V> {\n    return this._props.get(key);\n  }\n\n  private _bind(context: ComponentContext) {\n    this._props.bind(context);\n  }\n\n}\n\n/**\n * @internal\n */\nexport function elementNodeOf(bsContext: BootstrapContext, element: Element, optional?: boolean): ElementNode_ {\n\n  const existing: ElementNode_ = (element as any)[ElementNode__symbol];\n\n  return (existing || optional) ? existing : new ElementNode(bsContext, element);\n}\n\nfunction selectNodes(\n    bsContext: BootstrapContext,\n    root: Element,\n    selector: string | ComponentClass<any>,\n    mode: ElementPickMode = {},\n): ElementNodeList<any> {\n  if (mode.all) {\n    return elementNodeList<ElementNode_>(\n        bsContext,\n        root,\n        selector,\n        (element, optional) => elementNodeOf(bsContext, element, optional),\n        mode,\n    );\n  }\n\n  const adapter = bsContext.get(ElementAdapter);\n\n  return elementNodeList<ComponentNode>(\n      bsContext,\n      root,\n      selector,\n      (element, optional) => adapter(element) && elementNodeOf(bsContext, element, optional) as ComponentNode,\n      mode,\n  );\n}\n","/**\n * @module @wesib/generic\n */\nimport { BootstrapContext, ComponentContext, FeatureDef, FeatureDef__symbol, StateSupport } from '@wesib/wesib';\nimport { ComponentNode } from './element-node';\nimport { elementNodeOf } from './element-node.impl';\n\nconst ComponentTreeSupport__feature: FeatureDef = {\n  needs: StateSupport,\n  setup(setup) {\n    setup.perComponent({\n      a: ComponentNode,\n      by(context: ComponentContext) {\n        return elementNodeOf(context.get(BootstrapContext), context.element) as ComponentNode;\n      },\n    });\n  },\n};\n\n/**\n * Component tree support feature.\n *\n * Provides a [[ComponentNode]] instance for each component.\n */\nexport class ComponentTreeSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return ComponentTreeSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport { ComponentNode } from '../tree';\n\n/**\n * A receiver of user input inside component.\n *\n * A component that initiated user input should have this in its context. Only one input receiver allowed per component.\n */\nexport interface ComponentInReceiver {\n\n  /**\n   * Root component node initiating the user input.\n   *\n   * This node contains the ones participating in user input.\n   */\n  readonly root: ComponentNode;\n\n}\n\n/**\n * A key of component context value containing an input receiver.\n */\nexport const ComponentInReceiver: SingleContextRef<ComponentInReceiver> =\n    (/*#__PURE__*/ new SingleContextKey<ComponentInReceiver>('component-in-receiver'));\n","/**\n * @module @wesib/generic\n */\nimport { filterIt, itsEach } from 'a-iterable';\nimport { afterSupplied, eventSupply, EventSupply } from 'fun-events';\nimport { InControl } from 'input-aspects';\nimport { ComponentNode } from '../tree';\nimport { ComponentIn } from './component-in';\nimport { ComponentInReceiver } from './component-in-receiver';\n\n/**\n * Starts receiving user input for the given receiver from the given input control.\n *\n * Searches for the nested components with {@link ComponentIn component input} in their contexts and enables their\n * participation in user input.\n *\n * @param receiver  User input receiver.\n * @param control  User input control.\n *\n * @returns User input supply. The user input is disabled once this supply is cut off.\n */\nexport function receiveComponentIn(receiver: ComponentInReceiver, control: InControl<any>): EventSupply {\n\n  const inputSupply = eventSupply();\n  const { root } = receiver;\n\n  root.context.whenOn(connectionSupply => {\n    connectionSupply.needs(inputSupply);\n\n    const rcvNodes = new Set<ComponentNode>();\n    const inNodes = new Map<ComponentNode, ComponentInNode>();\n\n    root.select('*', { deep: true }).track({\n      supply: connectionSupply,\n      receive: (_ctx, added, removed) => {\n        itsEach(removed, removeInNode);\n        itsEach(added, addInNode);\n      },\n    });\n\n    function addInNode(node: ComponentNode): ComponentInNode | undefined {\n\n      const { element } = node;\n      const nodeRcv = node.context.get(ComponentInReceiver, { or: null });\n\n      if (nodeRcv) {\n        // Remove input participants inside new receiver node\n        itsEach(\n            filterIt(inNodes.keys(), n => element.contains(n.element)),\n            removeInNode,\n        );\n        rcvNodes.add(node);\n      }\n\n      const ins = node.context.get(ComponentIn, { or: null });\n\n      if (!ins) {\n        return; // New node is not participating in user input\n      }\n\n      for (const rcvNode of rcvNodes) {\n        if (rcvNode !== node && rcvNode.element.contains(element)) {\n          return; // Added node is inside another receiver\n        }\n      }\n\n      const inNode: ComponentInNode = {\n        node,\n        ins,\n        supply: eventSupply().needs(connectionSupply),\n      };\n\n      inNodes.set(node, inNode);\n      participate(inNode);\n\n      return inNode;\n    }\n\n    function participate({ ins, supply: inSupply }: ComponentInNode) {\n\n      const supply = eventSupply().needs(inSupply);\n\n      itsEach(\n          ins,\n          componentIn => afterSupplied(componentIn)({\n            supply,\n            receive: (_, ...participants) => itsEach(\n                participants,\n                participant => participant({\n                  receiver,\n                  control,\n                }).needs(supply),\n            ),\n          }),\n      );\n    }\n\n    function removeInNode(node: ComponentNode) {\n      rcvNodes.delete(node);\n\n      const inNode = inNodes.get(node);\n\n      if (inNode) {\n        inNodes.delete(node);\n        inNode.supply.off();\n      }\n    }\n  }).needs(inputSupply);\n\n  return inputSupply;\n}\n\ninterface ComponentInNode {\n\n  readonly node: ComponentNode;\n  readonly ins: readonly ComponentIn[];\n  readonly supply: EventSupply;\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ComponentContext, ComponentDef, ComponentDef__symbol } from '@wesib/wesib';\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { EventSupply } from 'fun-events';\nimport { InControl } from 'input-aspects';\nimport { ComponentNode, ComponentTreeSupport } from '../tree';\nimport { ComponentInReceiver } from './component-in-receiver';\nimport { receiveComponentIn } from './receive-component-in';\n\nconst ComponentInControl__key = (/*#__PURE__*/ new SingleContextKey<ComponentInControl>('component-in-control'));\n\nconst ComponentInControl__component: ComponentDef = {\n  feature: {\n    needs: ComponentTreeSupport,\n  },\n  setup(setup) {\n    setup.perComponent({ as: ComponentInControl });\n    setup.perComponent({ a: ComponentInReceiver, via: ComponentInControl });\n  },\n};\n\n/**\n * User input control maintained by component.\n *\n * An instance of this class intended to be available in component context. The class can be used as component\n * definition source for that.\n *\n * To initiate user input, the component should obtain an instance from its context and [[enable]] it.\n *\n * Usage example:\n * ```typescript\n * @Component(\n *   'my-component',     // Custom element name\n *   ComponentInControl, // Provide input control for component\n * )\n * class MyComponent {\n *   constructor(context: ComponentContext) {\n *\n *     const control = context.get(ComponentInControl); // Provided input control\n *\n *     // Enable input on `#my-element` input element.\n *     context.get(ComponentNode)\n *        .select('#my-input', { all: true, deep: true })\n *        .first.consume(input => input && control.in(input));\n *   }\n * }\n * ```\n */\nexport class ComponentInControl<Value = any> implements ComponentInReceiver {\n\n  /**\n   * A key of component context value containing an component input control.\n   */\n  static get [ContextKey__symbol](): ContextKey<ComponentInControl> {\n    return  ComponentInControl__key;\n  }\n\n  /**\n   * Component definition that sets up an input control for the component.\n   *\n   * Enables [[ComponentTreeSupport]].\n   */\n  static get [ComponentDef__symbol](): ComponentDef {\n    return ComponentInControl__component;\n  }\n\n  /**\n   * Root component node.\n   */\n  readonly root: ComponentNode;\n\n  /**\n   * Constructs component user input control.\n   *\n   * Normally, an instance should not be constructed directly. The class should be used instead to provide one for\n   * component context. E.g. by passing it to `@Component` decorator.\n   *\n   * @param context  Component context.\n   */\n  constructor(context: ComponentContext) {\n    this.root = context.get(ComponentNode);\n  }\n\n  /**\n   * Starts receiving user input from the given control.\n   *\n   * Utilizes [[receiveComponentIn]] for that.\n   *\n   * @param control  User input control to enable.\n   *\n   * @returns User input supply. The user input is disabled once this supply is cut off.\n   */\n  in(control: InControl<Value>): EventSupply {\n    return receiveComponentIn(this, control);\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ComponentContext, ComponentDef, ComponentDef__symbol } from '@wesib/wesib';\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { AfterEvent, trackValue, ValueTracker } from 'fun-events';\nimport { InControl, InText } from 'input-aspects';\nimport { ComponentNode, ElementPickMode, ElementNode } from '../tree';\nimport { ComponentInControl } from './component-in-control';\n\n/**\n * Component input control created for input element.\n *\n * This is an `AfterEvent` keeper of constructed input control, if any.\n *\n * A [[componentInElement]] function call result attaches such control to component.\n *\n * @typeparam Ctrl  A type of input control. `InText` by default.\n */\nexport type ComponentInElement<Ctrl extends InControl<any> = InText> = AfterEvent<[Ctrl?]>;\n\nexport namespace ComponentInElement {\n\n  /**\n   * A reference to {@link ComponentInElement component input element control} that can be used to attach such control\n   * to component and retrieve it from this component's context.\n   *\n   * An instance of this type can be constructed by [[componentInElement]] function.\n   *\n   * @typeparam Ctrl  A type of input control. `InText` by default.\n   */\n  export interface Ref<Ctrl extends InControl<any> = InText> {\n\n    /**\n     * A key of component context value containing component input element control.\n     */\n    readonly [ContextKey__symbol]: ContextKey<ComponentInElement<Ctrl>>;\n\n    /**\n     * Component definition that attaches input element control to component.\n     *\n     * Also attaches [[ComponentInControl]] to component.\n     */\n    readonly [ComponentDef__symbol]: ComponentDef;\n\n  }\n\n  /**\n   * Input control builder function signature.\n   *\n   * Build input control for selected input element.\n   */\n  export type Builder<Ctrl extends InControl<any>> =\n  /**\n   * @typeparam Ctrl  A type of input control.\n   * @param node  Selected input element node.\n   * @param root  A node of component that initiated the user input and containing selected element.\n   *\n   * @returns Input control.\n   */\n      (this: void, node: ElementNode, root: ComponentNode) => Ctrl;\n\n}\n\n/**\n * Creates a reference to {@link ComponentInElement component input element control}.\n *\n * The input attached to component by this reference searches for the first element matching CSS `selector` in\n * component's content and creates an input control control for it by calling a `control` function.\n *\n * @param select  Input element selector.\n * @param pick  A mode of input element node picking from component tree. By default picks any matching element\n * within subtree.\n * @param build  Control builder function for selected element node.\n *\n * @returns A reference to component input element.\n */\nexport function componentInElement<Ctrl extends InControl<any>>(\n    {\n      select,\n      pick = { all: true, deep: true },\n      build,\n    }: {\n      select: string,\n      pick?: ElementPickMode,\n      build: ComponentInElement.Builder<Ctrl>,\n    },\n): ComponentInElement.Ref<Ctrl> {\n\n  type CompInElement = ComponentInElement<Ctrl>;\n  const CompInElement = new SingleContextKey<CompInElement>('component-in-element:' + select);\n\n  type CompControl = ValueTracker<Ctrl | undefined>;\n  const CompControl = new SingleContextKey<CompControl>('component-in-element:' + select + ':control');\n\n  const def = ComponentDef.all(\n      ComponentInControl,\n      {\n        define(context) {\n          context.perComponent({ a: CompControl, by: trackValue });\n          context.perComponent({\n            a: CompInElement,\n            by: (ctrl: CompControl) => ctrl.read,\n            with: [CompControl],\n          });\n          context.whenComponent(enableInput);\n        },\n      },\n  );\n\n  return {\n    get [ContextKey__symbol]() {\n      return CompInElement;\n    },\n    get [ComponentDef__symbol]() {\n      return def;\n    },\n  };\n\n  function enableInput(context: ComponentContext) {\n\n    const compControl = context.get(CompControl);\n    const inControl = context.get(ComponentInControl);\n    const root = context.get(ComponentNode);\n\n    context.whenOn(supply => {\n      compControl.by(\n          root.select(select, pick)\n              .first.tillOff(supply)\n              .thru_(node => node && build(node, root)),\n      );\n      compControl.read.tillOff(supply).consume(\n          ctrl => ctrl && inControl.in(ctrl).whenOff(() => compControl.it = undefined),\n      );\n    });\n  }\n}\n","/**\n * @module @wesib/generic\n */\nimport { ComponentDef, ComponentDef__symbol } from '@wesib/wesib';\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { AfterEvent, afterThe, trackValue, ValueTracker } from 'fun-events';\nimport { InValidation, inValidationResult } from 'input-aspects';\nimport { ComponentIn } from './component-in';\n\n/**\n * A validity of user input initiated by component.\n *\n * This is an `AfterEvent` keeper of input validation result. Should be nested in {@link ComponentInReceiver user\n * input receiver}. E.g. by placing [[ComponentInValidity]] to `@Component()` decorator of nested component.\n */\nexport type ComponentInValidity = AfterEvent<[InValidation.Result]>;\n\nconst ComponentInValidity__key =\n    (/*#__PURE__*/ new SingleContextKey<ComponentInValidity>('component-in-validity'));\n\ntype ComponentInValidityTracker = ValueTracker<InValidation.Result>;\nconst ComponentInValidityTracker =\n    (/*#__PURE__*/ new SingleContextKey<ComponentInValidityTracker>('context-in-validity:tracker'));\n\nconst ComponentInValidity__component: ComponentDef = {\n  setup(setup) {\n    setup.perComponent({ a: ComponentInValidityTracker, is: trackValue(inValidationResult()) });\n    setup.perComponent({ a: ComponentIn, by: componentInValidity, with: [ComponentInValidityTracker] });\n    setup.perComponent({\n      a: ComponentInValidity,\n      by: (tracker: ComponentInValidityTracker) => tracker.read,\n      with: [ComponentInValidityTracker],\n    });\n  },\n};\n\nexport const ComponentInValidity = {\n\n  /**\n   * A key of component context value containing component input validity.\n   */\n  get [ContextKey__symbol](): ContextKey<ComponentInValidity> {\n    return ComponentInValidity__key;\n  },\n\n  /**\n   * Component definition that sets up input validity.\n   */\n  get [ComponentDef__symbol](): ComponentDef {\n    return ComponentInValidity__component;\n  },\n\n};\n\nfunction componentInValidity(tracker: ComponentInValidityTracker): AfterEvent<[ComponentIn.Participant]> {\n  return afterThe(\n      ({ control }) => control.aspect(InValidation)\n          .read(result => tracker.it = result)\n          .whenOff(() => tracker.it = inValidationResult()),\n  );\n}\n","/**\n * @module @wesib/generic\n */\nimport { Navigation } from './navigation';\nimport { Page } from './page';\n\n/**\n * Navigation event.\n */\nexport type NavigationEvent = LeavePageEvent | EnterPageEvent | StayOnPageEvent;\n\n/**\n * Navigation event type.\n */\nexport const enum NavigationEventType {\n\n  /**\n   * {@link EnterPageEvent Enter page event} type.\n   */\n  EnterPage = 'wesib:enterPage',\n\n  /**\n   * {@link LeavePageEvent Leave page event} type.\n   */\n  LeavePage = 'wesib:leavePage',\n\n  /**\n   * {@link StayOnPageEvent Stay on page event} type.\n   */\n  StayOnPage = 'wesib:stayOnPage',\n\n}\n\n/**\n * An event fired when navigation target reached by entering destination page.\n *\n * @event EnterPageEvent#wesib:enterPage\n */\nexport class EnterPageEvent extends Event {\n\n  /**\n   * When navigation event occurred.\n   *\n   * Can be one of:\n   * - `open` when opening a new page,\n   * - `replace` when replacing navigation history entry,\n   * - `enter` when entering new page by user action (e.g. hashchange event),\n   * - `return` when navigated to previously visited entry in navigation history.\n   */\n  readonly when: 'open' | 'replace' | 'enter' | 'return';\n\n  /**\n   * Entered page.\n   */\n  readonly to: Page;\n\n  /**\n   * Constructs enter page event.\n   *\n   * @param type  Event type.\n   * @param init  Initialization options.\n   */\n  constructor(type: string, init: EnterPageEventInit) {\n    super(type, { ...init, cancelable: false });\n    this.when = init.when;\n    this.to = init.to;\n  }\n\n}\n\n/**\n * {@link EnterPageEvent Enter page event} initialization options.\n */\nexport interface EnterPageEventInit extends Omit<EventInit, 'cancelable'> {\n\n  /**\n   * When navigation event occurred.\n   *\n   * Can be one of:\n   * - `open` when opening a new page,\n   * - `replace` when replacing navigation history entry,\n   * - `enter` when entering new page by user action (e.g. hashchange event),\n   * - `return` when navigated to previously visited entry in navigation history.\n   */\n  readonly when: 'open' | 'replace' | 'enter' | 'return';\n\n  /**\n   * Entered page.\n   */\n  readonly to: Page;\n\n}\n\n/**\n * An event fired right before leaving the page in order to navigate to another one.\n *\n * This event can be cancelled in order to prevent actual navigation or history update. The navigation is also\n * cancelled when another navigation initiated by one of the handlers of this event.\n *\n * @event LeavePageEvent#wesib:leavePage\n */\nexport class LeavePageEvent extends Event {\n\n  /**\n   * When navigation event occurred. Either `pre-open` when leaving a page to open a new one, or `pre-replace` when\n   * leaving a page to replace it with another history entry.\n   */\n  readonly when: 'pre-open' | 'pre-replace';\n\n  /**\n   * The page to leave.\n   */\n  readonly from: Page;\n\n  /**\n   * Navigation target page.\n   */\n  readonly to: Page;\n\n  /**\n   * Constructs leave page event.\n   *\n   * @param type  Event type.\n   * @param init  Initialization options.\n   */\n  constructor(type: string, init: LeavePageEventInit) {\n    super(type, { ...init, cancelable: true });\n    this.when = init.when;\n    this.from = init.from;\n    this.to = init.to;\n  }\n\n}\n\n/**\n * {@link LeavePageEvent Leave page event} initialization options.\n */\nexport interface LeavePageEventInit extends Omit<EventInit, 'cancelable'> {\n\n  /**\n   * When navigation event occurred. Either `pre-open` when leaving a page to open a new one, or `pre-replace` when\n   * leaving a page to replace it with another history entry.\n   */\n  readonly when: 'pre-open' | 'pre-replace';\n\n  /**\n   * The page to leave.\n   */\n  readonly from: Page;\n\n  /**\n   * Navigation target page.\n   */\n  readonly to: Page;\n\n}\n\n/**\n * An event fired when navigation cancelled or failed.\n *\n * @event StayOnPageEvent#wesib:stayOnPage\n */\nexport class StayOnPageEvent extends Event {\n\n  /**\n   * When navigation event occurred. Always `stay`.\n   */\n  get when(): 'stay' {\n    return 'stay';\n  }\n\n  /**\n   * The page to stay at.\n   */\n  readonly from: Page;\n\n  /**\n   * Navigation target.\n   */\n  readonly to: Navigation.URLTarget;\n\n  /**\n   * A reason of navigation failure. This is set when navigation failed due to some error.\n   */\n  readonly reason?: any;\n\n  /**\n   * Constructs stay on page event.\n   *\n   * @param type  Event type.\n   * @param init  Initialization options.\n   */\n  constructor(type: string, init: StayOnPageEventInit) {\n    super(type, { ...init, cancelable: true });\n    this.from = init.from;\n    this.to = init.to;\n    this.reason = init.reason;\n  }\n\n}\n\n/**\n * {@link StayOnPageEvent Stay on page event} initialization options.\n */\nexport interface StayOnPageEventInit extends Omit<EventInit, 'cancelable'> {\n\n  /**\n   * The page to stay at.\n   */\n  readonly from: Page;\n\n  /**\n   * Navigation target.\n   */\n  readonly to: Navigation.URLTarget;\n\n  /**\n   * A reason of navigation failure. This is set when navigation failed due to some error.\n   */\n  readonly reason?: any;\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport {\n  AfterEvent,\n  AfterEvent__symbol,\n  EventKeeper,\n  EventSender,\n  OnDomEvent,\n  OnEvent,\n  OnEvent__symbol,\n} from 'fun-events';\nimport { EnterPageEvent, LeavePageEvent, NavigationEvent, StayOnPageEvent } from './navigation.event';\nimport { Page } from './page';\nimport { PageParam } from './page-param';\n\nconst Navigation__key = (/*#__PURE__*/ new SingleContextKey<Navigation>('navigation'));\n\n/**\n * Browser navigation service.\n *\n * Expected to be used as a [History] and [Location] APIs replacement.\n *\n * Fires additional navigation events the browser does not support natively.\n *\n * Implements an `EventSender` interface by sending {@link NavigationEvent navigation events} to registered receivers.\n *\n * Implements an `EventKeeper` interface by sending current {@link Page page} to registered receivers.\n *\n * Available as bootstrap context value when [[NavigationSupport]] feature is enabled.\n *\n * [History]: https://developer.mozilla.org/en-US/docs/Web/API/History\n * [Location]: https://developer.mozilla.org/en-US/docs/Web/API/Location\n */\nexport abstract class Navigation implements EventSender<[NavigationEvent]>, EventKeeper<[Page]> {\n\n  static get [ContextKey__symbol](): ContextKey<Navigation> {\n    return Navigation__key;\n  }\n\n  /**\n   * The number of element in navigation history.\n   */\n  abstract readonly length: number;\n\n  /**\n   * An `OnDomEvent` registrar of enter page event receivers.\n   */\n  abstract readonly onEnter: OnDomEvent<EnterPageEvent>;\n\n  /**\n   * An `OnDomEvent` registrar of leave page event receivers.\n   *\n   * These receivers may cancel navigation by calling `preventDefault()` method of received event.\n   */\n  abstract readonly onLeave: OnDomEvent<LeavePageEvent>;\n\n  /**\n   * An `OnDomEvent` registrar of stay on page event receivers.\n   *\n   * These receivers are informed when navigation has been cancelled by one of leave page event receivers,\n   * navigation failed due to e.g. invalid URL, or when another navigation request initiated before the page left.\n   */\n  abstract readonly onStay: OnDomEvent<StayOnPageEvent>;\n\n  /**\n   * An `OnEvent` registrar of navigation events receivers.\n   *\n   * The `[OnEvent__symbol]` property is an alias of this one.\n   */\n  abstract readonly on: OnEvent<[NavigationEvent]>;\n\n  get [OnEvent__symbol](): OnEvent<[NavigationEvent]> {\n    return this.on;\n  }\n\n  /**\n   * An `AfterEvent` registrar of current page receivers.\n   *\n   * The `[AfterEvent__symbol]` property is an alias of this one.\n   */\n  abstract readonly read: AfterEvent<[Page]>;\n\n  get [AfterEvent__symbol](): AfterEvent<[Page]> {\n    return this.read;\n  }\n\n  /**\n   * Goes to the previous page in navigation history.\n   *\n   * Calling this method is the same as calling `go(-1)`.\n   */\n  back(): void {\n    this.go(-1);\n  }\n\n  /**\n   * Goes to the next page in navigation history.\n   *\n   * Calling this method is the same as calling `go(1)`.\n   */\n  forward(): void {\n    this.go(1);\n  }\n\n  /**\n   * Loads a page from navigation history, identified by its relative location to the current page.\n   *\n   * For example `-1` navigates to previous page, while `1` navigates to the next one. If you specify an out-of-bounds\n   * value (for instance, specifying -1 when there are no previously-visited pages in navigation history), this method\n   * silently has no effect.\n   *\n   * @param delta  Relative location in navigation history to navigate to. The absent value or value of `0` reloads\n   * the current page.\n   */\n  abstract go(delta?: number): void;\n\n  /**\n   * Reloads current page.\n   *\n   * Calling this method is the same as calling `go()`.\n   */\n  reload(): void {\n    this.go();\n  }\n\n  /**\n   * Opens a page by navigating to the given `target`.\n   *\n   * Appends an entry to navigation history.\n   *\n   * @param target  Either navigation target or URL to navigate to.\n   * @fires PreNavigateEvent#wesib:preNavigate  On window object prior to actually navigate.\n   * Then navigates to the `target`, unless the event cancelled.\n   * @fires NavigateEvent@wesib:navigate  On window object when navigation succeed.\n   *\n   * @returns A promise resolved to navigated page, or to `null` otherwise.\n   */\n  abstract open(target: Navigation.Target | string | URL): Promise<Page | null>;\n\n  /**\n   * Replaces current navigation history entry with the given `target`.\n   *\n   * @param target  Either navigation target or URL to replace current history entry with.\n   * @fires PreNavigateEvent#wesib:preNavigate  On window object prior to actually update the history.\n   * Then navigates to the `target`, unless the event cancelled.\n   * @fires NavigateEvent@wesib:navigate  On window object when history updated.\n   *\n   * @returns A promise resolved to navigated page, or to `null` otherwise.\n   */\n  abstract replace(target: Navigation.Target | string | URL): Promise<Page | null>;\n\n  /**\n   * Replaces current page URL with the given one.\n   *\n   * Does not alter current page state, and does not trigger any events.\n   *\n   * @param url  An URL to replace the\n   *\n   * @returns Current page with updated URL.\n   */\n  abstract update(url: string | URL): Page;\n\n  /**\n   * Creates parameterized navigation instance and assigns a page parameter to apply to target page.\n   *\n   * @typeparam T  Parameter value type.\n   * @typeparam I  Parameter input type.\n   * @param ref  A reference to page navigation parameter to apply.\n   * @param input  Parameter input to use when constructing its value.\n   *\n   * @returns New parameterized navigation instance.\n   */\n  abstract with<T, I>(ref: PageParam.Ref<T, I>, input: I): Navigation.Parameterized;\n\n}\n\nexport namespace Navigation {\n\n  /**\n   * Parameterized navigation.\n   *\n   * Allows to assign target page parameters prior to navigating to it.\n   */\n  export interface Parameterized {\n\n    /**\n     * Applies parameter to navigation target page.\n     *\n     * @typeparam T  Parameter value type.\n     * @typeparam I  Parameter input type.\n     * @param ref  A reference to page navigation parameter to apply.\n     * @param input  Parameter input to use when constructing its value.\n     *\n     * @returns New parameterized navigation instance.\n     */\n    with<T, I>(ref: PageParam.Ref<T, I>, input: I): Parameterized;\n\n    /**\n     * Opens a page by navigating to the given `target` with provided page parameters.\n     *\n     * Appends an entry to navigation history.\n     *\n     * @param target  Either navigation target or URL to navigate to.\n     * @fires PreNavigateEvent#wesib:preNavigate  On window object prior to actually navigate.\n     * Then navigates to the `target`, unless the event cancelled.\n     * @fires NavigateEvent@wesib:navigate  On window object when navigation succeed.\n     *\n     * @returns A promise resolved to navigated page, or to `null` otherwise.\n     */\n    open(target: Navigation.Target | string | URL): Promise<Page | null>;\n\n    /**\n     * Replaces the most recent entry in navigation history with the given `target` and provided page parameters.\n     *\n     * @param target  Either navigation target or URL to replace the latest history entry with.\n     * @fires PreNavigateEvent#wesib:preNavigate  On window object prior to actually update the history.\n     * Then navigates to the `target`, unless the event cancelled.\n     * @fires NavigateEvent@wesib:navigate  On window object when history updated.\n     *\n     * @returns A promise resolved to navigated page, or to `null` otherwise.\n     */\n    replace(target: Navigation.Target | string | URL): Promise<Page | null>;\n\n  }\n\n  /**\n   * Navigation target.\n   *\n   * This is passed to [[Navigation.open]] and [[Navigation.replace]] methods.\n   */\n  export interface Target {\n\n    /**\n     * An URL to update the browser location string to.\n     */\n    readonly url?: string | URL;\n\n    /**\n     * Opaque data to apply to session history. I.e. either push or replace.\n     */\n    readonly data?: any;\n\n    /**\n     * New window title.\n     */\n    readonly title?: string;\n\n  }\n\n  /**\n   * Navigation target with URL value.\n   */\n  export interface URLTarget extends Target {\n\n    readonly url: URL;\n\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { BootstrapWindow } from '@wesib/wesib';\nimport { ContextUpKey, ContextUpRef, ContextValueOpts, ContextValues } from 'context-values';\nimport { AfterEvent, EventKeeper } from 'fun-events';\nimport { Navigation } from './navigation';\nimport { Page } from './page';\nimport Target = Navigation.Target;\n\n/**\n * Navigation agent signature.\n *\n * The agent is called by navigation methods when leaving current page and may alter navigation processing.\n * E.g. change navigation target. For that it should be registered in appropriate context.\n *\n * All registered agents are organized into chain. The first agent in chain is called by navigation method.\n */\nexport type NavigationAgent =\n/**\n * @param next  Either calls the next agent in chain, or applies the final navigation target if this agent is the last\n * one. Not calling this function effectively prevents navigation.\n * Accepts an optional [[Navigation.Target]] parameter. The original target will be used instead when omitted.\n * @param when  When navigation occurred. Either `pre-open`, or `pre-replace`.\n * @param from  The page to leave.\n * @param to  Navigation target page.\n */\n    (\n        this: void,\n        next: (this: void, target?: Target) => void,\n        when: 'pre-open' | 'pre-replace',\n        from: Page,\n        to: Page,\n    ) => void;\n\nclass NavigationAgentKey\n    extends ContextUpKey<NavigationAgent.Combined, NavigationAgent>\n    implements ContextUpRef<NavigationAgent.Combined, NavigationAgent, AfterEvent<NavigationAgent[]>> {\n\n  constructor(name: string) {\n    super(name);\n  }\n\n  grow<Ctx extends ContextValues>(\n      opts: ContextValueOpts<\n          Ctx,\n          NavigationAgent.Combined,\n          EventKeeper<NavigationAgent[]> | NavigationAgent,\n          AfterEvent<NavigationAgent[]>>,\n  ): NavigationAgent.Combined {\n\n    const { document } = opts.context.get(BootstrapWindow);\n\n    return (next, when, from, to) => {\n\n      const result = opts.byDefault(() => combinedAgent);\n\n      return result ? result(next, when, from, to) : next(to);\n    };\n\n    function combinedAgent(\n        next: (this: void, target: Navigation.URLTarget) => void,\n        when: 'pre-open' | 'pre-replace',\n        from: Page,\n        to: Page,\n    ): void {\n\n      let agents!: NavigationAgent[];\n\n      opts.seed.once((...sources) => agents = sources);\n\n      return navigate(0, to);\n\n      function navigate(agentIdx: number, agentTo: Page): void {\n\n        const agent = agents[agentIdx];\n\n        if (!agent) {\n          return next(agentTo);\n        }\n\n        agent(\n            (\n                {\n                  url: nextURL = agentTo.url,\n                  title: nextTitle = agentTo.title,\n                  data: nextData = agentTo.data,\n                }: Navigation.Target = agentTo,\n            ) => navigate(\n                agentIdx + 1,\n                {\n                  url: new URL(String(nextURL), document.baseURI),\n                  title: nextTitle,\n                  data: nextData,\n                  get visited() {\n                    return agentTo.visited;\n                  },\n                  get current() {\n                    return agentTo.current;\n                  },\n                  get(ref) {\n                    return agentTo.get(ref);\n                  },\n                  put(ref, input) {\n                    agentTo.put(ref, input);\n                  },\n                },\n            ),\n            when,\n            from,\n            agentTo,\n        );\n      }\n    }\n  }\n\n}\n\nexport namespace NavigationAgent {\n\n  /**\n   * Combined navigation agent signature.\n   *\n   * This is what is available under [[NavigationAgent]] key.\n   */\n  export type Combined =\n  /**\n   * @param next  Either calls the next agent in chain, or applies the final navigation target if this agent is the last\n   * one. Not calling this function effectively prevents navigation.\n   * Accepts an optional [[Navigation.Target]] parameter. The original target will be used instead when omitted.\n   * @param when  When navigation occurred. Either `pre-open`, or `pre-replace`.\n   * @param from  The page to leave.\n   * @param to  Navigation target page.\n   */\n      (\n          this: void,\n          next: (this: void, target: Navigation.URLTarget) => void,\n          when: 'pre-open' | 'pre-replace',\n          from: Page,\n          to: Page,\n      ) => void;\n\n}\n\n/**\n * A key of context value containing an [[NavigationAgent]] instance.\n *\n * The agent returned combines all registered agents into one. If no agent registered it just performs the navigation.\n */\nexport const NavigationAgent: ContextUpRef<NavigationAgent.Combined, NavigationAgent> =\n    (/*#__PURE__*/ new NavigationAgentKey('navigation-agent'));\n","/**\n * @module @wesib/generic\n */\nimport { Page } from './page';\nimport { PageParamContext } from './page-param-context';\n\n/**\n * A key of {@link PageParam.Ref page parameter request} property containing requested page parameter.\n */\nexport const PageParam__symbol = (/*#__PURE__*/ Symbol('page-param'));\n\n/**\n * Page navigation parameter.\n *\n * Can applied before navigation happened (i.e. to [[LeavePageEvent]]). Then it will be available to the target page\n * both before and after navigation.\n *\n * @typeparam T  Parameter value type.\n * @typaparam I  Parameter input type.\n */\nexport abstract class PageParam<T, I> implements PageParam.Ref<T, I> {\n\n  get [PageParam__symbol](): this {\n    return this;\n  }\n\n  /**\n   * Creates page parameter handle.\n   *\n   * This method is called when {@link Page.put assigning new page parameter}.It is called at most once per request,\n   * unless this parameter is assigned already. A {@link PageParam.Handle.put} method will be called instead\n   * in the latter case.\n   *\n   * @param page  A page to assign navigation parameter to.\n   * @param input  Parameter input used to construct its initial value.\n   * @param context  Page parameter context.\n   *\n   * @returns New page parameter value handle.\n   */\n  abstract create(page: Page, input: I, context: PageParamContext): PageParam.Handle<T, I>;\n\n}\n\nexport namespace PageParam {\n\n  /**\n   * Page navigation parameter reference.\n   *\n   * @typeparam T  Parameter value type.\n   * @typaparam I  Parameter input type.\n   */\n  export interface Ref<T, I> {\n\n    /**\n     * Referred page navigation parameter instance.\n     */\n    readonly [PageParam__symbol]: PageParam<T, I>;\n\n  }\n\n  /**\n   * Page navigation parameter value handle.\n   *\n   * Holds and maintains parameter value.\n   *\n   * Created by {@link PageParam.create} method.\n   *\n   * @typeparam T  Parameter value type.\n   * @typaparam I  Parameter input type.\n   */\n  export interface Handle<T, I> {\n\n    /**\n     * Returns current parameter value.\n     *\n     * @returns Parameter value.\n     */\n    get(): T;\n\n    /**\n     * Puts page parameter value.\n     *\n     * This method is called when {@link Page.put re-assigning page parameter}. It is called when page parameter\n     * is assigned already and can be used to update it. The update logic is up to the implementation.\n     *\n     * @param input  Parameter input to use when updating its value.\n     */\n    put(input: I): void;\n\n    /**\n     * Transfers parameter to target page.\n     *\n     * This is called right before [[LeavePageEvent]] is fired for each parameter handle of current page.\n     *\n     * @param to  A page to transfer parameter to.\n     * @param when  When the transfer happens. Either `pre-open`, `pre-replace`, `open`, or `return`. The latter is used\n     * when return to page generated by another app version. E.g. from the page that has been reloaded.\n     *\n     * @returns New parameter handle instance for target page, or `undefined` if nothing to transfer.\n     */\n    transfer?(to: Page, when: 'pre-open' | 'pre-replace' | 'enter' | 'return'): Handle<T, I> | undefined;\n\n    /**\n     * This method is called when the page this parameter created for is entered.\n     *\n     * @param page  Entered page.\n     * @param when  When the page is entered. Either `init`, `open`, `replace`, `enter`, or `return`.\n     */\n    enter?(page: Page, when: 'init' | 'open' | 'replace' | 'enter' | 'return'): void;\n\n    /**\n     * This method is called when the page this parameter created for is left.\n     */\n    leave?(): void;\n\n    /**\n     * This method is called when page navigation aborted and target page won't be reached.\n     *\n     * The handle won't be accessed after this method call.\n     *\n     * @param at  The page the browser remains at.\n     */\n    stay?(at: Page): void;\n\n    /**\n     * This method is called when the page this parameter is created for is removed from navigation history.\n     *\n     * The handle won't be accessed after this method call.\n     */\n    forget?(): void;\n\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ContextValues } from 'context-values';\n\n/**\n * Page parameter context.\n *\n * Provides values available in bootstrap context.\n */\nexport abstract class PageParamContext extends ContextValues {\n}\n","import { BootstrapContext, bootstrapDefault, BootstrapWindow } from '@wesib/wesib';\nimport { itsEach } from 'a-iterable';\nimport { noop } from 'call-thru';\nimport { ContextKey__symbol, ContextRegistry, SingleContextKey } from 'context-values';\nimport { ValueTracker } from 'fun-events';\nimport { Navigation } from './navigation';\nimport { Page } from './page';\nimport { PageParam, PageParam__symbol } from './page-param';\nimport { PageParamContext } from './page-param-context';\n\nconst RoutingHistory__key = (/*#__PURE__*/ new SingleContextKey<NavHistory>(\n    'navigation-history',\n    {\n      byDefault: bootstrapDefault(ctx => new NavHistory(ctx)),\n    },\n));\n\n/**\n * @internal\n */\nexport class NavHistory {\n\n  static get [ContextKey__symbol]() {\n    return RoutingHistory__key;\n  }\n\n  private readonly _document: Document;\n  private readonly _location: Location;\n  private readonly _history: History;\n  private readonly _entries = new Map<number, PageEntry>();\n  private readonly _uid: string;\n  private _lastId = 0;\n\n  constructor(private readonly _context: BootstrapContext) {\n    const window = _context.get(BootstrapWindow);\n\n    this._document = window.document;\n    this._location = window.location;\n    this._history = window.history;\n    this._uid = btoa(String(Math.random()));\n  }\n\n  init(): PageEntry {\n\n    const { data } = extractNavData(this._history.state);\n    const entry = this.newEntry({\n      url: new URL(this._location.href),\n      data,\n      title: this._document.title,\n    });\n\n    this._entries.set(entry.id, entry);\n    entry.schedule(() => {\n      entry.enter('init');\n      this._history.replaceState(this._historyState(entry), '');\n    });\n\n    return entry;\n  }\n\n  newEntry(target: Navigation.URLTarget): PageEntry {\n    return new PageEntry(this._context, ++this._lastId, target);\n  }\n\n  open(\n      toEntry: PageEntry,\n      tracker: ValueTracker<PageEntry>,\n  ) {\n\n    const { page: { title = '', url } } = toEntry;\n\n    this._history.pushState(\n        this._historyState(toEntry),\n        title,\n        url.href,\n    );\n\n    this._enter('open', toEntry, tracker);\n  }\n\n  private _enter(\n      when: 'open' | 'enter',\n      toEntry: PageEntry,\n      tracker: ValueTracker<PageEntry>,\n  ) {\n\n    const fromEntry = tracker.it;\n\n    this._entries.set(toEntry.id, toEntry);\n\n    try {\n      // Forget all entries starting from next one\n      for (let e = fromEntry.next; e; e = e.next) {\n        this._forget(e);\n      }\n    } finally {\n      toEntry.prev = fromEntry;\n      fromEntry.next = toEntry;\n      toEntry.schedule(() => {\n        try {\n          fromEntry.leave();\n        } finally {\n          toEntry.enter(when);\n        }\n      });\n      tracker.it = toEntry;\n    }\n  }\n\n  replace(\n      toEntry: PageEntry,\n      tracker: ValueTracker<PageEntry>,\n  ) {\n\n    const fromEntry = tracker.it;\n    const { page: { title = '', url } } = toEntry;\n\n    this._history.replaceState(\n        this._historyState(toEntry),\n        title,\n        url.href,\n    );\n\n    this._entries.set(toEntry.id, toEntry);\n\n    const prev = fromEntry.prev;\n\n    if (prev) {\n      toEntry.prev = prev;\n      prev.next = toEntry;\n    }\n\n    toEntry.schedule(() => {\n      try {\n        fromEntry.leave();\n      } finally {\n        try {\n          this._forget(fromEntry);\n        } finally {\n          toEntry.enter('replace');\n        }\n      }\n    });\n    tracker.it = toEntry;\n  }\n\n  popState(\n      popState: PopStateEvent,\n      tracker: ValueTracker<PageEntry>,\n  ): PageEntry | undefined {\n\n    const { state } = popState;\n\n    if (state == null) {\n      // Hash change\n      if (this._history.state == null) {\n        // Not a return\n        return this._changeHash(tracker);\n      }\n      return; // Already handled by `hashchange` handler\n    }\n\n    const fromEntry = tracker.it;\n    const { uid, data, id: pageId } = extractNavData(state);\n    let toEntry: PageEntry;\n\n    const existingEntry = uid === this._uid && pageId != null ? this._entries.get(pageId) : undefined;\n\n    if (existingEntry) {\n      toEntry = existingEntry;\n    } else {\n      // Returning to page existed in previous app version\n      toEntry = this.newEntry({\n        url: new URL(this._location.href),\n        data,\n        title: this._document.title,\n      });\n      fromEntry.transfer(toEntry, 'return');\n      this._entries.set(toEntry.id, toEntry);\n      this._history.replaceState(this._historyState(toEntry), '');\n    }\n\n    toEntry.schedule(() => {\n      try {\n        fromEntry.leave();\n      } finally {\n        toEntry.enter('return');\n      }\n    });\n\n    tracker.it = toEntry;\n\n    return toEntry;\n  }\n\n  public hashChange(tracker: ValueTracker<PageEntry>): PageEntry | void {\n    if (this._history.state == null) {\n      // Not a return\n      return this._changeHash(tracker);\n    }\n    // Otherwise, a `popstate` event is also triggered,\n    // and its handler would do the job (or already did).\n  }\n\n  public update(tracker: ValueTracker<PageEntry>, url: URL): PageEntry {\n\n    const oldEntry = tracker.it;\n    const newEntry = new PageEntry(this._context, ++this._lastId, { ...oldEntry.page, url }, oldEntry);\n\n    this._entries.set(newEntry.id, newEntry);\n    this._history.replaceState(this._historyState(newEntry), '', url.href);\n    this._entries.delete(oldEntry.id);\n\n    return tracker.it = newEntry;\n  }\n\n  private _changeHash(tracker: ValueTracker<PageEntry>): PageEntry {\n\n    const fromEntry = tracker.it;\n    const toEntry = this.newEntry({\n      url: new URL(this._location.href),\n      data: null,\n      title: this._document.title,\n    });\n\n    try {\n      fromEntry.transfer(toEntry, 'enter');\n    } finally {\n      this._history.replaceState(this._historyState(toEntry), '');\n      this._enter('enter', toEntry, tracker);\n    }\n\n    return toEntry;\n  }\n\n  private _forget(entry: PageEntry) {\n    this._entries.delete(entry.id);\n    entry.forget();\n  }\n\n  private _historyState({ id, page: { data } }: PageEntry): NavDataEnvelope {\n    return {\n      [NAV_DATA_KEY]: {\n        uid: this._uid,\n        id,\n        data,\n      },\n    };\n  }\n\n}\n\n/**\n * @internal\n */\nexport interface PartialNavData {\n  readonly uid?: string;\n  readonly id?: number;\n  readonly data: any;\n}\n\n/**\n * @internal\n */\nexport interface NavData extends PartialNavData {\n  readonly uid: string;\n  readonly id: number;\n}\n\n/**\n * @internal\n */\nexport const NAV_DATA_KEY = 'wesib:navigation:data' as const;\n\n/**\n * @internal\n */\nexport interface NavDataEnvelope {\n  readonly [NAV_DATA_KEY]: NavData;\n}\n\nfunction extractNavData(state: any): PartialNavData {\n  return state == null || typeof state !== 'object' ? { data: state } : state[NAV_DATA_KEY];\n}\n\n/**\n * @internal\n */\nexport class PageEntry {\n\n  next?: PageEntry;\n  prev?: PageEntry;\n  private _status: PageStatus = PageStatus.New;\n  readonly page: Page;\n  private readonly _params: Map<PageParam<any, any>, PageParam.Handle<any, any>>;\n  private _update: () => void = noop;\n\n  constructor(\n      private readonly _context: BootstrapContext,\n      readonly id: number,\n      target: Navigation.URLTarget,\n      proto?: PageEntry,\n  ) {\n    this._params = proto ? proto._params : new Map<PageParam<any, any>, PageParam.Handle<any, any>>();\n\n    const entry = this;\n\n    this.page = {\n      url: target.url,\n      title: target.title,\n      data: target.data,\n      get visited() {\n        return !!entry._status;\n      },\n      get current() {\n        return entry._status === PageStatus.Current;\n      },\n      get(ref) {\n        return entry.get(ref);\n      },\n      put(ref, input) {\n        entry.put(ref, input);\n      },\n    };\n  }\n\n  get<T>(ref: PageParam.Ref<T, unknown>): T | undefined {\n\n    const handle: PageParam.Handle<T, unknown> | undefined = this._params.get(ref[PageParam__symbol]);\n\n    return handle && handle.get();\n  }\n\n  put<T, I>(ref: PageParam.Ref<T, I>, input: I): T {\n\n    const param = ref[PageParam__symbol];\n    const handle: PageParam.Handle<T, I> | undefined = this._params.get(param);\n\n    if (handle) {\n      handle.put(input);\n      return handle.get();\n    }\n\n    const registry = new ContextRegistry<ParamContext>(this._context);\n\n    class ParamContext extends PageParamContext {\n      readonly get: PageParamContext['get'] = registry.newValues().get;\n    }\n\n    const newHandle = param.create(this.page, input, new ParamContext());\n\n    this._params.set(param, newHandle);\n    if (this.page.current && newHandle.enter) {\n      newHandle.enter(this.page, 'init');\n    }\n\n    return newHandle.get();\n  }\n\n  transfer(to: PageEntry, when: 'pre-open' | 'pre-replace' | 'enter' | 'return') {\n    itsEach(this._params.entries(), ([param, handle]) => {\n      if (handle.transfer) {\n\n        const transferred = handle.transfer(to.page, when);\n\n        if (transferred) {\n          to._params.set(param, transferred);\n        }\n      }\n    });\n  }\n\n  stay(at: Page) {\n    itsEach(this._params.values(), handle => handle.stay && handle.stay(at));\n  }\n\n  enter(when: 'init' | 'open' | 'replace' | 'enter' | 'return') {\n    this._status = PageStatus.Current;\n    itsEach(this._params.values(), handle => handle.enter && handle.enter(this.page, when));\n  }\n\n  leave() {\n    this._status = PageStatus.Visited;\n    itsEach(this._params.values(), handle => handle.leave && handle.leave());\n  }\n\n  forget() {\n    itsEach(this._params.values(), handle => handle.forget && handle.forget());\n    this._params.clear();\n  }\n\n  schedule(update: () => void) {\n    this._update = update;\n  }\n\n  apply() {\n\n    const update = this._update;\n\n    this._update = noop;\n    update();\n  }\n\n}\n\nconst enum PageStatus {\n  New,\n  Visited,\n  Current,\n}\n","import { BootstrapContext, BootstrapWindow, mergeFunctions } from '@wesib/wesib';\nimport { noop } from 'call-thru';\nimport { AfterEvent, DomEventDispatcher, onAny, trackValue } from 'fun-events';\nimport { NavHistory, PageEntry } from './nav-history.impl';\nimport { Navigation as Navigation_ } from './navigation';\nimport { NavigationAgent } from './navigation-agent';\nimport {\n  EnterPageEvent,\n  LeavePageEvent,\n  NavigationEvent,\n  NavigationEventType,\n  StayOnPageEvent,\n} from './navigation.event';\nimport { Page } from './page';\nimport { PageParam } from './page-param';\n\nexport function createNavigation(context: BootstrapContext): Navigation_ {\n\n  const window = context.get(BootstrapWindow);\n  const { document, history } = window;\n  const dispatcher = new DomEventDispatcher(window);\n  const navHistory = context.get(NavHistory);\n  const agent = context.get(NavigationAgent);\n  const onEnter = dispatcher.on<EnterPageEvent>(NavigationEventType.EnterPage);\n  const onLeave = dispatcher.on<LeavePageEvent>(NavigationEventType.LeavePage);\n  const onStay = dispatcher.on<StayOnPageEvent>(NavigationEventType.StayOnPage);\n  const onEvent = onAny<[NavigationEvent]>(onEnter, onLeave, onStay);\n  const nav = trackValue<PageEntry>(navHistory.init());\n\n  nav.read(nextEntry => nextEntry.apply()); // The very first page entry receiver applies scheduled updates to page\n\n  const readPage: AfterEvent<[Page]> = nav.read.keep.thru(entry => entry.page);\n  let next: Promise<any> = Promise.resolve();\n\n  dispatcher.on<PopStateEvent>('popstate')(popState => {\n\n    const entry = navHistory.popState(popState, nav);\n\n    if (entry) {\n      dispatcher.dispatch(new EnterPageEvent(\n          NavigationEventType.EnterPage,\n          {\n            when: popState.state != null ? 'return' : 'enter',\n            to: entry.page,\n          },\n      ));\n    }\n  });\n\n  dispatcher.on('hashchange')(() => {\n\n    const entry = navHistory.hashChange(nav);\n\n    if (entry) {\n      dispatcher.dispatch(new EnterPageEvent(\n          NavigationEventType.EnterPage,\n          {\n            when: 'enter',\n            to: entry.page,\n          },\n      ));\n    }\n  });\n\n  class Navigation extends Navigation_ {\n\n    get length() {\n      return history.length;\n    }\n\n    get onEnter() {\n      return onEnter;\n    }\n\n    get onLeave() {\n      return onLeave;\n    }\n\n    get onStay() {\n      return onStay;\n    }\n\n    get on() {\n      return onEvent;\n    }\n\n    get read() {\n      return readPage;\n    }\n\n    go(delta?: number): void {\n      history.go(delta);\n    }\n\n    open(target: Navigation_.Target | string | URL) {\n      return navigate('pre-open', 'open', target);\n    }\n\n    replace(target: Navigation_.Target | string | URL) {\n      return navigate('pre-replace', 'replace', target);\n    }\n\n    update(url: string | URL): Page {\n      return navHistory.update(nav, toURL(url)).page;\n    }\n\n    with<T, I>(ref: PageParam.Ref<T, I>, input: I): Navigation_.Parameterized {\n      return withParam(page => page.put(ref, input));\n    }\n\n  }\n\n  return new Navigation();\n\n  function withParam(applyParams: (page: Page) => void): Navigation_.Parameterized {\n    return {\n      with<TT, II>(ref: PageParam.Ref<TT, II>, input: II): Navigation_.Parameterized {\n        return withParam(mergeFunctions(applyParams, page => page.put(ref, input)));\n      },\n      open(target: Navigation_.Target | string | URL) {\n        return navigate('pre-open', 'open', target, applyParams);\n      },\n      replace(target: Navigation_.Target | string | URL) {\n        return navigate('pre-replace', 'replace', target, applyParams);\n      },\n    };\n  }\n\n  function toURL(url: string | URL | undefined): URL {\n    if (typeof url === 'string') {\n      return new URL(url, document.baseURI);\n    }\n    return url || nav.it.page.url;\n  }\n\n  function urlTargetOf(target: Navigation_.Target | string | URL): Navigation_.URLTarget {\n    if (typeof target === 'string' || target instanceof URL) {\n      return { url: toURL(target) };\n    }\n    if (target.url instanceof URL) {\n      return target as Navigation_.URLTarget;\n    }\n    return { ...target, url: toURL(target.url) };\n  }\n\n  function navigate(\n      whenLeave: 'pre-open' | 'pre-replace',\n      when: 'open' | 'replace',\n      target: Navigation_.Target | string | URL,\n      applyParams: (page: Page) => void = noop,\n  ): Promise<Page | null> {\n\n    const urlTarget = urlTargetOf(target);\n    const promise = next = next.then(doNavigate, doNavigate);\n\n    return promise;\n\n    function doNavigate(): Page | null {\n\n      let toEntry: PageEntry | undefined;\n\n      try {\n\n        const prepared = prepare();\n\n        if (!prepared) {\n          return prepared; // Navigation cancelled\n        }\n\n        toEntry = prepared;\n\n        navHistory[when](toEntry, nav);\n\n        dispatcher.dispatch(new EnterPageEvent(\n            NavigationEventType.EnterPage,\n            {\n              when,\n              to: toEntry.page,\n            },\n        ));\n\n        return toEntry.page;\n      } catch (e) {\n        stay(toEntry, e);\n        throw e;\n      }\n    }\n\n    function prepare(): PageEntry | null {\n      if (next !== promise) {\n        return stay();\n      }\n\n      const fromEntry = nav.it;\n      const toEntry = navHistory.newEntry(urlTarget);\n\n      fromEntry.transfer(toEntry, whenLeave);\n\n      const leavePage = new LeavePageEvent(\n          NavigationEventType.LeavePage,\n          {\n            when: whenLeave,\n            from: fromEntry.page,\n            to: toEntry.page,\n          },\n      );\n\n      applyParams(toEntry.page);\n      if (!dispatcher.dispatch(leavePage) || next !== promise) {\n        return stay(toEntry);\n      }\n\n      let finalTarget: Navigation_.URLTarget | undefined;\n\n      agent(t => finalTarget = t, whenLeave, leavePage.from, leavePage.to);\n\n      if (!finalTarget) {\n        return stay(toEntry); // Some agent didn't call `next()`.\n      }\n\n      return toEntry;\n    }\n\n    function stay(toEntry?: PageEntry, reason?: any): null {\n      if (toEntry) {\n        toEntry.stay(nav.it.page);\n      }\n\n      dispatcher.dispatch(new StayOnPageEvent(\n          NavigationEventType.StayOnPage,\n          {\n            from: nav.it.page,\n            to: urlTarget,\n            reason,\n          },\n      ));\n\n      return null;\n    }\n\n  }\n}\n","/**\n * @module @wesib/generic\n */\nimport { FeatureDef, FeatureDef__symbol } from '@wesib/wesib';\nimport { Navigation } from './navigation';\nimport { createNavigation } from './navigation.impl';\n\nconst NavigationSupport__feature: FeatureDef = {\n  setup(setup) {\n    setup.provide({ a: Navigation, by: createNavigation });\n  },\n};\n\n/**\n * Browser navigation support feature.\n *\n * Makes [[Navigation]] available in bootstrap context.\n */\nexport class NavigationSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return NavigationSupport__feature;\n  }\n\n}\n","import { nextArgs, nextSkip } from 'call-thru';\nimport { eventSupply, EventSupply, OnEvent, onEventBy, trackValue } from 'fun-events';\nimport { Page } from '../page';\nimport { PageLoadResponse } from './page-load-response';\nimport { PageLoader } from './page-loader.impl';\n\n/**\n * @internal\n */\nexport function cachingPageLoader(loader: PageLoader): PageLoader {\n\n  let state: {\n    readonly url: string;\n    readonly on: OnEvent<[PageLoadResponse]>;\n    readonly sup: EventSupply;\n  } | undefined;\n\n  return page => {\n\n    const url = pageUrl(page);\n\n    if (state) {\n      if (state.url === url) {\n        return state.on;\n      }\n      state.sup.off();\n    }\n\n    let tracked: {\n      readonly on: OnEvent<[PageLoadResponse]>;\n      num: number;\n    } | undefined;\n    const supply = eventSupply().whenOff(() => {\n      state = undefined;\n      tracked = undefined;\n    });\n\n    const on = onEventBy<[PageLoadResponse]>(receiver => {\n      if (!tracked) {\n\n        const onLoad = loader(page);\n        const tracker = trackValue<PageLoadResponse>();\n        const trackSupply = onLoad(resp => {\n          tracker.it = resp;\n        }).whenOff(reason => {\n          // Error drops page cache, unlike successful page load.\n          if (reason != null) {\n            supply.off(reason);\n          }\n        });\n\n        supply.whenOff(reason => {\n          trackSupply.off(reason);\n          tracker.done(reason);\n        });\n\n        tracked = {\n          on: tracker.read.thru_(\n              response => response ? nextArgs(response) : nextSkip(),\n          ),\n          num: 0,\n        };\n      }\n\n      const requested = tracked;\n\n      ++requested.num;\n\n      return requested.on(receiver).needs(supply).whenOff(reason => {\n        if (!--requested.num) {\n          // Allow to request the same page again\n          Promise.resolve().then(() => {\n            if (!requested.num && requested === tracked) {\n              supply.off(reason);\n            }\n          });\n        }\n      });\n    });\n\n    state = { url, on, sup: supply };\n\n    return on;\n  };\n}\n\nfunction pageUrl(page: Page): string {\n  return new URL('', page.url).href;\n}\n","import { flatMapIt, itsEach, itsIterator } from 'a-iterable';\nimport { asis, noop } from 'call-thru';\nimport {\n  EventEmitter,\n  eventReceiver,\n  EventReceiver,\n  eventSupply,\n  EventSupply,\n  noEventSupply,\n  OnEvent,\n  onEventBy,\n} from 'fun-events';\nimport { Navigation } from '../navigation';\nimport { Page } from '../page';\nimport { PageParam } from '../page-param';\nimport { PageFragmentRequest, PageLoadRequest } from './page-load-request';\nimport { PageLoadResponse } from './page-load-response';\nimport { PageLoader } from './page-loader.impl';\n\n/**\n * @internal\n */\nexport interface PageLoadReq extends PageLoadRequest {\n\n  readonly receiver: EventReceiver.Generic<[PageLoadResponse]>;\n\n}\n\nclass PageLoadAbortError extends Error {}\n\n/**\n * @internal\n */\nexport class PageLoadRequests implements Iterable<PageLoadReq> {\n\n  private readonly _map = new Map<EventSupply, PageLoadReq[]>();\n\n  constructor(\n      private readonly _navigation: Navigation,\n      private readonly _loader: PageLoader,\n  ) {}\n\n  get fragments(): readonly PageFragmentRequest[] {\n\n    const result: PageFragmentRequest[] = [];\n\n    for (const request of this) {\n      if (!request.fragment) {\n        return [];\n      }\n      result.push(request.fragment);\n    }\n\n    return result;\n  }\n\n  [Symbol.iterator](): Iterator<PageLoadReq> {\n    return itsIterator(flatMapIt(this._map.values(), asis));\n  }\n\n  handle(): PageParam.Handle<void, PageLoadRequest> {\n\n    const self = this;\n    const pageSupply = eventSupply();\n    let loadSupply = noEventSupply();\n\n    return {\n      get() {},\n      put(request: PageLoadRequest): void {\n        self._add(request);\n      },\n      transfer(to: Page) {\n\n        const transferred = self._transfer();\n\n        to.put(pageLoadRequestsParam, transferred);\n\n        return transferred.handle();\n      },\n      enter(page: Page, when: 'init' | 'open' | 'replace' | 'return'): void {\n        if (when === 'init') {\n          // The page is loaded already. No need to fetch it.\n          return;\n        }\n\n        loadSupply = eventSupply().needs(pageSupply);\n\n        const onLoad = onEventBy<[PageLoadResponse]>(responseReceiver => {\n\n          const emitter = new EventEmitter<[PageLoadResponse]>();\n          const supply = emitter.on(responseReceiver);\n\n          self._loader(page)(response => emitter.send(response)).whenOff(error => {\n            if (error !== undefined && !(error instanceof PageLoadAbortError)) {\n              // Report current page load error as failed load response\n              emitter.send({\n                ok: false as const,\n                page,\n                error,\n              });\n            }\n          }).needs(loadSupply);\n\n          return supply;\n        }).share();\n\n        itsEach(\n            self,\n            ({ fragment, receiver }) => onFragment(onLoad, fragment)({\n              supply: eventSupply().needs(receiver.supply),\n              receive(context, response): void {\n                receiver.receive(context, response);\n              },\n            }),\n        );\n      },\n      leave(): void {\n        loadSupply.off(new PageLoadAbortError('page left'));\n      },\n      stay() {\n        pageSupply.off(new PageLoadAbortError('navigation cancelled'));\n      },\n      forget() {\n        pageSupply.off(new PageLoadAbortError('page forgotten'));\n      },\n    };\n\n  }\n\n  private _add(request: PageLoadRequest) {\n\n    const req = { ...request, receiver: eventReceiver(request.receiver) };\n    const { supply } = req.receiver;\n    const list = this._map.get(supply);\n\n    if (list) {\n      list.push(req);\n    } else {\n      this._map.set(supply, [req]);\n      supply.whenOff(() => this._map.delete(supply));\n    }\n  }\n\n  private _transfer(): PageLoadRequests {\n\n    const transferred = new PageLoadRequests(this._navigation, this._loader);\n\n    for (const [supply, list] of this._map.entries()) {\n      transferred._map.set(supply, [...list]);\n    }\n\n    return transferred;\n  }\n\n}\n\nfunction onFragment(\n    onLoad: OnEvent<[PageLoadResponse]>,\n    fragment?: PageFragmentRequest,\n): OnEvent<[PageLoadResponse]> {\n  return fragment\n      ? onLoad.thru_(\n          response => response.ok\n              ? {\n                ...response,\n                fragment: (\n                    fragment.tag != null\n                    ? response.document.getElementsByTagName(fragment.tag)[0]\n                    : response.document.getElementById(fragment.id)\n                ) || undefined,\n              }\n              : response,\n      )\n      : onLoad;\n}\n\nclass PageLoadRequestsParam extends PageParam<PageLoadRequests, PageLoadRequests> {\n\n  create(\n      _page: Page,\n      requests: PageLoadRequests,\n  ): PageParam.Handle<PageLoadRequests, PageLoadRequests> {\n    return {\n      get() {\n        return requests;\n      },\n      put: noop,\n    };\n  }\n\n}\n\n/**\n * @internal\n */\nexport const pageLoadRequestsParam: PageParam<PageLoadRequests, PageLoadRequests> = new PageLoadRequestsParam();\n","/**\n * @module @wesib/generic\n */\nimport { ContextUpRef } from 'context-values';\nimport { EventSender, OnEvent } from 'fun-events';\nimport { FetchAgentKey } from '../../fetch/fetch-agent-key.impl';\nimport { PageLoadResponse } from './page-load-response';\n\n/**\n * Page load agent signature.\n *\n * The agent can be used to alter loaded page document processing. For that it should be registered in appropriate\n * context.\n *\n * All registered agents are organized into chain. The first agent in chain is called by page loader.\n */\nexport type PageLoadAgent =\n/**\n * @param next  Either calls the next agent in chain, or actually loads page document if this agent is the last one.\n * Accepts an optional `Request` parameter. The original request will be used instead when omitted.\n * @param request  HTTP request.\n *\n * @returns An `EventSender` of page load response. It is returned either to preceding agent in chain, or as a loaded\n * document.\n */\n    (\n        this: void,\n        next: (this: void, request?: Request) => OnEvent<[PageLoadResponse]>,\n        request: Request,\n    ) => EventSender<[PageLoadResponse]>;\n\nexport namespace PageLoadAgent {\n\n  /**\n   * Combined page load agent signature.\n   *\n   * This is what is available under [[PageLoadAgent]] key.\n   */\n  export type Combined =\n  /**\n   * @param next  Either calls the next agent in chain, or actually loads page document if this agent is the last one.\n   * Accepts `Request` parameter.\n   * @param request  HTTP request.\n   *\n   * @returns An `OnEvent` registrar of loaded document.\n   */\n      (\n          this: void,\n          next: (this: void, request: Request) => OnEvent<[PageLoadResponse]>,\n          request: Request,\n      ) => OnEvent<[PageLoadResponse]>;\n\n}\n\n/**\n * A key of context value containing an [[PageLoadAgent]] instance.\n *\n * The agent returned combines all registered agents into one. If no agent registered it just performs the fetch.\n */\nexport const PageLoadAgent: ContextUpRef<PageLoadAgent.Combined, PageLoadAgent> =\n    (/*#__PURE__*/ new FetchAgentKey<[PageLoadResponse]>('page-load-agent'));\n","import { noop, valueProvider } from 'call-thru';\nimport { ContextUpRef, FnContextKey } from 'context-values';\n\n/**\n * A signature of page load URL modifier function.\n *\n * All such functions registered in bootstrap context are called in order of their registration with current page URL.\n * They are able to modify it, e.g. by applying additional URL search parameters. The modified URL is used then to load\n * the page.\n */\nexport type PageLoadURLModifier =\n/**\n * @param url  An URL of page to load.\n */\n    (this: void, url: URL) => void;\n\n/**\n * A key of bootstrap context value containing a page load URL modifier.\n *\n * Does not modify URL by default.\n */\nexport const PageLoadURLModifier: ContextUpRef<PageLoadURLModifier, PageLoadURLModifier> =\n    (/*#__PURE__*/ new FnContextKey('page-load-url', { byDefault: valueProvider(noop) }));\n","import { BootstrapContext, bootstrapDefault, BootstrapWindow } from '@wesib/wesib';\nimport { itsReduction } from 'a-iterable';\nimport { SingleContextKey } from 'context-values';\nimport { afterThe, EventEmitter, eventSupply, OnEvent, onEventBy } from 'fun-events';\nimport { hthvParse, hthvQuote } from 'http-header-value';\nimport { HttpFetch } from '../../fetch';\nimport { Page } from '../page';\nimport { PageLoadAgent } from './page-load-agent';\nimport { pageLoadRequestsParam } from './page-load-requests.impl';\nimport { PageLoadResponse } from './page-load-response';\nimport { PageLoadURLModifier } from './page-load-url-modifier';\n\n/**\n * @internal\n */\nexport type PageLoader = (this: void, page: Page) => OnEvent<[PageLoadResponse]>;\n\n/**\n * @internal\n */\nexport const PageLoader = (/*#__PURE__*/ new SingleContextKey<PageLoader>(\n    'page-loader',\n    {\n      byDefault: bootstrapDefault(newPageLoader),\n    },\n));\n\nfunction newPageLoader(context: BootstrapContext): PageLoader {\n\n  const window = context.get(BootstrapWindow);\n  const httpFetch = context.get(HttpFetch);\n  const modifyURL = context.get(PageLoadURLModifier);\n  const agent = context.get(PageLoadAgent);\n  const parser: DOMParser = new (window as any).DOMParser();\n\n  return page => {\n\n    const url = new URL(page.url.href);\n\n    modifyURL(url);\n\n    const request = new Request(\n        url.href,\n        {\n          mode: 'same-origin',\n          credentials: 'same-origin',\n          headers: new Headers({ 'Accept': 'text/html' }),\n        },\n    );\n\n    return onEventBy(receiver => agent(fetch, request)(receiver));\n\n    function fetch(fetchRequest: Request): OnEvent<[PageLoadResponse]> {\n      fetchRequest = pageFragmentsRequest(page, fetchRequest);\n\n      const responseTextEmitter = new EventEmitter<[Response, string]>();\n      const onResponse: OnEvent<[PageLoadResponse]> = responseTextEmitter.on.thru_(\n          (response, text) => {\n            if (!response.ok) {\n              return {\n                ok: false as const,\n                page,\n                response,\n                error: response.status,\n              };\n            }\n            try {\n              return {\n                ok: true as const,\n                page,\n                response,\n                document: parsePageDocument(parser, url, response, text),\n              };\n            } catch (error) {\n              return {\n                ok: false as const,\n                page,\n                response,\n                error,\n              };\n            }\n          },\n      );\n\n      return onEventBy<[PageLoadResponse]>(receiver => {\n\n        const { supply } = receiver;\n\n        afterThe<[PageLoadResponse.Start]>({ page }).once({\n          supply: eventSupply().needs(supply),\n          receive(ctx, start) {\n            receiver.receive(ctx, start);\n          },\n        });\n\n        const responseSupply = httpFetch(fetchRequest)(response => {\n          onResponse(receiver);\n          response.text().then(\n              text => {\n                responseTextEmitter.send(response, text);\n                supply.needs(responseSupply);\n              },\n          ).catch(\n              e => supply.off(e),\n          );\n        });\n      });\n    }\n  };\n}\n\nfunction pageFragmentsRequest(page: Page, request: Request ) {\n\n  const fragments = page.get(pageLoadRequestsParam)?.fragments;\n\n  if (!fragments || !fragments.length) {\n    return request;\n  }\n\n  return new Request(\n      request,\n      {\n        headers: {\n          'Accept-Fragment': itsReduction(\n              fragments,\n              (header, fragment) =>\n                  (header ? header + ', ' : '')\n                  + (\n                      fragment.tag != null\n                          ? 'tag=' + hthvQuote(fragment.tag)\n                          : 'id=' + hthvQuote(fragment.id)\n                  ),\n              '',\n          ),\n        },\n      },\n  );\n}\n\nfunction parsePageDocument(parser: DOMParser, url: URL, response: Response, text: string): Document {\n\n  const doc = parser.parseFromString(\n      text,\n      hthvParse(response.headers.get('Content-Type') || 'text/html')[0].v as SupportedType,\n  );\n\n  if (doc.head) {\n\n    const base = doc.head.querySelector('base');\n\n    if (base) {\n      base.href = new URL(base.getAttribute('href')!, url).href;\n    } else {\n\n      const newBase = doc.createElement('base');\n\n      newBase.href = url.href;\n\n      doc.head.appendChild(newBase);\n    }\n  }\n\n  return doc;\n}\n","import { Navigation } from '../navigation';\nimport { Page } from '../page';\nimport { PageParam } from '../page-param';\nimport { PageParamContext } from '../page-param-context';\nimport { cachingPageLoader } from './caching-page-loader.impl';\nimport { PageLoadRequest } from './page-load-request';\nimport { PageLoadRequests, pageLoadRequestsParam } from './page-load-requests.impl';\nimport { PageLoader } from './page-loader.impl';\n\nclass PageLoadParam extends PageParam<void, PageLoadRequest> {\n\n  create(page: Page, request: PageLoadRequest, context: PageParamContext) {\n\n    const requests = new PageLoadRequests(context.get(Navigation), cachingPageLoader(context.get(PageLoader)));\n    const handle = requests.handle();\n\n    page.put(pageLoadRequestsParam, requests);\n    handle.put(request);\n\n    return handle;\n  }\n\n}\n\n/**\n * Page load parameter.\n *\n * Accepts a {@link PageLoadRequest page load request} as input.\n *\n * A page load is initiated whenever a page with new address is {@link Navigation.onEnter entered}.\n *\n * Page load won't be initiated if:\n * - page load parameter is not {@link Page.put} added,\n * - all added {@link PageLoadRequest.receiver response receiver}s supplies are cut off, or\n * - the entered page address is the the same one as previous one, except the hash,\n */\nexport const pageLoadParam: PageParam<void, PageLoadRequest> = (/*#__PURE__*/ new PageLoadParam());\n","import { BootstrapContext, bootstrapDefault, BootstrapWindow } from '@wesib/wesib';\nimport { ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { AfterEvent, afterThe } from 'fun-events';\nimport { Navigation } from '../navigation';\nimport { PageLoadAgent } from './page-load-agent';\nimport { PageLoadURLModifier } from './page-load-url-modifier';\n\nconst PageCacheBuster__key = (/*#__PURE__*/ new SingleContextKey<PageCacheBuster>(\n    'page-cache-buster',\n    {\n      byDefault: bootstrapDefault(context => new PageCacheBuster(context)),\n    },\n));\n\n/**\n * @internal\n */\nexport const appRevSearchParam = '__wesib_app_rev__';\n\n/**\n * @internal\n */\nexport class PageCacheBuster {\n\n  static get [ContextKey__symbol](): SingleContextKey<PageCacheBuster> {\n    return PageCacheBuster__key;\n  }\n\n  readonly urlModifier: AfterEvent<PageLoadURLModifier[]>;\n  readonly agent: AfterEvent<PageLoadAgent[]>;\n\n  constructor(context: BootstrapContext) {\n\n    const rev = appRev(context.get(BootstrapWindow).document);\n\n    if (!rev) {\n      this.urlModifier = afterThe();\n      this.agent = afterThe();\n    } else {\n\n      const navigation = context.get(Navigation);\n\n      this.urlModifier = afterThe(url => url.searchParams.set(appRevSearchParam, rev));\n      this.agent = afterThe((next, request) => {\n        return next(new Request(request.url, request)).thru_(response => {\n          if (response.ok) {\n\n            const newRev = appRev(response.document);\n\n            if (newRev && newRev !== rev) {\n\n              const url = new URL(response.page.url.href);\n\n              url.searchParams.set(appRevSearchParam, newRev);\n              navigation.update(url);\n              navigation.reload();\n            }\n          }\n\n          return response;\n        });\n      });\n    }\n  }\n\n}\n\nfunction appRev(doc: Document) {\n  return doc.querySelector('meta[name=wesib-app-rev]')?.getAttribute('content');\n}\n","/**\n * @module @wesib/generic\n */\nimport { isElement } from '@wesib/wesib';\nimport { itsEach, overArray } from 'a-iterable';\n\n/**\n * Imports DOM node from one document to another.\n *\n * @param from  The node to import.\n * @param to  The node to append imported node to.\n * @param importContent  A function that imports nodes nested in parent element. [[importNodeContent]] by default.\n *\n * @returns Imported node.\n */\nexport function importNode<N extends Node>(\n    from: N,\n    to: Node,\n    importContent?: (this: void, from: N, to: N) => void,\n): N;\n\n/**\n * Imports DOM node from one document to another and inserts it before the given node.\n *\n * @param from  The node to import.\n * @param to  The node to append imported node to.\n * @param before  The node to insert imported node before, or `null` to append it to the end of target one.\n * @param importContent  A function that imports nodes nested in parent element. [[importNodeContent]] by default.\n *\n * @returns Imported node.\n */\nexport function importNode<N extends Node>(\n    from: N,\n    to: Node,\n    before?: Node | null,\n    importContent?: (this: void, from: N, to: N) => void,\n): N;\n\nexport function importNode<N extends Node>(\n    from: N,\n    to: Node,\n    beforeOrImport?: Node | null | ((this: void, from: N, to: N) => void),\n    importContent: (this: void, from: N, to: N) => void = importNodeContent,\n): N {\n\n  let before: Node | null;\n\n  if (typeof beforeOrImport === 'function') {\n    importContent = beforeOrImport;\n    before = null;\n  } else {\n    before = beforeOrImport || null;\n  }\n\n  const doc = to.ownerDocument!;\n\n  if (isElement(from)) {\n\n    const elementClone = doc.createElement(from.tagName.toLowerCase()) as Node as (Element & N);\n\n    from.getAttributeNames().forEach(attr => elementClone.setAttribute(attr, from.getAttribute(attr)!));\n    importContent(from, elementClone);\n    to.insertBefore(elementClone, before);\n\n    return elementClone;\n  }\n\n  const nodeClone = doc.importNode(from, false);\n\n  to.insertBefore(nodeClone, before);\n\n  return nodeClone;\n}\n\n/**\n * Imports DOM node contents from one document to another.\n *\n * @param from  The node which contents to import.\n * @param to  The node to append imported nodes to.\n */\nexport function importNodeContent(from: Node, to: Node): void {\n  itsEach(\n      overArray(from.childNodes),\n      node => importNode(node, to),\n  );\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { filterIt, itsEach, mapIt, overArray } from 'a-iterable';\nimport { importNode } from '../../util';\nimport { PageLoadAgent } from './page-load-agent';\n\n/**\n * @internal\n */\nexport function pageScriptsAgent(context: BootstrapContext): PageLoadAgent {\n\n  const doc = context.get(BootstrapWindow).document;\n\n  return next => next().thru_(\n      response => {\n        if (response.ok) {\n\n          const allScripts = new Set<string>(mapIt(\n              externalScripts(doc, overArray(doc.scripts)),\n              ([src]) => src,\n          ));\n\n          itsEach(\n              filterIt(\n                  externalScripts(response.document, overArray(response.document.querySelectorAll('script'))),\n                  ([src]) => !allScripts.has(src),\n              ),\n              ([src, script]) => {\n                importNode(script, doc.head, (_from, to) => to.src = src);\n                allScripts.add(src);\n              },\n          );\n        }\n        return response;\n      },\n  );\n}\n\nfunction externalScripts(\n    doc: Document,\n    scripts: Iterable<HTMLScriptElement>,\n): Iterable<readonly [string, HTMLScriptElement]> {\n  return mapIt(\n      filterIt(\n          scripts,\n          script => !!script.src,\n      ),\n      script => [new URL(script.src, doc.baseURI).href, script] as const,\n  );\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { itsEach, itsFirst, overArray } from 'a-iterable';\nimport { importNode } from '../../util';\nimport { PageLoadAgent } from './page-load-agent';\n\n/**\n * @internal\n */\nexport function pageStyleAgent(context: BootstrapContext): PageLoadAgent {\n\n  const doc = context.get(BootstrapWindow).document;\n\n  return next => next().thru_(\n      response => {\n        if (!response.ok) {\n          return response;\n        }\n\n        const newStyles = response.document.querySelectorAll<HTMLLinkElement>('link[rel=stylesheet]');\n\n        if (!newStyles.length) {\n          return response;\n        }\n\n        let target: Node = doc.head;\n        let before: Node | null = null;\n        const oldStyles = doc.querySelectorAll<HTMLLinkElement>('link[rel=stylesheet]');\n        const oldStylesByHref = new Map<string, HTMLLinkElement>();\n        const firstOldStyle = oldStyles.item(0);\n\n        if (firstOldStyle) {\n          target = firstOldStyle.parentNode!;\n          before = firstOldStyle;\n          itsEach(\n              overArray(oldStyles),\n              link => oldStylesByHref.set(new URL(link.href, doc.baseURI).href, link),\n          );\n        }\n\n        itsEach(\n            overArray(newStyles),\n            newStyle => {\n\n              const href = new URL(newStyle.href, doc.baseURI).href;\n              const oldStyle = oldStylesByHref.get(href);\n\n              if (oldStyle) {\n                // Style already exists.\n                if (itsFirst(oldStylesByHref.keys()) === href) {\n                  // In proper position already.\n                  // Insert the remaining styles after it.\n                  target = oldStyle.parentNode!;\n                  before = oldStyle.nextSibling;\n                } else {\n                  // Move to proper position.\n                  target.insertBefore(oldStyle, before);\n                }\n                oldStylesByHref.delete(href);\n              } else {\n                // Import new style\n                importNode(newStyle, target, before, (_from, to) => to.href = href);\n              }\n            },\n        );\n\n        // Remove remaining old styles\n        itsEach(oldStylesByHref.values(), style => style.parentNode!.removeChild(style));\n\n        return response;\n      },\n  );\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { PageLoadAgent } from './page-load-agent';\n\n/**\n * @internal\n */\nexport function pageTitleAgent(context: BootstrapContext): PageLoadAgent {\n\n  const doc = context.get(BootstrapWindow).document;\n\n  return next => next().thru_(response => {\n    if (response.ok) {\n\n      const title = response.document.getElementsByTagName('title').item(0);\n\n      if (title && title.textContent) {\n        doc.title = title.textContent;\n      }\n    }\n\n    return response;\n  });\n}\n","/**\n * @module @wesib/generic\n */\nimport { FeatureDef, FeatureDef__symbol } from '@wesib/wesib';\nimport { NavigationSupport } from '../navigation-support.feature';\nimport { PageCacheBuster } from './page-cache-buster.impl';\nimport { PageLoadAgent } from './page-load-agent';\nimport { PageLoadURLModifier } from './page-load-url-modifier';\nimport { pageScriptsAgent } from './page-scripts-agent.impl';\nimport { pageStyleAgent } from './page-style-agent.impl';\nimport { pageTitleAgent } from './page-title-agent.impl';\n\nconst PageLoadSupport__feature: FeatureDef = {\n  needs: NavigationSupport,\n  setup(setup) {\n    setup.provide({\n      a: PageLoadURLModifier,\n      by: (buster: PageCacheBuster) => buster.urlModifier,\n      with: [PageCacheBuster],\n    });\n    setup.provide({\n      a: PageLoadAgent,\n      by: (buster: PageCacheBuster) => buster.agent,\n      with: [PageCacheBuster],\n    });\n    setup.provide({ a: PageLoadAgent, by: pageScriptsAgent });\n    setup.provide({ a: PageLoadAgent, by: pageStyleAgent });\n    setup.provide({ a: PageLoadAgent, by: pageTitleAgent });\n  },\n};\n\n/**\n * Page load support feature.\n *\n * Enables default {@link PageLoadAgent page load agents}:\n * 1. Page cache busting agent.\n *    If `<meta name=\"wesib-app-rev\">` tag is present in initial page, then sends this tag's content with each page load\n *    request as `__wesib_app_rev__` search parameter. If the loaded page contains the same named meta tag with\n *    different content, then reloads the page.\n *    This serves both as cache busting technique, and as server-side application updates handler.\n * 2. Scripts agent.\n *    Includes external scripts from loaded page into main document.\n * 3. Style agent.\n *    Replaces external styles of main document styles with the ones from loaded page.\n *    Unless loaded page has no external styles.\n * 4. Title agent.\n *    Applies loaded page title to bootstrap window. If there is one.\n */\nexport class PageLoadSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return PageLoadSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport { EventSupply } from 'fun-events';\nimport { StypRules } from 'style-producer';\nimport { ComponentStypOptions } from './component-styp-options';\n\n/**\n * Component style producer function interface.\n */\nexport type ComponentStyleProducer =\n/**\n * @param rules  CSS rules to produce stylesheets for. This can be e.g. a `StypRule.rules` to render all rules,\n * or a result of `StypRuleList.grab()` method call to render only matching ones.\n * @param opts  Production options.\n *\n * @returns Styles supply. Once cut off (i.e. its `off()` method is called) the produced stylesheets are removed.\n */\n    (\n        rules: StypRules,\n        opts?: ComponentStypOptions,\n    ) => EventSupply;\n\n/**\n * A key of component context value containing a component style producer.\n */\nexport const ComponentStyleProducer: SingleContextRef<ComponentStyleProducer> =\n    (/*#__PURE__*/ new SingleContextKey<ComponentStyleProducer>('component-style-producer'));\n","/**\n * @module @wesib/generic\n */\nimport { MultiContextKey, MultiContextRef } from 'context-values';\nimport { StypRender } from 'style-producer';\n\n/**\n * A CSS render that will be enabled by default by [[ComponentStyleProducer]].\n */\nexport type ComponentStypRender = StypRender;\n\n/**\n * A key of component context value containing component CSS renders.\n */\nexport const ComponentStypRender: MultiContextRef<ComponentStypRender> =\n    (/*#__PURE__*/ new MultiContextKey<ComponentStypRender>('component-styp-render'));\n","import { ComponentContext, DefaultNamespaceAliaser, ElementDef } from '@wesib/wesib';\nimport { ContextValues, SingleContextKey, SingleContextRef } from 'context-values';\nimport { css__naming, html__naming, NamespaceDef, QualifiedName } from 'namespace-aliaser';\n\n/**\n * @internal\n */\nexport type ElementIdClass = QualifiedName;\n\n/**\n * @internal\n */\nexport const ElementIdClass__NS = (/*#__PURE*/ new NamespaceDef(\n    'https://wesib.github.io/ns/element-id-class',\n    'elic',\n    'element-id-class',\n));\n\n/**\n * @internal\n */\nexport const ElementIdClass: SingleContextRef<ElementIdClass> =\n    (/*#__PURE__*/ new SingleContextKey('unique-element-class', { byDefault: assignElementId }));\n\nlet uniqueClassSeq = 0;\n\nfunction assignElementId(contextValues: ContextValues): ElementIdClass {\n\n  const aliaser = contextValues.get(DefaultNamespaceAliaser);\n  const context = contextValues.get(ComponentContext);\n  const elementDef = context.get(ElementDef);\n  const name: string = elementDef.name ? html__naming.name(elementDef.name, aliaser) : 'component';\n  const local = `${name}#${++uniqueClassSeq}`;\n  const qualified = ElementIdClass__NS.name(aliaser(ElementIdClass__NS), local, css__naming);\n  const element = context.element as Element;\n\n  element.classList.add(qualified);\n\n  return qualified;\n}\n","import {\n  ArraySet,\n  BootstrapWindow,\n  ComponentContext,\n  DefaultNamespaceAliaser,\n  RenderScheduler,\n  ShadowContentRoot,\n} from '@wesib/wesib';\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { EventSupply } from 'fun-events';\nimport {\n  produceBasicStyle,\n  StypPureSelector,\n  StypRender,\n  StypRules,\n  stypSelector,\n  StypSelector,\n  StypSubSelector,\n} from 'style-producer';\nimport { ComponentStypOptions } from './component-styp-options';\nimport { ComponentStypRender } from './component-styp-render';\nimport { ElementIdClass } from './element-id-class.impl';\n\nconst ComponentStyleProducer__key =\n    (/*#__PURE__*/ new SingleContextKey<ComponentStyleProducer>('component-style-producer:impl'));\n\n/**\n * @internal\n */\nexport class ComponentStyleProducer {\n\n  static get [ContextKey__symbol](): ContextKey<ComponentStyleProducer> {\n    return ComponentStyleProducer__key;\n  }\n\n  constructor(\n      private readonly _context: ComponentContext,\n      private readonly _produce = produceBasicStyle,\n  ) {}\n\n  produce(rules: StypRules, options: ComponentStypOptions = {}): EventSupply {\n\n    const context = this._context;\n    const shadowRoot = context.get(ShadowContentRoot, { or: null });\n\n    return this._produce(rules, {\n      ...options,\n      document: options.document || context.get(BootstrapWindow).document,\n      parent: options.parent || context.contentRoot,\n      rootSelector: [],\n      schedule: options.schedule || buildScheduler(),\n      nsAlias: options.nsAlias || context.get(DefaultNamespaceAliaser),\n      render: buildRender(),\n    });\n\n    function buildScheduler(): (operation: () => void) => void {\n\n      const scheduler = context.get(RenderScheduler);\n\n      return operation => scheduler.newSchedule().schedule(operation);\n    }\n\n    function buildRender(): StypRender | readonly StypRender[] | undefined {\n\n      const { render } = options;\n      const renders = new ArraySet<StypRender>(render)\n          .add(...context.get(ComponentStypRender));\n      const hostSelector =\n          options.hostSelector ? stypSelector(options.hostSelector)[0] as StypPureSelector.NormalizedPart : undefined;\n\n      renders.add(shadowRoot\n          ? shadowRender(hostSelector)\n          : noShadowRender(hostSelector || { c: [context.get(ElementIdClass)] }));\n\n      return renders.value;\n    }\n  }\n\n}\n\nfunction shadowRender(hostSelector: StypPureSelector.NormalizedPart | undefined): StypRender {\n  return {\n    order: -100,\n    render(producer, properties) {\n\n      let { selector } = producer;\n\n      if (!selector.length) {\n        selector = [hostSelector || { u: [[':', 'host']] }];\n      } else if (hostSelector) {\n\n        const [rest, host] = extractHostSelector(selector);\n\n        if (host) {\n          if (host.length) {\n            selector = [{ u: [[':', 'host', extendHostSelector(host, hostSelector)]] }, ...rest];\n          } else {\n            selector = [{ u: [[':', 'host', [hostSelector]]] }, ...rest];\n          }\n        }\n      }\n\n      producer.render(properties, { selector });\n    },\n  };\n}\n\nfunction noShadowRender(hostSelector: StypPureSelector.NormalizedPart): StypRender {\n  return {\n    order: -100,\n    render(producer, properties) {\n\n      let { selector } = producer;\n\n      if (!selector.length) {\n        selector = [hostSelector];\n      } else {\n\n        const [rest, host] = extractHostSelector(selector);\n\n        if (host && host.length) {\n          selector = [...extendHostSelector(host, hostSelector), ...rest];\n        } else {\n          selector = [hostSelector, ...rest];\n        }\n      }\n\n      producer.render(properties, { selector });\n    },\n  };\n}\n\nfunction extractHostSelector(\n    selector: StypSelector.Normalized,\n): [StypSelector.Normalized, StypSelector.Normalized?] {\n  if (typeof selector[0] !== 'string') {\n\n    const [{ ns, e, i, c, u, s, $ }, ...restParts] = selector;\n\n    if (!ns && !e && !i && !c && !s && u) {\n\n      const [[prefix, name, ...params]] = u;\n\n      if (prefix === ':' && name === 'host') {\n\n        let host: StypSelector.Mutable;\n\n        if (params.length) {\n          host = [ ...params[0] as StypSubSelector.NormalizedParameter ];\n          (host[0] as any).$ = $;\n        } else {\n          host = $ ? [{ $ }] : [];\n        }\n\n        return [restParts, host];\n      }\n    }\n  }\n  return [selector];\n}\n\nfunction extendHostSelector(\n    selector: StypSelector.Normalized,\n    {\n      ns,\n      e,\n      i,\n      c,\n      u,\n      s,\n    }: StypPureSelector.NormalizedPart,\n): StypSelector.Normalized {\n\n  const [first, ...rest] = selector as [StypSelector.NormalizedPart, ...StypSelector.Normalized];\n\n  return [\n    {\n      ns: first.e || first.ns ? first.ns : ns,\n      e: first.e || first.ns ? first.e : e,\n      i: first.i || i,\n      c: first.c ? (c ? [...first.c, ...c] : first.c) as typeof c : c,\n      u: first.u ? (u ? [...first.u, ...u] : first.u) as typeof u : u,\n      s: ((first.s || '') + (s || '')) || undefined,\n      $: first.$,\n    },\n    ...rest,\n  ];\n}\n","/**\n * @module @wesib/generic\n */\nimport { FeatureDef, FeatureDef__symbol, RenderSupport } from '@wesib/wesib';\nimport { ComponentStyleProducer } from './component-style-producer';\nimport { ComponentStyleProducer as ComponentStyleProducer_ } from './component-style-producer.impl';\n\nconst BasicStyleProducerSupport__feature: FeatureDef = {\n  needs: RenderSupport,\n  setup(setup) {\n    setup.perComponent({ as: ComponentStyleProducer_ });\n    setup.perComponent({\n      a: ComponentStyleProducer,\n      by(producer: ComponentStyleProducer_): ComponentStyleProducer {\n        return (rules, opts) => producer.produce(rules, opts);\n      },\n      with: [ComponentStyleProducer_],\n    });\n  },\n};\n\n/**\n * Basic style producer support feature.\n *\n * Depends on [style-producer].\n *\n * Unlike [[StyleProducerSupport]] feature this one does not enable default CSS renders.\n *\n * It is enabled automatically by {@link ProduceStyle @ProduceStyle} decorator.\n *\n * [style-producer]: https://www.npmjs.com/package/style-producer\n */\nexport class BasicStyleProducerSupport {\n\n  static get [FeatureDef__symbol]() {\n    return BasicStyleProducerSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ComponentContext } from '@wesib/wesib';\nimport { noop } from 'call-thru';\nimport { eventSupply, EventSupply, noEventSupply } from 'fun-events';\nimport { lazyStypRules, StypOptions, StypPureSelector, StypRules } from 'style-producer';\nimport { ComponentStyleProducer } from './component-style-producer';\n\n/**\n * Component CSS styles production options.\n */\nexport interface ComponentStypOptions extends StypOptions {\n\n  /**\n   * Structured CSS selector to use for custom element's host.\n   *\n   * It modifies the selectors of produced CSS rules.\n   *\n   * For custom element with shadow root:\n   * - Replaces root CSS rule selector with `:host(<hostSelector>).\n   * - When `hostSelector` is omitted, then replaces root CSS rule selector with `:host`.\n   * - If CSS rule selector starts with `:host`, then replaces `:host` with `:host(<hostSelector>)`\n   * - If CSS rule selector starts with `:host(<selector>)`, then extends `<selector>` by `hostSelector`.\n   *   I.e. appends CSS classes and sub-selectors to it, and fulfills missing element and identifier selectors.\n   *\n   * For custom element without shadow root either uses provided `hostSelector`, or generates a unique one when omitted.\n   * And additionally:\n   * - Replaces root CSS rule selector it with `hostSelector`.\n   * - If CSS rule selector starts with `:host`, then replaces `:host` with `hostSelector`.\n   * - If CSS rule selector starts with `:host(<selector>), then replaces `:host(<selector>)` with `<selector>` extended\n   *   by `hostSelector`. I.e. appends CSS classes and sub-selectors to it, and fulfills missing element and identifier\n   *   selectors.\n   * - Otherwise prepends CSS rule selector with `hostSelector`.\n   *\n   * This selector should not contain a `:host` sub-selector.\n   */\n  hostSelector?: StypPureSelector.Part | string;\n\n  /**\n   * Root CSS selector is never used for custom elements. A `hostSelector` is applied instead.\n   */\n  rootSelector?: undefined;\n\n  /**\n   * Whether to produce CSS stylesheets while component is not connected.\n   *\n   * Can be one of:\n   * - `true` - to produce stylesheets when first connected and update them even if component is disconnected after\n   *   that. This is the default, as stylesheet updates is expected to be rare operation.\n   * - `false` - to produce stylesheet whenever component is connected and remove them once disconnected.\n   *   This is a good choice if stylesheets are small and updated frequently.\n   * - `always` - to produce stylesheets immediately upon component readiness and update them offline after that.\n   *   This is the right choice if component needs a stylesheet ready before it is added to the document.\n   */\n  offline?: boolean | 'always';\n\n}\n\nexport const ComponentStypOptions = {\n\n  /**\n   * Produces and dynamically updates component's CSS stylesheets based on the given CSS rules.\n   *\n   * @param context  Target component context.\n   * @param rules  A source of CSS rules to produce stylesheets for.\n   * @param options  Production options.\n   *\n   * @returns CSS rules supply. Once cut off the produced stylesheets are removed.\n   */\n  produce(\n      context: ComponentContext,\n      rules: StypRules.Source,\n      options?: ComponentStypOptions,\n  ): EventSupply {\n\n    const css = lazyStypRules(rules);\n    const offline = options && options.offline;\n    const produceStyle = context.get(ComponentStyleProducer);\n\n    let cssSupply = noEventSupply();\n    let doProduceStyle: () => void;\n    const supply = eventSupply(reason => {\n      doProduceStyle = noop;\n      cssSupply.off(reason);\n    });\n\n    doProduceStyle = () => {\n      cssSupply = produceStyle(css, options).needs(supply);\n    };\n\n    switch (offline) {\n    case 'always':\n      context.whenReady(doProduceStyle);\n      break;\n    case false:\n      context.whenOn(connectionSupply => {\n        doProduceStyle();\n        cssSupply.needs(connectionSupply);\n      });\n      break;\n    default:\n      context.whenOn.once(doProduceStyle);\n    }\n\n    context.whenDestroyed(reason => supply.off(reason));\n\n    return supply;\n  },\n\n};\n","/**\n * @module @wesib/generic\n */\nimport { ComponentClass, ComponentDef } from '@wesib/wesib';\nimport { StypRules } from 'style-producer';\nimport { BasicStyleProducerSupport } from './basic-style-producer-support.feature';\nimport { ComponentStypOptions } from './component-styp-options';\n\n/**\n * A decorator of component property returning CSS rules to produce.\n *\n * Decorated property value should either contain a CSS rules source of type `StypRules.Source` or be a method\n * returning it.\n *\n * This decorator automatically enables [[BasicStyleProducerSupport]] feature.\n *\n * Utilizes [[ComponentStypOptions.produce]] function to produce CSS stylesheets.\n *\n * @typeparam T  A type of decorated component class.\n * @param options  Non-mandatory CSS style production options.\n *\n * @returns Component property decorator.\n */\nexport function ProduceStyle<T extends ComponentClass>(\n    options?: ComponentStypOptions,\n): <V extends StypRules.Source | (() => StypRules.Source)>(\n    target: InstanceType<T>,\n    propertyKey: string | symbol,\n    descriptor?: TypedPropertyDescriptor<V>,\n) => any | void {\n  return (target: InstanceType<T>, propertyKey: string | symbol) => {\n\n    const componentType = target.constructor as T;\n\n    ComponentDef.define(\n        componentType,\n        {\n          define(defContext) {\n            defContext.whenComponent(componentContext => {\n              componentContext.whenReady(({ component }) => {\n\n                const property = component[propertyKey];\n\n                ComponentStypOptions.produce(\n                    componentContext,\n                    typeof property === 'function' ? property.bind(component) : property,\n                    options,\n                );\n              });\n            });\n          },\n          feature: {\n            needs: [BasicStyleProducerSupport],\n          },\n        },\n    );\n  };\n}\n","/**\n * @module @wesib/generic\n */\nimport { ComponentContext, FeatureDef, FeatureDef__symbol, RenderSupport } from '@wesib/wesib';\nimport { produceStyle } from 'style-producer';\nimport { BasicStyleProducerSupport } from './basic-style-producer-support.feature';\nimport { ComponentStyleProducer } from './component-style-producer';\nimport { ComponentStyleProducer as ComponentStyleProducer_ } from './component-style-producer.impl';\n\nconst StyleProducerSupport__feature: FeatureDef = {\n  has: BasicStyleProducerSupport,\n  needs: RenderSupport,\n  setup(setup) {\n    setup.perComponent({\n      a: ComponentStyleProducer_,\n      by(context: ComponentContext) {\n        return new ComponentStyleProducer_(context, produceStyle);\n      },\n    });\n    setup.perComponent({\n      a: ComponentStyleProducer,\n      by(producer: ComponentStyleProducer_): ComponentStyleProducer {\n        return (rules, opts) => producer.produce(rules, opts);\n      },\n      with: [ComponentStyleProducer_],\n    });\n  },\n};\n\n/**\n * Style producer support feature.\n *\n * Depends on [style-producer].\n *\n * This is an implementation of [[BasicStyleProducerSupport]] feature that enables default CSS renders.\n *\n * It is _not_ enabled automatically by {@link ProduceStyle @ProduceStyle} decorator.\n *\n * [style-producer]: https://www.npmjs.com/package/style-producer\n */\nexport class StyleProducerSupport {\n\n  static get [FeatureDef__symbol]() {\n    return StyleProducerSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { RefStypRule, StypProperties, StypRule, StypRuleRef, StypRules } from 'style-producer';\nimport { ThemeStyle } from './theme-style';\n\nconst Theme__key = new SingleContextKey<Theme>('theme');\n\n/**\n * A hierarchy of CSS rules within single root.\n *\n * A component may use it to extract styling information.\n *\n * Current theme is available in bootstrap, definition, or component context. By default, only one theme is declared\n * per bootstrap. But this can be overridden.\n */\nexport abstract class Theme {\n\n  /**\n   * A key of bootstrap, definition, or component context value containing current theme instance.\n   */\n  static get [ContextKey__symbol](): ContextKey<Theme> {\n    return Theme__key;\n  }\n\n  /**\n   * Root CSS rule.\n   *\n   * All theme styling is represented as rules within this root.\n   */\n  abstract readonly root: StypRule;\n\n  /**\n   * Obtains CSS rule reference by its `referrer`.\n   *\n   * This is a helper method that resolves the given `referrer` against the `root` CSS rule of this theme.\n   *\n   * @param referrer  Target CSS rule referrer.\n   *\n   * @returns CSS rule reference.\n   */\n  ref<T extends StypProperties<T>>(referrer: RefStypRule<T>): StypRuleRef<T> {\n    return referrer(this.root);\n  }\n\n  /**\n   * Obtains a styling for the given theme styles.\n   *\n   * This method requests the registered {@link ThemeStyle theme styles} for CSS rules they provide.\n   * If some of the styles are not registered then uses the given style as provider.\n   *\n   * @param styles  The styles to obtain styling information for.\n   *\n   * @returns Dynamically updated CSS rule set containing the requested styling.\n   */\n  abstract style(...styles: ThemeStyle.Provider[]): StypRules;\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { Theme } from './theme';\n\nconst ThemeFactory__key = new SingleContextKey<ThemeFactory>('theme-factory');\n\nexport abstract class ThemeFactory {\n\n  static get [ContextKey__symbol](): ContextKey<ThemeFactory> {\n    return ThemeFactory__key;\n  }\n\n  abstract newTheme(): Theme;\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { AIterable } from 'a-iterable';\nimport { ContextRef, ContextValueOpts, ContextValues, SimpleContextKey } from 'context-values';\nimport { stypRules, StypRules } from 'style-producer';\nimport { Theme } from './theme';\n\n/**\n * Theme style provides part of the theme styling information.\n *\n * Theme style(s) can be provided in bootstrap context. They are applied to the theme at most once, when requested\n * by calling [[Theme.style]] method.\n *\n * Theme style is either a function, or an extension of another theme style.\n */\nexport type ThemeStyle = ThemeStyle.Provider | ThemeStyle.Extension;\n\nexport namespace ThemeStyle {\n\n  /**\n   * Theme style provider function.\n   *\n   * This function is called at most once per theme to apply styles to the latter. E.g. by declaring CSS rules.\n   *\n   * This function is used as an identifier of particular style and can be extended using [[ThemeStyle.Extension]].\n   *\n   * It is not absolutely necessary to register style provider. It will be applied on request anyway.\n   *\n   * @param theme  A theme to apply styling to.\n   *\n   * @returns Dynamically updated CSS rule set containing the applied styling.\n   */\n  export type Provider = (this: void, theme: Theme) => StypRules;\n\n  /**\n   * Theme style extension.\n   *\n   * An extension should be registered in bootstrap context in order to be applied.\n   */\n  export interface Extension {\n\n    /**\n     * A theme style provider to extend.\n     */\n    readonly style: ThemeStyle.Provider;\n\n    /**\n     * Extends the theme style.\n     *\n     * This method is called at most once per theme to apply styles to the latter. E.g. by declaring CSS rules.\n     *\n     * It will be called after the style provider it extends.\n     *\n     * @param theme  A theme to apply styling to.\n     *\n     * @returns Dynamically updated CSS rule set containing the applied styling.\n     */\n    provide(theme: Theme): StypRules;\n\n  }\n\n  /**\n   * A function obtaining combined style provider. I.e. the one that applies the style along with all extensions.\n   *\n   * @param A  provider of theme style to apply.\n   *\n   * @returns A combined theme style provider.\n   */\n  export type ById = (this: void, style: ThemeStyle.Provider) => ThemeStyle.Provider;\n\n}\n\nclass ThemeStyleKey extends SimpleContextKey<ThemeStyle.ById, ThemeStyle> {\n\n  constructor() {\n    super('theme-style');\n  }\n\n  grow<Ctx extends ContextValues>(\n      opts: ContextValueOpts<Ctx, ThemeStyle.ById, ThemeStyle, AIterable<ThemeStyle>>,\n  ): ThemeStyle.ById | null | undefined {\n\n    const providers = new Map<ThemeStyle.Provider, [ThemeStyle.Provider, boolean]>();\n\n    opts.seed.forEach(style => {\n\n      let key: ThemeStyle.Provider;\n      let provider: ThemeStyle.Provider;\n      let isId: boolean;\n\n      if (typeof style === 'function') {\n        key = provider = style;\n        isId = true;\n      } else {\n        key = style.style;\n        provider = style.provide.bind(style);\n        isId = false;\n      }\n\n      const prev = providers.get(key);\n\n      if (!prev) {\n        providers.set(key, [provider, isId]);\n      } else {\n\n        const [prevProvider, hasId] = prev;\n\n        providers.set(\n            key,\n            [\n              isId ? combineStyles(provider, prevProvider) : combineStyles(prevProvider, provider),\n              isId || hasId,\n            ],\n        );\n      }\n    });\n\n    return providers.size ? byId : opts.byDefault(() => byId);\n\n    function byId(id: ThemeStyle.Provider): ThemeStyle.Provider {\n\n      const existing = providers.get(id);\n\n      if (!existing) {\n        return id;\n      }\n\n      const [provider, hasId] = existing;\n\n      return hasId ? provider : combineStyles(id, provider);\n    }\n  }\n\n}\n\n/**\n * A key of bootstrap context value containing theme styles.\n */\nexport const ThemeStyle: ContextRef<ThemeStyle.ById, ThemeStyle> = new ThemeStyleKey();\n\nfunction combineStyles(first: ThemeStyle.Provider, second: ThemeStyle.Provider): ThemeStyle.Provider {\n  return theme => stypRules(first(theme), second(theme));\n}\n","import { lazyStypRules, stypRoot, StypRule, StypRules } from 'style-producer';\nimport { Theme as Theme_ } from './theme';\nimport { ThemeStyle } from './theme-style';\n\n/**\n * @internal\n */\nexport class Theme extends Theme_ {\n\n  readonly root: StypRule = stypRoot();\n  private readonly _rules = new Map<ThemeStyle.Provider, StypRules>();\n\n  constructor(private readonly _styles: ThemeStyle.ById) {\n    super();\n  }\n\n  style(...styles: ThemeStyle.Provider[]): StypRules {\n\n    const theme = this;\n\n    return lazyStypRules(...styles.reduce<StypRules[]>(addStyleRules, []));\n\n    function addStyleRules(target: StypRules[], style: ThemeStyle.Provider) {\n\n      const existing = theme._rules.get(style);\n\n      if (existing) {\n        target.push(existing);\n      } else {\n\n        const constructed = theme._styles(style)(theme);\n\n        theme._rules.set(style, constructed);\n        target.push(constructed);\n      }\n\n      return target;\n    }\n  }\n\n}\n","import { ThemeFactory as ThemeFactory_ } from './theme-factory';\nimport { ThemeStyle } from './theme-style';\nimport { Theme } from './theme.impl';\n\n/**\n * @internal\n */\nexport class ThemeFactory extends ThemeFactory_ {\n\n  constructor(private readonly _styles: ThemeStyle.ById) {\n    super();\n  }\n\n  newTheme() {\n    return new Theme(this._styles);\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { FeatureDef, FeatureDef__symbol } from '@wesib/wesib';\nimport { BasicStyleProducerSupport } from '../styp';\nimport { Theme } from './theme';\nimport { ThemeFactory } from './theme-factory';\nimport { ThemeFactory as ThemeFactory_ } from './theme-factory.impl';\nimport { ThemeStyle } from './theme-style';\n\nconst ThemeSupport__feature: FeatureDef = {\n  needs: BasicStyleProducerSupport,\n  setup(setup) {\n    setup.provide({ a: ThemeFactory, as: ThemeFactory_, with: [ThemeStyle] });\n    setup.provide({\n      a: Theme,\n      by(factory: ThemeFactory) {\n        return factory.newTheme();\n      },\n      with: [ThemeFactory],\n    });\n  },\n};\n\n/**\n * Theme support feature.\n *\n * This needs to be enabled in order [[Theme]] and [[ThemeFactory]] to be available.\n */\nexport class ThemeSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return ThemeSupport__feature;\n  }\n\n}\n"],"names":["BootstrapContext__key","SingleContextKey","BootstrapContext","ContextValues","ContextKey__symbol","bootstrapDefault","provide","context","key","bootstrapContext","get","ComponentFactory__key","ComponentFactory","[object Object]","element","mount","this","mountTo","connected","BootstrapWindow","byDefault","window","DefaultNamespaceAliaser","isArray","value","Array","ArraySet","AIterable","super","items","Set","size","Symbol","iterator","next","forEach","item","add","superClassOf","type","satisfying","prototype","Object","getPrototypeOf","superType","constructor","mergeFunctions","first","second","merge","_f","s","args","apply","isElement","node","nodeType","Node","ELEMENT_NODE","MetaAccessor","symbol","hasOwnProperty","undefined","ownDef","own","superDef","of","sources","prevMeta","updates","mapIt","source","meta","newMeta","flatMapIt","asis","defineProperty","configurable","PromiseResolver","promise","Promise","resolve","reject","_resolve","_reject","error","FeatureDef__symbol","FeatureMeta","defs","itsReduction","prev","def","needs","has","setup","init","noFeatureDef","FeatureDef","featureType","for","all","define","Feature","FeatureContext_key","FeatureContext","componentType","whenDefined","feature","load","FeatureNeedsError","Error","reduce","reason","need","name","FeatureRef","AfterEvent__symbol","read","ComponentDef__symbol","ComponentMeta","isQualifiedName","componentDefined","noComponentDef","ComponentDef","featureDef","registrar","Component","ComponentContext__key","ComponentEventDispatcher__key","dispatch","event","dispatchEvent","on","DomEventDispatcher","ContentRoot","ctx","StateUpdater","FnContextKey","valueProvider","noop","ComponentContext__symbol","ComponentContext","updateComponentState","bind","TypeError","contentRoot","newValue","oldValue","ComponentEvent","Event","eventInitDict","target","ComponentMount","component","ElementAdapterKey","ContextUpKey","opts","defaultElementAdapter","result","seed","adapters","combined","adapter","ElementAdapter","ElementObserver","bsContext","DefaultElementObserver","MutationObserver","callback","mutations","mutation","itsEach","overArray","removedNodes","mountOf","checkConnected","filterIt","addedNodes","options","observe","childList","ComponentFactory__symbol","componentFactoryOf","factory","CustomElements__key","values","customElements","nsAlias","CustomElements","componentTypeOrName","elementType","html__naming","extend","elementDef","extends","componentResolver","ComponentResolver__symbol","DefinitionContext__key","ElementDef","elementExtend","HTMLElement","DefinitionContext","BootstrapContextRegistry__key","BootstrapContextRegistry","ContextRegistry","a","is","newValues","ComponentContextRegistry__key","ComponentContextRegistry","initial","DefinitionContextRegistry__key","DefinitionContextRegistry","PostDefSetup__symbol","postDefSetup","tracker","trackValue","emitter","EventEmitter","onSetup","thru","nextArgs","nextSkip","onAny","superPostDefSetup","send","it","WhenComponent","currentRev","created","onCreated","onEventBy","receiver","receiverRev","supply","receive","eventContext","componentContext","notifiedRev","recurrentReceiver","onRecurrent","recurrentContext","readNotifier","keep","thru_","rev","ElementBuilder","definitionContextRegistry_global","componentContextRegistry_global","definitions","components","whenComponent","componentContextRegistry_perType","ready","whenReady","cls","definitionContext","createComponentContextRegistry","append","componentFactory","ComponentFactory_","createComponent","registry","elementSuper","createMount","ComponentMount_","elementStatus","el","doc","ownerDocument","contains","componentCreated","DefinitionContext_","once","definitionContextRegistry","seedIn","definitionSetup","perDefinition","spec","perComponent","componentContextRegistry","Element","createElementType","enumerable","status","destructionReason","whenOff","whenDestroyed","sts","whenOn","offSupply","eventSupply","off","ComponentContext_","done","lastRev","parentNode","parentElement","removeChild","removeElement","ComponentStatus__symbol","writable","notifier","_","proto","prevContext","newComponent","bubbles","doNotAdd","ComponentRegistry","_context","_definitionQueue","definition","push","buildElement","FeatureKey__symbol","FeatureKey","from","preferredFeatureClause","afterEventBy","origin","afterThe","stageId","afterAll","clause","deps","loadFeatureDeps","dig_","request","loader","to","stage","ownLoader","FeatureLoader","ownSource","rcv","unload","share","lastLoader","preventDuplicateLoader","clauses","preferred","required","afterEach","map","dep","presentFeatureDeps","isPresent","down","_down","_stage","SetupFeatureStage","then","after","state","lastStage","id","prevStage","stop","FeatureStage","_stop","action","perDep","unloader","unloads","adder","reverse","length","newUnloader","componentRegistry","elementBuilder","onDefinition","tillOff","onComponent","st","bs","by","onPostDefSetup","newFeatureContext","InitFeatureStage","async","ActiveFeatureStage","FeatureRequest","_requester","_revoke","requester","isClause","_revokeBy","unuse","_uses","revoke","FeatureRequester__key","FeatureRequester","Map","existing","_map","reuse","delete","set","bootstrapComponents","features","bootstrapContextRegistry","create","complete","newNamespaceAliaser","info","_ctx","ldr","whenDown","initBootstrap","AttributePath__root","attributeStateUpdate","updateState","attributePathTo","update","defaultUpdateState","call","path","parseAttributeDef","propertyKey","toString","AttributeRegistrar","AttributeRegistry__key","AttributeRegistry","_MutationObserver","_attrs","attrs","observedAttributes","keys","attributeFilter","records","record","attributeName","getAttribute","attributes","attributeOldValue","AttributesSupport__feature","as","with","AttributesSupport","Attribute","descriptor","newDesc","setAttribute","AttributeChanged","defContext","DomPropertyPath__root","ComponentState__key","ComponentState","StateTracker","StateSupport__feature","StateSupport","RenderScheduler__key","RenderScheduler","ElementRender","render","offline","stateTracker","track","schedule","newSchedule","rendered","stateSupply","onUpdate","scheduleRender","renderElement","newRender","RenderSupport__feature","RenderScheduler_","createRenderScheduler","RenderSupport","scheduled","previouslyScheduled","requestAnimationFrame","Render","ShadowContentRoot","ShadowDomEvent","shadowRoot","ShadowRootBuilder","ShadowDomSupport__feature","attachShadow","ShadowDomSupport","shadowRootOf","defaultShadowContentDef","mode","ShadowContentDef","componentDef","or","AttachShadow","FetchAgentKey","agent","agents","fetch","agentIdx","agentRequest","onSupplied","nextRequest","combineFetchAgents","defaultFetchAgent","HttpFetchAgent","HttpFetchAborted","HttpFetch","input","Request","responseEmitter","abortController","AbortController","signal","abort","response","customSignal","aborted","catch","ComponentIn","MultiContextKey","ComponentNode","ElementNodeList","OnEvent__symbol","WATCH_DEEP","subtree","elementNodeList","root","selectorOrType","nodeOf","deep","iterable","selector","cache","selected","refresh","added","observer","removed","removeNode","addNode","nodeList","firstReceiver","disconnect","onTrackUpdate","initialEmitter","afterSupplied","itsFirst","addEventListener","ElementNodeList_","itsIterator","sel","querySelectorAll","children","matches","select","AttributesObserver","_bs","_observer","Observer","_update","self","_emitter","eventReceiver","_emitters","reconnect","takeRecords","AttributeTracker","ValueTracker","_name","observeSupply","noEventSupply","_updates","NodeAttributes","PropertyTracker","_element","_key","propertyState","_supply","_path","NodeProperties","_props","prop","ElementNode__symbol","ElementNode","_bind","parent","elementNodeOf","optional","selectNodes","ComponentTreeSupport__feature","ComponentTreeSupport","ComponentInReceiver","receiveComponentIn","control","inputSupply","connectionSupply","rcvNodes","inNodes","addInNode","n","removeInNode","ins","rcvNode","inNode","inSupply","componentIn","participants","participant","participate","ComponentInControl__key","ComponentInControl__component","ComponentInControl","via","componentInElement","pick","build","CompInElement","CompControl","ctrl","enableInput","compControl","inControl","consume","in","ComponentInValidity__key","ComponentInValidityTracker","ComponentInValidity__component","inValidationResult","componentInValidity","ComponentInValidity","aspect","InValidation","EnterPageEvent","cancelable","when","LeavePageEvent","StayOnPageEvent","Navigation__key","Navigation","go","NavigationAgentKey","document","combinedAgent","navigate","agentTo","url","nextURL","title","nextTitle","data","nextData","URL","String","baseURI","visited","current","ref","put","NavigationAgent","PageParam__symbol","PageParam","PageParamContext","RoutingHistory__key","NavHistory","_document","_location","location","_history","history","_uid","btoa","Math","random","extractNavData","entry","newEntry","href","_entries","enter","replaceState","_historyState","PageEntry","_lastId","toEntry","page","pushState","_enter","fromEntry","e","_forget","leave","popState","_changeHash","uid","pageId","existingEntry","transfer","oldEntry","forget","NAV_DATA_KEY","_params","_status","handle","param","newHandle","entries","transferred","at","stay","clear","createNavigation","dispatcher","navHistory","onEnter","onLeave","onStay","onEvent","nav","nextEntry","readPage","hashChange","Navigation_","delta","toURL","withParam","applyParams","open","replace","whenLeave","urlTarget","urlTargetOf","doNavigate","prepared","leavePage","finalTarget","t","prepare","NavigationSupport__feature","cachingPageLoader","pageUrl","sup","tracked","onLoad","trackSupply","resp","num","requested","PageLoadAbortError","PageLoadRequests","_navigation","_loader","fragments","fragment","pageSupply","loadSupply","_add","_transfer","pageLoadRequestsParam","responseReceiver","ok","tag","getElementsByTagName","getElementById","onFragment","req","list","_page","requests","PageLoadAgent","PageLoadURLModifier","PageLoader","httpFetch","modifyURL","parser","DOMParser","credentials","headers","Headers","Accept","fetchRequest","Accept-Fragment","header","hthvQuote","pageFragmentsRequest","responseTextEmitter","onResponse","text","parsePageDocument","start","responseSupply","parseFromString","hthvParse","v","head","base","querySelector","newBase","createElement","appendChild","PageLoadParam","pageLoadParam","PageCacheBuster__key","PageCacheBuster","appRevSearchParam","appRev","navigation","urlModifier","searchParams","newRev","reload","importNode","beforeOrImport","importContent","importNodeContent","before","elementClone","tagName","toLowerCase","getAttributeNames","attr","insertBefore","nodeClone","childNodes","pageScriptsAgent","allScripts","externalScripts","scripts","src","script","_from","pageStyleAgent","newStyles","oldStyles","oldStylesByHref","firstOldStyle","link","newStyle","oldStyle","nextSibling","style","pageTitleAgent","textContent","PageLoadSupport__feature","buster","PageLoadSupport","ComponentStyleProducer","ComponentStypRender","ElementIdClass__NS","NamespaceDef","ElementIdClass","contextValues","aliaser","local","uniqueClassSeq","qualified","css__naming","classList","ComponentStyleProducer__key","_produce","produceBasicStyle","rules","rootSelector","scheduler","operation","buildScheduler","renders","hostSelector","stypSelector","shadowRender","noShadowRender","c","buildRender","order","producer","properties","rest","host","extractHostSelector","u","extendHostSelector","ns","i","$","restParts","prefix","params","BasicStyleProducerSupport__feature","ComponentStyleProducer_","produce","BasicStyleProducerSupport","ComponentStypOptions","css","lazyStypRules","produceStyle","doProduceStyle","cssSupply","ProduceStyle","property","StyleProducerSupport__feature","StyleProducerSupport","Theme__key","Theme","referrer","ThemeFactory__key","ThemeFactory","ThemeStyle","SimpleContextKey","providers","provider","isId","prevProvider","hasId","combineStyles","byId","theme","stypRules","Theme_","_styles","stypRoot","styles","_rules","constructed","ThemeFactory_","ThemeSupport__feature","newTheme","ThemeSupport"],"mappings":"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"}