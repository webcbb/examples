{"version":3,"file":"wesib.2f6ae93e.m.js","sources":["../../node_modules/@wesib/wesib/src/boot/bootstrap-context.key.impl.ts","../../node_modules/@wesib/wesib/src/boot/bootstrap-context.ts","../../node_modules/@wesib/wesib/src/boot/bootstrap-default.ts","../../node_modules/@wesib/wesib/src/component/definition/component-factory.ts","../../node_modules/@wesib/wesib/src/boot/globals/bootstrap-window.ts","../../node_modules/@wesib/wesib/src/boot/globals/default-namespace-aliaser.ts","../../node_modules/@wesib/wesib/src/boot/globals/bootstrap-root.ts","../../node_modules/@wesib/wesib/src/common/types.impl.ts","../../node_modules/@wesib/wesib/src/common/array-set.ts","../../node_modules/@wesib/wesib/src/common/classes.ts","../../node_modules/@wesib/wesib/src/common/functions.ts","../../node_modules/@wesib/wesib/src/common/is-element.ts","../../node_modules/@wesib/wesib/src/common/meta-accessor.ts","../../node_modules/@wesib/wesib/src/common/promises.ts","../../node_modules/@wesib/wesib/src/feature/feature-def.ts","../../node_modules/@wesib/wesib/src/feature/feature.decorator.ts","../../node_modules/@wesib/wesib/src/feature/feature-context.ts","../../node_modules/@wesib/wesib/src/feature/feature-needs-error.ts","../../node_modules/@wesib/wesib/src/feature/feature-ref.ts","../../node_modules/@wesib/wesib/src/component/component-def.ts","../../node_modules/@wesib/wesib/src/component/component.decorator.ts","../../node_modules/@wesib/wesib/src/component/component-context.key.impl.ts","../../node_modules/@wesib/wesib/src/component/component-event.key.impl.ts","../../node_modules/@wesib/wesib/src/component/content-root.ts","../../node_modules/@wesib/wesib/src/component/state-updater.ts","../../node_modules/@wesib/wesib/src/component/component-context.ts","../../node_modules/@wesib/wesib/src/component/component-event.ts","../../node_modules/@wesib/wesib/src/component/component-mount.ts","../../node_modules/@wesib/wesib/src/boot/globals/element-adapter.ts","../../node_modules/@wesib/wesib/src/boot/globals/element-observer.ts","../../node_modules/@wesib/wesib/src/boot/impl/component-factory.symbol.impl.ts","../../node_modules/@wesib/wesib/src/component/definition/custom-elements.ts","../../node_modules/@wesib/wesib/src/component/definition/definition.context.key.impl.ts","../../node_modules/@wesib/wesib/src/component/definition/element-def.ts","../../node_modules/@wesib/wesib/src/component/definition/definition-context.ts","../../node_modules/@wesib/wesib/src/boot/impl/bootstrap-context-registry.impl.ts","../../node_modules/@wesib/wesib/src/boot/impl/component-context-registry.impl.ts","../../node_modules/@wesib/wesib/src/boot/impl/definition-context-registry.impl.ts","../../node_modules/@wesib/wesib/src/boot/impl/post-def-setup.impl.ts","../../node_modules/@wesib/wesib/src/boot/impl/element-builder.impl.ts","../../node_modules/@wesib/wesib/src/boot/impl/unloader.impl.ts","../../node_modules/@wesib/wesib/src/feature/loader/component-registry.impl.ts","../../node_modules/@wesib/wesib/src/feature/loader/feature-loader.impl.ts","../../node_modules/@wesib/wesib/src/feature/loader/feature-request.impl.ts","../../node_modules/@wesib/wesib/src/feature/loader/feature-requester.impl.ts","../../node_modules/@wesib/wesib/src/boot/bootstrap/bootstrap-components.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-path.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-state-update.impl.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-registrar.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-registry.impl.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attributes-support.feature.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute.decorator.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-def.impl.ts","../../node_modules/@wesib/wesib/src/feature/dom-properties/dom-property-path.ts","../../node_modules/@wesib/wesib/src/feature/state/component-state.ts","../../node_modules/@wesib/wesib/src/feature/state/state-support.feature.ts","../../node_modules/@wesib/wesib/src/feature/render/render-scheduler.ts","../../node_modules/@wesib/wesib/src/feature/render/element-render.ts","../../node_modules/@wesib/wesib/src/feature/render/render-support.feature.ts","../../node_modules/@wesib/wesib/src/feature/render/render.decorator.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/shadow-content-root.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/shadow-dom-event.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/shadow-root-builder.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/shadow-dom-support.feature.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/shadow-content-def.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/attach-shadow.decorator.ts","../../node_modules/@wesib/generic/src/fetch/fetch-agent-key.impl.ts","../../node_modules/@wesib/generic/src/fetch/http-fetch-agent.ts","../../node_modules/@wesib/generic/src/fetch/http-fetch.impl.ts","../../node_modules/@wesib/generic/src/fetch/http-fetch.ts","../../node_modules/@wesib/generic/src/navigation/navigation.event.ts","../../node_modules/@wesib/generic/src/navigation/navigation.ts","../../node_modules/@wesib/generic/src/navigation/navigation-agent.ts","../../node_modules/@wesib/generic/src/navigation/page-param.ts","../../node_modules/@wesib/generic/src/navigation/page-param-context.ts","../../node_modules/@wesib/generic/src/navigation/nav-history.impl.ts","../../node_modules/@wesib/generic/src/navigation/navigation.impl.ts","../../node_modules/@wesib/generic/src/navigation/navigation-support.feature.ts","../../node_modules/@wesib/generic/src/navigation/page-load/caching-page-loader.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-load-requests.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-load-agent.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-load-url-modifier.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-loader.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-load-param.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-cache-buster.impl.ts","../../node_modules/@wesib/generic/src/util/import-node.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-scripts-agent.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-style-agent.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-title-agent.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-load-support.feature.ts","../../node_modules/@wesib/generic/src/styp/component-style-producer.ts","../../node_modules/@wesib/generic/src/styp/component-styp-render.ts","../../node_modules/@wesib/generic/src/styp/element-id-class.impl.ts","../../node_modules/@wesib/generic/src/styp/component-style-producer.impl.ts","../../node_modules/@wesib/generic/src/styp/basic-style-producer-support.feature.ts","../../node_modules/@wesib/generic/src/styp/component-styp-options.ts","../../node_modules/@wesib/generic/src/styp/produce-style.decorator.ts","../../node_modules/@wesib/generic/src/styp/style-producer-support.feature.ts","../../node_modules/@wesib/generic/src/theme/theme.ts","../../node_modules/@wesib/generic/src/theme/theme-factory.ts","../../node_modules/@wesib/generic/src/theme/theme-style.ts","../../node_modules/@wesib/generic/src/theme/theme.impl.ts","../../node_modules/@wesib/generic/src/theme/theme-factory.impl.ts","../../node_modules/@wesib/generic/src/theme/theme-support.feature.ts","../../node_modules/@wesib/generic/src/tree/element-node.ts","../../node_modules/@wesib/generic/src/tree/element-node-list.impl.ts","../../node_modules/@wesib/generic/src/tree/node-attributes.impl.ts","../../node_modules/@wesib/generic/src/tree/node-properties.impl.ts","../../node_modules/@wesib/generic/src/tree/element-node.impl.ts","../../node_modules/@wesib/generic/src/tree/component-tree-support.feature.ts"],"sourcesContent":["import { SingleContextKey } from 'context-values';\nimport { BootstrapContext } from './bootstrap-context';\n\n/**\n * @internal\n */\nexport const BootstrapContext__key = /*#__PURE__*/ new SingleContextKey<BootstrapContext>('bootstrap-context');\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, ContextValues } from 'context-values';\nimport { OnEvent } from 'fun-events';\nimport { Class } from '../common';\nimport { ComponentClass, ComponentFactory } from '../component/definition';\nimport { FeatureRef } from '../feature';\nimport { BootstrapContext__key } from './bootstrap-context.key.impl';\n\n/**\n * Components bootstrap context.\n *\n * An instance of this class is passed to [[FeatureDef.init]] method so that the feature can configure itself.\n *\n * Extends `BootstrapValues` interface. The values are {@link FeatureDef.set pre-configured} in feature definitions.\n *\n * @category Core\n */\nexport abstract class BootstrapContext extends ContextValues {\n\n  /**\n   * A key of bootstrap context value containing the bootstrap context itself.\n   */\n  static get [ContextKey__symbol](): ContextKey<BootstrapContext> {\n    return BootstrapContext__key;\n  }\n\n  /**\n   * An `OnEvent` sender of bootstrap readiness event.\n   *\n   * The registered receiver will be notified once bootstrap is complete.\n   *\n   * If bootstrap is complete already, the receiver will be notified immediately.\n   */\n  abstract readonly whenReady: OnEvent<[BootstrapContext]>;\n\n  /**\n   * Allows to wait for component definition.\n   *\n   * This corresponds to `window.customElements.whenDefined()` method.\n   *\n   * @param componentType  Component class constructor.\n   *\n   * @return A promise that is resolved to component factory when the given `componentType` is registered.\n   *\n   * @throws TypeError  If `componentType` does not contain a component definition.\n   */\n  abstract whenDefined<C extends object>(componentType: ComponentClass<C>): Promise<ComponentFactory<C>>;\n\n  /**\n   * Allows to loads the given `feature`.\n   *\n   * @param feature  The feature to load.\n   *\n   * @returns  Loaded feature reference.\n   */\n  abstract load(feature: Class): FeatureRef;\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKeyDefault } from 'context-values';\nimport { BootstrapContext } from './bootstrap-context';\n\n/**\n * Provides a default value for bootstrap context key.\n *\n * @param provide  A function accepting bootstrap context and target key as parameters, and returning either a default\n * value, or `null`/`undefined` if unknown.\n *\n * @returns A provider of default value for bootstrap context value key.\n */\nexport function bootstrapDefault<Value, Key extends ContextKey<any, any, any>>(\n    provide: (this: void, context: BootstrapContext, key: Key) => Value | null | undefined,\n): ContextKeyDefault<Value, Key> {\n  return (context, key) => {\n\n    const bootstrapContext = context.get(BootstrapContext);\n\n    return context === bootstrapContext ? provide(bootstrapContext, key) : bootstrapContext.get(key);\n  };\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { Class } from '../../common';\nimport { ComponentMount } from '../component-mount';\nimport { ComponentClass } from './component-class';\nimport { ElementDef } from './element-def';\n\nconst ComponentFactory__key = /*#__PURE__*/ new SingleContextKey<ComponentFactory>('component-factory');\n\n/**\n * A factory of components of particular type.\n *\n * @category Core\n * @typeparam T  A type of component.\n */\nexport abstract class ComponentFactory<T extends object = any> {\n\n  /**\n   * A key of definition context value containing a component factory.\n   */\n  static get [ContextKey__symbol](): ContextKey<ComponentFactory> {\n    return ComponentFactory__key;\n  }\n\n  /**\n   * Component class constructor.\n   */\n  abstract readonly componentType: ComponentClass<T>;\n\n  /**\n   * Custom element class constructor.\n   *\n   * It is an error accessing this property before the element class is created, e.g. from inside of\n   * `DefinitionListener` or `ComponentDef.define()` function. In these cases you may wish to add a `whenReady()`\n   * callback.\n   */\n  abstract readonly elementType: Class;\n\n  /**\n   * Custom element definition.\n   */\n  abstract readonly elementDef: ElementDef;\n\n  /**\n   * Mounts a component to arbitrary element.\n   *\n   * This method creates a component, but instead of creating a custom element for, it mounts it to the target\n   * `element`.\n   *\n   * It is up to the features to update the target element. They can use a `ComponentContext.mount` property to check\n   * whether the component is mounted or is constructed in standard way.\n   *\n   * The constructed component will be in disconnected state. To update its connection state either update a\n   * `ComponentMount.connected` property, or use a `connectTo()` method.\n   *\n   * @param element  Target element to mount new component to.\n   *\n   * @returns New component mount.\n   *\n   * @throws Error If target element is already bound to some component.\n   */\n  abstract mountTo(element: any): ComponentMount<T>;\n\n  /**\n   * Connects a component to arbitrary element.\n   *\n   * This method does the same as `mountTo()`, but also marks the mounted component as connected.\n   *\n   * @param element  Target element to mount new component to.\n   *\n   * @returns New component mount.\n   *\n   * @throws Error If target element is already bound to some component.\n   */\n  connectTo(element: any): ComponentMount<T> {\n\n    const mount = this.mountTo(element);\n\n    mount.connected = true;\n\n    return mount;\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\n\n/**\n * A window the components bootstrap is performed against.\n *\n * @category Core\n */\nexport type BootstrapWindow = Window & typeof globalThis;\n\n/**\n * A key of bootstrap context value containing a window instance the bootstrap is performed against.\n *\n * Target value defaults to current window.\n *\n * @category Core\n */\nexport const BootstrapWindow: SingleContextRef<BootstrapWindow> = /*#__PURE__*/ new SingleContextKey(\n    'window',\n    {\n      byDefault() {\n        return window;\n      },\n    },\n);\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport { NamespaceAliaser } from 'namespace-aliaser';\n\n/**\n * Namespace aliaser used by default.\n *\n * Maps namespaces to their unique aliases.\n *\n * @category Core\n */\nexport type DefaultNamespaceAliaser = NamespaceAliaser;\n\n/**\n * A key of bootstrap context value containing the default namespace aliaser.\n *\n * @category Core\n */\nexport const DefaultNamespaceAliaser: SingleContextRef<DefaultNamespaceAliaser> =\n    /*#__PURE__*/ new SingleContextKey<DefaultNamespaceAliaser>('default-namespace-aliaser');\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport { BootstrapWindow } from './bootstrap-window';\n\n/**\n * A window (e.g. DOM) element all bootstrapped components belong to.\n *\n * @category Core\n */\nexport type BootstrapRoot = any;\n\n/**\n * A key of bootstrap context value containing a bootstrap root.\n *\n * Target value defaults to document body of [[BootstrapWindow]].\n *\n * @category Core\n */\nexport const BootstrapRoot: SingleContextRef<BootstrapRoot> = /*#__PURE__*/ new SingleContextKey(\n    'bootstrap-root',\n    {\n      byDefault(ctx) {\n        return ctx.get(BootstrapWindow).document.body;\n      },\n    },\n);\n","/**\n * @internal\n */\nexport function isArray<T>(value: T | T[]): value is T[];\n\n/**\n * @internal\n */\nexport function isArray<T>(value: T | readonly T[]): value is readonly T[];\n\nexport function isArray<T>(value: T | readonly T[]): value is T[] {\n  return Array.isArray(value);\n}\n","/**\n * @module @wesib/wesib\n */\nimport { AIterable } from 'a-iterable';\nimport { isArray } from './types.impl';\n\n/**\n * @category Utility\n */\nexport class ArraySet<T> extends AIterable<T> {\n\n  readonly items: Set<T>;\n\n  constructor(value?: T | readonly T[]) {\n    super();\n    this.items = value == null ? new Set() : isArray(value) ? new Set(value) : new Set([value]);\n  }\n\n  get value(): T | T[] | undefined {\n    switch (this.items.size) {\n    case 0: return;\n    case 1: return this.items[Symbol.iterator]().next().value;\n    default: return [...this.items];\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.items[Symbol.iterator]();\n  }\n\n  add(...items: T[]): this {\n    items.forEach(item => this.items.add(item));\n    return this;\n  }\n\n  get size(): number {\n    return this.items.size;\n  }\n\n  merge(items: readonly T[] | T | undefined): this {\n    if (items == null) {\n      return this;\n    }\n    if (isArray(items)) {\n      return this.add(...items);\n    }\n    return this.add(items);\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\n/**\n * Arbitrary class constructor.\n *\n * @category Utility\n * @typeparam T  A type of object.\n */\nexport interface Class<T extends object = any> extends Function {\n  new(...args: any[]): T;\n  prototype: T;\n}\n\n/**\n * Detects super class of the given class optionally satisfying the given criteria.\n *\n * Traverses all class ancestors until reaches the one satisfying the given criteria, or stops when there is no more\n * ancestors.\n *\n * @category Utility\n * @param type  The class constructor to find super class of.\n * @param satisfying  The criteria of super class matching. It is a function accepting a super class constructor\n * as the only parameter and returning `true` if the given super class matches, or `false` otherwise. Always returns\n * `true` by default.\n *\n * @return A super class `satisfying` the given criteria, or `undefined` if there is no such super class, or there is no\n * super class at all (e.g. when `Object` is passed in).\n */\nexport function superClassOf(type: Class, satisfying: (type: Class) => boolean = () => true): Class | undefined {\n\n  const prototype = Object.getPrototypeOf(type.prototype);\n\n  if (prototype == null) {\n    return;\n  }\n\n  const superType = prototype.constructor as Class;\n\n  if (satisfying(superType)) {\n    return superType;\n  }\n\n  return superClassOf(superType, satisfying);\n}\n","/**\n * @module @wesib/wesib\n */\n/**\n * Merges two functions by calling one after another.\n *\n * Optionally merges function call results.\n *\n * @category Utility\n * @typeparam P  Function parameter types as tuple.\n * @typeparam R  A type of function result.\n * @typeparam T  A type if `this` object expected by function.\n * @param first  The first function to call.\n * @param second  The second function to call.\n * @param merge  Optional function call results merger. Accepts two function results as arguments and returns the final\n * result. When omitted the first function call result is ignored and the second function's call result is returned.\n *\n * @return A function that calls both of the given ones and merges their results. If one of the functions is absent,\n * then just returns another one. If both are absent, then returns `undefined`.\n */\nexport function mergeFunctions<P extends any[], R, T>(\n    first: (this: T, ...args: P) => R,\n    second: ((this: T, ...args: P) => R) | undefined,\n    merge: (first: R, second: R) => R): (this: T, ...args: P) => R;\n\nexport function mergeFunctions<P extends any[], R, T>(\n    first: ((this: T, ...args: P) => R) | undefined,\n    second: (this: T, ...args: P) => R,\n    merge?: (first: R, second: R) => R): (this: T, ...args: P) => R;\n\nexport function mergeFunctions<P extends any[], R, T>(\n    first: ((this: T, ...args: P) => R) | undefined,\n    second: ((this: T, ...args: P) => R) | undefined,\n    merge?: (first: R, second: R) => R): ((this: T, ...args: P) => R) | undefined;\n\nexport function mergeFunctions<P extends any[], R, T>(\n    first: ((this: T, ...args: P) => R) | undefined,\n    second: ((this: T, ...args: P) => R) | undefined,\n    merge: (first: R, second: R) => R = (_f, s) => s): ((this: T, ...args: P) => R) | undefined {\n  if (!first) {\n    return second;\n  }\n  if (!second) {\n    return first;\n  }\n  return function(this: T, ...args: P) {\n    return merge(\n      first.apply(this, args),\n      second.apply(this, args));\n  };\n}\n","/**\n * Checks whether the given DOM node is element.\n *\n * @param node  A DOM node to check.\n *\n * @returns `true` is `node` is element, or `false` otherwise.\n */\nexport function isElement(node: Node): node is Element {\n  return node.nodeType === Node.ELEMENT_NODE;\n}\n","/**\n * @module @wesib/wesib\n */\nimport { Class, superClassOf } from './classes';\n\n/**\n * @category Utility\n */\nexport abstract class MetaAccessor<M> {\n\n  readonly symbol: symbol;\n\n  protected constructor(symbol: symbol) {\n    this.symbol = symbol;\n  }\n\n  own(type: Class): M | undefined {\n    return type.hasOwnProperty(this.symbol) ? (type as any)[this.symbol] : undefined;\n  }\n\n  of(type: Class): M | undefined {\n\n    const ownDef: M | undefined = this.own(type);\n    const superType = superClassOf(type);\n    const superDef = superType && this.of(superType);\n\n    return ownDef ? (superDef ? this.merge(superDef, ownDef) : ownDef) : superDef;\n  }\n\n  define<C extends Class>(type: C, ...defs: M[]): C {\n\n    const prevDef = this.own(type);\n    const def = prevDef ? this.merge(prevDef, ...defs) : this.merge(...defs);\n\n    Object.defineProperty(\n        type,\n        this.symbol,\n        {\n          configurable: true,\n          value: def,\n        },\n    );\n\n    return type;\n  }\n\n  abstract merge(...defs: M[]): M;\n\n}\n","/**\n * @module @wesib/wesib\n */\n/**\n * @category Utility\n */\nexport class PromiseResolver<T = void> {\n\n  readonly promise: Promise<T>;\n  private _resolve!: (value: T) => void;\n  private _reject!: (error: any) => void;\n\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  resolve(value: T) {\n    this._resolve(value);\n  }\n\n  reject(error: any) {\n    this._reject(error);\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { BootstrapSetup } from '../boot';\nimport { ArraySet, Class, mergeFunctions, MetaAccessor } from '../common';\nimport { FeatureContext } from './feature-context';\n\n/**\n * A key of a property holding a feature definition within its class constructor.\n *\n * @category Core\n */\nexport const FeatureDef__symbol = /*#__PURE__*/ Symbol('feature-def');\n\n/**\n * Feature definition.\n *\n * @category Core\n */\nexport interface FeatureDef {\n\n  /**\n   * Features this one requires.\n   */\n  readonly needs?: Class | readonly Class[];\n\n  /**\n   * Features this one provides.\n   *\n   * The feature always provides itself.\n   */\n  readonly has?: Class | readonly Class[];\n\n  /**\n   * Sets up bootstrap.\n   *\n   * This method is called before bootstrap context created.\n   *\n   * @param setup  Bootstrap setup.\n   */\n  setup?(setup: BootstrapSetup): void;\n\n  /**\n   * Bootstraps this feature by calling the given bootstrap context constructed.\n   *\n   * @param context  Feature initialization context.\n   */\n  init?(context: FeatureContext): void;\n\n}\n\nclass FeatureMeta extends MetaAccessor<FeatureDef> {\n\n  constructor() {\n    super(FeatureDef__symbol);\n  }\n\n  merge(...defs: readonly FeatureDef[]): FeatureDef {\n    return defs.reduce<FeatureDef>(\n        (prev, def) => ({\n          needs: new ArraySet(prev.needs).merge(def.needs).value,\n          has: new ArraySet(prev.has).merge(def.has).value,\n          setup: mergeFunctions<[BootstrapSetup], void, Class>(prev.setup, def.setup),\n          init: mergeFunctions<[FeatureContext], void, Class>(prev.init, def.init),\n        }),\n        {},\n    );\n  }\n\n}\n\nconst meta = /*#__PURE__*/ new FeatureMeta();\n\n/**\n * @category Core\n */\nexport const FeatureDef = {\n\n  /**\n   * Extracts a feature definition from its type.\n   *\n   * @param featureType  Target feature class constructor.\n   *\n   * @returns A feature definition. May be empty when there is no feature definition found in the given `featureType`.\n   */\n  of(featureType: Class): FeatureDef {\n    return meta.of(featureType) || {};\n  },\n\n  /**\n   * Merges multiple feature definitions.\n   *\n   * @param defs  Feature definitions to merge.\n   *\n   * @returns Merged feature definition.\n   */\n  merge(...defs: readonly FeatureDef[]): FeatureDef {\n    return meta.merge(...defs);\n  },\n\n  /**\n   * Defines a feature.\n   *\n   * Either creates new or extends an existing feature definition and stores it under `[FeatureDef__symbol]` key.\n   *\n   * @typeparam T  Feature type.\n   * @param type  Feature class constructor.\n   * @param defs  Feature definitions.\n   *\n   * @returns The `type` instance.\n   */\n  define<T extends Class>(type: T, ...defs: readonly FeatureDef[]): T {\n    return meta.define(type, ...defs);\n  },\n\n};\n","/**\n * @module @wesib/wesib\n */\nimport { Class, TypedClassDecorator } from '../common';\nimport { FeatureDef } from './feature-def';\n\n/**\n * Feature class decorator.\n *\n * Decorate a class with this decorator to define it as a feature like this:\n * ```TypeScript\n * @Feature({ needs: [OtherFeature, MyComponent] })\n * class MyFeature {\n *   // ...\n * }\n * ```\n *\n * Such feature can be passed to [[bootstrapComponents]] function or referenced by other features.\n *\n * This is an alternative to direct call to [[FeatureDef.define]] method.\n *\n * @category Core\n * @typeparam T  A type of decorated feature class.\n * @param def  Feature definition.\n *\n * @returns A feature class decorator.\n */\nexport function Feature<T extends Class = any>(def: FeatureDef): TypedClassDecorator<T> {\n  return (type: T) => FeatureDef.define(type, def);\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, ContextValueSpec, SingleContextKey } from 'context-values';\nimport { OnEvent } from 'fun-events';\nimport { BootstrapContext, BootstrapSetup } from '../boot';\nimport { Class } from '../common';\nimport { ComponentContext } from '../component';\nimport { ComponentClass, ComponentFactory, DefinitionContext, DefinitionSetup } from '../component/definition';\nimport { FeatureRef } from './feature-ref';\n\nconst FeatureContext_key = new SingleContextKey<FeatureContext>('feature-context');\n\n/**\n * Feature initialization context.\n */\nexport abstract class FeatureContext extends BootstrapContext implements BootstrapSetup {\n\n  /**\n   * A key of feature context value containing the feature context itself.\n   */\n  static get [ContextKey__symbol](): ContextKey<FeatureContext> {\n    return FeatureContext_key;\n  }\n\n  /**\n   * Feature class this context is created for.\n   */\n  abstract readonly feature: Class;\n\n  abstract readonly whenReady: OnEvent<[FeatureContext]>;\n\n  abstract readonly onDefinition: OnEvent<[DefinitionContext]>;\n\n  abstract readonly onComponent: OnEvent<[ComponentContext]>;\n\n  /**\n   * Provides bootstrap context value.\n   *\n   * Note that this happens when bootstrap context already exists. To provide a value before bootstrap context created\n   * a [[BootstrapSetup.provide]] method can be used.\n   *\n   * @typeparam Deps  Dependencies tuple type.\n   * @typeparam Src  Source value type.\n   * @typeparam Seed  Value seed type.\n   * @param spec  Context value specifier.\n   *\n   * @returns A function that removes the given context value specifier when called.\n   */\n  abstract provide<Deps extends any[], Src, Seed>(\n      spec: ContextValueSpec<BootstrapContext, any, Deps, Src, Seed>,\n  ): () => void;\n\n  abstract perDefinition<Deps extends any[], Src, Seed>(\n      spec: ContextValueSpec<DefinitionContext, any, Deps, Src, Seed>,\n  ): () => void;\n\n  abstract perComponent<Deps extends any[], Src, Seed>(\n      spec: ContextValueSpec<ComponentContext, any, Deps, Src, Seed>,\n  ): () => void;\n\n  abstract setupDefinition<T extends object>(componentType: ComponentClass<T>): OnEvent<[DefinitionSetup]>;\n\n  /**\n   * Defines a component.\n   *\n   * Creates a custom element according to component definition, and registers it with custom elements registry.\n   *\n   * Note that custom element definition will happen only when all features configuration complete.\n   *\n   * @typeparam T  A type of component.\n   * @param componentType  Component class constructor.\n   *\n   * @return Custom element class constructor registered as custom element.\n   *\n   * @throws TypeError  If `componentType` does not contain a component definition.\n   */\n  abstract define<T extends object>(componentType: ComponentClass<T>): void;\n\n  whenDefined<C extends object>(componentType: ComponentClass<C>): Promise<ComponentFactory<C>> {\n    return this.get(BootstrapContext).whenDefined(componentType);\n  }\n\n  load(feature: Class): FeatureRef {\n    return this.get(BootstrapContext).load(feature);\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { Class } from '../common';\n\n/**\n * Feature need.\n *\n * Indicates why one feature needs another one. The reason can be one of:\n *\n * - `needs` when feature {@link FeatureDef.needs depends} on another one, or\n * - `has` when feature {@link FeatureDef.has provides} another one.\n */\nexport type FeatureNeed = [Class, 'needs' | 'has', Class];\n\n/**\n * An error in feature needs. I.e. circular dependency.\n */\nexport class FeatureNeedsError extends Error {\n\n  /**\n   * Feature needs causing this error.\n   */\n  readonly needs: readonly FeatureNeed[];\n\n  /**\n   * Constructs feature needs error.\n   *\n   * @param needs  Feature needs causing the error.\n   */\n  constructor(needs: readonly FeatureNeed[]) {\n    super(\n        'Circular feature needs: '\n        + needs.reduce(\n        (prev, [feature, reason, need]) =>\n            (prev ? prev : feature.name) + ` ${reason} ${need.name}`, ''));\n    this.needs = needs;\n  }\n\n}\n","/**\n * @module wesib/wesib\n */\nimport { AfterEvent, AfterEvent__symbol, EventKeeper } from 'fun-events';\nimport { FeatureStatus } from './feature-status';\n\n/**\n * Dynamically loaded feature reference.\n *\n * It is returned from [[BootstrapContext.load]] and can be used to read feature load status and unload it.\n *\n * Implements an `EventKeeper` interface by sending a feature load status updates.\n */\nexport abstract class FeatureRef implements EventKeeper<[FeatureStatus]> {\n\n  /**\n   * An `AfterEvent` sender of feature load status updates.\n   *\n   * The `[AfterEvent__symbol]` property is an alias of this one.\n   */\n  abstract readonly read: AfterEvent<[FeatureStatus]>;\n\n  get [AfterEvent__symbol](): AfterEvent<[FeatureStatus]> {\n    return this.read;\n  }\n\n  /**\n   * A promise resolved when feature is unloaded.\n   *\n   * This happens after all feature references dismissed.\n   */\n  abstract readonly down: Promise<void>;\n\n  /**\n   * Dismisses feature reference.\n   *\n   * When all feature references dismissed, then unloads the feature. This removes everything set up by the\n   * feature via [[BootstrapSetup]] and [[DefinitionSetup]].\n   *\n   * @param reason  Arbitrary reason of feature reference dismiss. This will be reported by load status supplies\n   * as their cut off reason.\n   *\n   * @returns A promise resolved when feature is unloaded. This happens only after all feature references dismissed.\n   */\n  abstract dismiss(reason?: any): Promise<void>;\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { QualifiedName } from 'namespace-aliaser';\nimport { mergeFunctions, MetaAccessor } from '../common';\nimport { FeatureDef } from '../feature';\nimport { ComponentClass, DefinitionContext, DefinitionSetup, ElementDef } from './definition';\n\n/**\n * A key of a property holding a component definition within its class constructor.\n *\n * @category Core\n */\nexport const ComponentDef__symbol = /*#__PURE__*/ Symbol('component-def');\n\n/**\n * Component definition.\n *\n * A custom element class will be created for each registered component in accordance to this definition.\n *\n * @category Core\n * @typeparam T  A type of component.\n */\nexport interface ComponentDef<T extends object = any> {\n\n  /**\n   * Custom element name.\n   *\n   * The name may belong to some namespace to avoid naming conflicts. I.e. it can be either a string, or\n   * name/namespace tuple.\n   *\n   * When omitted an anonymous component will be registered. Such component is not bound to custom element, but it\n   * still can be mounted.\n   */\n  readonly name?: QualifiedName;\n\n  /**\n   * Existing element to extend by custom one.\n   */\n  readonly extend?: ElementDef.Extend;\n\n  /**\n   * Additional feature definition options.\n   */\n  readonly feature?: FeatureDef;\n\n  /**\n   * Sets up component definition.\n   *\n   * This method is called before component definition context constructed.\n   *\n   * @param setup  Component definition setup.\n   */\n  setup?(setup: DefinitionSetup<T>): void;\n\n  /**\n   * Defines this component by calling the given component definition context methods.\n   *\n   * This function is called before the custom element is defined.\n   *\n   * @param context  Component definition context.\n   */\n  define?(context: DefinitionContext<T>): void;\n\n}\n\nclass ComponentMeta extends MetaAccessor<ComponentDef> {\n\n  constructor() {\n    super(ComponentDef__symbol);\n  }\n\n  merge<T extends object>(...defs: ComponentDef<T>[]): ComponentDef<T> {\n    return defs.reduce(\n        (prev, def) => ({\n          ...prev,\n          ...def,\n          setup: mergeFunctions(prev.setup, def.setup),\n          define: mergeFunctions(prev.define, def.define),\n          feature: prev.feature\n              ? def.feature ? FeatureDef.merge(prev.feature, def.feature) : prev.feature\n              : def.feature,\n        }),\n        {},\n    );\n  }\n\n}\n\nconst meta = /*#__PURE__*/ new ComponentMeta();\nconst componentDefined = /*#__PURE__*/ Symbol('component-defined');\n\n/**\n * @category Core\n */\nexport const ComponentDef = {\n\n  /**\n   * Extracts a component definition from its type.\n   *\n   * @typeparam T  A type of component.\n   * @param componentType  Target component class constructor.\n   *\n   * @returns Component definition. May be empty if there is not definition attached to component type.\n   */\n  of<T extends object>(componentType: ComponentClass<T>): ComponentDef<T> {\n    return meta.of(componentType) as ComponentDef<T> || {};\n  },\n\n  /**\n   * Merges multiple (partial) component definitions.\n   *\n   * @typeparam T  A type of component.\n   * @param defs  Partial component definitions to merge.\n   *\n   * @returns Merged component definition.\n   */\n  merge<T extends object>(...defs: ComponentDef<T>[]): ComponentDef<T> {\n    return meta.merge(...defs);\n  },\n\n  /**\n   * Defines a component.\n   *\n   * Either assigns new or extends an existing component definition and stores it under [[ComponentDef__symbol]] key.\n   *\n   * Note that each component is also a feature able to register itself, so it can be passed directly to\n   * [[bootstrapComponents]] function or added as a requirement of another feature.\n   *\n   * @typeparam T  A type of component.\n   * @param type  Component class constructor.\n   * @param defs  Component definitions.\n   *\n   * @returns The `type` instance.\n   */\n  define<T extends ComponentClass>(\n      type: T,\n      ...defs: ComponentDef<InstanceType<T>>[]\n  ): T {\n\n    const def = this.merge(...defs);\n\n    meta.define(type, def);\n\n    const { feature } = def;\n\n    if (feature) {\n      FeatureDef.define(type, feature);\n    }\n    FeatureDef.define(type, {\n      init: function (context) {\n        if (context.feature === type && !type.hasOwnProperty(componentDefined)) {\n          Object.defineProperty(type, componentDefined, { value: 1 });\n          context.define(type);\n        }\n      },\n    });\n\n    return type;\n  },\n\n};\n","/**\n * @module @wesib/wesib\n */\nimport { TypedClassDecorator } from '../common';\nimport { ComponentDef } from './component-def';\nimport { ComponentClass } from './definition';\n\n/**\n * Component class decorator.\n *\n * Decorate a class with this decorator to define a component like this:\n * ```TypeScript\n * @Component({ name: 'my-element' })\n * class MyComponent {\n *   // ...\n * }\n * ```\n *\n * Such component can be registered with [[BootstrapContext.define]] method, or used as a feature, e.g. passed to\n * [[bootstrapComponents]] function, or added to [[FeatureDef.needs]] property of another feature.\n *\n * This is an alternative to direct call to [[ComponentDef.define]] method.\n *\n * @category Core\n * @typeparam T  A type of decorated component class.\n * @param def  A component definition or just custom element name.\n *\n * @returns A component class decorator.\n */\nexport function Component<T extends ComponentClass = any>(\n    def: ComponentDef<InstanceType<T>> | string,\n): TypedClassDecorator<T> {\n  return (type: T) => ComponentDef.define(type, typeof def === 'string' ? { name: def } : def);\n}\n","import { SingleContextKey } from 'context-values';\nimport { ComponentContext } from './component-context';\n\n/**\n * @internal\n */\nexport const ComponentContext__key = /*#__PURE__*/ new SingleContextKey<ComponentContext>('component-context');\n","import { SingleContextKey } from 'context-values';\nimport { DomEventDispatcher, OnDomEvent } from 'fun-events';\nimport { ComponentContext } from './component-context';\nimport { ComponentEventDispatcher } from './component-event';\n\n/**\n * @internal\n */\nexport const ComponentEventDispatcher__key = /*#__PURE__*/ new SingleContextKey<ComponentEventDispatcher>(\n    'component-event-dispatcher',\n    {\n      byDefault() {\n        return {\n          dispatch(context: ComponentContext, event: Event): boolean {\n            return context.element.dispatchEvent(event);\n          },\n          on<E extends Event>(context: ComponentContext, type: string): OnDomEvent<E> {\n\n            const dispatcher = new DomEventDispatcher(context.element);\n\n            return dispatcher.on(type);\n          },\n        };\n      },\n    },\n);\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport { ComponentContext__key } from './component-context.key.impl';\n\n/**\n * Component content root node.\n *\n * @category Core\n */\nexport type ContentRoot = ParentNode;\n\n/**\n * A key of component context value containing a component root element.\n *\n * This is an element itself by default. But can be overridden e.g. by {@link AttachShadow @AttachShadow} decorator.\n *\n * @category Core\n */\nexport const ContentRoot: SingleContextRef<ContentRoot> = /*#__PURE__*/ new SingleContextKey<ContentRoot>(\n    'content-root',\n    {\n      byDefault(ctx) {\n        return ctx.get(ComponentContext__key).element;\n      },\n    },\n);\n","/**\n * @module @wesib/wesib\n */\nimport { noop, valueProvider } from 'call-thru';\nimport { FnContextKey, FnContextRef } from 'context-values';\nimport { StatePath } from 'fun-events';\n\n/**\n * Component state updater function.\n *\n * @category Core\n */\nexport type StateUpdater =\n/**\n * @typeparam V  Updated value type\n * @param path  Updated state node path.\n * @param newValue  New value.\n * @param oldValue  Replaced value.\n */\n    <V>(this: void, path: StatePath, newValue: V, oldValue: V) => void;\n\n/**\n * A key of component context value containing a component state updates receiver function.\n *\n * Features are calling this function by default when component state changes, e.g. attribute value or DOM property\n * modified.\n *\n * Note that this value is not provided, unless the `StateSupport` feature is enabled.\n *\n * @category Core\n */\nexport const StateUpdater: FnContextRef<Parameters<StateUpdater>> = /*#__PURE__*/ new FnContextKey(\n    'state-updater',\n    {\n      byDefault: valueProvider(noop),\n    },\n);\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, ContextValues } from 'context-values';\nimport { EventSupply, OnDomEvent, OnEvent, StatePath } from 'fun-events';\nimport { BootstrapContext__key } from '../boot/bootstrap-context.key.impl';\nimport { ComponentContext__key } from './component-context.key.impl';\nimport { ComponentEventDispatcher__key } from './component-event.key.impl';\nimport { ComponentMount } from './component-mount';\nimport { ContentRoot } from './content-root';\nimport { ComponentClass } from './definition';\nimport { StateUpdater } from './state-updater';\n\n/**\n * A key of a custom element and component properties containing a reference to component context.\n *\n * @category Core\n */\nexport const ComponentContext__symbol = /*#__PURE__*/ Symbol('component-context');\n\n/**\n * Component context.\n *\n * Passed to component constructor as its only parameter.\n *\n * Extends `ContextValues` interface. The values are provided by corresponding providers registered with\n * [[BootstrapContext.perComponent]] method.\n *\n * @category Core\n * @typeparam T  A type of component.\n */\nexport abstract class ComponentContext<T extends object = any> extends ContextValues {\n\n  /**\n   * A key of component context value containing the component context instance itself.\n   */\n  static get [ContextKey__symbol](): ContextKey<ComponentContext> {\n    return ComponentContext__key;\n  }\n\n  /**\n   * Component class constructor.\n   */\n  abstract readonly componentType: ComponentClass<T>;\n\n  /**\n   * Custom element constructed for the component according to its type.\n   *\n   * E.g. `HTMLElement` instance.\n   */\n  abstract readonly element: any;\n\n  /**\n   * A component instance.\n   *\n   * It is an error accessing this property before the component is created, e.g. from inside of component constructor\n   * or {@link DefinitionContext.onComponent component construction event} receiver. In these cases you may wish to\n   * add a [[whenReady]] callback.\n   */\n  abstract readonly component: T;\n\n  /**\n   * Component mount.\n   *\n   * This is defined when component is mounted to arbitrary element by [[ComponentFactory.mountTo]]. Ot is `undefined`\n   * for components created in standard way.\n   */\n  abstract readonly mount: ComponentMount<T> | undefined;\n\n  /**\n   * Whether the custom element is connected.\n   *\n   * This becomes `true` right before [[whenOn]] event is sent, and becomes `false` right before [[whenOff]] event is\n   * sent.\n   */\n  abstract readonly connected: boolean;\n\n  /**\n   * An `OnEvent` sender of custom element connection events.\n   *\n   * The registered receivers are called when custom element is connected, i.e. its `connectedCallback()` method is\n   * called. If component is connected already the receiver is called immediately.\n   *\n   * Sends a connection supply that is cut off once custom element is disconnected.\n   */\n  abstract readonly whenOn: OnEvent<[EventSupply]>;\n\n  /**\n   * An `OnEvent` sender of custom element disconnection events.\n   *\n   * The registered receivers are called when custom element is disconnected, i.e. its `disconnectedCallback()` method\n   * is called. If component is ready but disconnected, the receiver is called immediately.\n   */\n  abstract readonly whenOff: OnEvent<[]>;\n\n  /**\n   * An `OnEvent` sender of component readiness event.\n   *\n   * The component is constructed shortly after custom element. So the component may not exist when requested\n   * e.g. inside component constructor or {@link DefinitionContext.onComponent component construction event} receiver.\n   * The registered receiver will be notified when the component is constructed.\n   *\n   * If the component is constructed already, the receiver will be notified immediately.\n   */\n  abstract readonly whenReady: OnEvent<[this]>;\n\n  /**\n   * An `OnEvent` sender of component destruction reason event.\n   *\n   * The registered receiver is notified when [[destroy]] method is called. If the component is destroyed already\n   * the receiver is notified immediately.\n   */\n  abstract readonly whenDestroyed: OnEvent<[any]>;\n\n  /**\n   * Updates component's state.\n   *\n   * This is a shorthand for invoking a component {@link StateUpdater state updater} .\n   *\n   * Note that state update has no effect unless [[StateSupport]] feature is enabled or [[StateUpdater]] context value\n   * is provided by other means.\n   *\n   * @typeparam V  A type of changed value.\n   * @param key  Changed value key.\n   * @param newValue  New value.\n   * @param oldValue  Previous value.\n   */\n  readonly updateState: StateUpdater = updateComponentState.bind(this);\n\n  /**\n   * Extracts component context from its custom element or from component itself.\n   *\n   * @param element  Custom element instance created for the component or the component itself.\n   *\n   * @return Component context reference stored under [[ComponentContext__symbol]] key.\n   *\n   * @throws TypeError  When the given `element` does not contain component context reference.\n   */\n  static of<T extends object>(element: any): ComponentContext<T> {\n\n    const context = element[ComponentContext__symbol];\n\n    if (!context) {\n      throw TypeError(`No component context found in ${element}`);\n    }\n\n    return context;\n  }\n\n  /**\n   * Component content root.\n   *\n   * This is a shorthand for requesting a {@link ContentRoot content root} from component context.\n   */\n  get contentRoot(): ContentRoot {\n    return this.get(ContentRoot);\n  }\n\n  /**\n   * Returns a `super` property value inherited from custom element parent.\n   *\n   * @param key  Target property key.\n   */\n  abstract elementSuper(key: PropertyKey): any;\n\n  /**\n   * Returns a DOM event producer for the given event type.\n   *\n   * This is a shorthand for invoking a component event producer function available under\n   * `[ComponentEventProducer.key]` key.\n   *\n   * @param type  An event type to listen for.\n   *\n   * @returns A producer of DOM event events of the given type.\n   */\n  on<E extends Event>(type: string): OnDomEvent<E> {\n    return this.get(ComponentEventDispatcher__key).on(this, type);\n  }\n\n  /**\n   * Dispatches an event to component element.\n   *\n   * This is a shorthand for invoking a component {@link ComponentEventDispatcher event dispatcher}.\n   *\n   * @param event  An event to dispatch.\n   */\n  dispatchEvent(event: Event): void {\n    this.get(BootstrapContext__key).get(ComponentEventDispatcher__key).dispatch(this, event);\n  }\n\n  /**\n   * Destroys the component.\n   *\n   * Removes element from the DOM tree. I.e. disconnects custom element first.\n   *\n   * After this method call the component should no longer be used.\n   *\n   * Note that component destruction is virtual. It is up to developer to decide when component is no longer needed.\n   *\n   * @param reason  Optional reason of destruction.\n   */\n  abstract destroy(reason?: any): void;\n\n}\n\nfunction updateComponentState<V>(this: ComponentContext<any>, key: StatePath, newValue: V, oldValue: V) {\n  this.get(StateUpdater)(key, newValue, oldValue);\n}\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextRef } from 'context-values';\nimport { OnDomEvent } from 'fun-events';\nimport { ComponentContext } from './component-context';\nimport { ComponentEventDispatcher__key } from './component-event.key.impl';\n\n/**\n * Component event.\n *\n * Events of this type are thrown by various services to inform on component status changes.\n *\n * It is illegal to dispatch such events for elements not bound to components. It is reasonable to dispatch events\n * using [[ComponentEventDispatcher]] available in component context.\n *\n * The following event types supported:\n * - `wesib:component` is thrown when component is bound to element. I.e. when HTML element is upgraded to custom one\n *   defined by component, or component is bound to the element. This event bubbles and is not cancelable.\n *\n * @category Core\n * @event ComponentEvent#wesib:component\n */\nexport class ComponentEvent extends Event {\n\n  /**\n   * Constructs component event.\n   *\n   * @param type  Event type.\n   * @param eventInitDict  Event initialization dictionary.\n   */\n  constructor(type: string, eventInitDict?: EventInit) {\n    super(type, eventInitDict);\n  }\n\n  /**\n   * Target component context.\n   */\n  get context(): ComponentContext {\n    return ComponentContext.of(this.target);\n  }\n\n}\n\n/**\n * Component event dispatcher is used to listen for and dispatch component events.\n *\n * It is available in bootstrap context context.\n *\n * By default treats a component element as event target.\n *\n * @category Core\n */\nexport interface ComponentEventDispatcher {\n\n  /**\n   * Dispatches the DOM event for the given component.\n   *\n   * @param context  Target component context.\n   * @param event  An event to dispatch.\n   *\n   * @returns `true` if either event's `cancelable` attribute value is `false` or its `preventDefault()` method was not\n   * invoked, or `false` otherwise.\n   */\n  dispatch(context: ComponentContext, event: Event): boolean;\n\n  /**\n   * Returns an `OnDomEvent` sender of DOM events of the given type.\n   *\n   * @param context  Target component context.\n   * @param type  An event type to listen for.\n   *\n   * @returns A producer of DOM event events of the given type.\n   */\n  on<E extends Event>(context: ComponentContext, type: string): OnDomEvent<E>;\n\n}\n\n/**\n * A key of bootstrap context value containing component event dispatcher.\n *\n * @category Core\n */\nexport const ComponentEventDispatcher: SingleContextRef<ComponentEventDispatcher> =\n    /*#__PURE__*/ ComponentEventDispatcher__key;\n","/**\n * @module @wesib/wesib\n */\nimport { ComponentContext } from './component-context';\n\n/**\n * A mount of the component to an element.\n *\n * This is constructed when a component is mounted to arbitrary element by [[ComponentFactory.mountTo]] method.\n *\n * Mounted components do not maintain their connection state automatically. It is a calling code responsibility to set\n * their connection state by updating [[ComponentMount.connected]] property. E.g. by calling a\n * [[ComponentMount.checkConnected]] method. An [[ElementObserver]] and [[AutoConnectSupport]] feature could be used to\n * do it automatically.\n *\n * @category Core\n * @typeparam T  A type of component.\n */\nexport abstract class ComponentMount<T extends object = any> {\n\n  /**\n   * Mounted component context.\n   */\n  abstract readonly context: ComponentContext<T>;\n\n  /**\n   * Component connection state.\n   *\n   * Updating this property triggers appropriate listeners registered in [[ComponentContext]].\n   *\n   * The initial state is set by [[checkConnected]] method.\n   */\n  abstract connected: boolean;\n\n  /**\n   * Mounted component.\n   */\n  get component(): T {\n    return this.context.component;\n  }\n\n  /**\n   * An element the component is mounted to.\n   */\n  get element(): any {\n    return this.context.element;\n  }\n\n  /**\n   * Checks whether the mounted component element is actually connected to its owning document.\n   *\n   * Updates the `connected` property and returns its value.\n   *\n   * @returns `true` if the component element is connected, or `false` otherwise.\n   */\n  abstract checkConnected(): boolean;\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextUpKey, ContextUpRef, ContextValueOpts, ContextValues } from 'context-values';\nimport { AfterEvent, EventKeeper } from 'fun-events';\nimport { ComponentContext, ComponentContext__symbol } from '../../component';\n\n/**\n * Element adapter is a function able to convert a raw element to component. E.g. mount a component to it.\n *\n * Features may use it internally. E.g. an `AutoConnectSupport` applies it to each added DOM element.\n *\n * Multiple element adapters can be registered in bootstrap context.\n *\n * @category Core\n */\nexport type ElementAdapter =\n/**\n * @param element  Target raw element to adapt.\n *\n * @returns An adapted component's context, or `undefined` if element can not be adapted.\n */\n    (this: void, element: any) => ComponentContext | undefined;\n\nclass ElementAdapterKey extends ContextUpKey<ElementAdapter, ElementAdapter> {\n\n  constructor() {\n    super('element-adapter');\n  }\n\n  grow<Ctx extends ContextValues>(\n      opts: ContextValueOpts<\n          Ctx,\n          ElementAdapter,\n          EventKeeper<ElementAdapter[]> | ElementAdapter, AfterEvent<ElementAdapter[]>>,\n  ): ElementAdapter {\n\n    const defaultElementAdapter = (element: any) => element[ComponentContext__symbol];\n\n    let result: ElementAdapter;\n\n    opts.seed((...adapters) => {\n\n      const combined = adapters.reduce(\n          (prev, adapter) => (element: any) => prev(element) || adapter(element),\n          defaultElementAdapter,\n      );\n\n      result = combined !== defaultElementAdapter\n          ? combined\n          : opts.byDefault(() => defaultElementAdapter) || defaultElementAdapter;\n    });\n\n    return element => result(element);\n  }\n\n}\n\n/**\n * A key of bootstrap context value containing combined [[ElementAdapter]] instance.\n *\n * @category Core\n */\nexport const ElementAdapter: ContextUpRef<ElementAdapter, ElementAdapter> = /*#__PURE__*/ new ElementAdapterKey();\n","/**\n * @module wesib/wesib\n */\nimport { filterIt, itsEach, overArray } from 'a-iterable';\nimport { ContextKey__symbol, ContextUpKey, FnContextKey } from 'context-values';\nimport { isElement } from '../../common';\nimport { ComponentContext__symbol, ComponentMount } from '../../component';\nimport { bootstrapDefault } from '../bootstrap-default';\nimport { ElementAdapter } from './element-adapter';\n\nconst ElementObserver__key = /*#__PURE__*/ new FnContextKey<[MutationCallback], ElementObserver>(\n    'element-observer',\n    {\n      byDefault: bootstrapDefault(bsContext => {\n\n        const adapter = bsContext.get(ElementAdapter);\n        class DefaultElementObserver extends ElementObserver {\n\n          constructor(callback: MutationCallback) {\n            super(mutations => {\n              mutations.forEach(mutation => {\n                itsEach(\n                    overArray(mutation.removedNodes),\n                    node => mountOf(node)?.checkConnected(),\n                );\n                itsEach(\n                    filterIt(\n                        overArray(mutation.addedNodes),\n                        isElement,\n                    ),\n                    element => adapter(element)?.mount?.checkConnected(),\n                );\n              });\n              callback(mutations, this);\n            });\n          }\n\n        }\n\n        return callback => new DefaultElementObserver(callback);\n      }),\n    },\n);\n\n/**\n * Element mutations observer.\n *\n * It is a `MutationObserver` implementation that:\n * - always observes target's children,\n * - applies {@link ElementAdapter element adapter} to added elements,\n * - tracks mounted components {@link ComponentMount.connected connection state}.\n *\n * The class is abstract. The function constructing an instance could be obtained from bootstrap context.\n */\nexport abstract class ElementObserver extends MutationObserver {\n\n  /**\n   * A key of bootstrap context value containing a function constructing a new [[ElementObserver]] instance.\n   */\n  static get [ContextKey__symbol](): ContextUpKey<\n      (this: void, callback: MutationCallback) => ElementObserver,\n      (this: void, callback: MutationCallback) => ElementObserver> {\n    return ElementObserver__key;\n  }\n\n  /**\n   * Configures the observer callback to begin receiving notifications of changes to the DOM that match the given\n   * options.\n   * To stop the MutationObserver (so that none of its callbacks will be triggered any longer), call\n   * [[disconnect]].\n   *\n   * @param target  A DOM node within the DOM tree to watch for changes, and to be the root of a subtree of nodes\n   * to be watched.\n   * @param options  An options that describe what DOM mutations should be reported to the observer's callback.\n   */\n  observe(target: Node, options?: ElementObserverInit): void {\n    super.observe(target, { ...options, childList: true });\n  }\n\n}\n\n/**\n * Element observer initialization options.\n */\nexport interface ElementObserverInit extends MutationObserverInit {\n\n  /**\n   * Whether mutations to target's children are to be observed.\n   *\n   * Always `true`.\n   */\n  childList?: true;\n\n}\n\nfunction mountOf(node: any): ComponentMount | undefined {\n  return node[ComponentContext__symbol]?.mount;\n}\n","import { ComponentClass, ComponentFactory } from '../../component/definition';\n\n/**\n * @internal\n */\nexport const ComponentFactory__symbol = /*#__PURE__*/ Symbol('component-factory');\n\n/**\n * @internal\n */\nexport function componentFactoryOf<T extends object>(componentType: ComponentClass<T>): ComponentFactory<T> {\n\n  const factory = (componentType as any)[ComponentFactory__symbol];\n\n  if (!factory) {\n    throw new TypeError(`Component is not defined: ${componentType}`);\n  }\n\n  return factory;\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, ContextValues, SingleContextKey } from 'context-values';\nimport { html__naming, isQualifiedName, QualifiedName } from 'namespace-aliaser';\nimport { BootstrapWindow, DefaultNamespaceAliaser } from '../../boot/globals';\nimport { componentFactoryOf } from '../../boot/impl/component-factory.symbol.impl';\nimport { Class, PromiseResolver } from '../../common';\nimport { ComponentClass } from './component-class';\n\nconst CustomElements__key = /*#__PURE__*/ new SingleContextKey<CustomElements>(\n    'custom-elements',\n    {\n      byDefault: createCustomElements,\n    },\n);\n\n/**\n * Custom elements registry.\n *\n * This is used to register custom elements.\n *\n * Typically implemented by `window.customElements`.\n *\n * @category Core\n */\nexport abstract class CustomElements {\n\n  /**\n   * A key of bootstrap context value containing a `CustomElements` instance used to register custom\n   * elements.\n   *\n   * Target value defaults to `window.customElements` from the window provided under `[BootstrapWindow.key]`.\n   */\n  static get [ContextKey__symbol](): ContextKey<CustomElements> {\n    return CustomElements__key;\n  }\n\n  /**\n   * Defines custom element.\n   *\n   * @param componentTypeOrName  A component class constructor or custom element name. The latter may belong to\n   * namespace to avoid naming conflicts.\n   * @param elementType  A constructor of custom element to define.\n   */\n  abstract define(componentTypeOrName: ComponentClass | QualifiedName, elementType: Class): void;\n\n  /**\n   * Allows to wait for component definition.\n   *\n   * This corresponds to `window.customElements.whenDefined()` method.\n   *\n   * @param componentTypeOrName  Component class constructor or custom element name possibly belonging to some\n   * namespace.\n   *\n   * @return A promise that is resolved when custom element is registered.\n   *\n   * @throws TypeError If `componentType` does not contain a component definition.\n   */\n  abstract whenDefined(componentTypeOrName: ComponentClass | QualifiedName): Promise<void>;\n\n}\n\nfunction createCustomElements(values: ContextValues) {\n\n  const customElements: CustomElementRegistry = values.get(BootstrapWindow).customElements;\n  const nsAlias = values.get(DefaultNamespaceAliaser);\n\n  class WindowCustomElements extends CustomElements {\n\n    define(componentTypeOrName: ComponentClass | string, elementType: Class): void {\n      if (isQualifiedName(componentTypeOrName)) {\n        customElements.define(html__naming.name(componentTypeOrName, nsAlias), elementType);\n        return;\n      }\n\n      const factory = componentFactoryOf(componentTypeOrName);\n      const { name, extend } = factory.elementDef;\n\n      if (!name) {\n        componentResolver(componentTypeOrName).resolve(undefined);\n        return; // Anonymous component.\n      }\n      if (extend && extend.name) {\n        customElements.define(\n            html__naming.name(name, nsAlias),\n            elementType,\n            {\n              extends: extend.name,\n            });\n      } else {\n        customElements.define(html__naming.name(name, nsAlias), elementType);\n      }\n    }\n\n    whenDefined(componentTypeOrName: ComponentClass | string): Promise<void> {\n      if (isQualifiedName(componentTypeOrName)) {\n        return customElements.whenDefined(html__naming.name(componentTypeOrName, nsAlias));\n      }\n\n      const factory = componentFactoryOf(componentTypeOrName);\n      const { name } = factory.elementDef;\n\n      if (!name) {\n        return componentResolver(componentTypeOrName).promise;\n      }\n\n      return customElements.whenDefined(html__naming.name(name, nsAlias));\n    }\n\n  }\n\n  return new WindowCustomElements();\n}\n\nconst ComponentResolver__symbol = /*#__PURE__*/ Symbol('component-resolver');\n\nfunction componentResolver(componentType: ComponentClass): PromiseResolver<void> {\n  return (componentType as any)[ComponentResolver__symbol]\n      || ((componentType as any)[ComponentResolver__symbol] = new PromiseResolver());\n}\n","import { SingleContextKey } from 'context-values';\nimport { DefinitionContext } from './definition-context';\n\n/**\n * @internal\n */\nexport const DefinitionContext__key = /*#__PURE__*/ new SingleContextKey<DefinitionContext>('definition-context');\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport { QualifiedName } from 'namespace-aliaser';\nimport { BootstrapWindow } from '../../boot/globals';\nimport { Class } from '../../common';\nimport { ComponentDef } from '../component-def';\nimport { DefinitionContext__key } from './definition.context.key.impl';\n\n/**\n * Custom element definition meta.\n *\n * @category Core\n */\nexport interface ElementDef {\n\n  /**\n   * Custom element name.\n   *\n   * The name may belong to some namespace to avoid naming conflicts. I.e. it can be either a string, or\n   * name/namespace tuple.\n   *\n   * When omitted an anonymous component will be registered. Such component is not bound to custom element, but it\n   * still can be mounted.\n   */\n  readonly name?: QualifiedName;\n\n  /**\n   * Existing element to extend by custom one.\n   */\n  readonly extend: ElementDef.Extend;\n\n}\n\n/**\n * A key of definition context value containing a custom element definition.\n *\n * Target value defaults to `HTMLElement` from the window provided under `[BootstrapWindow.key]`,\n * unless `ComponentDef.extend.type` is specified.\n */\nexport const ElementDef: SingleContextRef<ElementDef> = /*#__PURE__*/ new SingleContextKey<ElementDef>(\n    'element-def',\n    {\n      byDefault(values) {\n\n        const componentType = values.get(DefinitionContext__key).componentType;\n        const { name, extend } = ComponentDef.of(componentType);\n\n        const elementExtend: ElementDef.Extend = {\n          get type() {\n            return extend && extend.type || values.get(BootstrapWindow).HTMLElement;\n          },\n          get name() {\n            return extend && extend.name;\n          },\n        };\n\n        return {\n          get name() {\n            return name;\n          },\n          get extend() {\n            return elementExtend;\n          },\n        };\n      },\n    },\n);\n\n/**\n * @category Core\n */\nexport namespace ElementDef {\n\n  /**\n   * The definition of element to extend by custom one.\n   */\n  export interface Extend {\n\n    /**\n     * The class constructor of element to extend.\n     */\n    readonly type: Class;\n\n    /**\n     * The name of element to extend.\n     *\n     * This is to support `as` attribute of standard HTML element. Note that this is not supported by polyfills.\n     */\n    readonly name?: string;\n\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, ContextValues, ContextValueSpec } from 'context-values';\nimport { OnEvent } from 'fun-events';\nimport { Class } from '../../common';\nimport { ComponentContext } from '../component-context';\nimport { ComponentClass } from './component-class';\nimport { DefinitionContext__key } from './definition.context.key.impl';\nimport { ElementDef } from './element-def';\n\n/**\n * Component definition context.\n *\n * Extends `ContextValues` interface. The values are provided by corresponding providers registered with\n * `BootstrapContext.perDefinition()` method. All [[BootstrapContext]] values are available too.\n *\n * @category Core\n * @typeparam T  A type of component.\n */\nexport abstract class DefinitionContext<T extends object = any> extends ContextValues {\n\n  /**\n   * A key of definition context value containing the definition context itself.\n   */\n  static get [ContextKey__symbol](): ContextKey<DefinitionContext> {\n    return DefinitionContext__key;\n  }\n\n  /**\n   * Component class constructor.\n   */\n  abstract readonly componentType: ComponentClass<T>;\n\n  /**\n   * Custom element class constructor.\n   *\n   * It is an error accessing this property before the element class is created, e.g. from inside of\n   * `DefinitionListener` or `ComponentDef.define()` function. In these cases you may wish to add a `whenReady()`\n   * callback.\n   */\n  abstract readonly elementType: Class;\n\n  /**\n   * An `OnEvent` sender of component definition readiness event.\n   *\n   * The custom element class is not constructed until component definition is complete.\n   * The registered receiver will be notified when the custom element class is constructed.\n   *\n   * If the custom element class is constructed already, the receiver will be notified immediately.\n   */\n  abstract readonly whenReady: OnEvent<[this]>;\n\n  /**\n   * Custom element definition.\n   */\n  get elementDef(): ElementDef {\n    return this.get(ElementDef);\n  }\n\n  /**\n   * An `OnEvent` sender of component construction events.\n   *\n   * The registered receiver will be notified right before the defined component is constructed.\n   */\n  abstract readonly onComponent: OnEvent<[ComponentContext<T>]>;\n\n  /**\n   * Provides a value available in the context of each component of the defined component type.\n   *\n   * @typeparam Deps  A type of dependencies.\n   * @typeparam Src  The type of context value sources.\n   * @typeparam Seed  Value seed type.\n   * @param spec  Component context value specifier.\n   *\n   * @returns A function that removes the given context value specifier when called.\n   */\n  abstract perComponent<Deps extends any[], Src, Seed>(\n      spec: ContextValueSpec<ComponentContext<T>, any, Deps, Src, Seed>,\n  ): () => void;\n\n}\n","import { ContextKey, ContextKey__symbol, ContextRegistry, ContextValues, SingleContextKey } from 'context-values';\nimport { BootstrapContext } from '../bootstrap-context';\n\nconst BootstrapContextRegistry__key =\n    /*#__PURE__*/ new SingleContextKey<BootstrapContextRegistry>('bootstrap-context-registry');\n\n/**\n * @internal\n */\nexport class BootstrapContextRegistry extends ContextRegistry<BootstrapContext> {\n\n  static get [ContextKey__symbol](): ContextKey<BootstrapContextRegistry> {\n    return BootstrapContextRegistry__key;\n  }\n\n  readonly values: ContextValues;\n\n  static create(): BootstrapContextRegistry {\n    return new BootstrapContextRegistry();\n  }\n\n  private constructor() {\n    super();\n    this.provide({ a: BootstrapContextRegistry, is: this });\n    this.values = this.newValues();\n  }\n\n}\n","import { ContextKey, ContextKey__symbol, ContextRegistry, ContextSeeds, SingleContextKey } from 'context-values';\nimport { ComponentContext } from '../../component';\nimport { bootstrapDefault } from '../bootstrap-default';\n\nconst ComponentContextRegistry__key = new SingleContextKey<ComponentContextRegistry>(\n    'component-context-registry',\n    {\n      byDefault: bootstrapDefault(() => new ComponentContextRegistry()),\n    },\n);\n\n/**\n * @internal\n */\nexport class ComponentContextRegistry extends ContextRegistry<ComponentContext> {\n\n  static get [ContextKey__symbol](): ContextKey<ComponentContextRegistry> {\n    return ComponentContextRegistry__key;\n  }\n\n  constructor(initial?: ContextSeeds<ComponentContext>) {\n    super(initial);\n  }\n\n}\n","import {\n  ContextKey,\n  ContextKey__symbol,\n  ContextRegistry,\n  ContextSeeds,\n  ContextValues,\n  SingleContextKey,\n} from 'context-values';\nimport { DefinitionContext } from '../../component/definition';\nimport { bootstrapDefault } from '../bootstrap-default';\n\nconst DefinitionContextRegistry__key = new SingleContextKey<DefinitionContextRegistry>(\n    'definition-context-registry',\n    {\n      byDefault: bootstrapDefault(context => new DefinitionContextRegistry(context)),\n    },\n);\n\n/**\n * @internal\n */\nexport class DefinitionContextRegistry extends ContextRegistry<DefinitionContext> {\n\n  static get [ContextKey__symbol](): ContextKey<DefinitionContextRegistry> {\n    return DefinitionContextRegistry__key;\n  }\n\n  constructor(initial?: ContextSeeds<DefinitionContext> | ContextValues) {\n    super(initial);\n  }\n\n}\n","import { nextArgs, nextSkip } from 'call-thru';\nimport { EventEmitter, onAny, OnEvent, onEventBy, trackValue } from 'fun-events';\nimport { superClassOf } from '../../common';\nimport { ComponentDef__symbol } from '../../component';\nimport { ComponentClass, DefinitionSetup } from '../../component/definition';\nimport { Unloader } from './unloader.impl';\n\n/**\n * @internal\n */\nexport function onPostDefSetup(\n    componentType: ComponentClass,\n    unloader: Unloader,\n): OnEvent<[DefinitionSetup]> {\n\n  const { on } = postDefSetup(componentType);\n\n  return onEventBy(receiver => {\n    on({\n      supply: receiver.supply.needs(unloader.supply),\n      receive(ctx, setup) {\n\n        const whenReady = setup.whenReady.tillOff(unloader.supply);\n\n        receiver.receive(ctx, {\n          get componentType() {\n            return setup.componentType;\n          },\n          get whenReady() {\n            return whenReady;\n          },\n          perDefinition(spec) {\n            return unloader.add(() => setup.perDefinition(spec));\n          },\n          perComponent(spec) {\n            return unloader.add(() => setup.perComponent(spec));\n          },\n        });\n      },\n    });\n  });\n}\n\n/**\n * @internal\n */\nexport interface PostDefSetup<T extends object = any> {\n  readonly on: OnEvent<[DefinitionSetup<T>]>;\n  send(setup: DefinitionSetup): void;\n  setup(setup: DefinitionSetup<T>): void;\n}\n\nconst PostDefSetup__symbol = /*#__PURE__*/ Symbol('post-def-setup');\n\n/**\n * @internal\n */\nexport function postDefSetup<T extends object>(componentType: ComponentClass<T>): PostDefSetup<T> {\n  if (componentType.hasOwnProperty(PostDefSetup__symbol)) {\n    return (componentType as any)[PostDefSetup__symbol];\n  }\n\n  const tracker = trackValue<DefinitionSetup<T>>();\n  const emitter = new EventEmitter<[DefinitionSetup]>();\n  const onSetup: OnEvent<[DefinitionSetup<T>]> = tracker.read.thru(setup => setup ? nextArgs(setup) : nextSkip());\n  const on = onAny(onSetup, emitter);\n  const superType = superClassOf(componentType, type => ComponentDef__symbol in type);\n\n  if (superType) {\n\n    const superPostDefSetup = postDefSetup(superType);\n\n    on(setup => superPostDefSetup.send(setup));\n  }\n\n  const result: PostDefSetup<T> = {\n    on,\n    send(setup) {\n      emitter.send(setup);\n    },\n    setup(setup) {\n      tracker.it = setup;\n    },\n  };\n\n  Object.defineProperty(componentType, PostDefSetup__symbol, { value: result });\n\n  return result;\n}\n","import { nextArgs, nextSkip, noop } from 'call-thru';\nimport { ContextValues, ContextValueSpec, SingleContextKey, SingleContextRef } from 'context-values';\nimport { EventEmitter, eventSupply, EventSupply, OnEvent, trackValue, ValueTracker } from 'fun-events';\nimport { Class } from '../../common';\nimport {\n  ComponentContext as ComponentContext_,\n  ComponentContext__symbol,\n  ComponentDef,\n  ComponentEvent,\n  ComponentMount as ComponentMount_,\n} from '../../component';\nimport {\n  ComponentClass,\n  ComponentFactory as ComponentFactory_,\n  DefinitionContext as DefinitionContext_, DefinitionSetup,\n  ElementDef,\n} from '../../component/definition';\nimport { BootstrapContext } from '../bootstrap-context';\nimport { bootstrapDefault } from '../bootstrap-default';\nimport { ComponentContextRegistry } from './component-context-registry.impl';\nimport { DefinitionContextRegistry } from './definition-context-registry.impl';\nimport { postDefSetup } from './post-def-setup.impl';\n\n/**\n * @internal\n */\nexport interface ElementBuilder {\n  readonly definitions: EventEmitter<[DefinitionContext_]>;\n  readonly components: EventEmitter<[ComponentContext_]>;\n  buildElement<T extends object>(this: void, componentType: ComponentClass<T>): ComponentFactory_<T>;\n}\n\n/**\n * @internal\n */\nexport const ElementBuilder: SingleContextRef<ElementBuilder> = /*#__PURE__*/ new SingleContextKey<ElementBuilder>(\n    'element-builder',\n    {\n      byDefault: bootstrapDefault(newElementBuilder),\n    },\n);\n\nfunction newElementBuilder(bsContext: BootstrapContext): ElementBuilder {\n\n  const definitionContextRegistry_global = bsContext.get(DefinitionContextRegistry);\n  const componentContextRegistry_global = bsContext.get(ComponentContextRegistry);\n  const definitions = new EventEmitter<[DefinitionContext_]>();\n  const components = new EventEmitter<[ComponentContext_]>();\n\n  return {\n    definitions,\n    components,\n    buildElement<T extends object>(componentType: ComponentClass<T>) {\n\n      const def = ComponentDef.of(componentType);\n      const onComponent = new EventEmitter<[ComponentContext_]>();\n      let componentContextRegistry_perType!: ComponentContextRegistry;\n      const ready = trackValue(false);\n      const whenReady: OnEvent<[]> = ready.read.thru(cls => cls ? nextArgs() : nextSkip());\n      let definitionContext: DefinitionContext;\n\n      function createComponentContextRegistry() {\n        return componentContextRegistry_global.append(componentContextRegistry_perType);\n      }\n\n      class ComponentFactory extends ComponentFactory_ < T > {\n\n        get componentType() {\n          return definitionContext.componentType;\n        }\n\n        get elementType() {\n          return definitionContext.elementType;\n        }\n\n        get elementDef() {\n          return definitionContext.elementDef;\n        }\n\n        mountTo(element: any): ComponentMount_<T> {\n          if (element[ComponentContext__symbol]) {\n            throw new Error(`Element ${element} already bound to component`);\n          }\n\n          const mount = createComponent({\n            definitionContext,\n            onComponent,\n            registry: createComponentContextRegistry(),\n            element,\n            elementSuper(key) {\n              return element[key];\n            },\n            createMount(context: ComponentContext_<T>) {\n\n              class ComponentMount extends ComponentMount_<T> {\n\n                get context() {\n                  return context;\n                }\n\n                get connected() {\n                  return elementStatus(element).it === ComponentStatus.On;\n                }\n\n                set connected(value: boolean) {\n                  elementStatus(element).it = value ? ComponentStatus.On : ComponentStatus.Off;\n                }\n\n                checkConnected(): boolean {\n\n                  const el: Element = element;\n                  const doc = el.ownerDocument;\n\n                  return this.connected = doc != null && doc.contains(el);\n                }\n\n              }\n\n              return new ComponentMount();\n            },\n          }).mount as ComponentMount_<T>;\n\n          mount.checkConnected();\n          componentCreated(mount.context);\n\n          return mount;\n        }\n\n      }\n\n      const componentFactory = new ComponentFactory();\n\n      class DefinitionContext extends DefinitionContext_<T> {\n\n        readonly get: ContextValues['get'];\n        readonly whenReady: OnEvent<[this]>;\n\n        get componentType() {\n          return componentType;\n        }\n\n        get onComponent() {\n          return onComponent.on;\n        }\n\n        get elementType(): Class {\n          throw new Error('Custom element class is not constructed yet. Consider to use a `whenReady()` callback');\n        }\n\n        constructor() {\n          super();\n\n          const context = this;\n\n          this.whenReady = whenReady.thru(() => this).once;\n\n          const definitionContextRegistry =\n              new DefinitionContextRegistry(definitionContextRegistry_global.seedIn(this));\n\n          definitionContextRegistry.provide({ a: DefinitionContext_, is: this });\n          definitionContextRegistry.provide({ a: ComponentFactory_, is: componentFactory });\n          this.get = definitionContextRegistry.newValues().get;\n          componentContextRegistry_perType = new ComponentContextRegistry(definitionContextRegistry.seedIn(this));\n\n          const definitionSetup: DefinitionSetup<T> = {\n            get componentType() {\n              return componentType;\n            },\n            get whenReady() {\n              return context.whenReady;\n            },\n            perDefinition(spec) {\n              return definitionContextRegistry.provide(spec);\n            },\n            perComponent(spec) {\n              return componentContextRegistry_perType.provide(spec);\n            },\n          };\n\n          def.setup?.(definitionSetup);\n          postDefSetup(componentType).setup(definitionSetup);\n        }\n\n        perComponent<Deps extends any[], Src, Seed>(\n            spec: ContextValueSpec<ComponentContext_<T>, any, Deps, Src, Seed>,\n        ): () => void {\n          return componentContextRegistry_perType.provide(spec);\n        }\n\n      }\n\n      definitionContext = new DefinitionContext();\n\n      def.define?.(definitionContext);\n      definitions.send(definitionContext);\n\n      const elementType = createElementType(definitionContext, onComponent, createComponentContextRegistry());\n\n      Object.defineProperty(definitionContext, 'elementType', {\n        configurable: true,\n        enumerable: true,\n        value: elementType,\n      });\n\n      ready.it = true;\n\n      return componentFactory;\n    },\n  };\n\n  function createElementType<T extends object>(\n      definitionContext: DefinitionContext_<T>,\n      onComponent: EventEmitter<[ComponentContext_<T>]>,\n      componentContextRegistry: ComponentContextRegistry,\n  ) {\n\n    const elementDef = definitionContext.get(ElementDef);\n\n    class Element extends elementDef.extend.type {\n\n      // Component context reference\n      [ComponentContext__symbol]: ComponentContext_<T>;\n\n      constructor() {\n        super();\n\n        const context = createComponent({\n          definitionContext,\n          onComponent,\n          registry: componentContextRegistry,\n          element: this,\n          createMount: noop,\n          elementSuper: (key) => {\n            // @ts-ignore\n            return super[key] as any;\n          },\n        });\n\n        componentCreated(context);\n      }\n\n      // noinspection JSUnusedGlobalSymbols\n      connectedCallback() {\n        elementStatus(this).it = ComponentStatus.On;\n      }\n\n      // noinspection JSUnusedGlobalSymbols\n      disconnectedCallback() {\n        elementStatus(this).it = ComponentStatus.Off;\n      }\n\n    }\n\n    return Element;\n  }\n\n  function createComponent<T extends object>(\n      {\n        definitionContext,\n        onComponent,\n        registry,\n        element,\n        createMount,\n        elementSuper,\n      }: {\n        definitionContext: DefinitionContext_<T>;\n        onComponent: EventEmitter<[ComponentContext_<T>]>;\n        registry: ComponentContextRegistry;\n        element: any;\n        elementSuper(name: PropertyKey): any;\n        createMount(context: ComponentContext_<T>): ComponentMount_<T> | undefined;\n      },\n  ): ComponentContext_<T> {\n\n    const status = trackValue<ComponentStatus>(ComponentStatus.Building);\n    const destructionReason = trackValue<[any] | undefined>();\n\n    status.on(noop).whenOff(reason => destructionReason.it = [reason]);\n\n    const destroyed: OnEvent<[any]> = destructionReason.read.thru(reason => reason ? nextArgs(reason[0]) : nextSkip());\n    const whenDestroyed: OnEvent<[any]> = destroyed.once;\n\n    const whenOff: OnEvent<[]> = status.read.thru(sts => sts === ComponentStatus.Off ? nextArgs() : nextSkip());\n    const whenOn: OnEvent<[EventSupply]> = status.read.thru(\n        sts => {\n          if (sts !== ComponentStatus.On) {\n            return nextSkip();\n          }\n\n          const offSupply = eventSupply();\n\n          whenOff.once(() => offSupply.off());\n\n          return nextArgs(offSupply);\n        },\n    );\n\n    let mount: ComponentMount_<T> | undefined;\n    const values = registry.newValues();\n\n    class ComponentContext extends ComponentContext_<T> {\n\n      readonly get = values.get;\n      readonly elementSuper = elementSuper;\n      readonly whenReady: OnEvent<[this]>;\n\n      constructor() {\n        super();\n\n        const whenReady: OnEvent<[this]> = status.read.thru(sts => sts ? nextArgs(this) : nextSkip());\n\n        this.whenReady = whenReady.once;\n      }\n\n      get componentType() {\n        return definitionContext.componentType;\n      }\n\n      get element() {\n        return element;\n      }\n\n      get component(): T {\n        throw new Error('The component is not constructed yet. Consider to use a `whenReady()` callback');\n      }\n\n      get mount(): ComponentMount_<T> | undefined {\n        return mount || (mount = createMount(this));\n      }\n\n      get connected(): boolean {\n        return status.it === ComponentStatus.On;\n      }\n\n      get whenOn(): OnEvent<[EventSupply]> {\n        return whenOn;\n      }\n\n      get whenOff(): OnEvent<[]> {\n        return whenOff;\n      }\n\n      get whenDestroyed() {\n        return whenDestroyed;\n      }\n\n      destroy(reason?: any): void {\n        status.done(reason);\n      }\n\n    }\n\n    const context = new ComponentContext();\n\n    context.whenDestroyed(() => removeElement(context));\n    registry.provide({ a: ComponentContext_, is: context });\n\n    augmentElement();\n\n    components.send(context);\n    onComponent.send(context);\n\n    const component = newComponent(definitionContext.componentType, context);\n\n    Object.defineProperty(context, 'component', {\n      configurable: true,\n      enumerable: true,\n      value: component,\n    });\n\n    status.it = ComponentStatus.Ready;\n\n    return context;\n\n    function augmentElement() {\n      Object.defineProperty(element, ComponentContext__symbol, { value: context });\n      Object.defineProperty(element, ComponentStatus__symbol, { writable: true, value: status });\n    }\n  }\n\n}\n\n/**\n * Creates new component of the given type.\n *\n * It makes component context available under `[ComponentContext__symbol]` key in constructed component.\n * The component context is also available inside component constructor by temporarily assigning it to component\n * prototype.\n *\n * @typeparam T  A type of component.\n * @param type  Component class constructor.\n * @param context  Target component context.\n */\nfunction newComponent<T extends object>(type: ComponentClass<T>, context: ComponentContext_<T>): T {\n\n  const proto = type.prototype as any;\n  const prevContext = proto[ComponentContext__symbol];\n\n  proto[ComponentContext__symbol] = context;\n  try {\n\n    const component = new type(context);\n\n    Object.defineProperty(component, ComponentContext__symbol, { value: context });\n\n    return component;\n  } finally {\n    proto[ComponentContext__symbol] = prevContext;\n  }\n}\n\nconst enum ComponentStatus {\n  Building,\n  Ready,\n  Off,\n  On,\n}\n\nconst ComponentStatus__symbol = /*#__PURE__*/ Symbol('component-status');\n\nfunction elementStatus(element: any): ValueTracker<ComponentStatus> {\n  return element[ComponentStatus__symbol];\n}\n\nfunction componentCreated(context: ComponentContext_) {\n  context.dispatchEvent(new ComponentEvent('wesib:component', { bubbles: true }));\n}\n\nfunction removeElement(context: ComponentContext_) {\n\n  const { element, mount } = context;\n\n  if (mount) {\n    mount.connected = false; // Disconnect mounted element\n  }\n\n  const parentNode: Element = element.parentElement;\n\n  if (parentNode) {\n    parentNode.removeChild(element);\n  }\n}\n","import { itsEach, overArray } from 'a-iterable';\nimport { noop, valueProvider } from 'call-thru';\nimport { EventSupply, eventSupply } from 'fun-events';\n\n/**\n * @internal\n */\nexport interface Unloader {\n  readonly supply: EventSupply;\n  add(adder: () => () => void): () => void;\n}\n\nconst doNotAdd = valueProvider(noop);\n\n/**\n * @internal\n */\nexport function newUnloader(): Unloader {\n\n  const unloads: (() => void)[] = [];\n  let add = (adder: () => () => void) => {\n\n    const unload = adder();\n\n    unloads.push(unload);\n\n    return unload;\n  };\n  const supply = eventSupply(() => {\n    add = doNotAdd;\n    itsEach(\n        overArray(unloads).reverse(),\n        unload => unload(),\n    );\n    unloads.length = 0;\n  });\n\n  return {\n    supply,\n    add(adder) {\n      return add(adder);\n    },\n  };\n}\n","import { ElementBuilder } from '../../boot/impl';\nimport { ComponentFactory__symbol } from '../../boot/impl/component-factory.symbol.impl';\nimport { ComponentClass, CustomElements } from '../../component/definition';\nimport { FeatureContext } from '../feature-context';\n\n/**\n * @internal\n */\nexport class ComponentRegistry {\n\n  private _definitionQueue: (() => void)[] = [];\n\n  constructor(private readonly _context: FeatureContext) {\n    _context.whenReady(() => {\n      this._definitionQueue.forEach(definition => definition());\n      delete this._definitionQueue;\n    });\n  }\n\n  get customElements(): CustomElements {\n    return this._context.get(CustomElements);\n  }\n\n  define<T extends object>(componentType: ComponentClass<T>) {\n    this._definitionQueue.push(() => {\n\n      const elementBuilder = this._context.get(ElementBuilder);\n      const factory = elementBuilder.buildElement(componentType);\n\n      (componentType as any)[ComponentFactory__symbol] = factory;\n\n      this.customElements.define(componentType, factory.elementType);\n    });\n  }\n\n}\n","import { filterIt, mapIt } from 'a-iterable';\nimport { isPresent, NextArgs, nextArgs, NextSkip, nextSkip } from 'call-thru';\nimport { ContextRegistry, ContextUpKey, ContextValueOpts, ContextValues, ContextValueSpec } from 'context-values';\nimport {\n  afterAll,\n  afterEach,\n  AfterEvent,\n  afterEventBy,\n  afterThe,\n  EventKeeper,\n  EventSupply,\n  OnEvent,\n  trackValue,\n} from 'fun-events';\nimport { BootstrapContext } from '../../boot';\nimport {\n  BootstrapContextRegistry,\n  ComponentContextRegistry,\n  DefinitionContextRegistry,\n  ElementBuilder,\n  newUnloader,\n  onPostDefSetup,\n} from '../../boot/impl';\nimport { ArraySet, Class } from '../../common';\nimport { ComponentContext } from '../../component';\nimport { ComponentClass, DefinitionContext, DefinitionSetup } from '../../component/definition';\nimport { FeatureContext } from '../feature-context';\nimport { ComponentRegistry } from './component-registry.impl';\nimport { FeatureClause, FeatureRequest } from './feature-request.impl';\n\nconst FeatureKey__symbol = /*#__PURE__*/ Symbol('feature-key');\n\n/**\n * @internal\n */\nexport class FeatureKey extends ContextUpKey<AfterEvent<[FeatureLoader?]>, FeatureClause> {\n\n  static of(feature: Class): FeatureKey {\n\n    const feat = feature as any;\n\n    return feat[FeatureKey__symbol] || (feat[FeatureKey__symbol] = new FeatureKey(feature));\n  }\n\n  private constructor(feature: Class) {\n    super(`feature:${feature.name}`);\n  }\n\n  grow<Ctx extends ContextValues>(\n      opts: ContextValueOpts<\n          Ctx,\n          AfterEvent<[FeatureLoader?]>,\n          EventKeeper<FeatureClause[]> | FeatureClause,\n          AfterEvent<FeatureClause[]>>,\n  ): AfterEvent<[FeatureLoader?]> | null | undefined {\n    return loadFeature(\n        opts.context.get(BootstrapContext),\n        opts.seed.keep.thru(preferredFeatureClause),\n    );\n  }\n\n}\n\nfunction preferredFeatureClause(...clauses: FeatureClause[]): FeatureClause | undefined {\n\n  let required = false;\n  let preferred: FeatureClause | undefined;\n\n  for (const clause of clauses) {\n    switch (clause[1]) {\n      case 'is':\n        required = true;\n        if (!preferred) {\n          preferred = clause;\n        }\n        break;\n      case 'has':\n        preferred = clause;\n        break;\n      case 'needs':\n        required = true;\n    }\n  }\n\n  return required ? preferred : undefined;\n}\n\nfunction loadFeature(\n    bsContext: BootstrapContext,\n    from: AfterEvent<[FeatureClause?]>,\n): AfterEvent<[FeatureLoader?]> {\n  return afterEventBy<[FeatureLoader?]>(receiver => {\n\n    let origin: Class | undefined;\n    let source: OnEvent<[FeatureLoader?]> = afterThe();\n    let stageId: Promise<FeatureStageId> = Promise.resolve('idle');\n\n    return afterAll({\n      clause: from,\n      deps: loadFeatureDeps(bsContext, from),\n    }).dig_(({ clause: [clause], deps }) => {\n      if (!clause) {\n        return afterThe();\n      }\n\n      const [request, , target] = clause;\n\n      if (request.feature === origin) {\n        return source; // Origin didn't change. Reuse the source.\n      }\n\n      origin = request.feature;\n\n      if (target !== origin) {\n        // Originated from replacement feature provider. Reuse its loader.\n        return source = bsContext.get(FeatureKey.of(origin)).thru_(\n            loader => {\n              loader!.to(stageId);\n              stageId = loader!.stage;\n              return loader;\n            },\n        );\n      }\n\n      // Create feature's own loader\n      const ownLoader = new FeatureLoader(bsContext, request, deps).to(stageId);\n      const ownSource = afterThe(ownLoader);\n\n      return source = afterEventBy<[FeatureLoader]>(\n          rcv => ownSource(rcv).whenOff(() => {\n            stageId = ownLoader.unload();\n          }),\n      ).share(); // Can be accessed again when reused\n    })(receiver);\n  }).keep.thru(\n      preventDuplicateLoader(),\n  );\n}\n\nfunction preventDuplicateLoader():\n    <NextReturn>(\n        loader?: FeatureLoader,\n    ) => NextArgs<[FeatureLoader?], NextReturn> | NextSkip<[FeatureLoader?], NextReturn> {\n\n  let lastLoader: FeatureLoader | null | undefined = null; // Initially `null` to differ from `undefined`\n\n  return <NextReturn>(loader?: FeatureLoader) => {\n    if (lastLoader === loader) {\n      return nextSkip();\n    }\n    lastLoader = loader;\n\n    if (!loader) {\n      return nextArgs<[FeatureLoader?], NextReturn>();\n    }\n\n    return nextArgs<[FeatureLoader?], NextReturn>(loader);\n  };\n}\n\nfunction loadFeatureDeps(\n    bsContext: BootstrapContext,\n    from: AfterEvent<[FeatureClause?]>,\n): AfterEvent<FeatureLoader[]> {\n  return from.keep.dig_(clause => {\n    if (!clause) {\n      return afterThe();\n    }\n\n    const [{ def }] = clause;\n    const needs = new ArraySet(def.needs);\n\n    if (!needs.size) {\n      return afterThe();\n    }\n\n    return afterEach(...needs.map(dep => bsContext.get(FeatureKey.of(dep))))\n        .keep.thru_(presentFeatureDeps);\n  });\n}\n\nfunction presentFeatureDeps<NextReturn>(...deps: [FeatureLoader?][]): NextArgs<FeatureLoader[], NextReturn> {\n  return nextArgs<FeatureLoader[], NextReturn>(\n      ...filterIt<FeatureLoader | undefined, FeatureLoader>(\n          mapIt(deps, dep => dep[0]),\n          isPresent,\n      ),\n  );\n}\n\n/**\n * @internal\n */\nexport class FeatureLoader {\n\n  readonly down: Promise<void>;\n  private _stage: Promise<FeatureStage>;\n  private _down!: () => void;\n  readonly state = trackValue(false);\n\n  constructor(\n      readonly bsContext: BootstrapContext,\n      readonly request: FeatureRequest,\n      readonly deps: FeatureLoader[],\n  ) {\n    this.down = new Promise(resolve => this._down = resolve);\n    this._stage = Promise.resolve(new SetupFeatureStage(this));\n  }\n\n  get stage(): Promise<FeatureStageId> {\n    return this._stage.then(stage => stage.after);\n  }\n\n  get ready(): boolean {\n    return this.state.it;\n  }\n\n  to(stageId: Promise<FeatureStageId>): this {\n\n    const lastStage = this._stage;\n\n    this._stage = stageId.then(id => lastStage.then(stage => stage[id]()));\n\n    return this;\n  }\n\n  async setup(): Promise<void> {\n    await (this._stage = this._stage.then(stage => stage.setup()));\n  }\n\n  async init(): Promise<void> {\n    await (this._stage = this._stage.then(stage => stage.init()));\n  }\n\n  async unload(): Promise<FeatureStageId> {\n\n    const prevStage = this._stage;\n\n    delete this._stage; // Unloaded feature should never be accessed again.\n\n    const stage = await prevStage;\n    const stageId = await stage.stop();\n\n    this._down();\n\n    return stageId;\n  }\n\n}\n\ntype FeatureStageId = 'idle' | 'setup' | 'init';\ntype FeatureStageStop = (this: void) => Promise<any>;\n\nabstract class FeatureStage {\n\n  abstract readonly after: FeatureStageId;\n\n  constructor(\n      readonly loader: FeatureLoader,\n      private readonly _stop: FeatureStageStop = () => Promise.resolve(),\n  ) {}\n\n  async idle(): Promise<this> {\n    return this;\n  }\n\n  abstract setup(): Promise<FeatureStage>;\n\n  abstract init(): Promise<FeatureStage>;\n\n  stop(): Promise<FeatureStageId> {\n    return this._stop().then(() => this.after);\n  }\n\n  protected perDep(action: (dep: FeatureLoader) => Promise<void>): Promise<any> {\n\n    const { deps } = this.loader;\n\n    return Promise.all(deps.map(dep => action(dep)));\n  }\n\n}\n\nclass SetupFeatureStage extends FeatureStage {\n\n  get after() {\n    return 'idle' as const;\n  }\n\n  async setup(): Promise<FeatureStage> {\n    await this.perDep(loader => loader.setup());\n\n    const { bsContext, request: { def } } = this.loader;\n    const [context, supply] = newFeatureContext(bsContext, this.loader);\n\n    def.setup?.(context);\n\n    return new InitFeatureStage(\n        this.loader,\n        context,\n        async () => supply.off(),\n    );\n  }\n\n  init(): Promise<FeatureStage> {\n    return this.setup().then(stage => stage.init());\n  }\n\n}\n\nclass InitFeatureStage extends FeatureStage {\n\n  get after() {\n    return 'setup' as const;\n  }\n\n  constructor(\n      state: FeatureLoader,\n      private readonly _context: FeatureContext,\n      stop: FeatureStageStop,\n  ) {\n    super(state, stop);\n  }\n\n  async setup(): Promise<FeatureStage> {\n    return this;\n  }\n\n  async init(): Promise<FeatureStage> {\n    await this.perDep(loader => loader.init());\n\n    const { request: { def } } = this.loader;\n\n    def.init?.(this._context);\n\n    return new ActiveFeatureStage(this);\n  }\n\n}\n\nclass ActiveFeatureStage extends FeatureStage {\n\n  get after() {\n    return 'init' as const;\n  }\n\n  constructor(prev: InitFeatureStage) {\n    super(prev.loader, () => prev.stop());\n    prev.loader.state.it = true;\n  }\n\n  async setup(): Promise<FeatureStage> {\n    return this;\n  }\n\n  async init(): Promise<FeatureStage> {\n    return this;\n  }\n\n}\n\nfunction newFeatureContext(\n    bsContext: BootstrapContext,\n    loader: FeatureLoader,\n): [FeatureContext, EventSupply] {\n\n  const unloader = newUnloader();\n  let componentRegistry: ComponentRegistry;\n  const definitionContextRegistry = bsContext.get(DefinitionContextRegistry);\n  const componentContextRegistry = bsContext.get(ComponentContextRegistry);\n  const registry = new ContextRegistry<FeatureContext>(bsContext);\n  const elementBuilder = bsContext.get(ElementBuilder);\n  const onDefinition = elementBuilder.definitions.on.tillOff(unloader.supply);\n  const onComponent = elementBuilder.components.on.tillOff(unloader.supply);\n\n  class Context extends FeatureContext {\n\n    readonly get = registry.newValues().get;\n    readonly whenReady: OnEvent<[FeatureContext]>;\n\n    constructor() {\n      super();\n\n      const whenReady: OnEvent<[FeatureContext]> = afterAll({\n        st: loader.state,\n        bs: trackValue<BootstrapContext>().by(bsContext.whenReady),\n      }).thru(\n          ({ st: [ready], bs: [bs] }) => bs && ready ? nextArgs(this) : nextSkip(),\n      );\n\n      this.whenReady = whenReady.once;\n      registry.provide({ a: FeatureContext, is: this });\n      componentRegistry = new ComponentRegistry(this);\n    }\n\n    get feature() {\n      return loader.request.feature;\n    }\n\n    get onDefinition() {\n      return onDefinition;\n    }\n\n    get onComponent() {\n      return onComponent;\n    }\n\n    provide<Deps extends any[], Src, Seed>(\n        spec: ContextValueSpec<BootstrapContext, any, Deps, Src, Seed>,\n    ): () => void {\n      return unloader.add(() => bsContext.get(BootstrapContextRegistry).provide(spec));\n    }\n\n    perDefinition<Deps extends any[], Src, Seed>(\n        spec: ContextValueSpec<DefinitionContext, any, Deps, Src, Seed>,\n    ): () => void {\n      return unloader.add(() => definitionContextRegistry.provide(spec));\n    }\n\n    perComponent<Deps extends any[], Src, Seed>(\n        spec: ContextValueSpec<ComponentContext, any, Deps, Src, Seed>,\n    ): () => void {\n      return unloader.add(() => componentContextRegistry.provide(spec));\n    }\n\n    setupDefinition<T extends object>(componentType: ComponentClass<T>): OnEvent<[DefinitionSetup]> {\n      return onPostDefSetup(componentType, unloader);\n    }\n\n    define<T extends object>(componentType: ComponentClass<T>): void {\n      componentRegistry.define(componentType);\n    }\n\n  }\n\n  return [new Context(), unloader.supply];\n}\n","import { ArraySet, Class, mergeFunctions } from '../../common';\nimport { FeatureDef } from '../feature-def';\nimport { FeatureNeedsError } from '../feature-needs-error';\nimport { FeatureKey } from './feature-loader.impl';\nimport { FeatureRequester } from './feature-requester.impl';\n\n/**\n * @internal\n */\nexport type FeatureClause = [FeatureRequest, 'is' | 'needs' | 'has', Class];\n\n/**\n * @internal\n */\nexport type FeatureNeedClause = [FeatureRequest, 'needs' | 'has', Class];\n\n/**\n * @internal\n */\nexport class FeatureRequest {\n\n  readonly def: FeatureDef;\n  private _uses = 0;\n\n  constructor(\n      private readonly _requester: FeatureRequester,\n      readonly feature: Class,\n      private _revoke: () => void,\n  ) {\n    this.def = FeatureDef.of(feature);\n  }\n\n  request(clauses: readonly FeatureNeedClause[]): this {\n\n    const requester = this._requester;\n    const { registry } = requester;\n    const isClause: FeatureClause = [this, 'is', this.feature];\n\n    this._revokeBy(registry.provide({\n      a: FeatureKey.of(this.feature),\n      is: isClause,\n    }));\n\n    new ArraySet(this.def.has).forEach(feature => {\n\n      const clause: FeatureNeedClause = [this, 'has', feature];\n\n      this._revokeBy(registry.provide({ a: FeatureKey.of(feature), is: clause }));\n\n      // Request the provided feature _after_ provider\n      const request = requester.request(feature, [...clauses, clause]);\n\n      this._revokeBy(() => request.unuse());\n    });\n\n    new ArraySet(this.def.needs).forEach(feature => {\n\n      const clause: FeatureNeedClause = [this, 'needs', feature];\n\n      const request = requester.request(feature, [...clauses, clause]);\n\n      this._revokeBy(() => request.unuse());\n      this._revokeBy(registry.provide({ a: FeatureKey.of(feature), is: clause }));\n    });\n\n    this._uses = 1;\n\n    return this;\n  }\n\n  reuse(clauses: readonly FeatureNeedClause[]): this {\n    if (!this._uses) {\n      throw new FeatureNeedsError(clauses.map(([{ feature }, reason, need]) => [feature, reason, need]));\n    }\n\n    ++this._uses;\n\n    return this;\n  }\n\n  unuse() {\n    if (!--this._uses) {\n      this._revoke();\n    }\n  }\n\n  private _revokeBy(revoke: () => void) {\n    this._revoke = mergeFunctions(revoke, this._revoke);\n  }\n\n}\n","import { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { BootstrapContext, bootstrapDefault } from '../../boot';\nimport { BootstrapContextRegistry } from '../../boot/impl';\nimport { Class } from '../../common';\nimport { FeatureNeedClause, FeatureRequest } from './feature-request.impl';\n\nconst FeatureRequester__key = /*#__PURE__*/ new SingleContextKey<FeatureRequester>(\n    'feature-requester',\n    {\n      byDefault: bootstrapDefault(context => new FeatureRequester(context)),\n    },\n);\n\n/**\n * @internal\n */\nexport class FeatureRequester {\n\n  static get [ContextKey__symbol](): ContextKey<FeatureRequester> {\n    return FeatureRequester__key;\n  }\n\n  readonly registry: BootstrapContextRegistry;\n  private readonly _map = new Map<Class, FeatureRequest>();\n\n  constructor(context: BootstrapContext) {\n    this.registry = context.get(BootstrapContextRegistry);\n  }\n\n  request(feature: Class, clauses: readonly FeatureNeedClause[] = []): FeatureRequest {\n\n    const existing = this._map.get(feature);\n\n    if (existing) {\n      return existing.reuse(clauses);\n    }\n\n    const request = new FeatureRequest(this, feature, () => this._map.delete(feature));\n\n    this._map.set(feature, request);\n\n    return request.request(clauses);\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { nextArgs, nextSkip } from 'call-thru';\nimport { AfterEvent, afterEventBy, OnEvent, trackValue } from 'fun-events';\nimport { newNamespaceAliaser } from 'namespace-aliaser';\nimport { Class } from '../../common';\nimport { ComponentClass, CustomElements } from '../../component/definition';\nimport { FeatureDef, FeatureRef, FeatureStatus } from '../../feature';\nimport { FeatureKey, FeatureLoader, FeatureRequester } from '../../feature/loader';\nimport { BootstrapContext } from '../bootstrap-context';\nimport { DefaultNamespaceAliaser } from '../globals';\nimport { BootstrapContextRegistry } from '../impl';\nimport { componentFactoryOf } from '../impl/component-factory.symbol.impl';\n\n/**\n * Bootstraps components.\n *\n * Note that both features and components can be passed as parameters to this function, as components are features too.\n *\n * @category Core\n * @param features  Features and components to enable.\n *\n * @returns Bootstrap context instance.\n */\nexport function bootstrapComponents(...features: Class[]): BootstrapContext {\n\n  const bootstrapContextRegistry = BootstrapContextRegistry.create();\n  const { bootstrapContext, complete } = initBootstrap(bootstrapContextRegistry);\n  const feature = features.length === 1 ? features[0] : bootstrapFeature(features);\n\n  bootstrapContext.get(FeatureRequester).request(feature);\n  bootstrapContext.get(FeatureKey.of(feature))(loader => {\n    loader!.init().then(complete);\n  });\n\n  return bootstrapContext;\n}\n\nfunction bootstrapFeature(needs: Class[]): Class {\n  return FeatureDef.define(class BootstrapFeature {}, { needs });\n}\n\nfunction initBootstrap(bootstrapContextRegistry: BootstrapContextRegistry) {\n\n  const stage = trackValue<BootstrapStage>(BootstrapStage.Init);\n  const values = bootstrapContextRegistry.values;\n\n  class Context extends BootstrapContext {\n\n    readonly get = values.get;\n    readonly whenReady: OnEvent<[BootstrapContext]>;\n\n    constructor() {\n      super();\n\n      const whenReady: OnEvent<[BootstrapContext]> = stage.read.thru(\n          s => s ? nextArgs(this) : nextSkip(),\n      );\n\n      this.whenReady = whenReady.once;\n      bootstrapContextRegistry.provide({ a: DefaultNamespaceAliaser, by: newNamespaceAliaser });\n      bootstrapContextRegistry.provide({ a: BootstrapContext, is: this });\n    }\n\n    async whenDefined<C extends object>(componentType: ComponentClass<C>) {\n      await new Promise(resolve => this.whenReady(resolve));\n      await this.get(CustomElements).whenDefined(componentType);\n      return componentFactoryOf(componentType);\n    }\n\n    load(feature: Class<any>): FeatureRef {\n\n      interface FeatureInfo {\n        status: FeatureStatus;\n        down?: Promise<void>;\n      }\n\n      const status = afterEventBy<[FeatureInfo]>(receiver => {\n\n        const request = bootstrapContext.get(FeatureRequester).request(feature);\n        const info = trackValue<FeatureInfo>({\n          status: {\n            feature,\n            ready: false,\n          },\n        });\n\n        this.get(FeatureKey.of(feature))({\n          supply: receiver.supply,\n          receive(_ctx, ldr) {\n\n            // Present until `request` revoked\n            // But that happens only when supply is cut off.\n            const loader = ldr as FeatureLoader;\n\n            info.it = {\n              status: {\n                feature: loader.request.feature,\n                ready: loader.ready,\n              },\n              down: loader.down,\n            };\n            if (!loader.ready) {\n              loader.init().then(() => {\n                info.it = {\n                  status: {\n                    feature: loader.request.feature,\n                    ready: true,\n                  },\n                  down: loader.down,\n                };\n              });\n            }\n          },\n        }).whenOff(() => {\n          request.unuse(); // Apply this callback _after_ registration complete,\n                           // to prevent receiver call.\n        });\n\n        info.read(receiver);\n      }).share();\n\n      let whenDown: Promise<void>;\n      const supply = status(({ down }) => whenDown = down!);\n      const read: AfterEvent<[FeatureStatus]> =\n          status.keep.thru(info => info.status).tillOff(supply);\n\n      class Ref extends FeatureRef {\n\n        get read() {\n          return read;\n        }\n\n        get down() {\n          return whenDown;\n        }\n\n        dismiss(reason?: any) {\n          supply.off(reason);\n          return whenDown;\n        }\n\n      }\n\n      return new Ref();\n    }\n\n  }\n\n  const bootstrapContext = new Context();\n\n  return {\n    bootstrapContext,\n    complete() {\n      stage.it = BootstrapStage.Ready;\n    },\n  };\n}\n\nconst enum BootstrapStage {\n  Init,\n  Ready,\n}\n","/**\n * @module @wesib/wesib\n */\n/**\n * A path to sub-state containing element an attributes.\n *\n * Thus, an attribute state path is always something like `[AttributePath__root, 'attribute-name']`.\n *\n * @category Feature\n */\nexport const AttributePath__root = /*#__PURE__*/ Symbol('attribute');\n\n/**\n * A path to the named attribute state.\n *\n * @category Feature\n */\nexport type AttributePath = readonly [keyof AttributePath__root_Keys, string];\n\n/**\n * Constructs a named attribute state path.\n *\n * @category Feature\n * @param name  Target attribute name.\n *\n * @return Attribute state path.\n */\nexport function attributePathTo(name: string): AttributePath {\n  return [AttributePath__root, name];\n}\n\n/**\n * @category Feature\n */\n// tslint:disable-next-line:class-name\nexport interface AttributePath__root_Keys {\n  [AttributePath__root]: true;\n}\n","/**\n * @module @wesib/wesib\n */\nimport { noop } from 'call-thru';\nimport { StatePath } from 'fun-events';\nimport { ComponentContext } from '../../component';\nimport { AttributeUpdateReceiver } from './attribute-def';\nimport { AttributePath, attributePathTo } from './attribute-path';\nimport { AttributeChangedCallback } from './attribute-registrar';\n\n/**\n * @internal\n */\nexport function attributeStateUpdate<T extends object>(\n    name: string,\n    updateState: boolean | AttributeUpdateReceiver<T> | StatePath = true): AttributeChangedCallback<T> {\n  if (updateState === false) {\n    return noop;\n  }\n  if (updateState === true || typeof updateState === 'function') {\n\n    const key = attributePathTo(name);\n    const update: AttributeUpdateReceiver<T> = updateState === true ? defaultUpdateState : updateState;\n\n    return function (this: T, newValue, oldValue) {\n      update.call(this, key, newValue, oldValue);\n    };\n  }\n  return function (this: T, newValue, oldValue) {\n    ComponentContext.of(this).updateState(updateState, newValue, oldValue);\n  };\n}\n\nfunction defaultUpdateState<T extends object>(\n    this: T,\n    path: AttributePath,\n    newValue: string,\n    oldValue: string | null) {\n  ComponentContext.of(this).updateState(path, newValue, oldValue);\n}\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\n\n/**\n * Custom element attribute change callback.\n *\n * This function is called whenever a new attribute value assigned.\n *\n * @category Feature\n * @typeparam T  A type of component.\n */\nexport type AttributeChangedCallback<T extends object = any> =\n/**\n * @param this  Component instance.\n * @param newValue  New attribute value.\n * @param oldValue  Previous attribute value, or `null` if there were no value assigned.\n */\n    (this: T, newValue: string, oldValue: string | null) => void;\n\n/**\n * @category Feature\n */\nexport type AttributeRegistrar<T extends object = any> = (name: string, callback: AttributeChangedCallback<T>) => void;\n\n/**\n * @category Feature\n */\nexport const AttributeRegistrar: SingleContextRef<AttributeRegistrar> =\n    /*#__PURE__*/ new SingleContextKey<AttributeRegistrar>('attribute-registrar');\n","import { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { BootstrapWindow } from '../../boot/globals';\nimport { Class, mergeFunctions } from '../../common';\nimport { ComponentContext, ComponentMount } from '../../component';\nimport { DefinitionContext } from '../../component/definition';\nimport { AttributeChangedCallback } from './attribute-registrar';\n\nconst AttributeRegistry__key = /*#__PURE__*/ new SingleContextKey<AttributeRegistry>('attribute-registry');\n\n/**\n * @internal\n */\nexport class AttributeRegistry<T extends object = any> {\n\n  static get [ContextKey__symbol](): ContextKey<AttributeRegistry> {\n    return AttributeRegistry__key;\n  }\n\n  private readonly _MutationObserver: typeof MutationObserver;\n  private readonly _attrs: { [name: string]: AttributeChangedCallback<T> } = {};\n\n  constructor(ctx: DefinitionContext) {\n    this._MutationObserver = ctx.get(BootstrapWindow).MutationObserver;\n  }\n\n  add(name: string, callback: AttributeChangedCallback<T>): void {\n    this._attrs[name] = mergeFunctions<[string, string | null], void, T>(this._attrs[name], callback);\n  }\n\n  define(elementType: Class) {\n\n    const attrs = this._attrs;\n    const observedAttributes = Object.keys(attrs);\n\n    if (!observedAttributes.length) {\n      return; // No attributes defined\n    }\n\n    Object.defineProperty(elementType, 'observedAttributes', {\n      configurable: true,\n      enumerable: true,\n      value: observedAttributes,\n    });\n    Object.defineProperty(elementType.prototype, 'attributeChangedCallback', {\n      configurable: true,\n      enumerable: true,\n      value: function (name: string, oldValue: string | null, newValue: string) {\n        (attrs[name] as any).call(ComponentContext.of(this).component, newValue, oldValue);\n      },\n    });\n  }\n\n  mount(mount: ComponentMount<T>) {\n\n    const element = mount.element;\n    const attrs = this._attrs;\n    const attributeFilter = Object.keys(attrs);\n\n    if (!attributeFilter.length) {\n      return; // No attributes defined\n    }\n\n    const observer = new this._MutationObserver(\n        records => records.forEach(\n            record => {\n\n              const attributeName = record.attributeName as string;\n\n              return (attrs[attributeName] as any).call(\n                  ComponentContext.of(element).component,\n                  element.getAttribute(attributeName),\n                  record.oldValue);\n            }));\n\n    observer.observe(element, {\n      attributes: true,\n      attributeFilter,\n      attributeOldValue: true,\n    });\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { FeatureDef, FeatureDef__symbol } from '../feature-def';\nimport { AttributeChangedCallback, AttributeRegistrar } from './attribute-registrar';\nimport { AttributeRegistry } from './attribute-registry.impl';\n\nconst AttributesSupport__feature: FeatureDef = {\n  setup(setup) {\n    setup.perDefinition({ as: AttributeRegistry });\n    setup.perDefinition({\n      a: AttributeRegistrar,\n      by(registry: AttributeRegistry) {\n        return <T extends object>(name: string, callback: AttributeChangedCallback<T>) =>\n            registry.add(name, callback);\n      },\n      with: [AttributeRegistry],\n    });\n    setup.onDefinition(definitionContext => {\n      // Define element prototype attributes\n      definitionContext.whenReady(({ elementType }) => definitionContext.get(AttributeRegistry).define(elementType));\n    });\n    setup.onComponent(componentContext => {\n\n      const mount = componentContext.mount;\n\n      if (mount) {\n        // Mount element attributes\n        componentContext.get(AttributeRegistry).mount(mount);\n      }\n    });\n  },\n};\n\n/**\n * A feature adding attributes to custom elements.\n *\n * This feature is enabled automatically whenever an `@Attribute`, `@Attributes`, or `@AttributeChanged` decorator\n * applied to component.\n *\n * @category Feature\n */\nexport class AttributesSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return AttributesSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { TypedPropertyDecorator } from '../../common';\nimport { ComponentContext, ComponentDef } from '../../component';\nimport { ComponentClass } from '../../component/definition';\nimport { FeatureDef } from '../feature-def';\nimport { AttributeDef } from './attribute-def';\nimport { parseAttributeDef } from './attribute-def.impl';\nimport { AttributeRegistrar } from './attribute-registrar';\nimport { AttributesSupport } from './attributes-support.feature';\n\n/**\n * Creates a decorator for component's property that accesses custom element's attribute.\n *\n * The decorated property accesses corresponding attribute on read, and updates it on setting.\n *\n * This decorator automatically enables [[AttributesSupport]] feature.\n *\n * @category Feature\n * @typeparam T  A type of decorated component class.\n * @param def  Attribute definition or just an attribute name.\n *\n * @return Component property decorator.\n */\nexport function Attribute<T extends ComponentClass>(\n    def?: AttributeDef<InstanceType<T>> | string,\n): TypedPropertyDecorator<T> {\n  return <V>(target: InstanceType<T>, propertyKey: string | symbol, descriptor?: TypedPropertyDescriptor<V>) => {\n\n    const { name, updateState } = parseAttributeDef(target, propertyKey, def);\n    const componentType = target.constructor as T;\n\n    FeatureDef.define(componentType, { needs: AttributesSupport });\n    ComponentDef.define(\n        componentType,\n        {\n          define(definitionContext) {\n            definitionContext.get(AttributeRegistrar)(name, updateState);\n          },\n        });\n\n    const newDesc: TypedPropertyDescriptor<string | null> = {\n      get(this: InstanceType<T>): string | null {\n        return ComponentContext.of(this).element.getAttribute(name);\n      },\n      set(this: InstanceType<T>, newValue: string | null) {\n        ComponentContext.of(this).element.setAttribute(name, newValue as string);\n      },\n    };\n\n    if (descriptor == null) {\n      // Annotated field\n      Object.defineProperty(target, propertyKey, newDesc);\n      return;\n    }\n\n    return newDesc;\n  };\n}\n","import { ComponentClass } from '../../component/definition';\nimport { AttributeDef } from './attribute-def';\nimport { AttributeChangedCallback } from './attribute-registrar';\nimport { attributeStateUpdate } from './attribute-state-update.impl';\n\n/**\n * @internal\n */\nexport function parseAttributeDef<T extends ComponentClass>(\n    target: InstanceType<T>,\n    propertyKey: string | symbol,\n    opts?: AttributeDef<InstanceType<T>> | string) {\n\n  let name: string;\n  let updateState: AttributeChangedCallback<InstanceType<T>>;\n\n  if (typeof opts === 'string') {\n    name = opts;\n    updateState = attributeStateUpdate(name);\n  } else {\n    if (opts && opts.name) {\n      name = opts.name;\n    } else if (typeof propertyKey !== 'string') {\n      throw new TypeError(\n          'Attribute name is required, as property key is not a string: ' +\n          `${target.constructor.name}.${propertyKey.toString()}`);\n    } else {\n      name = propertyKey;\n    }\n\n    updateState = attributeStateUpdate(name, opts && opts.updateState);\n  }\n\n  return { name, updateState };\n}\n","/**\n * @module @wesib/wesib\n */\n/**\n * A path to sub-state containing DOM properties.\n *\n * Thus a property state path is always something like `[DomPropertyPath__root, 'property-name']`.\n *\n * @category Feature\n */\nexport const DomPropertyPath__root = /*#__PURE__*/ Symbol('dom-property');\n\n/**\n * A path to the named DOM property state.\n *\n * @category Feature\n */\nexport type DomPropertyPath<K extends PropertyKey = PropertyKey> = readonly [keyof DomPropertyPath__root_Keys, K];\n\n/**\n * Constructs a named DOM property state path.\n *\n * @category Feature\n * @param key  Target property key.\n *\n * @return DOM property state path.\n */\nexport function domPropertyPathTo<K extends PropertyKey = PropertyKey>(key: K): DomPropertyPath<K> {\n  return [DomPropertyPath__root, key];\n}\n\n/**\n * @category Feature\n */\n// tslint:disable-next-line:class-name\nexport interface DomPropertyPath__root_Keys {\n  [DomPropertyPath__root]: true;\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { StateTracker } from 'fun-events';\n\nconst ComponentState__key = /*#__PURE__*/ new SingleContextKey<ComponentState>('component-state');\n\n/**\n * Component state tracker.\n *\n * @category Feature\n */\nexport class ComponentState extends StateTracker {\n\n  static get [ContextKey__symbol](): ContextKey<ComponentState> {\n    return ComponentState__key;\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ComponentContext, StateUpdater } from '../../component';\nimport { FeatureDef, FeatureDef__symbol } from '../feature-def';\nimport { ComponentState } from './component-state';\n\nconst StateSupport__feature: FeatureDef = {\n  setup(setup) {\n    setup.perComponent({\n      a: ComponentState,\n      by(context: ComponentContext) {\n\n        const state = new ComponentState();\n\n        context.whenDestroyed(reason => state.done(reason));\n\n        return state;\n      },\n    });\n    setup.perComponent({\n      a: StateUpdater,\n      by(state: ComponentState) {\n        return state.update;\n      },\n      with: [ComponentState],\n    });\n  },\n};\n\n/**\n * Component state support feature.\n *\n * When enabled, it registers the following component context values:\n *\n * - [[StateUpdater]] that allows to update the component state, and\n * - [[ComponentState]] that allows to track component state changes.\n *\n * Other features would use this to notify when the state changes. E.g. [[DomPropertiesSupport]]\n * and [[AttributesSupport]] features issue state updates when needed.\n *\n * @category Feature\n */\nexport class StateSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return StateSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\n\nconst RenderScheduler__key = /*#__PURE__*/ new SingleContextKey<RenderScheduler>('render-scheduler');\n\n/**\n * Rendering scheduler.\n *\n * Schedules components rendering in order to make it less often. E.g. by utilizing `requestAnimationFrame()`.\n *\n * @category Feature\n */\nexport abstract class RenderScheduler {\n\n  /**\n   * A key of bootstrap, definition, or component context value containing [[RenderScheduler]] instance.\n   */\n  static get [ContextKey__symbol](): ContextKey<RenderScheduler> {\n    return RenderScheduler__key;\n  }\n\n  /**\n   * Creates new render schedule.\n   *\n   * @returns New render schedule instance.\n   */\n  abstract newSchedule(): RenderSchedule;\n\n}\n\n/**\n * Render schedule.\n *\n * @category Feature\n */\nexport interface RenderSchedule {\n\n  /**\n   * Schedules component rendering.\n   *\n   * Only the latest rendering request has affect. I.e. if multiple rendering have been scheduled then the rendering\n   * will be performed by the latest one.\n   *\n   * @param render  A rendering function.\n   */\n  schedule(render: (this: void) => void): void;\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ComponentContext } from '../../component';\nimport { ComponentState } from '../state';\nimport { RenderDef } from './render-def';\nimport { RenderScheduler } from './render-scheduler';\n\n/**\n * Component element render function interface.\n *\n * It has no arguments. It may return either nothing, or a function. In the latter case the returned function will be\n * called immediately to render the element. It may, in turn, return a render function, and so on.\n *\n * @category Feature\n */\nexport type ElementRender =\n/**\n * @returns Either delegated render, or nothing.\n */\n    (this: void) => void | ElementRender;\n\n/**\n * @category Feature\n */\nexport const ElementRender = {\n\n  /**\n   * Enables component element rendering.\n   *\n   * The `render` call will be scheduled by [[RenderScheduler]] once component state updated.\n   *\n   * @param context  Target component context.\n   * @param render  Element render function.\n   * @param def  Optional element render definition.\n   */\n  render(\n      context: ComponentContext,\n      render: ElementRender,\n      def: RenderDef = {},\n  ) {\n\n    const stateTracker = context.get(ComponentState);\n    const schedule = context.get(RenderScheduler).newSchedule();\n\n    const { offline } = def;\n    let rendered = false;\n    const stateSupply = stateTracker.onUpdate(() => {\n      if (offline || context.connected) {\n        scheduleRender();\n      } else {\n        rendered = false;\n      }\n    });\n\n    if (offline) {\n      scheduleRender();\n    } else {\n      context.whenOn(() => {\n        if (!rendered) {\n          scheduleRender();\n        }\n      }).whenOff(reason => {\n        stateSupply.off(reason);\n        rendered = true;\n      });\n    }\n\n    function scheduleRender() {\n      rendered = true;\n      schedule.schedule(renderElement);\n    }\n\n    function renderElement() {\n      for (;;) {\n\n        const newRender = render();\n\n        if (newRender === render || typeof newRender !== 'function') {\n          break;\n        }\n\n        render = newRender;\n      }\n    }\n  },\n\n};\n","/**\n * @module @wesib/wesib\n */\nimport { noop } from 'call-thru';\nimport { BootstrapWindow } from '../../boot/globals';\nimport { FeatureDef, FeatureDef__symbol } from '../feature-def';\nimport { RenderSchedule as RenderSchedule_, RenderScheduler as RenderScheduler_ } from './render-scheduler';\n\nconst RenderSupport__feature: FeatureDef = {\n  setup(setup) {\n    setup.provide({\n      a: RenderScheduler_,\n      by: createRenderScheduler,\n      with: [BootstrapWindow],\n    });\n  },\n};\n\n/**\n * Rendering support feature.\n *\n * This feature is automatically enabled when {@link Render @Render} decorator is used.\n *\n * @category Feature\n */\nexport class RenderSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return RenderSupport__feature;\n  }\n\n}\n\nfunction createRenderScheduler(window: BootstrapWindow) {\n\n  class RenderScheduler extends RenderScheduler_ {\n\n    newSchedule() {\n\n      let scheduled: () => void = noop;\n\n      class RenderSchedule implements RenderSchedule_ {\n\n        schedule(render: (this: void) => void): void {\n\n          const previouslyScheduled = scheduled;\n\n          scheduled = render;\n          if (previouslyScheduled === noop) {\n            window.requestAnimationFrame(() => {\n              scheduled();\n              scheduled = noop;\n            });\n          }\n        }\n\n      }\n\n      return new RenderSchedule();\n    }\n  }\n\n  return new RenderScheduler();\n}\n","/**\n * @module @wesib/wesib\n */\nimport { TypedPropertyDecorator } from '../../common';\nimport { ComponentDef } from '../../component';\nimport { ComponentClass } from '../../component/definition';\nimport { StateSupport } from '../state';\nimport { ElementRender } from './element-render';\nimport { RenderDef } from './render-def';\nimport { RenderSupport } from './render-support.feature';\n\n/**\n * Component property decorator that declares a rendering method for the component.\n *\n * The decorated method call will be scheduled by [[RenderScheduler]] once component state updated.\n *\n * The decorated method should have no arguments. It may return either nothing, or a function. In the latter case the\n * returned function will be called immediately to render the element. It may, in turn, return a renderer function,\n * and so on.\n *\n * This decorator automatically enables [[StateSupport]] and [[RenderSupport]] features.\n *\n * Utilizes [[ElementRender.render]] function to define rendering.\n *\n * @category Feature\n * @typeparam T  A type of decorated component class.\n * @param def  Non-mandatory render definition.\n *\n * @returns Component method decorator.\n */\nexport function Render<T extends ComponentClass>(def?: RenderDef): TypedPropertyDecorator<T> {\n  return (target: InstanceType<T>, propertyKey: string | symbol) => {\n\n    const componentType = target.constructor as T;\n\n    ComponentDef.define(\n        componentType,\n        {\n          define(defContext) {\n            defContext.onComponent(componentContext => {\n              componentContext.whenReady(() => {\n\n                const component = componentContext.component as any;\n                const render: () => any = component[propertyKey].bind(component);\n\n                ElementRender.render(componentContext, render, def);\n              });\n            });\n          },\n          feature: {\n            needs: [StateSupport, RenderSupport],\n          },\n        });\n  };\n}\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\n\n/**\n * Component shadow content root.\n *\n * @category Feature\n */\nexport type ShadowContentRoot = ShadowRoot;\n\n/**\n * A key of component context value containing a shadow content root instance.\n *\n * This is only available when the component is decorated with {@link AttachShadow @AttachShadow} decorator.\n *\n * @category Feature\n */\nexport const ShadowContentRoot: SingleContextRef<ShadowContentRoot> =\n    /*#__PURE__*/ new SingleContextKey<ShadowContentRoot>('shadow-content-root');\n","/**\n * @module @wesib/wesib\n */\n/**\n * An event related to element's shadow DOM.\n *\n * The following event types supported:\n * - `wesib:shadowAttached` is thrown when a shadow root is attached to element.\n *   In particular, it is thrown for components decorated with {@link AttachShadow @AttachShadow}.\n *   This event bubbles and is not cancelable.\n *\n * @category Feature\n */\nexport class ShadowDomEvent extends Event {\n\n  /**\n   * Constructs shadow DOM event.\n   *\n   * @param type  Event type.\n   * @param eventInitDict  Event initialization dictionary.\n   */\n  constructor(type: string, eventInitDict?: EventInit) {\n    super(type, eventInitDict);\n  }\n\n  /**\n   * Shadow root this event relates to.\n   */\n  get shadowRoot(): ShadowRoot {\n    return (this.target as Element).shadowRoot as ShadowRoot;\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { FnContextKey, FnContextRef } from 'context-values';\nimport { ComponentContext } from '../../component';\nimport { ShadowContentDef } from './shadow-content-def';\n\n/**\n * Shadow root builder function type.\n *\n * An instance of this function is available in component context and is used by {@link AttachShadow @AttachShadow}\n * decorator to attach shadow root to decorated component's custom element.\n *\n * By default, if shadow root already exists for the component's element, it uses it.\n *\n * Dispatches a `wesib:shadowAttached` event for the found or attached shadow root.\n *\n * @category Feature\n */\nexport type ShadowRootBuilder =\n/**\n * @param context  Target component context.\n * @param init  Shadow root initialization options.\n *\n * @returns A shadow root instance for target component, or `null`/`undefined` if one can not be attached.\n */\n    (context: ComponentContext<any>, init: ShadowContentDef) => ShadowRoot | null | undefined;\n\n/**\n * A key of component context value containing a shadow root builder instance.\n *\n * @category Feature\n */\nexport const ShadowRootBuilder: FnContextRef<Parameters<ShadowRootBuilder>, ReturnType<ShadowRootBuilder>> =\n    /*#__PURE__*/ new FnContextKey<Parameters<ShadowRootBuilder>, ReturnType<ShadowRootBuilder>>('shadow-root-builder');\n","/**\n * @module @wesib/wesib\n */\nimport { ComponentContext, ComponentContext__symbol } from '../../component';\nimport { FeatureDef, FeatureDef__symbol } from '../feature-def';\nimport { ShadowDomEvent } from './shadow-dom-event';\nimport { ShadowRootBuilder } from './shadow-root-builder';\n\nconst ShadowDomSupport__feature: FeatureDef = {\n  setup(setup) {\n    setup.provide({ a: ShadowRootBuilder, is: attachShadow });\n  },\n};\n\n/**\n * Shadow root support feature.\n *\n * This feature is automatically enabled when {@link AttachShadow @AttachShadow} decorator is used.\n *\n * @category Feature\n */\nexport class ShadowDomSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return ShadowDomSupport__feature;\n  }\n\n}\n\nfunction attachShadow(context: ComponentContext, init: ShadowRootInit): ShadowRoot | undefined {\n\n  const element = context.element;\n  const shadowRoot = shadowRootOf(element, init);\n\n  if (shadowRoot) {\n    (shadowRoot as any)[ComponentContext__symbol] = context;\n    context.dispatchEvent(new ShadowDomEvent('wesib:shadowAttached', { bubbles: true }));\n    return shadowRoot;\n  }\n\n  return;\n}\n\nfunction shadowRootOf(element: Element, init: ShadowRootInit): ShadowRoot | undefined {\n\n  const existing = element.shadowRoot;\n\n  if (existing) {\n    // Shadow root already attached. Using it.\n    return existing;\n  }\n  if ('attachShadow' in element) {\n    return element.attachShadow(init);\n  }\n\n  return; // Unable to attach shadow root.\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ComponentContext, ComponentDef, ContentRoot } from '../../component';\nimport { ShadowContentRoot } from './shadow-content-root';\nimport { ShadowDomSupport } from './shadow-dom-support.feature';\nimport { ShadowRootBuilder } from './shadow-root-builder';\n\n/**\n * Shadow content root definition.\n *\n * This is a readonly component shadow root initialization options.\n *\n * @category Feature\n */\nexport type ShadowContentDef = Readonly<ShadowRootInit>;\n\nconst defaultShadowContentDef: ShadowContentDef = { mode: 'open' };\n\n/**\n * @category Feature\n */\nexport const ShadowContentDef = {\n\n  /**\n   * Creates component definition for the given shadow content root definition.\n   *\n   * The returned component definition enables [[ShadowDomSupport]] feature and attaches shadow content root to the\n   * component.\n   *\n   * @typeparam T  A type of component.\n   * @param def  Shadow content root definition. Uses `mode: 'open'` by default.\n   *\n   * @returns Component definition.\n   */\n  componentDef<T extends object>(def: ShadowContentDef = defaultShadowContentDef): ComponentDef<T> {\n    return {\n      setup(setup) {\n        setup.perComponent(\n            {\n              a: ShadowContentRoot,\n              by(ctx: ComponentContext<T>) {\n                return ctx.get(ShadowRootBuilder)(ctx, def);\n              },\n            },\n        );\n        setup.perComponent({ // Content root is an alias of shadow root when present.\n          a: ContentRoot,\n          by(context: ComponentContext<T>) {\n            return context.get(ShadowContentRoot, { or: null });\n          },\n        });\n      },\n      feature: { needs: ShadowDomSupport },\n    };\n  },\n\n};\n","/**\n * @module @wesib/wesib\n */\nimport { TypedClassDecorator } from '../../common';\nimport { ComponentDef } from '../../component';\nimport { ComponentClass } from '../../component/definition';\nimport { ShadowContentDef } from './shadow-content-def';\n\n/**\n * Component class decorator that attaches shadow root to decorated component instance.\n *\n * Applies component definition created by [[ShadowContentDef.componentDef]] function.\n *\n * @category Feature\n * @typeparam T  A type of decorated component class.\n * @param def  Shadow content root definition. Uses `mode: 'open'` by default.\n *\n * @return Component class decorator.\n */\nexport function AttachShadow<T extends ComponentClass = any>(\n    def?: ShadowContentDef,\n): TypedClassDecorator<T> {\n  return (type: T) => {\n    ComponentDef.define(\n        type,\n        ShadowContentDef.componentDef(def));\n  };\n}\n","import { ContextUpKey, ContextUpRef, ContextValueOpts, ContextValues } from 'context-values';\nimport { AfterEvent, EventKeeper, EventSender, OnEvent, onSupplied } from 'fun-events';\n\ntype FetchAgent<Res extends any[]> = (\n    this: void,\n    next: (this: void, request?: Request) => OnEvent<Res>,\n    request: Request,\n) => EventSender<Res>;\n\ntype CombinedFetchAgent<Res extends any[]> = (\n    this: void,\n    next: (this: void, request: Request) => OnEvent<Res>,\n    request: Request,\n) => OnEvent<Res>;\n\n/**\n * @internal\n */\nexport class FetchAgentKey<Res extends any[]>\n    extends ContextUpKey<CombinedFetchAgent<Res>, FetchAgent<Res>>\n    implements ContextUpRef<CombinedFetchAgent<Res>, FetchAgent<Res>, AfterEvent<FetchAgent<Res>[]>> {\n\n  constructor(name: string) {\n    super(name);\n  }\n\n  grow<Ctx extends ContextValues>(\n      opts: ContextValueOpts<\n          Ctx,\n          CombinedFetchAgent<Res>,\n          EventKeeper<FetchAgent<Res>[]> | FetchAgent<Res>,\n          AfterEvent<FetchAgent<Res>[]>>,\n  ): CombinedFetchAgent<Res> {\n\n    let agent!: CombinedFetchAgent<Res>;\n\n    opts.seed((...agents) => agent = combineFetchAgents(agents));\n\n    const fallback = opts.byDefault(() => (next, request) => agent(next, request));\n\n    return fallback || defaultFetchAgent;\n  }\n\n}\n\nfunction defaultFetchAgent<Res extends any[]>(\n    next: (this: void, request: Request) => OnEvent<Res>,\n    request: Request,\n): OnEvent<Res> {\n  return next(request);\n}\n\n/**\n * @internal\n */\nexport function combineFetchAgents<Res extends any[]>(agents: FetchAgent<Res>[]): CombinedFetchAgent<Res> {\n  return (next, request) => {\n\n    const fetch: (agentIdx: number, agentRequest: Request) => OnEvent<Res> = (agentIdx, agentRequest) => {\n\n      const agent = agents[agentIdx];\n\n      if (!agent) {\n        return next(agentRequest);\n      }\n\n      return onSupplied(\n          agent(\n              (nextRequest = agentRequest) => fetch(agentIdx + 1, nextRequest),\n              agentRequest,\n          ),\n      );\n    };\n\n    return fetch(0, request);\n  };\n}\n","/**\n * @module @wesib/generic\n */\nimport { ContextUpRef } from 'context-values';\nimport { EventSender, OnEvent } from 'fun-events';\nimport { FetchAgentKey } from './fetch-agent-key.impl';\n\n/**\n * HTTP fetch agent signature.\n *\n * The agent can be used to alter [[HttpFetch]] processing. For that it should be registered in appropriate context.\n *\n * All registered agents are organized into chain. The first agent in chain is called by [[HttpFetch]].\n */\nexport type HttpFetchAgent =\n/**\n * @param next  Either calls the next agent in chain, or actually fetches the data if this agent is the last one.\n * Accepts an optional `Request` parameter. The original request will be used instead when omitted.\n * @param request  HTTP request.\n *\n * @returns An `EventSender` of response object(s). It is returned either to preceding agent in chain, or as a result of\n * [[HttpFetch]] call.\n */\n    (\n        this: void,\n        next: (this: void, request?: Request) => OnEvent<[Response]>,\n        request: Request,\n    ) => EventSender<[Response]>;\n\nexport namespace HttpFetchAgent {\n\n  /**\n   * Combined HTTP fetch agent signature.\n   *\n   * This is what is available under [[HttpFetchAgent]] key.\n   */\n  export type Combined =\n  /**\n   * @param next  Either calls the next agent in chain, or actually fetches the data if this agent is the last one.\n   * Accepts `Request` parameter.\n   * @param request  HTTP request.\n   *\n   * @returns An `OnEvent` registrar of response object(s) receivers. It is returned as a result of [[HttpFetch]] call.\n   */\n      (\n          this: void,\n          next: (this: void, request: Request) => OnEvent<[Response]>,\n          request: Request,\n      ) => OnEvent<[Response]>;\n\n}\n\n/**\n * A key of context value containing an [[HttpFetchAgent]] instance.\n *\n * The agent returned combines all registered agents into one. If no agent registered it just performs the fetch.\n */\nexport const HttpFetchAgent: ContextUpRef<HttpFetchAgent.Combined, HttpFetchAgent> =\n    /*#__PURE__*/ new FetchAgentKey<[Response]>('http-fetch-agent');\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { DomEventDispatcher, EventEmitter, EventSupply, eventSupply, OnEvent, onEventBy } from 'fun-events';\nimport { HttpFetch } from './http-fetch';\nimport { HttpFetchAgent } from './http-fetch-agent';\n\nconst HttpFetchAborted = {};\n\n/**\n * @internal\n */\nexport function newHttpFetch(context: BootstrapContext): HttpFetch {\n\n  const window = context.get(BootstrapWindow);\n  const agent = context.get(HttpFetchAgent);\n\n  return (input, init) => agent(fetch, new Request(input, init));\n\n  function fetch(request: Request): OnEvent<[Response]> {\n    return onEventBy(receiver => {\n\n      const responseEmitter = new EventEmitter<[Response]>();\n      let supply: EventSupply;\n\n      if ('AbortController' in window) {\n\n        const abortController = new (window as any).AbortController();\n        const { signal } = abortController;\n\n        supply = eventSupply(reason => {\n          if (reason === HttpFetchAborted) {\n            abortController.abort();\n          }\n        });\n        receiver.supply.whenOff(() => supply.off(HttpFetchAborted)).needs(supply);\n        responseEmitter.on({\n          supply,\n          receive(ctx, response) {\n            receiver.receive(ctx, response);\n          },\n        });\n\n        const customSignal = request.signal;\n\n        if (customSignal) {\n          new DomEventDispatcher(customSignal).on('abort').once(() => abortController.abort());\n          if (customSignal.aborted) {\n            abortController.abort();\n          }\n        }\n\n        request = new Request(request, { signal });\n      } else {\n        supply = responseEmitter.on(receiver);\n      }\n\n      window.fetch(request)\n          .then(response => {\n            responseEmitter.send(response);\n            supply.off();\n          })\n          .catch(reason => supply.off(reason));\n    });\n  }\n}\n","/**\n * @module @wesib/generic\n */\nimport { bootstrapDefault } from '@wesib/wesib';\nimport { FnContextKey, FnContextRef } from 'context-values';\nimport { OnEvent } from 'fun-events';\nimport { newHttpFetch } from './http-fetch.impl';\n\n/**\n * HTTP fetch function signature.\n *\n * This is a function that wraps browser's\n * [fetch()](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch) function and provides\n * additional functionality. E.g. request interception.\n *\n * This function returns an `OnEvent` sender instead of a `Promise`. This allows to report multiple responses.\n * E.g. when the resource refresh requested and delivered. The request is sent whenever a receiver is registered\n * in this sender. When the fetch completes the response supply is cut off, and callbacks registered with its\n * `whenOff()` method are notified. When fetch fails for whatever reason, this reason is passed to these callbacks.\n * The fetch can be aborted by cutting off the response supply. I.e. by calling its `off()` method.\n *\n * An instance of [[HttpFetch]] is available from bootstrap context.\n */\nexport type HttpFetch =\n/**\n * @param input  The resource to fetch. This can either an URL string, or a `Request` object.\n * @param init  Custom settings to apply to the request.\n *\n * @returns An `OnEvent` sender of responses.\n */\n    (this: void, input: RequestInfo, init?: RequestInit) => OnEvent<[Response]>;\n\n/**\n * A key of bootstrap context value containing an [[HttpFetch]] instance.\n */\nexport const HttpFetch: FnContextRef<Parameters<HttpFetch>, ReturnType<HttpFetch>> =\n    /*#__PURE__*/ new FnContextKey<Parameters<HttpFetch>, ReturnType<HttpFetch>>(\n    'http-fetch',\n    {\n      byDefault: bootstrapDefault(newHttpFetch),\n    },\n);\n","/**\n * @module @wesib/generic\n */\nimport { Navigation } from './navigation';\nimport { Page } from './page';\n\n/**\n * Navigation event.\n */\nexport type NavigationEvent = LeavePageEvent | EnterPageEvent | StayOnPageEvent;\n\n/**\n * Navigation event type.\n */\nexport const enum NavigationEventType {\n\n  /**\n   * {@link EnterPageEvent Enter page event} type.\n   */\n  EnterPage = 'wesib:enterPage',\n\n  /**\n   * {@link LeavePageEvent Leave page event} type.\n   */\n  LeavePage = 'wesib:leavePage',\n\n  /**\n   * {@link StayOnPageEvent Stay on page event} type.\n   */\n  StayOnPage = 'wesib:stayOnPage',\n\n}\n\n/**\n * An event fired when navigation target reached by entering destination page.\n *\n * @event EnterPageEvent#wesib:enterPage\n */\nexport class EnterPageEvent extends Event {\n\n  /**\n   * When navigation event occurred.\n   *\n   * Can be one of:\n   * - `open` when opening a new page,\n   * - `replace` when replacing navigation history entry,\n   * - `enter` when entering new page by user action (e.g. hashchange event),\n   * - `return` when navigated to previously visited entry in navigation history.\n   */\n  readonly when: 'open' | 'replace' | 'enter' | 'return';\n\n  /**\n   * Entered page.\n   */\n  readonly to: Page;\n\n  /**\n   * Constructs enter page event.\n   *\n   * @param type  Event type.\n   * @param init  Initialization options.\n   */\n  constructor(type: string, init: EnterPageEventInit) {\n    super(type, { ...init, cancelable: false });\n    this.when = init.when;\n    this.to = init.to;\n  }\n\n}\n\n/**\n * {@link EnterPageEvent Enter page event} initialization options.\n */\nexport interface EnterPageEventInit extends Omit<EventInit, 'cancelable'> {\n\n  /**\n   * When navigation event occurred.\n   *\n   * Can be one of:\n   * - `open` when opening a new page,\n   * - `replace` when replacing navigation history entry,\n   * - `enter` when entering new page by user action (e.g. hashchange event),\n   * - `return` when navigated to previously visited entry in navigation history.\n   */\n  readonly when: 'open' | 'replace' | 'enter' | 'return';\n\n  /**\n   * Entered page.\n   */\n  readonly to: Page;\n\n}\n\n/**\n * An event fired right before leaving the page in order to navigate to another one.\n *\n * This event can be cancelled in order to prevent actual navigation or history update. The navigation is also\n * cancelled when another navigation initiated by one of the handlers of this event.\n *\n * @event LeavePageEvent#wesib:leavePage\n */\nexport class LeavePageEvent extends Event {\n\n  /**\n   * When navigation event occurred. Either `pre-open` when leaving a page to open a new one, or `pre-replace` when\n   * leaving a page to replace it with another history entry.\n   */\n  readonly when: 'pre-open' | 'pre-replace';\n\n  /**\n   * The page to leave.\n   */\n  readonly from: Page;\n\n  /**\n   * Navigation target page.\n   */\n  readonly to: Page;\n\n  /**\n   * Constructs leave page event.\n   *\n   * @param type  Event type.\n   * @param init  Initialization options.\n   */\n  constructor(type: string, init: LeavePageEventInit) {\n    super(type, { ...init, cancelable: true });\n    this.when = init.when;\n    this.from = init.from;\n    this.to = init.to;\n  }\n\n}\n\n/**\n * {@link LeavePageEvent Leave page event} initialization options.\n */\nexport interface LeavePageEventInit extends Omit<EventInit, 'cancelable'> {\n\n  /**\n   * When navigation event occurred. Either `pre-open` when leaving a page to open a new one, or `pre-replace` when\n   * leaving a page to replace it with another history entry.\n   */\n  readonly when: 'pre-open' | 'pre-replace';\n\n  /**\n   * The page to leave.\n   */\n  readonly from: Page;\n\n  /**\n   * Navigation target page.\n   */\n  readonly to: Page;\n\n}\n\n/**\n * An event fired when navigation cancelled or failed.\n *\n * @event StayOnPageEvent#wesib:stayOnPage\n */\nexport class StayOnPageEvent extends Event {\n\n  /**\n   * When navigation event occurred. Always `stay`.\n   */\n  get when(): 'stay' {\n    return 'stay';\n  }\n\n  /**\n   * The page to stay at.\n   */\n  readonly from: Page;\n\n  /**\n   * Navigation target.\n   */\n  readonly to: Navigation.URLTarget;\n\n  /**\n   * A reason of navigation failure. This is set when navigation failed due to some error.\n   */\n  readonly reason?: any;\n\n  /**\n   * Constructs stay on page event.\n   *\n   * @param type  Event type.\n   * @param init  Initialization options.\n   */\n  constructor(type: string, init: StayOnPageEventInit) {\n    super(type, { ...init, cancelable: true });\n    this.from = init.from;\n    this.to = init.to;\n    this.reason = init.reason;\n  }\n\n}\n\n/**\n * {@link StayOnPageEvent Stay on page event} initialization options.\n */\nexport interface StayOnPageEventInit extends Omit<EventInit, 'cancelable'> {\n\n  /**\n   * The page to stay at.\n   */\n  readonly from: Page;\n\n  /**\n   * Navigation target.\n   */\n  readonly to: Navigation.URLTarget;\n\n  /**\n   * A reason of navigation failure. This is set when navigation failed due to some error.\n   */\n  readonly reason?: any;\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport {\n  AfterEvent,\n  AfterEvent__symbol,\n  EventKeeper,\n  EventSender,\n  OnDomEvent,\n  OnEvent,\n  OnEvent__symbol,\n} from 'fun-events';\nimport { EnterPageEvent, LeavePageEvent, NavigationEvent, StayOnPageEvent } from './navigation.event';\nimport { Page } from './page';\nimport { PageParam } from './page-param';\n\nconst Navigation__key = /*#__PURE__*/ new SingleContextKey<Navigation>('navigation');\n\n/**\n * Browser navigation service.\n *\n * Expected to be used as a [History] and [Location] APIs replacement.\n *\n * Fires additional navigation events the browser does not support natively.\n *\n * Implements an `EventSender` interface by sending {@link NavigationEvent navigation events} to registered receivers.\n *\n * Implements an `EventKeeper` interface by sending current {@link Page page} to registered receivers.\n *\n * Available as bootstrap context value when [[NavigationSupport]] feature is enabled.\n *\n * [History]: https://developer.mozilla.org/en-US/docs/Web/API/History\n * [Location]: https://developer.mozilla.org/en-US/docs/Web/API/Location\n */\nexport abstract class Navigation implements EventSender<[NavigationEvent]>, EventKeeper<[Page]> {\n\n  static get [ContextKey__symbol](): ContextKey<Navigation> {\n    return Navigation__key;\n  }\n\n  /**\n   * The number of element in navigation history.\n   */\n  abstract readonly length: number;\n\n  /**\n   * An `OnDomEvent` registrar of enter page event receivers.\n   */\n  abstract readonly onEnter: OnDomEvent<EnterPageEvent>;\n\n  /**\n   * An `OnDomEvent` registrar of leave page event receivers.\n   *\n   * These receivers may cancel navigation by calling `preventDefault()` method of received event.\n   */\n  abstract readonly onLeave: OnDomEvent<LeavePageEvent>;\n\n  /**\n   * An `OnDomEvent` registrar of stay on page event receivers.\n   *\n   * These receivers are informed when navigation has been cancelled by one of leave page event receivers,\n   * navigation failed due to e.g. invalid URL, or when another navigation request initiated before the page left.\n   */\n  abstract readonly onStay: OnDomEvent<StayOnPageEvent>;\n\n  /**\n   * An `OnEvent` registrar of navigation events receivers.\n   *\n   * The `[OnEvent__symbol]` property is an alias of this one.\n   */\n  abstract readonly on: OnEvent<[NavigationEvent]>;\n\n  get [OnEvent__symbol](): OnEvent<[NavigationEvent]> {\n    return this.on;\n  }\n\n  /**\n   * An `AfterEvent` registrar of current page receivers.\n   *\n   * The `[AfterEvent__symbol]` property is an alias of this one.\n   */\n  abstract readonly read: AfterEvent<[Page]>;\n\n  get [AfterEvent__symbol](): AfterEvent<[Page]> {\n    return this.read;\n  }\n\n  /**\n   * Goes to the previous page in navigation history.\n   *\n   * Calling this method is the same as calling `go(-1)`.\n   */\n  back(): void {\n    this.go(-1);\n  }\n\n  /**\n   * Goes to the next page in navigation history.\n   *\n   * Calling this method is the same as calling `go(1)`.\n   */\n  forward(): void {\n    this.go(1);\n  }\n\n  /**\n   * Loads a page from navigation history, identified by its relative location to the current page.\n   *\n   * For example `-1` navigates to previous page, while `1` navigates to the next one. If you specify an out-of-bounds\n   * value (for instance, specifying -1 when there are no previously-visited pages in navigation history), this method\n   * silently has no effect.\n   *\n   * @param delta  Relative location in navigation history to navigate to. The absent value or value of `0` reloads\n   * the current page.\n   */\n  abstract go(delta?: number): void;\n\n  /**\n   * Reloads current page.\n   *\n   * Calling this method is the same as calling `go()`.\n   */\n  reload(): void {\n    this.go();\n  }\n\n  /**\n   * Opens a page by navigating to the given `target`.\n   *\n   * Appends an entry to navigation history.\n   *\n   * @param target  Either navigation target or URL to navigate to.\n   * @fires PreNavigateEvent#wesib:preNavigate  On window object prior to actually navigate.\n   * Then navigates to the `target`, unless the event cancelled.\n   * @fires NavigateEvent@wesib:navigate  On window object when navigation succeed.\n   *\n   * @returns A promise resolved to navigated page, or to `null` otherwise.\n   */\n  abstract open(target: Navigation.Target | string | URL): Promise<Page | null>;\n\n  /**\n   * Replaces current navigation history entry with the given `target`.\n   *\n   * @param target  Either navigation target or URL to replace current history entry with.\n   * @fires PreNavigateEvent#wesib:preNavigate  On window object prior to actually update the history.\n   * Then navigates to the `target`, unless the event cancelled.\n   * @fires NavigateEvent@wesib:navigate  On window object when history updated.\n   *\n   * @returns A promise resolved to navigated page, or to `null` otherwise.\n   */\n  abstract replace(target: Navigation.Target | string | URL): Promise<Page | null>;\n\n  /**\n   * Replaces current page URL with the given one.\n   *\n   * Does not alter current page state, and does not trigger any events.\n   *\n   * @param url  An URL to replace the\n   *\n   * @returns Current page with updated URL.\n   */\n  abstract update(url: string | URL): Page;\n\n  /**\n   * Creates parameterized navigation instance and assigns a page parameter to apply to target page.\n   *\n   * @typeparam T  Parameter value type.\n   * @typeparam I  Parameter input type.\n   * @param ref  A reference to page navigation parameter to apply.\n   * @param input  Parameter input to use when constructing its value.\n   *\n   * @returns New parameterized navigation instance.\n   */\n  abstract with<T, I>(ref: PageParam.Ref<T, I>, input: I): Navigation.Parameterized;\n\n}\n\nexport namespace Navigation {\n\n  /**\n   * Parameterized navigation.\n   *\n   * Allows to assign target page parameters prior to navigating to it.\n   */\n  export interface Parameterized {\n\n    /**\n     * Applies parameter to navigation target page.\n     *\n     * @typeparam T  Parameter value type.\n     * @typeparam I  Parameter input type.\n     * @param ref  A reference to page navigation parameter to apply.\n     * @param input  Parameter input to use when constructing its value.\n     *\n     * @returns New parameterized navigation instance.\n     */\n    with<T, I>(ref: PageParam.Ref<T, I>, input: I): Parameterized;\n\n    /**\n     * Opens a page by navigating to the given `target` with provided page parameters.\n     *\n     * Appends an entry to navigation history.\n     *\n     * @param target  Either navigation target or URL to navigate to.\n     * @fires PreNavigateEvent#wesib:preNavigate  On window object prior to actually navigate.\n     * Then navigates to the `target`, unless the event cancelled.\n     * @fires NavigateEvent@wesib:navigate  On window object when navigation succeed.\n     *\n     * @returns A promise resolved to navigated page, or to `null` otherwise.\n     */\n    open(target: Navigation.Target | string | URL): Promise<Page | null>;\n\n    /**\n     * Replaces the most recent entry in navigation history with the given `target` and provided page parameters.\n     *\n     * @param target  Either navigation target or URL to replace the latest history entry with.\n     * @fires PreNavigateEvent#wesib:preNavigate  On window object prior to actually update the history.\n     * Then navigates to the `target`, unless the event cancelled.\n     * @fires NavigateEvent@wesib:navigate  On window object when history updated.\n     *\n     * @returns A promise resolved to navigated page, or to `null` otherwise.\n     */\n    replace(target: Navigation.Target | string | URL): Promise<Page | null>;\n\n  }\n\n  /**\n   * Navigation target.\n   *\n   * This is passed to [[Navigation.open]] and [[Navigation.replace]] methods.\n   */\n  export interface Target {\n\n    /**\n     * An URL to update the browser location string to.\n     */\n    readonly url?: string | URL;\n\n    /**\n     * Opaque data to apply to session history. I.e. either push or replace.\n     */\n    readonly data?: any;\n\n    /**\n     * New window title.\n     */\n    readonly title?: string;\n\n  }\n\n  /**\n   * Navigation target with URL value.\n   */\n  export interface URLTarget extends Target {\n\n    readonly url: URL;\n\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { BootstrapWindow } from '@wesib/wesib';\nimport { ContextUpKey, ContextUpRef, ContextValueOpts, ContextValues } from 'context-values';\nimport { AfterEvent, EventKeeper } from 'fun-events';\nimport { Navigation } from './navigation';\nimport { Page } from './page';\nimport Target = Navigation.Target;\n\n/**\n * Navigation agent signature.\n *\n * The agent is called by navigation methods when leaving current page and may alter navigation processing.\n * E.g. change navigation target. For that it should be registered in appropriate context.\n *\n * All registered agents are organized into chain. The first agent in chain is called by navigation method.\n */\nexport type NavigationAgent =\n/**\n * @param next  Either calls the next agent in chain, or applies the final navigation target if this agent is the last\n * one. Not calling this function effectively prevents navigation.\n * Accepts an optional [[Navigation.Target]] parameter. The original target will be used instead when omitted.\n * @param when  When navigation occurred. Either `pre-open`, or `pre-replace`.\n * @param from  The page to leave.\n * @param to  Navigation target page.\n */\n    (\n        this: void,\n        next: (this: void, target?: Target) => void,\n        when: 'pre-open' | 'pre-replace',\n        from: Page,\n        to: Page,\n    ) => void;\n\nclass NavigationAgentKey\n    extends ContextUpKey<NavigationAgent.Combined, NavigationAgent>\n    implements ContextUpRef<NavigationAgent.Combined, NavigationAgent, AfterEvent<NavigationAgent[]>> {\n\n  constructor(name: string) {\n    super(name);\n  }\n\n  grow<Ctx extends ContextValues>(\n      opts: ContextValueOpts<\n          Ctx,\n          NavigationAgent.Combined,\n          EventKeeper<NavigationAgent[]> | NavigationAgent,\n          AfterEvent<NavigationAgent[]>>,\n  ): NavigationAgent.Combined {\n\n    const { document } = opts.context.get(BootstrapWindow);\n\n    return (next, when, from, to) => {\n\n      const result = opts.byDefault(() => combinedAgent);\n\n      return result ? result(next, when, from, to) : next(to);\n    };\n\n    function combinedAgent(\n        next: (this: void, target: Navigation.URLTarget) => void,\n        when: 'pre-open' | 'pre-replace',\n        from: Page,\n        to: Page,\n    ): void {\n\n      let agents!: NavigationAgent[];\n\n      opts.seed.once((...sources) => agents = sources);\n\n      return navigate(0, to);\n\n      function navigate(agentIdx: number, agentTo: Page): void {\n\n        const agent = agents[agentIdx];\n\n        if (!agent) {\n          return next(agentTo);\n        }\n\n        agent(\n            (\n                {\n                  url: nextURL = agentTo.url,\n                  title: nextTitle = agentTo.title,\n                  data: nextData = agentTo.data,\n                }: Navigation.Target = agentTo,\n            ) => navigate(\n                agentIdx + 1,\n                {\n                  url: new URL(String(nextURL), document.baseURI),\n                  title: nextTitle,\n                  data: nextData,\n                  get visited() {\n                    return agentTo.visited;\n                  },\n                  get current() {\n                    return agentTo.current;\n                  },\n                  get(ref) {\n                    return agentTo.get(ref);\n                  },\n                  put(ref, input) {\n                    agentTo.put(ref, input);\n                  },\n                },\n            ),\n            when,\n            from,\n            agentTo,\n        );\n      }\n    }\n  }\n\n}\n\nexport namespace NavigationAgent {\n\n  /**\n   * Combined navigation agent signature.\n   *\n   * This is what is available under [[NavigationAgent]] key.\n   */\n  export type Combined =\n  /**\n   * @param next  Either calls the next agent in chain, or applies the final navigation target if this agent is the last\n   * one. Not calling this function effectively prevents navigation.\n   * Accepts an optional [[Navigation.Target]] parameter. The original target will be used instead when omitted.\n   * @param when  When navigation occurred. Either `pre-open`, or `pre-replace`.\n   * @param from  The page to leave.\n   * @param to  Navigation target page.\n   */\n      (\n          this: void,\n          next: (this: void, target: Navigation.URLTarget) => void,\n          when: 'pre-open' | 'pre-replace',\n          from: Page,\n          to: Page,\n      ) => void;\n\n}\n\n/**\n * A key of context value containing an [[NavigationAgent]] instance.\n *\n * The agent returned combines all registered agents into one. If no agent registered it just performs the navigation.\n */\nexport const NavigationAgent: ContextUpRef<NavigationAgent.Combined, NavigationAgent> =\n    /*#__PURE__*/ new NavigationAgentKey('navigation-agent');\n","/**\n * @module @wesib/generic\n */\nimport { Page } from './page';\nimport { PageParamContext } from './page-param-context';\n\n/**\n * A key of {@link PageParam.Ref page parameter request} property containing requested page parameter.\n */\nexport const PageParam__symbol = /*#__PURE__*/ Symbol('page-param');\n\n/**\n * Page navigation parameter.\n *\n * Can applied before navigation happened (i.e. to [[LeavePageEvent]]). Then it will be available to the target page\n * both before and after navigation.\n *\n * @typeparam T  Parameter value type.\n * @typaparam I  Parameter input type.\n */\nexport abstract class PageParam<T, I> implements PageParam.Ref<T, I> {\n\n  get [PageParam__symbol](): this {\n    return this;\n  }\n\n  /**\n   * Creates page parameter handle.\n   *\n   * This method is called when {@link Page.put assigning new page parameter}.It is called at most once per request,\n   * unless this parameter is assigned already. A {@link PageParam.Handle.put} method will be called instead\n   * in the latter case.\n   *\n   * @param page  A page to assign navigation parameter to.\n   * @param input  Parameter input used to construct its initial value.\n   * @param context  Page parameter context.\n   *\n   * @returns New page parameter value handle.\n   */\n  abstract create(page: Page, input: I, context: PageParamContext): PageParam.Handle<T, I>;\n\n}\n\nexport namespace PageParam {\n\n  /**\n   * Page navigation parameter reference.\n   *\n   * @typeparam T  Parameter value type.\n   * @typaparam I  Parameter input type.\n   */\n  export interface Ref<T, I> {\n\n    /**\n     * Referred page navigation parameter instance.\n     */\n    readonly [PageParam__symbol]: PageParam<T, I>;\n\n  }\n\n  /**\n   * Page navigation parameter value handle.\n   *\n   * Holds and maintains parameter value.\n   *\n   * Created by {@link PageParam.create} method.\n   *\n   * @typeparam T  Parameter value type.\n   * @typaparam I  Parameter input type.\n   */\n  export interface Handle<T, I> {\n\n    /**\n     * Returns current parameter value.\n     *\n     * @returns Parameter value.\n     */\n    get(): T;\n\n    /**\n     * Puts page parameter value.\n     *\n     * This method is called when {@link Page.put re-assigning page parameter}. It is called when page parameter\n     * is assigned already and can be used to update it. The update logic is up to the implementation.\n     *\n     * @param input  Parameter input to use when updating its value.\n     */\n    put(input: I): void;\n\n    /**\n     * Transfers parameter to target page.\n     *\n     * This is called right before [[LeavePageEvent]] is fired for each parameter handle of current page.\n     *\n     * @param to  A page to transfer parameter to.\n     * @param when  When the transfer happens. Either `pre-open`, `pre-replace`, `open`, or `return`. The latter is used\n     * when return to page generated by another app version. E.g. from the page that has been reloaded.\n     *\n     * @returns New parameter handle instance for target page, or `undefined` if nothing to transfer.\n     */\n    transfer?(to: Page, when: 'pre-open' | 'pre-replace' | 'enter' | 'return'): Handle<T, I> | undefined;\n\n    /**\n     * This method is called when the page this parameter created for is entered.\n     *\n     * @param page  Entered page.\n     * @param when  When the page is entered. Either `init`, `open`, `replace`, `enter`, or `return`.\n     */\n    enter?(page: Page, when: 'init' | 'open' | 'replace' | 'enter' | 'return'): void;\n\n    /**\n     * This method is called when the page this parameter created for is left.\n     */\n    leave?(): void;\n\n    /**\n     * This method is called when page navigation aborted and target page won't be reached.\n     *\n     * The handle won't be accessed after this method call.\n     *\n     * @param at  The page the browser remains at.\n     */\n    stay?(at: Page): void;\n\n    /**\n     * This method is called when the page this parameter is created for is removed from navigation history.\n     *\n     * The handle won't be accessed after this method call.\n     */\n    forget?(): void;\n\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ContextValues } from 'context-values';\n\n/**\n * Page parameter context.\n *\n * Provides values available in bootstrap context.\n */\nexport abstract class PageParamContext extends ContextValues {\n}\n","import { BootstrapContext, bootstrapDefault, BootstrapWindow } from '@wesib/wesib';\nimport { itsEach } from 'a-iterable';\nimport { noop } from 'call-thru';\nimport { ContextKey__symbol, ContextRegistry, SingleContextKey } from 'context-values';\nimport { ValueTracker } from 'fun-events';\nimport { Navigation } from './navigation';\nimport { Page } from './page';\nimport { PageParam, PageParam__symbol } from './page-param';\nimport { PageParamContext } from './page-param-context';\n\nconst RoutingHistory__key = /*#__PURE__*/ new SingleContextKey<NavHistory>(\n    'navigation-history',\n    {\n      byDefault: bootstrapDefault(ctx => new NavHistory(ctx)),\n    },\n);\n\n/**\n * @internal\n */\nexport class NavHistory {\n\n  static get [ContextKey__symbol]() {\n    return RoutingHistory__key;\n  }\n\n  private readonly _document: Document;\n  private readonly _location: Location;\n  private readonly _history: History;\n  private readonly _entries = new Map<number, PageEntry>();\n  private readonly _uid: string;\n  private _lastId = 0;\n\n  constructor(private readonly _context: BootstrapContext) {\n    const window = _context.get(BootstrapWindow);\n\n    this._document = window.document;\n    this._location = window.location;\n    this._history = window.history;\n    this._uid = btoa(String(Math.random()));\n  }\n\n  init(): PageEntry {\n\n    const { data } = extractNavData(this._history.state);\n    const entry = this.newEntry({\n      url: new URL(this._location.href),\n      data,\n      title: this._document.title,\n    });\n\n    this._entries.set(entry.id, entry);\n    entry.schedule(() => {\n      entry.enter('init');\n      this._history.replaceState(this._historyState(entry), '');\n    });\n\n    return entry;\n  }\n\n  newEntry(target: Navigation.URLTarget): PageEntry {\n    return new PageEntry(this._context, ++this._lastId, target);\n  }\n\n  open(\n      toEntry: PageEntry,\n      tracker: ValueTracker<PageEntry>,\n  ) {\n\n    const { page: { title = '', url } } = toEntry;\n\n    this._history.pushState(\n        this._historyState(toEntry),\n        title,\n        url.href,\n    );\n\n    this._enter('open', toEntry, tracker);\n  }\n\n  private _enter(\n      when: 'open' | 'enter',\n      toEntry: PageEntry,\n      tracker: ValueTracker<PageEntry>,\n  ) {\n\n    const fromEntry = tracker.it;\n\n    this._entries.set(toEntry.id, toEntry);\n\n    try {\n      // Forget all entries starting from next one\n      for (let e = fromEntry.next; e; e = e.next) {\n        this._forget(e);\n      }\n    } finally {\n      toEntry.prev = fromEntry;\n      fromEntry.next = toEntry;\n      toEntry.schedule(() => {\n        try {\n          fromEntry.leave();\n        } finally {\n          toEntry.enter(when);\n        }\n      });\n      tracker.it = toEntry;\n    }\n  }\n\n  replace(\n      toEntry: PageEntry,\n      tracker: ValueTracker<PageEntry>,\n  ) {\n\n    const fromEntry = tracker.it;\n    const { page: { title = '', url } } = toEntry;\n\n    this._history.replaceState(\n        this._historyState(toEntry),\n        title,\n        url.href,\n    );\n\n    this._entries.set(toEntry.id, toEntry);\n\n    const prev = fromEntry.prev;\n\n    if (prev) {\n      toEntry.prev = prev;\n      prev.next = toEntry;\n    }\n\n    toEntry.schedule(() => {\n      try {\n        fromEntry.leave();\n      } finally {\n        try {\n          this._forget(fromEntry);\n        } finally {\n          toEntry.enter('replace');\n        }\n      }\n    });\n    tracker.it = toEntry;\n  }\n\n  popState(\n      popState: PopStateEvent,\n      tracker: ValueTracker<PageEntry>,\n  ): PageEntry | undefined {\n\n    const { state } = popState;\n\n    if (state == null) {\n      // Hash change\n      if (this._history.state == null) {\n        // Not a return\n        return this._changeHash(tracker);\n      }\n      return; // Already handled by `hashchange` handler\n    }\n\n    const fromEntry = tracker.it;\n    const { uid, data, id: pageId } = extractNavData(state);\n    let toEntry: PageEntry;\n\n    const existingEntry = uid === this._uid && pageId != null ? this._entries.get(pageId) : undefined;\n\n    if (existingEntry) {\n      toEntry = existingEntry;\n    } else {\n      // Returning to page existed in previous app version\n      toEntry = this.newEntry({\n        url: new URL(this._location.href),\n        data,\n        title: this._document.title,\n      });\n      fromEntry.transfer(toEntry, 'return');\n      this._entries.set(toEntry.id, toEntry);\n      this._history.replaceState(this._historyState(toEntry), '');\n    }\n\n    toEntry.schedule(() => {\n      try {\n        fromEntry.leave();\n      } finally {\n        toEntry.enter('return');\n      }\n    });\n\n    tracker.it = toEntry;\n\n    return toEntry;\n  }\n\n  public hashChange(tracker: ValueTracker<PageEntry>): PageEntry | void {\n    if (this._history.state == null) {\n      // Not a return\n      return this._changeHash(tracker);\n    }\n    // Otherwise, a `popstate` event is also triggered,\n    // and its handler would do the job (or already did).\n  }\n\n  public update(tracker: ValueTracker<PageEntry>, url: URL): PageEntry {\n\n    const oldEntry = tracker.it;\n    const newEntry = new PageEntry(this._context, ++this._lastId, { ...oldEntry.page, url }, oldEntry);\n\n    this._entries.set(newEntry.id, newEntry);\n    this._history.replaceState(this._historyState(newEntry), '', url.href);\n    this._entries.delete(oldEntry.id);\n\n    return tracker.it = newEntry;\n  }\n\n  private _changeHash(tracker: ValueTracker<PageEntry>): PageEntry {\n\n    const fromEntry = tracker.it;\n    const toEntry = this.newEntry({\n      url: new URL(this._location.href),\n      data: null,\n      title: this._document.title,\n    });\n\n    try {\n      fromEntry.transfer(toEntry, 'enter');\n    } finally {\n      this._history.replaceState(this._historyState(toEntry), '');\n      this._enter('enter', toEntry, tracker);\n    }\n\n    return toEntry;\n  }\n\n  private _forget(entry: PageEntry) {\n    this._entries.delete(entry.id);\n    entry.forget();\n  }\n\n  private _historyState({ id, page: { data } }: PageEntry): NavDataEnvelope {\n    return {\n      [NAV_DATA_KEY]: {\n        uid: this._uid,\n        id,\n        data,\n      },\n    };\n  }\n\n}\n\n/**\n * @internal\n */\nexport interface PartialNavData {\n  readonly uid?: string;\n  readonly id?: number;\n  readonly data: any;\n}\n\n/**\n * @internal\n */\nexport interface NavData extends PartialNavData {\n  readonly uid: string;\n  readonly id: number;\n}\n\n/**\n * @internal\n */\nexport const NAV_DATA_KEY = 'wesib:navigation:data' as const;\n\n/**\n * @internal\n */\nexport interface NavDataEnvelope {\n  readonly [NAV_DATA_KEY]: NavData;\n}\n\nfunction extractNavData(state: any): PartialNavData {\n  return state == null || typeof state !== 'object' ? { data: state } : state[NAV_DATA_KEY];\n}\n\n/**\n * @internal\n */\nexport class PageEntry {\n\n  next?: PageEntry;\n  prev?: PageEntry;\n  private _status: PageStatus = PageStatus.New;\n  readonly page: Page;\n  private readonly _params: Map<PageParam<any, any>, PageParam.Handle<any, any>>;\n  private _update: () => void = noop;\n\n  constructor(\n      private readonly _context: BootstrapContext,\n      readonly id: number,\n      target: Navigation.URLTarget,\n      proto?: PageEntry,\n  ) {\n    this._params = proto ? proto._params : new Map<PageParam<any, any>, PageParam.Handle<any, any>>();\n\n    const entry = this;\n\n    this.page = {\n      url: target.url,\n      title: target.title,\n      data: target.data,\n      get visited() {\n        return !!entry._status;\n      },\n      get current() {\n        return entry._status === PageStatus.Current;\n      },\n      get(ref) {\n        return entry.get(ref);\n      },\n      put(ref, input) {\n        entry.put(ref, input);\n      },\n    };\n  }\n\n  get<T>(ref: PageParam.Ref<T, unknown>): T | undefined {\n\n    const handle: PageParam.Handle<T, unknown> | undefined = this._params.get(ref[PageParam__symbol]);\n\n    return handle && handle.get();\n  }\n\n  put<T, I>(ref: PageParam.Ref<T, I>, input: I): T {\n\n    const param = ref[PageParam__symbol];\n    const handle: PageParam.Handle<T, I> | undefined = this._params.get(param);\n\n    if (handle) {\n      handle.put(input);\n      return handle.get();\n    }\n\n    const registry = new ContextRegistry<ParamContext>(this._context);\n\n    class ParamContext extends PageParamContext {\n      readonly get: PageParamContext['get'] = registry.newValues().get;\n    }\n\n    const newHandle = param.create(this.page, input, new ParamContext());\n\n    this._params.set(param, newHandle);\n    if (this.page.current && newHandle.enter) {\n      newHandle.enter(this.page, 'init');\n    }\n\n    return newHandle.get();\n  }\n\n  transfer(to: PageEntry, when: 'pre-open' | 'pre-replace' | 'enter' | 'return') {\n    itsEach(this._params.entries(), ([param, handle]) => {\n      if (handle.transfer) {\n\n        const transferred = handle.transfer(to.page, when);\n\n        if (transferred) {\n          to._params.set(param, transferred);\n        }\n      }\n    });\n  }\n\n  stay(at: Page) {\n    itsEach(this._params.values(), handle => handle.stay && handle.stay(at));\n  }\n\n  enter(when: 'init' | 'open' | 'replace' | 'enter' | 'return') {\n    this._status = PageStatus.Current;\n    itsEach(this._params.values(), handle => handle.enter && handle.enter(this.page, when));\n  }\n\n  leave() {\n    this._status = PageStatus.Visited;\n    itsEach(this._params.values(), handle => handle.leave && handle.leave());\n  }\n\n  forget() {\n    itsEach(this._params.values(), handle => handle.forget && handle.forget());\n    this._params.clear();\n  }\n\n  schedule(update: () => void) {\n    this._update = update;\n  }\n\n  apply() {\n\n    const update = this._update;\n\n    this._update = noop;\n    update();\n  }\n\n}\n\nconst enum PageStatus {\n  New,\n  Visited,\n  Current,\n}\n","import { BootstrapContext, BootstrapWindow, mergeFunctions } from '@wesib/wesib';\nimport { noop } from 'call-thru';\nimport { AfterEvent, DomEventDispatcher, onAny, trackValue } from 'fun-events';\nimport { NavHistory, PageEntry } from './nav-history.impl';\nimport { Navigation as Navigation_ } from './navigation';\nimport { NavigationAgent } from './navigation-agent';\nimport {\n  EnterPageEvent,\n  LeavePageEvent,\n  NavigationEvent,\n  NavigationEventType,\n  StayOnPageEvent,\n} from './navigation.event';\nimport { Page } from './page';\nimport { PageParam } from './page-param';\n\nexport function createNavigation(context: BootstrapContext): Navigation_ {\n\n  const window = context.get(BootstrapWindow);\n  const { document, history } = window;\n  const dispatcher = new DomEventDispatcher(window);\n  const navHistory = context.get(NavHistory);\n  const agent = context.get(NavigationAgent);\n  const onEnter = dispatcher.on<EnterPageEvent>(NavigationEventType.EnterPage);\n  const onLeave = dispatcher.on<LeavePageEvent>(NavigationEventType.LeavePage);\n  const onStay = dispatcher.on<StayOnPageEvent>(NavigationEventType.StayOnPage);\n  const onEvent = onAny<[NavigationEvent]>(onEnter, onLeave, onStay);\n  const nav = trackValue<PageEntry>(navHistory.init());\n\n  nav.read(nextEntry => nextEntry.apply()); // The very first page entry receiver applies scheduled updates to page\n\n  const readPage: AfterEvent<[Page]> = nav.read.keep.thru(entry => entry.page);\n  let next: Promise<any> = Promise.resolve();\n\n  dispatcher.on<PopStateEvent>('popstate')(popState => {\n\n    const entry = navHistory.popState(popState, nav);\n\n    if (entry) {\n      dispatcher.dispatch(new EnterPageEvent(\n          NavigationEventType.EnterPage,\n          {\n            when: popState.state != null ? 'return' : 'enter',\n            to: entry.page,\n          },\n      ));\n    }\n  });\n\n  dispatcher.on('hashchange')(() => {\n\n    const entry = navHistory.hashChange(nav);\n\n    if (entry) {\n      dispatcher.dispatch(new EnterPageEvent(\n          NavigationEventType.EnterPage,\n          {\n            when: 'enter',\n            to: entry.page,\n          },\n      ));\n    }\n  });\n\n  class Navigation extends Navigation_ {\n\n    get length() {\n      return history.length;\n    }\n\n    get onEnter() {\n      return onEnter;\n    }\n\n    get onLeave() {\n      return onLeave;\n    }\n\n    get onStay() {\n      return onStay;\n    }\n\n    get on() {\n      return onEvent;\n    }\n\n    get read() {\n      return readPage;\n    }\n\n    go(delta?: number): void {\n      history.go(delta);\n    }\n\n    open(target: Navigation_.Target | string | URL) {\n      return navigate('pre-open', 'open', target);\n    }\n\n    replace(target: Navigation_.Target | string | URL) {\n      return navigate('pre-replace', 'replace', target);\n    }\n\n    update(url: string | URL): Page {\n      return navHistory.update(nav, toURL(url)).page;\n    }\n\n    with<T, I>(ref: PageParam.Ref<T, I>, input: I): Navigation_.Parameterized {\n      return withParam(page => page.put(ref, input));\n    }\n\n  }\n\n  return new Navigation();\n\n  function withParam(applyParams: (page: Page) => void): Navigation_.Parameterized {\n    return {\n      with<TT, II>(ref: PageParam.Ref<TT, II>, input: II): Navigation_.Parameterized {\n        return withParam(mergeFunctions(applyParams, page => page.put(ref, input)));\n      },\n      open(target: Navigation_.Target | string | URL) {\n        return navigate('pre-open', 'open', target, applyParams);\n      },\n      replace(target: Navigation_.Target | string | URL) {\n        return navigate('pre-replace', 'replace', target, applyParams);\n      },\n    };\n  }\n\n  function toURL(url: string | URL | undefined): URL {\n    if (typeof url === 'string') {\n      return new URL(url, document.baseURI);\n    }\n    return url || nav.it.page.url;\n  }\n\n  function urlTargetOf(target: Navigation_.Target | string | URL): Navigation_.URLTarget {\n    if (typeof target === 'string' || target instanceof URL) {\n      return { url: toURL(target) };\n    }\n    if (target.url instanceof URL) {\n      return target as Navigation_.URLTarget;\n    }\n    return { ...target, url: toURL(target.url) };\n  }\n\n  function navigate(\n      whenLeave: 'pre-open' | 'pre-replace',\n      when: 'open' | 'replace',\n      target: Navigation_.Target | string | URL,\n      applyParams: (page: Page) => void = noop,\n  ): Promise<Page | null> {\n\n    const urlTarget = urlTargetOf(target);\n    const promise = next = next.then(doNavigate, doNavigate);\n\n    return promise;\n\n    function doNavigate(): Page | null {\n\n      let toEntry: PageEntry | undefined;\n\n      try {\n\n        const prepared = prepare();\n\n        if (!prepared) {\n          return prepared; // Navigation cancelled\n        }\n\n        toEntry = prepared;\n\n        navHistory[when](toEntry, nav);\n\n        dispatcher.dispatch(new EnterPageEvent(\n            NavigationEventType.EnterPage,\n            {\n              when,\n              to: toEntry.page,\n            },\n        ));\n\n        return toEntry.page;\n      } catch (e) {\n        stay(toEntry, e);\n        throw e;\n      }\n    }\n\n    function prepare(): PageEntry | null {\n      if (next !== promise) {\n        return stay();\n      }\n\n      const fromEntry = nav.it;\n      const toEntry = navHistory.newEntry(urlTarget);\n\n      fromEntry.transfer(toEntry, whenLeave);\n\n      const leavePage = new LeavePageEvent(\n          NavigationEventType.LeavePage,\n          {\n            when: whenLeave,\n            from: fromEntry.page,\n            to: toEntry.page,\n          },\n      );\n\n      applyParams(toEntry.page);\n      if (!dispatcher.dispatch(leavePage) || next !== promise) {\n        return stay(toEntry);\n      }\n\n      let finalTarget: Navigation_.URLTarget | undefined;\n\n      agent(t => finalTarget = t, whenLeave, leavePage.from, leavePage.to);\n\n      if (!finalTarget) {\n        return stay(toEntry); // Some agent didn't call `next()`.\n      }\n\n      return toEntry;\n    }\n\n    function stay(toEntry?: PageEntry, reason?: any): null {\n      if (toEntry) {\n        toEntry.stay(nav.it.page);\n      }\n\n      dispatcher.dispatch(new StayOnPageEvent(\n          NavigationEventType.StayOnPage,\n          {\n            from: nav.it.page,\n            to: urlTarget,\n            reason,\n          },\n      ));\n\n      return null;\n    }\n\n  }\n}\n","/**\n * @module @wesib/generic\n */\nimport { FeatureDef, FeatureDef__symbol } from '@wesib/wesib';\nimport { Navigation } from './navigation';\nimport { createNavigation } from './navigation.impl';\n\nconst NavigationSupport__feature: FeatureDef = {\n  setup(setup) {\n    setup.provide({ a: Navigation, by: createNavigation });\n  },\n};\n\n/**\n * Browser navigation support feature.\n *\n * Makes [[Navigation]] available in bootstrap context.\n */\nexport class NavigationSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return NavigationSupport__feature;\n  }\n\n}\n","import { nextArgs, nextSkip } from 'call-thru';\nimport { eventSupply, EventSupply, OnEvent, onEventBy, trackValue } from 'fun-events';\nimport { Page } from '../page';\nimport { PageLoadResponse } from './page-load-response';\nimport { PageLoader } from './page-loader.impl';\n\n/**\n * @internal\n */\nexport function cachingPageLoader(loader: PageLoader): PageLoader {\n\n  let state: {\n    readonly url: string;\n    readonly on: OnEvent<[PageLoadResponse]>;\n    readonly sup: EventSupply;\n  } | undefined;\n\n  return page => {\n\n    const url = pageUrl(page);\n\n    if (state) {\n      if (state.url === url) {\n        return state.on;\n      }\n      state.sup.off();\n    }\n\n    let tracked: {\n      readonly on: OnEvent<[PageLoadResponse]>;\n      num: number;\n    } | undefined;\n    const supply = eventSupply().whenOff(() => {\n      state = undefined;\n      tracked = undefined;\n    });\n\n    const on = onEventBy<[PageLoadResponse]>(receiver => {\n      if (!tracked) {\n\n        const onLoad = loader(page);\n        const tracker = trackValue<PageLoadResponse>();\n        const trackSupply = onLoad(resp => {\n          tracker.it = resp;\n        }).whenOff(reason => {\n          // Error drops page cache, unlike successful page load.\n          if (reason != null) {\n            supply.off(reason);\n          }\n        });\n\n        supply.whenOff(reason => {\n          trackSupply.off(reason);\n          tracker.done(reason);\n        });\n\n        tracked = {\n          on: tracker.read.thru_(\n              response => response ? nextArgs(response) : nextSkip(),\n          ),\n          num: 0,\n        };\n      }\n\n      const requested = tracked;\n\n      ++requested.num;\n\n      return requested.on(receiver).needs(supply).whenOff(reason => {\n        if (!--requested.num) {\n          // Allow to request the same page again\n          Promise.resolve().then(() => {\n            if (!requested.num && requested === tracked) {\n              supply.off(reason);\n            }\n          });\n        }\n      });\n    });\n\n    state = { url, on, sup: supply };\n\n    return on;\n  };\n}\n\nfunction pageUrl(page: Page): string {\n  return new URL('', page.url).href;\n}\n","import { flatMapIt, itsEach, itsIterator } from 'a-iterable';\nimport { asis, noop } from 'call-thru';\nimport {\n  EventEmitter,\n  eventReceiver,\n  EventReceiver,\n  eventSupply,\n  EventSupply,\n  noEventSupply,\n  OnEvent,\n  onEventBy,\n} from 'fun-events';\nimport { Navigation } from '../navigation';\nimport { Page } from '../page';\nimport { PageParam } from '../page-param';\nimport { PageFragmentRequest, PageLoadRequest } from './page-load-request';\nimport { PageLoadResponse } from './page-load-response';\nimport { PageLoader } from './page-loader.impl';\n\n/**\n * @internal\n */\nexport interface PageLoadReq extends PageLoadRequest {\n\n  readonly receiver: EventReceiver.Generic<[PageLoadResponse]>;\n\n}\n\nclass PageLoadAbortError extends Error {}\n\n/**\n * @internal\n */\nexport class PageLoadRequests implements Iterable<PageLoadReq> {\n\n  private readonly _map = new Map<EventSupply, PageLoadReq[]>();\n\n  constructor(\n      private readonly _navigation: Navigation,\n      private readonly _loader: PageLoader,\n  ) {}\n\n  get fragments(): readonly PageFragmentRequest[] {\n\n    const result: PageFragmentRequest[] = [];\n\n    for (const request of this) {\n      if (!request.fragment) {\n        return [];\n      }\n      result.push(request.fragment);\n    }\n\n    return result;\n  }\n\n  [Symbol.iterator](): Iterator<PageLoadReq> {\n    return itsIterator(flatMapIt(this._map.values(), asis));\n  }\n\n  handle(): PageParam.Handle<void, PageLoadRequest> {\n\n    const self = this;\n    const pageSupply = eventSupply();\n    let loadSupply = noEventSupply();\n\n    return {\n      get() {},\n      put(request: PageLoadRequest): void {\n        self._add(request);\n      },\n      transfer(to: Page) {\n\n        const transferred = self._transfer();\n\n        to.put(pageLoadRequestsParam, transferred);\n\n        return transferred.handle();\n      },\n      enter(page: Page, when: 'init' | 'open' | 'replace' | 'return'): void {\n        if (when === 'init') {\n          // The page is loaded already. No need to fetch it.\n          return;\n        }\n\n        loadSupply = eventSupply().needs(pageSupply);\n\n        const onLoad = onEventBy<[PageLoadResponse]>(responseReceiver => {\n\n          const emitter = new EventEmitter<[PageLoadResponse]>();\n          const supply = emitter.on(responseReceiver);\n\n          self._loader(page)(response => emitter.send(response)).whenOff(error => {\n            if (error !== undefined && !(error instanceof PageLoadAbortError)) {\n              // Report current page load error as failed load response\n              emitter.send({\n                ok: false as const,\n                page,\n                error,\n              });\n            }\n          }).needs(loadSupply);\n\n          return supply;\n        }).share();\n\n        itsEach(\n            self,\n            ({ fragment, receiver }) => onFragment(onLoad, fragment)({\n              supply: eventSupply().needs(receiver.supply),\n              receive(context, response): void {\n                receiver.receive(context, response);\n              },\n            }),\n        );\n      },\n      leave(): void {\n        loadSupply.off(new PageLoadAbortError('page left'));\n      },\n      stay() {\n        pageSupply.off(new PageLoadAbortError('navigation cancelled'));\n      },\n      forget() {\n        pageSupply.off(new PageLoadAbortError('page forgotten'));\n      },\n    };\n\n  }\n\n  private _add(request: PageLoadRequest) {\n\n    const req = { ...request, receiver: eventReceiver(request.receiver) };\n    const { supply } = req.receiver;\n    const list = this._map.get(supply);\n\n    if (list) {\n      list.push(req);\n    } else {\n      this._map.set(supply, [req]);\n      supply.whenOff(() => this._map.delete(supply));\n    }\n  }\n\n  private _transfer(): PageLoadRequests {\n\n    const transferred = new PageLoadRequests(this._navigation, this._loader);\n\n    for (const [supply, list] of this._map.entries()) {\n      transferred._map.set(supply, [...list]);\n    }\n\n    return transferred;\n  }\n\n}\n\nfunction onFragment(\n    onLoad: OnEvent<[PageLoadResponse]>,\n    fragment?: PageFragmentRequest,\n): OnEvent<[PageLoadResponse]> {\n  return fragment\n      ? onLoad.thru_(\n          response => response.ok\n              ? {\n                ...response,\n                fragment: (\n                    fragment.tag != null\n                    ? response.document.getElementsByTagName(fragment.tag)[0]\n                    : response.document.getElementById(fragment.id)\n                ) || undefined,\n              }\n              : response,\n      )\n      : onLoad;\n}\n\nclass PageLoadRequestsParam extends PageParam<PageLoadRequests, PageLoadRequests> {\n\n  create(\n      _page: Page,\n      requests: PageLoadRequests,\n  ): PageParam.Handle<PageLoadRequests, PageLoadRequests> {\n    return {\n      get() {\n        return requests;\n      },\n      put: noop,\n    };\n  }\n\n}\n\n/**\n * @internal\n */\nexport const pageLoadRequestsParam: PageParam<PageLoadRequests, PageLoadRequests> = new PageLoadRequestsParam();\n","/**\n * @module @wesib/generic\n */\nimport { ContextUpRef } from 'context-values';\nimport { EventSender, OnEvent } from 'fun-events';\nimport { FetchAgentKey } from '../../fetch/fetch-agent-key.impl';\nimport { PageLoadResponse } from './page-load-response';\n\n/**\n * Page load agent signature.\n *\n * The agent can be used to alter loaded page document processing. For that it should be registered in appropriate\n * context.\n *\n * All registered agents are organized into chain. The first agent in chain is called by page loader.\n */\nexport type PageLoadAgent =\n/**\n * @param next  Either calls the next agent in chain, or actually loads page document if this agent is the last one.\n * Accepts an optional `Request` parameter. The original request will be used instead when omitted.\n * @param request  HTTP request.\n *\n * @returns An `EventSender` of page load response. It is returned either to preceding agent in chain, or as a loaded\n * document.\n */\n    (\n        this: void,\n        next: (this: void, request?: Request) => OnEvent<[PageLoadResponse]>,\n        request: Request,\n    ) => EventSender<[PageLoadResponse]>;\n\nexport namespace PageLoadAgent {\n\n  /**\n   * Combined page load agent signature.\n   *\n   * This is what is available under [[PageLoadAgent]] key.\n   */\n  export type Combined =\n  /**\n   * @param next  Either calls the next agent in chain, or actually loads page document if this agent is the last one.\n   * Accepts `Request` parameter.\n   * @param request  HTTP request.\n   *\n   * @returns An `OnEvent` registrar of loaded document.\n   */\n      (\n          this: void,\n          next: (this: void, request: Request) => OnEvent<[PageLoadResponse]>,\n          request: Request,\n      ) => OnEvent<[PageLoadResponse]>;\n\n}\n\n/**\n * A key of context value containing an [[DomFetchAgent]] instance.\n *\n * The agent returned combines all registered agents into one. If no agent registered it just performs the fetch.\n */\nexport const PageLoadAgent: ContextUpRef<PageLoadAgent.Combined, PageLoadAgent> =\n    /*#__PURE__*/ new FetchAgentKey<[PageLoadResponse]>('page-load-agent');\n","import { noop, valueProvider } from 'call-thru';\nimport { ContextUpRef, FnContextKey } from 'context-values';\n\n/**\n * A signature of page load URL modifier function.\n *\n * All such functions registered in bootstrap context are called in order of their registration with current page URL.\n * They are able to modify it, e.g. by applying additional URL search parameters. The modified URL is used then to load\n * the page.\n */\nexport type PageLoadURLModifier =\n/**\n * @param url  An URL of page to load.\n */\n    (this: void, url: URL) => void;\n\n/**\n * A key of bootstrap context value containing a page load URL modifier.\n *\n * Does not modify URL by default.\n */\nexport const PageLoadURLModifier: ContextUpRef<PageLoadURLModifier, PageLoadURLModifier> =\n    /*#__PURE__*/ new FnContextKey('page-load-url', { byDefault: valueProvider(noop) });\n","import { BootstrapContext, bootstrapDefault, BootstrapWindow } from '@wesib/wesib';\nimport { itsReduction } from 'a-iterable';\nimport { SingleContextKey } from 'context-values';\nimport { afterThe, EventEmitter, eventSupply, OnEvent, onEventBy } from 'fun-events';\nimport { hthvParse, hthvQuote } from 'http-header-value';\nimport { HttpFetch } from '../../fetch';\nimport { Page } from '../page';\nimport { PageLoadAgent } from './page-load-agent';\nimport { pageLoadRequestsParam } from './page-load-requests.impl';\nimport { PageLoadResponse } from './page-load-response';\nimport { PageLoadURLModifier } from './page-load-url-modifier';\n\n/**\n * @internal\n */\nexport type PageLoader = (this: void, page: Page) => OnEvent<[PageLoadResponse]>;\n\n/**\n * @internal\n */\nexport const PageLoader = /*#__PURE__*/ new SingleContextKey<PageLoader>(\n    'page-loader',\n    {\n      byDefault: bootstrapDefault(newPageLoader),\n    },\n);\n\nfunction newPageLoader(context: BootstrapContext): PageLoader {\n\n  const window = context.get(BootstrapWindow);\n  const httpFetch = context.get(HttpFetch);\n  const modifyURL = context.get(PageLoadURLModifier);\n  const agent = context.get(PageLoadAgent);\n  const parser: DOMParser = new (window as any).DOMParser();\n\n  return page => {\n\n    const url = new URL(page.url.href);\n\n    modifyURL(url);\n\n    const request = new Request(\n        url.href,\n        {\n          mode: 'same-origin',\n          credentials: 'same-origin',\n          headers: new Headers({ 'Accept': 'text/html' }),\n        },\n    );\n\n    return onEventBy(receiver => agent(fetch, request)(receiver));\n\n    function fetch(fetchRequest: Request): OnEvent<[PageLoadResponse]> {\n      fetchRequest = pageFragmentsRequest(page, fetchRequest);\n\n      const responseTextEmitter = new EventEmitter<[Response, string]>();\n      const onResponse: OnEvent<[PageLoadResponse]> = responseTextEmitter.on.thru_(\n          (response, text) => {\n            if (!response.ok) {\n              return {\n                ok: false as const,\n                page,\n                response,\n                error: response.status,\n              };\n            }\n            try {\n              return {\n                ok: true as const,\n                page,\n                response,\n                document: parsePageDocument(parser, url, response, text),\n              };\n            } catch (error) {\n              return {\n                ok: false as const,\n                page,\n                response,\n                error,\n              };\n            }\n          },\n      );\n\n      return onEventBy<[PageLoadResponse]>(receiver => {\n\n        const { supply } = receiver;\n\n        afterThe<[PageLoadResponse.Start]>({ page }).once({\n          supply: eventSupply().needs(supply),\n          receive(ctx, start) {\n            receiver.receive(ctx, start);\n          },\n        });\n\n        const responseSupply = httpFetch(fetchRequest)(response => {\n          onResponse(receiver);\n          response.text().then(\n              text => {\n                responseTextEmitter.send(response, text);\n                supply.needs(responseSupply);\n              },\n          ).catch(\n              e => supply.off(e),\n          );\n        });\n      });\n    }\n  };\n}\n\nfunction pageFragmentsRequest(page: Page, request: Request ) {\n\n  const fragments = page.get(pageLoadRequestsParam)?.fragments;\n\n  if (!fragments || !fragments.length) {\n    return request;\n  }\n\n  return new Request(\n      request,\n      {\n        headers: {\n          'Accept-Fragment': itsReduction(\n              fragments,\n              (header, fragment) =>\n                  (header ? header + ', ' : '')\n                  + (\n                      fragment.tag != null\n                          ? 'tag=' + hthvQuote(fragment.tag)\n                          : 'id=' + hthvQuote(fragment.id)\n                  ),\n              '',\n          ),\n        },\n      },\n  );\n}\n\nfunction parsePageDocument(parser: DOMParser, url: URL, response: Response, text: string): Document {\n\n  const doc = parser.parseFromString(\n      text,\n      hthvParse(response.headers.get('Content-Type') || 'text/html')[0].v as SupportedType,\n  );\n\n  if (doc.head) {\n\n    const base = doc.head.querySelector('base');\n\n    if (base) {\n      base.href = new URL(base.getAttribute('href')!, url).href;\n    } else {\n\n      const newBase = doc.createElement('base');\n\n      newBase.href = url.href;\n\n      doc.head.appendChild(newBase);\n    }\n  }\n\n  return doc;\n}\n","import { Navigation } from '../navigation';\nimport { Page } from '../page';\nimport { PageParam } from '../page-param';\nimport { PageParamContext } from '../page-param-context';\nimport { cachingPageLoader } from './caching-page-loader.impl';\nimport { PageLoadRequest } from './page-load-request';\nimport { PageLoadRequests, pageLoadRequestsParam } from './page-load-requests.impl';\nimport { PageLoader } from './page-loader.impl';\n\nclass PageLoadParam extends PageParam<void, PageLoadRequest> {\n\n  create(page: Page, request: PageLoadRequest, context: PageParamContext) {\n\n    const requests = new PageLoadRequests(context.get(Navigation), cachingPageLoader(context.get(PageLoader)));\n    const handle = requests.handle();\n\n    page.put(pageLoadRequestsParam, requests);\n    handle.put(request);\n\n    return handle;\n  }\n\n}\n\n/**\n * Page load parameter.\n *\n * Accepts a {@link PageLoadRequest page load request} as input.\n *\n * A page load is initiated whenever a page with new address is {@link Navigation.onEnter entered}.\n *\n * Page load won't be initiated if:\n * - page load parameter is not {@link Page.put} added,\n * - all added {@link PageLoadRequest.receiver response receiver}s supplies are cut off, or\n * - the entered page address is the the same one as previous one, except the hash,\n */\nexport const pageLoadParam: PageParam<void, PageLoadRequest> = /*#__PURE__*/ new PageLoadParam();\n","import { BootstrapContext, bootstrapDefault, BootstrapWindow } from '@wesib/wesib';\nimport { ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { AfterEvent, afterThe } from 'fun-events';\nimport { Navigation } from '../navigation';\nimport { PageLoadAgent } from './page-load-agent';\nimport { PageLoadURLModifier } from './page-load-url-modifier';\n\nconst PageCacheBuster__key = /*#__PURE__*/ new SingleContextKey<PageCacheBuster>(\n    'page-cache-buster',\n    {\n      byDefault: bootstrapDefault(context => new PageCacheBuster(context)),\n    },\n);\n\n/**\n * @internal\n */\nexport const appRevSearchParam = '__wesib_app_rev__';\n\n/**\n * @internal\n */\nexport class PageCacheBuster {\n\n  static get [ContextKey__symbol](): SingleContextKey<PageCacheBuster> {\n    return PageCacheBuster__key;\n  }\n\n  readonly urlModifier: AfterEvent<PageLoadURLModifier[]>;\n  readonly agent: AfterEvent<PageLoadAgent[]>;\n\n  constructor(context: BootstrapContext) {\n\n    const rev = appRev(context.get(BootstrapWindow).document);\n\n    if (!rev) {\n      this.urlModifier = afterThe();\n      this.agent = afterThe();\n    } else {\n\n      const navigation = context.get(Navigation);\n\n      this.urlModifier = afterThe(url => url.searchParams.set(appRevSearchParam, rev));\n      this.agent = afterThe((next, request) => {\n        return next(new Request(request.url, request)).thru_(response => {\n          if (response.ok) {\n\n            const newRev = appRev(response.document);\n\n            if (newRev && newRev !== rev) {\n\n              const url = new URL(response.page.url.href);\n\n              url.searchParams.set(appRevSearchParam, newRev);\n              navigation.update(url);\n              navigation.reload();\n            }\n          }\n\n          return response;\n        });\n      });\n    }\n  }\n\n}\n\nfunction appRev(doc: Document) {\n  return doc.querySelector('meta[name=wesib-app-rev]')?.getAttribute('content');\n}\n","/**\n * @module @wesib/generic\n */\nimport { isElement } from '@wesib/wesib';\nimport { itsEach, overArray } from 'a-iterable';\n\n/**\n * Imports DOM node from one document to another.\n *\n * @param from  The node to import.\n * @param to  The node to append imported node to.\n * @param importContent  A function that imports nodes nested in parent element. [[importNodeContents]] by default.\n *\n * @returns Imported node.\n */\nexport function importNode<N extends Node>(\n    from: N,\n    to: Node,\n    importContent?: (this: void, from: N, to: N) => void,\n): N;\n\n/**\n * Imports DOM node from one document to another and inserts it before the given node.\n *\n * @param from  The node to import.\n * @param to  The node to append imported node to.\n * @param before  The node to insert imported node before, or `null` to append it to the end of target one.\n * @param importContent  A function that imports nodes nested in parent element. [[importNodeContents]] by default.\n *\n * @returns Imported node.\n */\nexport function importNode<N extends Node>(\n    from: N,\n    to: Node,\n    before?: Node | null,\n    importContent?: (this: void, from: N, to: N) => void,\n): N;\n\nexport function importNode<N extends Node>(\n    from: N,\n    to: Node,\n    beforeOrImport?: Node | null | ((this: void, from: N, to: N) => void),\n    importContent: (this: void, from: N, to: N) => void = importNodeContent,\n): N {\n\n  let before: Node | null;\n\n  if (typeof beforeOrImport === 'function') {\n    importContent = beforeOrImport;\n    before = null;\n  } else {\n    before = beforeOrImport || null;\n  }\n\n  const doc = to.ownerDocument!;\n\n  if (isElement(from)) {\n\n    const elementClone = doc.createElement(from.tagName.toLowerCase()) as Node as (Element & N);\n\n    from.getAttributeNames().forEach(attr => elementClone.setAttribute(attr, from.getAttribute(attr)!));\n    importContent(from, elementClone);\n    to.insertBefore(elementClone, before);\n\n    return elementClone;\n  }\n\n  const nodeClone = doc.importNode(from, false);\n\n  to.insertBefore(nodeClone, before);\n\n  return nodeClone;\n}\n\n/**\n * Imports DOM node contents from one document to another.\n *\n * @param from  The node which contents to import.\n * @param to  The node to append imported nodes to.\n */\nexport function importNodeContent(from: Node, to: Node): void {\n  itsEach(\n      overArray(from.childNodes),\n      node => importNode(node, to),\n  );\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { filterIt, itsEach, mapIt, overArray } from 'a-iterable';\nimport { importNode } from '../../util';\nimport { PageLoadAgent } from './page-load-agent';\n\n/**\n * @internal\n */\nexport function pageScriptsAgent(context: BootstrapContext): PageLoadAgent {\n\n  const doc = context.get(BootstrapWindow).document;\n\n  return next => next().thru_(\n      response => {\n        if (response.ok) {\n\n          const allScripts = new Set<string>(mapIt(\n              externalScripts(doc, overArray(doc.scripts)),\n              ([src]) => src,\n          ));\n\n          itsEach(\n              filterIt(\n                  externalScripts(response.document, overArray(response.document.querySelectorAll('script'))),\n                  ([src]) => !allScripts.has(src),\n              ),\n              ([src, script]) => {\n                importNode(script, doc.head, (_from, to) => to.src = src);\n                allScripts.add(src);\n              },\n          );\n        }\n        return response;\n      },\n  );\n}\n\nfunction externalScripts(\n    doc: Document,\n    scripts: Iterable<HTMLScriptElement>,\n): Iterable<readonly [string, HTMLScriptElement]> {\n  return mapIt(\n      filterIt(\n          scripts,\n          script => !!script.src,\n      ),\n      script => [new URL(script.src, doc.baseURI).href, script] as const,\n  );\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { itsEach, itsFirst, overArray } from 'a-iterable';\nimport { importNode } from '../../util';\nimport { PageLoadAgent } from './page-load-agent';\n\n/**\n * @internal\n */\nexport function pageStyleAgent(context: BootstrapContext): PageLoadAgent {\n\n  const doc = context.get(BootstrapWindow).document;\n\n  return next => next().thru_(\n      response => {\n        if (!response.ok) {\n          return response;\n        }\n\n        const newStyles = response.document.querySelectorAll<HTMLLinkElement>('link[rel=stylesheet]');\n\n        if (!newStyles.length) {\n          return response;\n        }\n\n        let target: Node = doc.head;\n        let before: Node | null = null;\n        const oldStyles = doc.querySelectorAll<HTMLLinkElement>('link[rel=stylesheet]');\n        const oldStylesByHref = new Map<string, HTMLLinkElement>();\n        const firstOldStyle = oldStyles.item(0);\n\n        if (firstOldStyle) {\n          target = firstOldStyle.parentNode!;\n          before = firstOldStyle;\n          itsEach(\n              overArray(oldStyles),\n              link => oldStylesByHref.set(new URL(link.href, doc.baseURI).href, link),\n          );\n        }\n\n        itsEach(\n            overArray(newStyles),\n            newStyle => {\n\n              const href = new URL(newStyle.href, doc.baseURI).href;\n              const oldStyle = oldStylesByHref.get(href);\n\n              if (oldStyle) {\n                // Style already exists.\n                if (itsFirst(oldStylesByHref.keys()) === href) {\n                  // In proper position already.\n                  // Insert the remaining styles after it.\n                  target = oldStyle.parentNode!;\n                  before = oldStyle.nextSibling;\n                } else {\n                  // Move to proper position.\n                  target.insertBefore(oldStyle, before);\n                }\n                oldStylesByHref.delete(href);\n              } else {\n                // Import new style\n                importNode(newStyle, target, before, (_from, to) => to.href = href);\n              }\n            },\n        );\n\n        // Remove remaining old styles\n        itsEach(oldStylesByHref.values(), style => style.parentNode!.removeChild(style));\n\n        return response;\n      },\n  );\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { PageLoadAgent } from './page-load-agent';\n\n/**\n * @internal\n */\nexport function pageTitleAgent(context: BootstrapContext): PageLoadAgent {\n\n  const doc = context.get(BootstrapWindow).document;\n\n  return next => next().thru_(response => {\n    if (response.ok) {\n\n      const title = response.document.getElementsByTagName('title').item(0);\n\n      if (title && title.textContent) {\n        doc.title = title.textContent;\n      }\n    }\n\n    return response;\n  });\n}\n","/**\n * @module @wesib/generic\n */\nimport { FeatureDef, FeatureDef__symbol } from '@wesib/wesib';\nimport { NavigationSupport } from '../navigation-support.feature';\nimport { PageCacheBuster } from './page-cache-buster.impl';\nimport { PageLoadAgent } from './page-load-agent';\nimport { PageLoadURLModifier } from './page-load-url-modifier';\nimport { pageScriptsAgent } from './page-scripts-agent.impl';\nimport { pageStyleAgent } from './page-style-agent.impl';\nimport { pageTitleAgent } from './page-title-agent.impl';\n\nconst PageLoadSupport__feature: FeatureDef = {\n  needs: NavigationSupport,\n  setup(setup) {\n    setup.provide({\n      a: PageLoadURLModifier,\n      by: (buster: PageCacheBuster) => buster.urlModifier,\n      with: [PageCacheBuster],\n    });\n    setup.provide({\n      a: PageLoadAgent,\n      by: (buster: PageCacheBuster) => buster.agent,\n      with: [PageCacheBuster],\n    });\n    setup.provide({ a: PageLoadAgent, by: pageScriptsAgent });\n    setup.provide({ a: PageLoadAgent, by: pageStyleAgent });\n    setup.provide({ a: PageLoadAgent, by: pageTitleAgent });\n  },\n};\n\n/**\n * Page load support feature.\n *\n * Enables default {@link PageLoadAgent page load agents}:\n * 1. Page cache busting agent.\n *    If `<meta name=\"wesib-app-rev\">` tag is present in initial page, then sends this tag's content with each page load\n *    request as `__wesib_app_rev__` search parameter. If the loaded page contains the same named meta tag with\n *    different content, then reloads the page.\n *    This serves both as cache busting technique, and as server-side application updates handler.\n * 2. Scripts agent.\n *    Includes external scripts from loaded page into main document.\n * 3. Style agent.\n *    Replaces external styles of main document styles with the ones from loaded page.\n *    Unless loaded page has no external styles.\n * 4. Title agent.\n *    Applies loaded page title to bootstrap window. If there is one.\n */\nexport class PageLoadSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return PageLoadSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport { EventSupply } from 'fun-events';\nimport { StypOptions, StypRules } from 'style-producer';\n\n/**\n * Component style producer function interface.\n */\nexport type ComponentStyleProducer =\n/**\n * @param rules  CSS rules to produce stylesheets for. This can be e.g. a `StypRule.rules` to render all rules,\n * or a result of `StypRuleList.grab()` method call to render only matching ones.\n * @param opts  Production options.\n *\n * @returns Styles supply. Once cut off (i.e. its `off()` method is called) the produced stylesheets are removed.\n */\n    (\n        rules: StypRules,\n        opts?: StypOptions,\n    ) => EventSupply;\n\n/**\n * A key of component context value containing a component style producer.\n */\nexport const ComponentStyleProducer: SingleContextRef<ComponentStyleProducer> =\n    /*#__PURE__*/ new SingleContextKey<ComponentStyleProducer>('component-style-producer');\n","/**\n * @module @wesib/generic\n */\nimport { MultiContextKey, MultiContextRef } from 'context-values';\nimport { StypRender } from 'style-producer';\n\n/**\n * A CSS render that will be enabled by default by [[ComponentStyleProducer]].\n */\nexport type ComponentStypRender = StypRender;\n\n/**\n * A key of component context value containing component CSS renders.\n */\nexport const ComponentStypRender: MultiContextRef<ComponentStypRender> =\n    /*#__PURE__*/ new MultiContextKey<ComponentStypRender>('component-styp-render');\n","import { ComponentContext, DefaultNamespaceAliaser, ElementDef } from '@wesib/wesib';\nimport { ContextValues, SingleContextKey, SingleContextRef } from 'context-values';\nimport { css__naming, html__naming, NamespaceDef, QualifiedName } from 'namespace-aliaser';\n\n/**\n * @internal\n */\nexport type ElementIdClass = QualifiedName;\n\n/**\n * @internal\n */\nexport const ElementIdClass__NS = /*#__PURE*/ new NamespaceDef(\n    'https://wesib.github.io/ns/element-id-class',\n    'elic',\n    'element-id-class',\n);\n\n/**\n * @internal\n */\nexport const ElementIdClass: SingleContextRef<ElementIdClass> =\n    /*#__PURE__*/ new SingleContextKey('unique-element-class', { byDefault: assignElementId });\n\nlet uniqueClassSeq = 0;\n\nfunction assignElementId(contextValues: ContextValues): ElementIdClass {\n\n  const aliaser = contextValues.get(DefaultNamespaceAliaser);\n  const context = contextValues.get(ComponentContext);\n  const elementDef = context.get(ElementDef);\n  const name: string = elementDef.name ? html__naming.name(elementDef.name, aliaser) : 'component';\n  const local = `${name}#${++uniqueClassSeq}`;\n  const qualified = ElementIdClass__NS.name(aliaser(ElementIdClass__NS), local, css__naming);\n  const element = context.element as Element;\n\n  element.classList.add(qualified);\n\n  return qualified;\n}\n","import {\n  ArraySet,\n  BootstrapWindow,\n  ComponentContext,\n  ContentRoot,\n  DefaultNamespaceAliaser,\n  RenderScheduler,\n  ShadowContentRoot,\n} from '@wesib/wesib';\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { EventSupply } from 'fun-events';\nimport { produceBasicStyle, StypOptions, StypRender, StypRules, StypSelector } from 'style-producer';\nimport { ComponentStypRender } from './component-styp-render';\nimport { ElementIdClass } from './element-id-class.impl';\n\nconst ComponentStyleProducer__key =\n    /*#__PURE__*/ new SingleContextKey<ComponentStyleProducer>('component-style-producer:impl');\n\nconst hostSelector: StypSelector.Normalized = [{ e: ':host' }];\n\n/**\n * @internal\n */\nexport class ComponentStyleProducer {\n\n  static get [ContextKey__symbol](): ContextKey<ComponentStyleProducer> {\n    return ComponentStyleProducer__key;\n  }\n\n  constructor(\n      private readonly _context: ComponentContext,\n      private readonly _produce = produceBasicStyle,\n  ) {}\n\n  produce(rules: StypRules, options: StypOptions = {}): EventSupply {\n\n    const context = this._context;\n    const shadowRoot = context.get(ShadowContentRoot, { or: null });\n\n    return this._produce(rules, {\n      ...options,\n      document: options.document || context.get(BootstrapWindow).document,\n      parent: options.parent || context.get(ContentRoot),\n      rootSelector: options.rootSelector || buildRootSelector(),\n      schedule: options.schedule || buildScheduler(),\n      nsAlias: options.nsAlias || context.get(DefaultNamespaceAliaser),\n      render: buildRender(),\n    });\n\n    function buildScheduler(): (operation: () => void) => void {\n\n      const scheduler = context.get(RenderScheduler);\n\n      return operation => scheduler.newSchedule().schedule(operation);\n    }\n\n    function buildRootSelector(): StypSelector {\n      return shadowRoot ? hostSelector : [];\n    }\n\n    function buildRender(): StypRender | readonly StypRender[] | undefined {\n\n      const { render } = options;\n      const renders = new ArraySet<StypRender>(render)\n          .add(...context.get(ComponentStypRender));\n\n      if (!shadowRoot) {\n        renders.add(noShadowRender(context.get(ElementIdClass)));\n      }\n\n      return renders.value;\n    }\n  }\n\n}\n\nfunction noShadowRender(idClass: ElementIdClass): StypRender {\n  return {\n    order: -100,\n    render(producer, properties) {\n      producer.render(properties, {\n        selector: [{ c: [idClass] }, ...producer.selector],\n      });\n    },\n  };\n}\n","/**\n * @module @wesib/generic\n */\nimport { FeatureDef, FeatureDef__symbol, RenderSupport } from '@wesib/wesib';\nimport { ComponentStyleProducer } from './component-style-producer';\nimport { ComponentStyleProducer as ComponentStyleProducer_ } from './component-style-producer.impl';\n\nconst BasicStyleProducerSupport__feature: FeatureDef = {\n  needs: RenderSupport,\n  setup(setup) {\n    setup.perComponent({ as: ComponentStyleProducer_ });\n    setup.perComponent({\n      a: ComponentStyleProducer,\n      by(producer: ComponentStyleProducer_): ComponentStyleProducer {\n        return (rules, opts) => producer.produce(rules, opts);\n      },\n      with: [ComponentStyleProducer_],\n    });\n  },\n};\n\n/**\n * Basic style producer support feature.\n *\n * Depends on [style-producer].\n *\n * Unlike [[StyleProducerSupport]] feature this one does not enable default CSS renders.\n *\n * It is enabled automatically by {@link ProduceStyle @ProduceStyle} decorator.\n *\n * [style-producer]: https://www.npmjs.com/package/style-producer\n */\nexport class BasicStyleProducerSupport {\n\n  static get [FeatureDef__symbol]() {\n    return BasicStyleProducerSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ComponentContext } from '@wesib/wesib';\nimport { noop } from 'call-thru';\nimport { eventSupply, EventSupply, noEventSupply } from 'fun-events';\nimport { lazyStypRules, StypOptions, StypRules } from 'style-producer';\nimport { ComponentStyleProducer } from './component-style-producer';\n\n/**\n * Component CSS styles production options.\n */\nexport interface ComponentStypOptions extends StypOptions {\n\n  /**\n   * Whether to produce CSS stylesheets while component is not connected.\n   *\n   * Can be one of:\n   * - `true` - to produce stylesheets when first connected and update them even if component is disconnected after\n   *   that. This is the default, as stylesheet updates is expected to be rare operation.\n   * - `false` - to produce stylesheet whenever component is connected and remove them once disconnected.\n   *   This is a good choice if stylesheets are small and updated frequently.\n   * - `always` - to produce stylesheets immediately upon component readiness and update them offline after that.\n   *   This is the right choice if component needs a stylesheet ready before it is added to the document.\n   */\n  offline?: boolean | 'always';\n\n}\n\nexport const ComponentStypOptions = {\n\n  /**\n   * Produces and dynamically updates component's CSS stylesheets based on the given CSS rules.\n   *\n   * @param context  Target component context.\n   * @param rules  A source of CSS rules to produce stylesheets for.\n   * @param options  Production options.\n   *\n   * @returns CSS rules supply. Once cut off the produced stylesheets are removed.\n   */\n  produce(\n      context: ComponentContext,\n      rules: StypRules.Source,\n      options?: ComponentStypOptions,\n  ): EventSupply {\n\n    const css = lazyStypRules(rules);\n    const offline = options && options.offline;\n    const produceStyle = context.get(ComponentStyleProducer);\n\n    let cssSupply = noEventSupply();\n    let doProduceStyle: () => void;\n    const supply = eventSupply(reason => {\n      doProduceStyle = noop;\n      cssSupply.off(reason);\n    });\n\n    doProduceStyle = () => {\n      cssSupply = produceStyle(css, options).needs(supply);\n    };\n\n    switch (offline) {\n    case 'always':\n      context.whenReady(doProduceStyle);\n      break;\n    case false:\n      context.whenOn(connectionSupply => {\n        doProduceStyle();\n        cssSupply.needs(connectionSupply);\n      });\n      break;\n    default:\n      context.whenOn.once(doProduceStyle);\n    }\n\n    context.whenDestroyed(reason => supply.off(reason));\n\n    return supply;\n  },\n};\n","/**\n * @module @wesib/generic\n */\nimport { ComponentClass, ComponentDef } from '@wesib/wesib';\nimport { StypRules } from 'style-producer';\nimport { BasicStyleProducerSupport } from './basic-style-producer-support.feature';\nimport { ComponentStypOptions } from './component-styp-options';\n\n/**\n * A decorator of component property returning CSS rules to produce.\n *\n * Decorated property value should either contain a CSS rules source of type `StypRules.Source` or be a method\n * returning it.\n *\n * This decorator automatically enables [[BasicStyleProducerSupport]] feature.\n *\n * Utilizes [[ComponentStypOptions.produce]] function to produce CSS stylesheets.\n *\n * @typeparam T  A type of decorated component class.\n * @param options  Non-mandatory CSS style production options.\n *\n * @returns Component property decorator.\n */\nexport function ProduceStyle<T extends ComponentClass>(options?: ComponentStypOptions):\n    <V extends StypRules.Source | (() => StypRules.Source)>(\n        target: InstanceType<T>,\n        propertyKey: string | symbol,\n        descriptor?: TypedPropertyDescriptor<V>,\n    ) => any | void {\n  return (target: InstanceType<T>, propertyKey: string | symbol) => {\n\n    const componentType = target.constructor as T;\n\n    ComponentDef.define(\n        componentType,\n        {\n          define(defContext) {\n            defContext.onComponent(componentContext => {\n              componentContext.whenReady(({ component }) => {\n\n                const property = component[propertyKey];\n\n                ComponentStypOptions.produce(\n                    componentContext,\n                    typeof property === 'function' ? property.bind(component) : property,\n                    options,\n                );\n              });\n            });\n          },\n          feature: {\n            needs: [BasicStyleProducerSupport],\n          },\n        });\n  };\n}\n","/**\n * @module @wesib/generic\n */\nimport { ComponentContext, FeatureDef, FeatureDef__symbol, RenderSupport } from '@wesib/wesib';\nimport { produceStyle } from 'style-producer';\nimport { BasicStyleProducerSupport } from './basic-style-producer-support.feature';\nimport { ComponentStyleProducer } from './component-style-producer';\nimport { ComponentStyleProducer as ComponentStyleProducer_ } from './component-style-producer.impl';\n\nconst StyleProducerSupport__feature: FeatureDef = {\n  has: BasicStyleProducerSupport,\n  needs: RenderSupport,\n  setup(setup) {\n    setup.perComponent({\n      a: ComponentStyleProducer_,\n      by(context: ComponentContext) {\n        return new ComponentStyleProducer_(context, produceStyle);\n      },\n    });\n    setup.perComponent({\n      a: ComponentStyleProducer,\n      by(producer: ComponentStyleProducer_): ComponentStyleProducer {\n        return (rules, opts) => producer.produce(rules, opts);\n      },\n      with: [ComponentStyleProducer_],\n    });\n  },\n};\n\n/**\n * Style producer support feature.\n *\n * Depends on [style-producer].\n *\n * This is an implementation of [[BasicStyleProducerSupport]] feature that enables default CSS renders.\n *\n * It is _not_ enabled automatically by {@link ProduceStyle @ProduceStyle} decorator.\n *\n * [style-producer]: https://www.npmjs.com/package/style-producer\n */\nexport class StyleProducerSupport {\n\n  static get [FeatureDef__symbol]() {\n    return StyleProducerSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { RefStypRule, StypProperties, StypRule, StypRuleRef, StypRules } from 'style-producer';\nimport { ThemeStyle } from './theme-style';\n\nconst Theme__key = new SingleContextKey<Theme>('theme');\n\n/**\n * A hierarchy of CSS rules within single root.\n *\n * A component may use it to extract styling information.\n *\n * Current theme is available in bootstrap, definition, or component context. By default, only one theme is declared\n * per bootstrap. But this can be overridden.\n */\nexport abstract class Theme {\n\n  /**\n   * A key of bootstrap, definition, or component context value containing current theme instance.\n   */\n  static get [ContextKey__symbol](): ContextKey<Theme> {\n    return Theme__key;\n  }\n\n  /**\n   * Root CSS rule.\n   *\n   * All theme styling is represented as rules within this root.\n   */\n  abstract readonly root: StypRule;\n\n  /**\n   * Obtains CSS rule reference by its `referrer`.\n   *\n   * This is a helper method that resolves the given `referrer` against the `root` CSS rule of this theme.\n   *\n   * @param referrer  Target CSS rule referrer.\n   *\n   * @returns CSS rule reference.\n   */\n  ref<T extends StypProperties<T>>(referrer: RefStypRule<T>): StypRuleRef<T> {\n    return referrer(this.root);\n  }\n\n  /**\n   * Obtains a styling for the given theme styles.\n   *\n   * This method requests the registered {@link ThemeStyle theme styles} for CSS rules they provide.\n   * If some of the styles are not registered then uses the given style as provider.\n   *\n   * @param styles  The styles to obtain styling information for.\n   *\n   * @returns Dynamically updated CSS rule set containing the requested styling.\n   */\n  abstract style(...styles: ThemeStyle.Provider[]): StypRules;\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { Theme } from './theme';\n\nconst ThemeFactory__key = new SingleContextKey<ThemeFactory>('theme-factory');\n\nexport abstract class ThemeFactory {\n\n  static get [ContextKey__symbol](): ContextKey<ThemeFactory> {\n    return ThemeFactory__key;\n  }\n\n  abstract newTheme(): Theme;\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { AIterable } from 'a-iterable';\nimport { ContextRef, ContextValueOpts, ContextValues, SimpleContextKey } from 'context-values';\nimport { stypRules, StypRules } from 'style-producer';\nimport { Theme } from './theme';\n\n/**\n * Theme style provides part of the theme styling information.\n *\n * Theme style(s) can be provided in bootstrap context. They are applied to the theme at most once, when requested\n * by calling [[Theme.style]] method.\n *\n * Theme style is either a function, or an extension of another theme style.\n */\nexport type ThemeStyle = ThemeStyle.Provider | ThemeStyle.Extension;\n\nexport namespace ThemeStyle {\n\n  /**\n   * Theme style provider function.\n   *\n   * This function is called at most once per theme to apply styles to the latter. E.g. by declaring CSS rules.\n   *\n   * This function is used as an identifier of particular style and can be extended using [[ThemeStyle.Extension]].\n   *\n   * It is not absolutely necessary to register style provider. It will be applied on request anyway.\n   *\n   * @param theme  A theme to apply styling to.\n   *\n   * @returns Dynamically updated CSS rule set containing the applied styling.\n   */\n  export type Provider = (this: void, theme: Theme) => StypRules;\n\n  /**\n   * Theme style extension.\n   *\n   * An extension should be registered in bootstrap context in order to be applied.\n   */\n  export interface Extension {\n\n    /**\n     * A theme style provider to extend.\n     */\n    readonly style: ThemeStyle.Provider;\n\n    /**\n     * Extends the theme style.\n     *\n     * This method is called at most once per theme to apply styles to the latter. E.g. by declaring CSS rules.\n     *\n     * It will be called after the style provider it extends.\n     *\n     * @param theme  A theme to apply styling to.\n     *\n     * @returns Dynamically updated CSS rule set containing the applied styling.\n     */\n    provide(theme: Theme): StypRules;\n\n  }\n\n  /**\n   * A function obtaining combined style provider. I.e. the one that applies the style along with all extensions.\n   *\n   * @param A  provider of theme style to apply.\n   *\n   * @returns A combined theme style provider.\n   */\n  export type ById = (this: void, style: ThemeStyle.Provider) => ThemeStyle.Provider;\n\n}\n\nclass ThemeStyleKey extends SimpleContextKey<ThemeStyle.ById, ThemeStyle> {\n\n  constructor() {\n    super('theme-style');\n  }\n\n  grow<Ctx extends ContextValues>(\n      opts: ContextValueOpts<Ctx, ThemeStyle.ById, ThemeStyle, AIterable<ThemeStyle>>,\n  ): ThemeStyle.ById | null | undefined {\n\n    const providers = new Map<ThemeStyle.Provider, [ThemeStyle.Provider, boolean]>();\n\n    opts.seed.forEach(style => {\n\n      let key: ThemeStyle.Provider;\n      let provider: ThemeStyle.Provider;\n      let isId: boolean;\n\n      if (typeof style === 'function') {\n        key = provider = style;\n        isId = true;\n      } else {\n        key = style.style;\n        provider = style.provide.bind(style);\n        isId = false;\n      }\n\n      const prev = providers.get(key);\n\n      if (!prev) {\n        providers.set(key, [provider, isId]);\n      } else {\n\n        const [prevProvider, hasId] = prev;\n\n        providers.set(\n            key,\n            [\n              isId ? combineStyles(provider, prevProvider) : combineStyles(prevProvider, provider),\n              isId || hasId,\n            ]);\n      }\n    });\n\n    return providers.size ? byId : opts.byDefault(() => byId);\n\n    function byId(id: ThemeStyle.Provider): ThemeStyle.Provider {\n\n      const existing = providers.get(id);\n\n      if (!existing) {\n        return id;\n      }\n\n      const [provider, hasId] = existing;\n\n      return hasId ? provider : combineStyles(id, provider);\n    }\n  }\n\n}\n\n/**\n * A key of bootstrap context value containing theme styles.\n */\nexport const ThemeStyle: ContextRef<ThemeStyle.ById, ThemeStyle> = new ThemeStyleKey();\n\nfunction combineStyles(first: ThemeStyle.Provider, second: ThemeStyle.Provider): ThemeStyle.Provider {\n  return theme => stypRules(first(theme), second(theme));\n}\n","import { lazyStypRules, stypRoot, StypRule, StypRules } from 'style-producer';\nimport { Theme as Theme_ } from './theme';\nimport { ThemeStyle } from './theme-style';\n\n/**\n * @internal\n */\nexport class Theme extends Theme_ {\n\n  readonly root: StypRule = stypRoot();\n  private readonly _rules = new Map<ThemeStyle.Provider, StypRules>();\n\n  constructor(private readonly _styles: ThemeStyle.ById) {\n    super();\n  }\n\n  style(...styles: ThemeStyle.Provider[]): StypRules {\n\n    const theme = this;\n\n    return lazyStypRules(...styles.reduce<StypRules[]>(addStyleRules, []));\n\n    function addStyleRules(target: StypRules[], style: ThemeStyle.Provider) {\n\n      const existing = theme._rules.get(style);\n\n      if (existing) {\n        target.push(existing);\n      } else {\n\n        const constructed = theme._styles(style)(theme);\n\n        theme._rules.set(style, constructed);\n        target.push(constructed);\n      }\n\n      return target;\n    }\n  }\n\n}\n","import { ThemeFactory as ThemeFactory_ } from './theme-factory';\nimport { ThemeStyle } from './theme-style';\nimport { Theme } from './theme.impl';\n\n/**\n * @internal\n */\nexport class ThemeFactory extends ThemeFactory_ {\n\n  constructor(private readonly _styles: ThemeStyle.ById) {\n    super();\n  }\n\n  newTheme() {\n    return new Theme(this._styles);\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { FeatureDef, FeatureDef__symbol } from '@wesib/wesib';\nimport { BasicStyleProducerSupport } from '../styp';\nimport { Theme } from './theme';\nimport { ThemeFactory } from './theme-factory';\nimport { ThemeFactory as ThemeFactory_ } from './theme-factory.impl';\nimport { ThemeStyle } from './theme-style';\n\nconst ThemeSupport__feature: FeatureDef = {\n  needs: BasicStyleProducerSupport,\n  setup(setup) {\n    setup.provide({ a: ThemeFactory, as: ThemeFactory_, with: [ThemeStyle] });\n    setup.provide({\n      a: Theme,\n      by(factory: ThemeFactory) {\n        return factory.newTheme();\n      },\n      with: [ThemeFactory],\n    });\n  },\n};\n\n/**\n * Theme support feature.\n *\n * This needs to be enabled in order [[Theme]] and [[ThemeFactory]] to be available.\n */\nexport class ThemeSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return ThemeSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ComponentClass, ComponentContext } from '@wesib/wesib';\nimport { AIterable, ArrayLikeIterable } from 'a-iterable';\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport {\n  AfterEvent,\n  AfterEvent__symbol,\n  EventKeeper,\n  EventSender,\n  OnEvent,\n  OnEvent__symbol,\n  ValueTracker,\n} from 'fun-events';\n\n/**\n * Component tree node representing arbitrary element.\n */\nexport abstract class ElementNode {\n\n  /**\n   * The element itself.\n   */\n  abstract readonly element: any;\n\n  /**\n   * A context of component bound to this element, if any.\n   */\n  abstract readonly context?: ComponentContext<any>;\n\n  /**\n   * Parent element node, or `null` if element has no parent.\n   */\n  abstract readonly parent: ElementNode | null;\n\n  /**\n   * Select element nodes matching the given selector.\n   *\n   * @param selector  Simple CSS selector of nested components. E.g. component element name.\n   * @param opts  Element selector options.\n   */\n  abstract select(\n      selector: string,\n      opts: ElementNode.ElementSelectorOpts,\n  ): ElementNodeList;\n\n  /**\n   * Select component nodes matching the given selector.\n   *\n   * @param selector  Simple CSS selector of nested components (e.g. component element name), or component type.\n   * The latter should have custom element name.\n   * @param opts  Component selector options.\n   */\n  abstract select(\n      selector: string | ComponentClass<any>,\n      opts?: ElementNode.ComponentSelectorOpts,\n  ): ElementNodeList<ComponentNode>;\n\n  /**\n   * Returns a value tracker of element's attribute.\n   *\n   * @param name  Target attribute name.\n   *\n   * @returns Target attribute's value tracker.\n   */\n  abstract attribute(name: string): ValueTracker<string | null, string>;\n\n  /**\n   * Returns a value tracker of element's property.\n   *\n   * The changes are tracked with `StateTracker`. So it is expected that the target property notifies on its changes\n   * with state updater. E.g. when it is defined by `@DomProperty` decorator.\n   *\n   * @param key  Target property key.\n   *\n   * @returns Target property's value tracker.\n   */\n  abstract property<V>(key: PropertyKey): ValueTracker<V>;\n\n}\n\nexport namespace ElementNode {\n\n  /**\n   * Element node representing raw element no bound to any component.\n   */\n  export interface Raw extends ElementNode {\n\n    readonly context?: undefined;\n\n  }\n\n  /**\n   * Any element node. Either bound to some component or not.\n   */\n  export type Any = Raw | ComponentNode;\n\n  /**\n   * Element node selector options.\n   */\n  export interface SelectorOpts {\n\n    /**\n     * Set to `true` to select arbitrary nodes. Otherwise - select only component nodes.\n     */\n    all?: boolean;\n\n    /**\n     * Set to `true` to select from entire subtree. Otherwise - select from element child nodes only.\n     */\n    deep?: boolean;\n\n  }\n\n  /**\n   * Component node selector options.\n   */\n  export interface ComponentSelectorOpts extends SelectorOpts {\n\n    all?: false;\n\n  }\n\n  /**\n   * Any element node selector options.\n   */\n  export interface ElementSelectorOpts extends SelectorOpts {\n\n    /**\n     * Set to `true` to select arbitrary nodes. Otherwise - select only component nodes.\n     */\n    all: true;\n\n  }\n\n}\n\n/**\n * Element node representing an element bound to some component.\n */\nexport interface ComponentNode<T extends object = object> extends ElementNode {\n\n  readonly context: ComponentContext<T>;\n\n}\n\n/**\n * A key of component context value containing a component node instance.\n */\nexport const ComponentNode: SingleContextRef<ComponentNode> =\n    /*#__PURE__*/ new SingleContextKey<ComponentNode>('component-node');\n\n/**\n * Dynamic list of selected component tree nodes.\n *\n * It is an iterable of nodes.\n *\n * Implements an `EventSender` interface by sending added and removed nodes arrays.\n *\n * Implements an `EventKeeper` interface by sending updated node list.\n */\nexport abstract class ElementNodeList<N extends ElementNode = ElementNode.Any>\n    extends AIterable<N>\n    implements EventSender<[N[], N[]]>, EventKeeper<[ElementNodeList<N>]> {\n\n  /**\n   * An `OnEvent` sender of list changes. Sends arrays of added and removed nodes.\n   *\n   * The `[OnEvent__symbol]` property is an alias of this one.\n   */\n  abstract readonly onUpdate: OnEvent<[N[], N[]]>;\n\n  get [OnEvent__symbol](): OnEvent<[N[], N[]]> {\n    return this.onUpdate;\n  }\n\n  /**\n   * An `AfterEvent` keeper of current node list.\n   *\n   * The `[AfterEvent__symbol]` property is an alias of this one.\n   */\n  abstract readonly read: AfterEvent<[ElementNodeList<N>]>;\n\n  get [AfterEvent__symbol](): AfterEvent<[ElementNodeList<N>]> {\n    return this.read;\n  }\n\n  /**\n   * An `AfterEvent` keeper of node list changes.\n   *\n   * Sends an iterables of added and removed nodes. Sends current nodes immediately upon receiver registration.\n   */\n  abstract readonly track: AfterEvent<[ArrayLikeIterable<N>, ArrayLikeIterable<N>]>;\n\n  /**\n   * An `AfterEvent` keeper of the first node in this list.\n   */\n  abstract readonly first: AfterEvent<[N?]>;\n\n}\n","import {\n  BootstrapContext,\n  ComponentClass,\n  DefaultNamespaceAliaser,\n  ElementObserver,\n  ElementObserverInit,\n  isElement,\n} from '@wesib/wesib';\nimport { AIterable, ArrayLikeIterable, filterIt, itsEach, itsFirst, itsIterator, mapIt, overArray } from 'a-iterable';\nimport { isPresent, nextArgs } from 'call-thru';\nimport { AfterEvent, afterEventBy, afterSupplied, EventEmitter, eventSupply, OnEvent, onEventBy } from 'fun-events';\nimport { html__naming } from 'namespace-aliaser';\nimport { ElementNode, ElementNodeList as ElementNodeList_ } from './element-node';\n\nconst WATCH_DEEP: ElementObserverInit = { subtree: true };\n\n/**\n * @internal\n */\nexport function elementNodeList<N extends ElementNode>(\n    bsContext: BootstrapContext,\n    root: Element,\n    selectorOrType: string | ComponentClass<any>,\n    nodeOf: (node: Element, optional?: boolean) => N | undefined,\n    { deep, all }: ElementNode.SelectorOpts,\n): ElementNodeList_<N> {\n\n  const updates = new EventEmitter<[N[], N[]]>();\n  const init = deep ? WATCH_DEEP : undefined;\n  let cache = new Set<Element>();\n  let iterable: Iterable<N> | undefined;\n  let selector: string | undefined;\n\n  if (typeof selectorOrType === 'string') {\n    selector = selectorOrType;\n  } else {\n    bsContext.whenDefined(selectorOrType).then(({ elementDef: { name } }) => {\n      iterable = undefined;\n      if (name) {\n        selector = html__naming.name(name, bsContext.get(DefaultNamespaceAliaser));\n        if (updates.size) {\n\n          const selected = refresh();\n\n          if (selected.size) {\n\n            const added = [\n              ...filterIt<N | undefined, N>(\n                  mapIt(selected, node => nodeOf(node)),\n                  isPresent,\n              ),\n            ];\n\n            if (added.length) {\n              updates.send(added, []);\n            }\n          }\n        }\n      }\n    });\n  }\n\n  const observer = bsContext.get(ElementObserver)(update);\n  let nodeList: ElementNodeList;\n\n  const onUpdate = onEventBy<[N[], N[]]>(receiver => {\n\n    const firstReceiver = !updates.size;\n    const supply = updates.on(receiver);\n\n    if (firstReceiver) {\n      refresh();\n      observer.observe(root, init);\n    }\n\n    return eventSupply(reason => {\n      supply.off(reason);\n      if (!updates.size) {\n        observer.disconnect();\n      }\n    }).needs(supply);\n  });\n  const read = afterEventBy<[ElementNodeList]>(onUpdate.thru(() => nodeList), () => [nodeList]);\n  const onTrackUpdate: OnEvent<[ArrayLikeIterable<N>, ArrayLikeIterable<N>]> =\n      onUpdate.thru((added, removed) => nextArgs(AIterable.of(added), AIterable.of(removed)));\n  const track = afterEventBy<[ArrayLikeIterable<N>, ArrayLikeIterable<N>]>(receiver => {\n\n    const initialEmitter = new EventEmitter<[ArrayLikeIterable<N>, ArrayLikeIterable<N>]>();\n\n    initialEmitter.on(receiver);\n    initialEmitter.send(nodeList, AIterable.of([]));\n\n    onTrackUpdate(receiver);\n  });\n  const first: AfterEvent<[N?]> = afterSupplied(read).keep.thru(itsFirst);\n\n  if (!all) {\n    root.addEventListener('wesib:component', event => {\n\n      const element = event.target as Element;\n\n      if (cache.has(element)) {\n\n        const node = nodeOf(element) as N;\n\n        updates.send([node], []);\n      }\n    });\n  }\n\n  class ElementNodeList extends ElementNodeList_<N> {\n\n    get onUpdate() {\n      return onUpdate;\n    }\n\n    get read() {\n      return read;\n    }\n\n    get track() {\n      return track;\n    }\n\n    get first() {\n      return first;\n    }\n\n    [Symbol.iterator]() {\n      return itsIterator(iterable || (iterable = filterIt<N | undefined, N>(\n          mapIt(\n              elements(),\n              element => nodeOf(element),\n          ),\n          isPresent,\n      )));\n    }\n\n  }\n\n  return nodeList = new ElementNodeList();\n\n  function elements(): Set<Element> {\n    return updates.size ? cache : refresh();\n  }\n\n  function refresh(): Set<Element> {\n    iterable = undefined;\n    return cache = select();\n  }\n\n  function select(): Set<Element> {\n\n    const sel = selector;\n\n    if (!sel) {\n      return new Set();\n    }\n    if (deep) {\n      return new Set(overArray(root.querySelectorAll(sel)));\n    }\n    return new Set(\n        filterIt(\n            overArray(root.children),\n            item => item.matches(sel),\n        ),\n    );\n  }\n\n  function update(mutations: MutationRecord[]) {\n\n    const added: N[] = [];\n    const removed: N[] = [];\n\n    mutations.forEach(mutation => {\n      itsEach(\n          filterIt<N | undefined, N>(\n              mapIt(overArray(mutation.removedNodes), removeNode),\n              isPresent,\n          ),\n          node => removed.push(node),\n      );\n      itsEach(\n          filterIt<N | undefined, N>(\n              mapIt(overArray(mutation.addedNodes), addNode),\n              isPresent,\n          ),\n          node => added.push(node),\n      );\n    });\n    if (added.length || removed.length) {\n      updates.send(added, removed);\n    }\n  }\n\n  function addNode(node: Node): N | undefined {\n    if (!isElement(node)) {\n      return;\n    }\n    if (selector && node.matches(selector) && !cache.has(node)) {\n      cache.add(node);\n      return nodeOf(node);\n    }\n    return;\n  }\n\n  function removeNode(node: Node): N | undefined {\n    if (!isElement(node)) {\n      return;\n    }\n    if (!cache.delete(node)) {\n      return;\n    }\n    return nodeOf(node, true);\n  }\n\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport {\n  EventEmitter,\n  eventReceiver,\n  EventReceiver, eventSupply,\n  EventSupply,\n  noEventSupply,\n  OnEvent,\n  onEventBy,\n  ValueTracker,\n} from 'fun-events';\n\nclass AttributesObserver {\n\n  private readonly _emitters = new Map<string, EventEmitter<[string, string | null]>>();\n  private _observer?: MutationObserver;\n\n  constructor(private readonly _bs: BootstrapContext, readonly element: Element) {\n  }\n\n  private get observer(): MutationObserver {\n    if (this._observer) {\n      return this._observer;\n    }\n\n    const Observer: typeof MutationObserver = (this._bs.get(BootstrapWindow) as any).MutationObserver;\n\n    return this._observer = new Observer(mutations => this._update(mutations));\n  }\n\n  observe(name: string, receiver: EventReceiver<[string, string | null]>): EventSupply {\n\n    const self = this;\n    const observer = this.observer;\n    const emitter = this._emitter(name);\n    const rcv = eventReceiver(receiver);\n    const supply = emitter.on({\n      supply: eventSupply(() => {\n        this._emitters.delete(name);\n        observer.disconnect();\n        if (this._emitters.size) {\n          reconnect();\n        } else {\n          this._observer = undefined;\n        }\n      }).needs(rcv.supply),\n      receive: (ctx, newValue, oldValue) => rcv.receive(ctx, newValue, oldValue),\n    });\n\n    observer.disconnect();\n    reconnect();\n\n    return supply;\n\n    function reconnect() {\n      self._update(observer.takeRecords());\n      observer.observe(self.element, {\n        attributes: true,\n        attributeOldValue: true,\n        attributeFilter: [...self._emitters.keys()],\n      });\n    }\n  }\n\n  private _update(mutations: MutationRecord[]) {\n    mutations.forEach(mutation => {\n\n      const attributeName = mutation.attributeName as string;\n      const emitter = this._emitters.get(attributeName);\n\n      if (emitter) {\n        emitter.send(this.element.getAttribute(attributeName) as string, mutation.oldValue);\n      }\n    });\n  }\n\n  private _emitter(name: string): EventEmitter<[string, string | null]> {\n\n    const emitter = new EventEmitter<[string, string | null]>();\n\n    this._emitters.set(name, emitter);\n\n    return emitter;\n  }\n\n}\n\nclass AttributeTracker extends ValueTracker<string | null, string> {\n\n  private readonly _updates = new EventEmitter<[string, string | null]>();\n  readonly on: OnEvent<[string, string | null]>;\n\n  constructor(\n      private readonly _observer: AttributesObserver,\n      private readonly _name: string,\n  ) {\n    super();\n\n    let observeSupply = noEventSupply();\n\n    this.on = onEventBy(receiver => {\n      if (!this._updates.size) {\n        observeSupply = this._observer.observe(\n            _name,\n            (newValue, oldValue) => this._updates.send(newValue, oldValue),\n        );\n      }\n      receiver.supply.needs(observeSupply);\n      this._updates.on(receiver).whenOff(reason => {\n        if (!this._updates.size) {\n          observeSupply.off(reason);\n        }\n      });\n    });\n  }\n\n  get it(): string | null {\n    return this._observer.element.getAttribute(this._name);\n  }\n\n  set it(value: string | null) {\n    this._observer.element.setAttribute(this._name, value as string);\n  }\n\n  done(reason?: any): this {\n    this._updates.done(reason);\n    return this;\n  }\n\n}\n\n/**\n * @internal\n */\nexport class NodeAttributes {\n\n  private readonly _attrs = new Map<string, AttributeTracker>();\n  private readonly _observer: AttributesObserver;\n\n  constructor(bs: BootstrapContext, element: any) {\n    this._observer = new AttributesObserver(bs, element);\n  }\n\n  get(name: string): ValueTracker<string | null, string> {\n\n    const existing = this._attrs.get(name);\n\n    if (existing) {\n      return existing;\n    }\n\n    const created = new AttributeTracker(this._observer, name);\n\n    this._attrs.set(name, created);\n\n    return created;\n  }\n\n}\n","import { ComponentContext, ComponentState, domPropertyPathTo } from '@wesib/wesib';\nimport { EventEmitter, eventSupply, noEventSupply, OnEvent, ValueTracker } from 'fun-events';\n\nclass PropertyTracker<T> extends ValueTracker<T> {\n\n  private readonly _updates = new EventEmitter<[T, T]>();\n  private _supply = noEventSupply();\n\n  constructor(\n      private readonly _element: any,\n      private readonly _key: PropertyKey) {\n    super();\n  }\n\n  get on(): OnEvent<[T, T]> {\n    return this._updates.on;\n  }\n\n  bind(context: ComponentContext) {\n\n    const propertyState = context.get(ComponentState).track(domPropertyPathTo(this._key));\n\n    this._supply = propertyState.onUpdate({\n      supply: eventSupply().whenOff(reason => this._updates.done(reason)),\n      receive: (_ctx, _path, newValue: any, oldValue: any) => this._updates.send(newValue, oldValue),\n    });\n  }\n\n  get it(): T {\n    return this._element[this._key];\n  }\n\n  set it(value: T) {\n    this._element[this._key] = value;\n  }\n\n  done(reason?: any): this {\n    this._supply.off(reason);\n    return this;\n  }\n\n}\n\n/**\n * @internal\n */\nexport class NodeProperties {\n\n  private readonly _props = new Map<PropertyKey, PropertyTracker<any>>();\n  private _context?: ComponentContext<any>;\n\n  constructor(private readonly _element: any) {\n  }\n\n  bind(context: ComponentContext) {\n    this._context = context;\n    this._props.forEach(prop => prop.bind(context));\n  }\n\n  get<T>(key: PropertyKey): ValueTracker<T> {\n\n    const existing = this._props.get(key);\n\n    if (existing) {\n      return existing;\n    }\n\n    const created = new PropertyTracker<any>(this._element, key);\n\n    if (this._context) {\n      created.bind(this._context);\n    }\n    this._props.set(key, created);\n\n    return created;\n  }\n\n}\n","import {\n  BootstrapContext,\n  ComponentClass,\n  ComponentContext,\n  ComponentContext__symbol,\n  ComponentEvent,\n  ElementAdapter,\n} from '@wesib/wesib';\nimport { ValueTracker } from 'fun-events';\nimport { ComponentNode, ElementNode as ElementNode_, ElementNodeList } from './element-node';\nimport { elementNodeList } from './element-node-list.impl';\nimport { NodeAttributes } from './node-attributes.impl';\nimport { NodeProperties } from './node-properties.impl';\n\nconst ElementNode__symbol = /*#__PURE__*/ Symbol('element-node');\n\nclass ElementNode extends ElementNode_ {\n\n  private readonly _attrs: NodeAttributes;\n  private readonly _props: NodeProperties;\n\n  constructor(private readonly _bs: BootstrapContext, readonly element: Element) {\n    super();\n    this._attrs = new NodeAttributes(_bs, element);\n    this._props = new NodeProperties(element);\n    (element as any)[ElementNode__symbol] = this;\n\n    const context = (element as any)[ComponentContext__symbol] as ComponentContext<any> | undefined;\n\n    if (context) {\n      this._bind(context);\n    } else {\n      element.addEventListener('wesib:component', event => this._bind((event as ComponentEvent).context));\n    }\n  }\n\n  get context(): ComponentContext<any> | undefined {\n    return (this.element as any)[ComponentContext__symbol];\n  }\n\n  get parent() {\n\n    const parent = this.element.parentElement;\n\n    return parent != null ? elementNodeOf(this._bs, parent) : null;\n  }\n\n  select(selector: string | ComponentClass<any>, opts?: ElementNode_.SelectorOpts): ElementNodeList<any> {\n    return selectNodes(this._bs, this.element, selector, opts);\n  }\n\n  attribute(name: string): ValueTracker<string | null, string> {\n    return this._attrs.get(name);\n  }\n\n  property<V>(key: PropertyKey): ValueTracker<V> {\n    return this._props.get(key);\n  }\n\n  private _bind(context: ComponentContext) {\n    this._props.bind(context);\n  }\n\n}\n\n/**\n * @internal\n */\nexport function elementNodeOf(bs: BootstrapContext, element: Element, optional?: boolean): ElementNode_.Any {\n\n  const found: ElementNode_.Any = (element as any)[ElementNode__symbol];\n\n  if (optional || found) {\n    return found;\n  }\n\n  return new ElementNode(bs, element) as ElementNode_.Raw;\n}\n\nfunction selectNodes(\n    bs: BootstrapContext,\n    root: Element,\n    selector: string | ComponentClass<any>,\n    opts: ElementNode_.SelectorOpts = {},\n): ElementNodeList<any> {\n\n  const adapter = bs.get(ElementAdapter);\n\n  if (opts.all) {\n    return elementNodeList<ElementNode_.Any>(\n        bs,\n        root,\n        selector,\n        (element, optional) => elementNodeOf(bs, element, optional),\n        opts,\n    );\n  }\n  return elementNodeList<ComponentNode<any>>(\n      bs,\n      root,\n      selector,\n      (element, optional) => {\n        if (adapter(element)) {\n          return elementNodeOf(bs, element, optional) as ComponentNode<any>;\n        }\n        return undefined;\n      },\n      opts,\n  );\n}\n","/**\n * @module @wesib/generic\n */\nimport { BootstrapContext, ComponentContext, FeatureDef, FeatureDef__symbol, StateSupport } from '@wesib/wesib';\nimport { ComponentNode } from './element-node';\nimport { elementNodeOf } from './element-node.impl';\n\nconst ComponentTreeSupport__feature: FeatureDef = {\n  needs: StateSupport,\n  setup(setup) {\n    setup.perComponent({\n      a: ComponentNode,\n      by(context: ComponentContext) {\n        return elementNodeOf(context.get(BootstrapContext), context.element) as ComponentNode;\n      },\n    });\n  },\n};\n\n/**\n * Component tree support feature.\n *\n * Provides a [[ComponentNode]] instance for each component.\n */\nexport class ComponentTreeSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return ComponentTreeSupport__feature;\n  }\n\n}\n"],"names":["BootstrapContext__key","SingleContextKey","BootstrapContext","ContextValues","ContextKey__symbol","bootstrapDefault","provide","context","key","bootstrapContext","get","ComponentFactory__key","ComponentFactory","[object Object]","element","mount","this","mountTo","connected","BootstrapWindow","byDefault","window","DefaultNamespaceAliaser","ctx","document","body","isArray","value","Array","ArraySet","AIterable","super","items","Set","size","Symbol","iterator","next","forEach","item","add","superClassOf","type","satisfying","prototype","Object","getPrototypeOf","superType","constructor","mergeFunctions","first","second","merge","_f","s","args","apply","isElement","node","nodeType","Node","ELEMENT_NODE","MetaAccessor","symbol","hasOwnProperty","undefined","ownDef","own","superDef","of","defs","prevDef","def","defineProperty","configurable","PromiseResolver","promise","Promise","resolve","reject","_resolve","_reject","error","FeatureDef__symbol","FeatureMeta","reduce","prev","needs","has","setup","init","meta","FeatureDef","featureType","define","Feature","FeatureContext_key","FeatureContext","componentType","whenDefined","feature","load","FeatureNeedsError","Error","reason","need","name","FeatureRef","AfterEvent__symbol","read","ComponentDef__symbol","ComponentMeta","componentDefined","ComponentDef","Component","ComponentContext__key","ComponentEventDispatcher__key","dispatch","event","dispatchEvent","on","DomEventDispatcher","ContentRoot","StateUpdater","FnContextKey","valueProvider","noop","ComponentContext__symbol","ComponentContext","updateComponentState","bind","TypeError","contentRoot","newValue","oldValue","ComponentEvent","Event","eventInitDict","target","ComponentMount","component","ElementAdapter","ContextUpKey","opts","defaultElementAdapter","result","seed","adapters","combined","adapter","ElementObserver__key","bsContext","DefaultElementObserver","ElementObserver","callback","mutations","mutation","itsEach","overArray","removedNodes","mountOf","checkConnected","filterIt","addedNodes","MutationObserver","options","observe","childList","ComponentFactory__symbol","componentFactoryOf","factory","CustomElements__key","values","customElements","nsAlias","CustomElements","componentTypeOrName","elementType","isQualifiedName","html__naming","extend","elementDef","extends","componentResolver","ComponentResolver__symbol","DefinitionContext__key","ElementDef","elementExtend","HTMLElement","DefinitionContext","BootstrapContextRegistry__key","BootstrapContextRegistry","ContextRegistry","a","is","newValues","ComponentContextRegistry__key","ComponentContextRegistry","initial","DefinitionContextRegistry__key","DefinitionContextRegistry","PostDefSetup__symbol","postDefSetup","tracker","trackValue","emitter","EventEmitter","onSetup","thru","nextArgs","nextSkip","onAny","superPostDefSetup","send","it","ElementBuilder","definitionContextRegistry_global","componentContextRegistry_global","definitions","components","onComponent","componentContextRegistry_perType","ready","whenReady","cls","definitionContext","createComponentContextRegistry","append","componentFactory","ComponentFactory_","createComponent","registry","elementSuper","createMount","ComponentMount_","elementStatus","el","doc","ownerDocument","contains","componentCreated","DefinitionContext_","once","definitionContextRegistry","seedIn","definitionSetup","perDefinition","spec","perComponent","componentContextRegistry","Element","createElementType","enumerable","status","destructionReason","whenOff","whenDestroyed","sts","whenOn","offSupply","eventSupply","off","ComponentContext_","done","parentNode","parentElement","removeChild","removeElement","ComponentStatus__symbol","writable","proto","prevContext","newComponent","bubbles","doNotAdd","ComponentRegistry","_context","_definitionQueue","definition","push","buildElement","FeatureKey__symbol","FeatureKey","feat","from","keep","preferredFeatureClause","afterEventBy","receiver","origin","source","afterThe","stageId","afterAll","clause","deps","loadFeatureDeps","dig_","request","thru_","loader","to","stage","ownLoader","FeatureLoader","ownSource","rcv","unload","share","lastLoader","preventDuplicateLoader","clauses","preferred","required","afterEach","map","dep","presentFeatureDeps","mapIt","isPresent","down","_down","_stage","SetupFeatureStage","then","after","state","lastStage","id","prevStage","stop","FeatureStage","_stop","action","all","perDep","supply","unloader","unloads","adder","reverse","length","newUnloader","componentRegistry","elementBuilder","onDefinition","tillOff","st","bs","by","onEventBy","receive","onPostDefSetup","newFeatureContext","InitFeatureStage","async","ActiveFeatureStage","FeatureRequest","_requester","_revoke","requester","isClause","_revokeBy","unuse","_uses","revoke","FeatureRequester__key","FeatureRequester","Map","existing","_map","reuse","delete","set","bootstrapComponents","features","bootstrapContextRegistry","create","complete","newNamespaceAliaser","info","_ctx","ldr","whenDown","initBootstrap","AttributePath__root","attributeStateUpdate","updateState","attributePathTo","update","defaultUpdateState","call","path","AttributeRegistrar","AttributeRegistry__key","AttributeRegistry","_MutationObserver","_attrs","attrs","observedAttributes","keys","attributeFilter","records","record","attributeName","getAttribute","attributes","attributeOldValue","AttributesSupport__feature","as","with","componentContext","AttributesSupport","Attribute","propertyKey","descriptor","toString","parseAttributeDef","newDesc","setAttribute","DomPropertyPath__root","ComponentState__key","ComponentState","StateTracker","StateSupport__feature","StateSupport","RenderScheduler__key","RenderScheduler","ElementRender","render","stateTracker","schedule","newSchedule","offline","rendered","stateSupply","onUpdate","scheduleRender","renderElement","newRender","RenderSupport__feature","RenderScheduler_","createRenderScheduler","RenderSupport","scheduled","previouslyScheduled","requestAnimationFrame","Render","defContext","ShadowContentRoot","ShadowDomEvent","shadowRoot","ShadowRootBuilder","ShadowDomSupport__feature","attachShadow","ShadowDomSupport","shadowRootOf","defaultShadowContentDef","mode","ShadowContentDef","componentDef","or","AttachShadow","FetchAgentKey","agent","agents","fetch","agentIdx","agentRequest","onSupplied","nextRequest","combineFetchAgents","defaultFetchAgent","HttpFetchAgent","HttpFetchAborted","HttpFetch","input","Request","responseEmitter","abortController","AbortController","signal","abort","response","customSignal","aborted","catch","EnterPageEvent","cancelable","when","LeavePageEvent","StayOnPageEvent","Navigation__key","Navigation","OnEvent__symbol","go","NavigationAgentKey","combinedAgent","sources","navigate","agentTo","url","nextURL","title","nextTitle","data","nextData","URL","String","baseURI","visited","current","ref","put","NavigationAgent","PageParam__symbol","PageParam","PageParamContext","RoutingHistory__key","NavHistory","_document","_location","location","_history","history","_uid","btoa","Math","random","extractNavData","entry","newEntry","href","_entries","enter","replaceState","_historyState","PageEntry","_lastId","toEntry","page","pushState","_enter","fromEntry","e","_forget","leave","popState","_changeHash","uid","pageId","existingEntry","transfer","oldEntry","forget","NAV_DATA_KEY","_params","_status","handle","param","newHandle","entries","transferred","at","stay","clear","_update","createNavigation","dispatcher","navHistory","onEnter","onLeave","onStay","onEvent","nav","nextEntry","readPage","hashChange","Navigation_","delta","toURL","withParam","applyParams","open","replace","whenLeave","urlTarget","urlTargetOf","doNavigate","prepared","leavePage","finalTarget","t","prepare","NavigationSupport__feature","cachingPageLoader","pageUrl","sup","tracked","onLoad","trackSupply","resp","num","requested","PageLoadAbortError","PageLoadRequests","_navigation","_loader","fragments","fragment","itsIterator","flatMapIt","asis","self","pageSupply","loadSupply","noEventSupply","_add","_transfer","pageLoadRequestsParam","responseReceiver","ok","tag","getElementsByTagName","getElementById","onFragment","req","eventReceiver","list","_page","requests","PageLoadAgent","PageLoadURLModifier","PageLoader","httpFetch","modifyURL","parser","DOMParser","credentials","headers","Headers","Accept","fetchRequest","Accept-Fragment","itsReduction","header","hthvQuote","pageFragmentsRequest","responseTextEmitter","onResponse","text","parsePageDocument","start","responseSupply","parseFromString","hthvParse","v","head","base","querySelector","newBase","createElement","appendChild","pageLoadParam","PageCacheBuster__key","PageCacheBuster","appRevSearchParam","rev","appRev","navigation","urlModifier","searchParams","newRev","reload","importNode","beforeOrImport","importContent","importNodeContent","before","elementClone","tagName","toLowerCase","getAttributeNames","attr","insertBefore","nodeClone","childNodes","pageScriptsAgent","allScripts","externalScripts","scripts","src","querySelectorAll","script","_from","pageStyleAgent","newStyles","oldStyles","oldStylesByHref","firstOldStyle","link","newStyle","oldStyle","itsFirst","nextSibling","style","pageTitleAgent","textContent","PageLoadSupport__feature","buster","PageLoadSupport","ComponentStyleProducer","ComponentStypRender","MultiContextKey","ElementIdClass__NS","NamespaceDef","ElementIdClass","contextValues","aliaser","local","uniqueClassSeq","qualified","css__naming","classList","ComponentStyleProducer__key","hostSelector","_produce","produceBasicStyle","rules","parent","rootSelector","scheduler","operation","buildScheduler","renders","idClass","order","producer","properties","selector","c","buildRender","BasicStyleProducerSupport__feature","ComponentStyleProducer_","produce","BasicStyleProducerSupport","ComponentStypOptions","css","lazyStypRules","produceStyle","doProduceStyle","cssSupply","connectionSupply","ProduceStyle","property","StyleProducerSupport__feature","StyleProducerSupport","Theme__key","Theme","referrer","root","ThemeFactory__key","ThemeFactory","ThemeStyle","SimpleContextKey","providers","provider","isId","prevProvider","hasId","combineStyles","byId","theme","stypRules","Theme_","_styles","stypRoot","styles","_rules","constructed","ThemeFactory_","ThemeSupport__feature","newTheme","ThemeSupport","ElementNode","ComponentNode","ElementNodeList","WATCH_DEEP","subtree","elementNodeList","selectorOrType","nodeOf","deep","updates","iterable","cache","selected","refresh","added","observer","removed","removeNode","addNode","nodeList","firstReceiver","disconnect","onTrackUpdate","track","initialEmitter","afterSupplied","addEventListener","ElementNodeList_","sel","children","matches","select","AttributesObserver","_bs","_observer","Observer","_emitter","_emitters","reconnect","takeRecords","AttributeTracker","ValueTracker","_name","observeSupply","_updates","NodeAttributes","created","PropertyTracker","_element","_key","propertyState","_supply","_path","NodeProperties","_props","prop","ElementNode__symbol","ElementNode_","_bind","elementNodeOf","optional","selectNodes","found","ComponentTreeSupport__feature","ComponentTreeSupport"],"mappings":"+YAMA,MAAaA,EAAsC,IAAIC,EAAmC,qBCa1F,MAAsBC,WAAyBC,EAK7CC,WAAYA,KACV,OAAOJ,GCXX,SAAgBK,GACZC,GAEF,MAAO,CAACC,EAASC,KAEf,MAAMC,EAAmBF,EAAQG,IAAIR,IAErC,OAAOK,IAAYE,EAAmBH,EAAQG,EAAkBD,GAAOC,EAAiBC,IAAIF,IClBhG,MAMMG,GAAsC,IAAIV,EAAmC,qBAQnF,MAAsBW,GAKpBR,WAAYA,KACV,OAAOO,GAqDTE,UAAUC,GAER,MAAMC,EAAQC,KAAKC,QAAQH,GAI3B,OAFAC,EAAMG,WAAY,EAEXH,SC/DEI,GAAmE,IAAIlB,EAChF,SACA,CACEmB,UAAS,IACAC,SCHFC,ICA+D,IAAIrB,EAC5E,iBACA,CACEmB,UAAUG,GACDA,EAAIb,IAAIS,IAAiBK,SAASC,ODH/B,IAAIxB,EAA0C,uCEXhDyB,GAAWC,GACzB,OAAOC,MAAMF,QAAQC,GCFvB,MAAaE,WAAoBC,EAI/BjB,YAAYc,GACVI,QACAf,KAAKgB,MAAiB,MAATL,EAAgB,IAAIM,IAAQP,GAAQC,GAAS,IAAIM,IAAIN,GAAS,IAAIM,IAAI,CAACN,IAGtFA,YACE,OAAQX,KAAKgB,MAAME,MACnB,KAAK,EAAG,OACR,KAAK,EAAG,OAAOlB,KAAKgB,MAAMG,OAAOC,YAAYC,OAAOV,MACpD,QAAS,MAAO,IAAIX,KAAKgB,QAI3BnB,CAACsB,OAAOC,YACN,OAAOpB,KAAKgB,MAAMG,OAAOC,YAG3BvB,OAAOmB,GAEL,OADAA,EAAMM,QAAQC,GAAQvB,KAAKgB,MAAMQ,IAAID,IAC9BvB,KAGTkB,WACE,OAAOlB,KAAKgB,MAAME,KAGpBrB,MAAMmB,GACJ,OAAa,MAATA,EACKhB,KAELU,GAAQM,GACHhB,KAAKwB,OAAOR,GAEdhB,KAAKwB,IAAIR,ICjBpB,SAAgBS,GAAaC,EAAaC,EAAuC,MAAM,IAErF,MAAMC,EAAYC,OAAOC,eAAeJ,EAAKE,WAE7C,GAAiB,MAAbA,EACF,OAGF,MAAMG,EAAYH,EAAUI,YAE5B,OAAIL,EAAWI,GACNA,EAGFN,GAAaM,EAAWJ,YCRjBM,GACZC,EACAC,EACAC,EAAoC,EAACC,EAAIC,IAAMA,IACjD,OAAKJ,EAGAC,EAGE,YAAqBI,GAC1B,OAAOH,EACLF,EAAMM,MAAMxC,KAAMuC,GAClBJ,EAAOK,MAAMxC,KAAMuC,KALdL,EAHAC,ECjCX,SAAgBM,GAAUC,GACxB,OAAOA,EAAKC,WAAaC,KAAKC,aCAhC,MAAsBC,GAIpBjD,YAAsBkD,GACpB/C,KAAK+C,OAASA,EAGhBlD,IAAI6B,GACF,OAAOA,EAAKsB,eAAehD,KAAK+C,QAAWrB,EAAa1B,KAAK+C,aAAUE,EAGzEpD,GAAG6B,GAED,MAAMwB,EAAwBlD,KAAKmD,IAAIzB,GACjCK,EAAYN,GAAaC,GACzB0B,EAAWrB,GAAa/B,KAAKqD,GAAGtB,GAEtC,OAAOmB,EAAUE,EAAWpD,KAAKoC,MAAMgB,EAAUF,GAAUA,EAAUE,EAGvEvD,OAAwB6B,KAAY4B,GAElC,MAAMC,EAAUvD,KAAKmD,IAAIzB,GACnB8B,EAAMD,EAAUvD,KAAKoC,MAAMmB,KAAYD,GAAQtD,KAAKoC,SAASkB,GAWnE,OATAzB,OAAO4B,eACH/B,EACA1B,KAAK+C,OACL,CACEW,cAAc,EACd/C,MAAO6C,IAIN9B,GCrCX,MAAaiC,GAMX9D,cACEG,KAAK4D,QAAU,IAAIC,QAAQ,CAACC,EAASC,KACnC/D,KAAKgE,SAAWF,EAChB9D,KAAKiE,QAAUF,IAInBlE,QAAQc,GACNX,KAAKgE,SAASrD,GAGhBd,OAAOqE,GACLlE,KAAKiE,QAAQC,ICZjB,MAAaC,GAAmChD,OAAO,eAuCvD,MAAMiD,WAAoBtB,GAExBjD,cACEkB,MAAMoD,IAGRtE,SAASyD,GACP,OAAOA,EAAKe,OACR,CAACC,EAAMd,MACLe,MAAO,IAAI1D,GAASyD,EAAKC,OAAOnC,MAAMoB,EAAIe,OAAO5D,MACjD6D,IAAK,IAAI3D,GAASyD,EAAKE,KAAKpC,MAAMoB,EAAIgB,KAAK7D,MAC3C8D,MAAOxC,GAA8CqC,EAAKG,MAAOjB,EAAIiB,OACrEC,KAAMzC,GAA8CqC,EAAKI,KAAMlB,EAAIkB,QAErE,KAMR,MAAMC,GAAqB,IAAIP,GAKlBQ,GAAa,CASxBvB,GAAGwB,GACMF,GAAKtB,GAAGwB,IAAgB,GAUjCzC,MAAK,IAAIkB,IACAqB,GAAKvC,SAASkB,GAcvBwB,OAAM,CAAkBpD,KAAY4B,IAC3BqB,GAAKG,OAAOpD,KAAS4B,ICrFhC,SAAgByB,GAA+BvB,GAC7C,OAAQ9B,GAAYkD,GAAWE,OAAOpD,EAAM8B,GCzB9C,MAQMwB,GAAqB,IAAI/F,EAAiC,mBAKhE,MAAsBgG,WAAuB/F,GAK3CE,WAAYA,KACV,OAAO4F,GAyDTnF,YAA8BqF,GAC5B,OAAOlF,KAAKN,IAAIR,IAAkBiG,YAAYD,GAGhDrF,KAAKuF,GACH,OAAOpF,KAAKN,IAAIR,IAAkBmG,KAAKD,IClE3C,MAAaE,WAA0BC,MAYrC1F,YAAY0E,GACVxD,MACI,2BACEwD,EAAMF,OACR,CAACC,GAAOc,EAASI,EAAQC,MACpBnB,GAAcc,EAAQM,MAAQ,IAAIF,KAAUC,EAAKC,OAAQ,KAClE1F,KAAKuE,MAAQA,GCvBjB,MAAsBoB,GASpBC,IAAKA,KACH,OAAO5F,KAAK6F,MCVhB,MAAaC,GAAqC3E,OAAO,iBAqDzD,MAAM4E,WAAsBjD,GAE1BjD,cACEkB,MAAM+E,IAGRjG,SAA2ByD,GACzB,OAAOA,EAAKe,OACR,CAACC,EAAMd,iDACFc,GACAd,IACHiB,MAAOxC,GAAeqC,EAAKG,MAAOjB,EAAIiB,OACtCK,OAAQ7C,GAAeqC,EAAKQ,OAAQtB,EAAIsB,QACxCM,QAASd,EAAKc,QACR5B,EAAI4B,QAAUR,GAAWxC,MAAMkC,EAAKc,QAAS5B,EAAI4B,SAAWd,EAAKc,QACjE5B,EAAI4B,UAEZ,KAMR,MAAMT,GAAqB,IAAIoB,GACzBC,GAAiC7E,OAAO,qBAKjC8E,GAAe,CAU1B5C,GAAqB6B,GACZP,GAAKtB,GAAG6B,IAAqC,GAWtD9C,MAAK,IAAsBkB,IAClBqB,GAAKvC,SAASkB,GAiBvBzD,OACI6B,KACG4B,GAGL,MAAME,EAAMxD,KAAKoC,SAASkB,GAE1BqB,GAAKG,OAAOpD,EAAM8B,GAElB,MAAM4B,QAAEA,GAAY5B,EAcpB,OAZI4B,GACFR,GAAWE,OAAOpD,EAAM0D,GAE1BR,GAAWE,OAAOpD,EAAM,CACtBgD,KAAM,SAAUnF,GACVA,EAAQ6F,UAAY1D,GAASA,EAAKsB,eAAegD,MACnDnE,OAAO4B,eAAe/B,EAAMsE,GAAkB,CAAErF,MAAO,IACvDpB,EAAQuF,OAAOpD,OAKdA,ICjIX,SAAgBwE,GACZ1C,GAEF,OAAQ9B,GAAYuE,GAAanB,OAAOpD,EAAqB,iBAAR8B,EAAmB,CAAEkC,KAAMlC,GAAQA,GC1B1F,MAAa2C,GAAsC,IAAIlH,EAAmC,qBCE7EmH,GAA8C,IAAInH,EAC3D,6BACA,CACEmB,UAAS,KACA,CACLiG,SAAQ,CAAC9G,EAA2B+G,IAC3B/G,EAAQO,QAAQyG,cAAcD,GAEvCE,GAAE,CAAkBjH,EAA2BmC,IAE1B,IAAI+E,EAAmBlH,EAAQO,SAEhC0G,GAAG9E,OCApBgF,GAA2D,IAAIzH,EACxE,eACA,CACEmB,UAAUG,GACDA,EAAIb,IAAIyG,IAAuBrG,UCOjC6G,GAAqE,IAAIC,EAClF,gBACA,CACExG,UAAWyG,EAAcC,KChBlBC,GAAyC5F,OAAO,qBAa7D,MAAsB6F,WAAiD7H,EAAvEU,kCAgGWG,iBAA4BiH,GAAqBC,KAAKlH,MA3F/DZ,WAAYA,KACV,OAAO+G,GAqGTtG,UAA4BC,GAE1B,MAAMP,EAAUO,EAAQiH,IAExB,IAAKxH,EACH,MAAM4H,UAAU,iCAAiCrH,KAGnD,OAAOP,EAQT6H,kBACE,OAAOpH,KAAKN,IAAIgH,IAoBlB7G,GAAoB6B,GAClB,OAAO1B,KAAKN,IAAI0G,IAA+BI,GAAGxG,KAAM0B,GAU1D7B,cAAcyG,GACZtG,KAAKN,IAAIV,GAAuBU,IAAI0G,IAA+BC,SAASrG,KAAMsG,IAkBtF,SAASW,GAAqDzH,EAAgB6H,EAAaC,GACzFtH,KAAKN,IAAIiH,GAAT3G,CAAuBR,EAAK6H,EAAUC,GCvLxC,MAAaC,WAAuBC,MAQlC3H,YAAY6B,EAAc+F,GACxB1G,MAAMW,EAAM+F,GAMdlI,cACE,OAAOyH,GAAiB3D,GAAGrD,KAAK0H,SCrBpC,MAAsBC,GAmBpBC,gBACE,OAAO5H,KAAKT,QAAQqI,UAMtB9H,cACE,OAAOE,KAAKT,QAAQO,SCkBxB,MAAa+H,GAA6E,IA5D1F,cAqBgCC,EAE9BjI,cACEkB,MAAM,mBAGRlB,KACIkI,GAMF,MAAMC,EAAyBlI,GAAiBA,EAAQiH,IAExD,IAAIkB,EAcJ,OAZAF,EAAKG,KAAK,IAAIC,KAEZ,MAAMC,EAAWD,EAAS9D,OACtB,CAACC,EAAM+D,IAAavI,GAAiBwE,EAAKxE,IAAYuI,EAAQvI,GAC9DkI,GAGJC,EAASG,IAAaJ,EAChBI,EACAL,EAAK3H,UAAU,IAAM4H,IAA0BA,IAGhDlI,GAAWmI,EAAOnI,KC3CvBwI,GAAqC,IAAI1B,EAC3C,mBACA,CACExG,UAAWf,GAAiBkJ,IAE1B,MAAMF,EAAUE,EAAU7I,IAAImI,IAC9B,MAAMW,UAA+BC,GAEnC5I,YAAY6I,GACV3H,MAAM4H,IACJA,EAAUrH,QAAQsH,IAChBC,EACIC,EAAUF,EAASG,cACnBrG,2BAwEpB,SAAiBA,SACf,iBAAOA,EAAKqE,0BAA2BhH,MAzEbiJ,CAAQtG,yBAAOuG,mBAE3BJ,EACIK,EACIJ,EAAUF,EAASO,YACnB1G,IAEJ3C,uCAAWuI,EAAQvI,yBAAUC,4BAAOkJ,qBAG1CP,EAASC,EAAW3I,SAM1B,OAAO0I,GAAY,IAAIF,EAAuBE,OAetD,MAAsBD,WAAwBW,iBAK5ChK,WAAYA,KAGV,OAAOkJ,GAaTzI,QAAQ6H,EAAc2B,GACpBtI,MAAMuI,QAAQ5B,iCAAa2B,IAASE,WAAW,MCvE5C,MAAMC,GAAyCrI,OAAO,qBAK7D,SAAgBsI,GAAqCvE,GAEnD,MAAMwE,EAAWxE,EAAsBsE,IAEvC,IAAKE,EACH,MAAM,IAAIvC,UAAU,6BAA6BjC,KAGnD,OAAOwE,ECRT,MAAMC,GAAoC,IAAI1K,EAC1C,kBACA,CACEmB,UAkDN,SAA8BwJ,GAE5B,MAAMC,EAAwCD,EAAOlK,IAAIS,IAAiB0J,eACpEC,EAAUF,EAAOlK,IAAIY,IA8C3B,OAAO,IA5CP,cAAmCyJ,GAEjClK,OAAOmK,EAA8CC,GACnD,GAAIC,EAAgBF,GAElB,YADAH,EAAe/E,OAAOqF,EAAazE,KAAKsE,EAAqBF,GAAUG,GAIzE,MAAMP,EAAUD,GAAmBO,IAC7BtE,KAAEA,EAAI0E,OAAEA,GAAWV,EAAQW,WAE5B3E,EAID0E,GAAUA,EAAO1E,KACnBmE,EAAe/E,OACXqF,EAAazE,KAAKA,EAAMoE,GACxBG,EACA,CACEK,QAASF,EAAO1E,OAGtBmE,EAAe/E,OAAOqF,EAAazE,KAAKA,EAAMoE,GAAUG,GAXxDM,GAAkBP,GAAqBlG,aAAQb,GAenDpD,YAAYmK,GACV,GAAIE,EAAgBF,GAClB,OAAOH,EAAe1E,YAAYgF,EAAazE,KAAKsE,EAAqBF,IAG3E,MAAMJ,EAAUD,GAAmBO,IAC7BtE,KAAEA,GAASgE,EAAQW,WAEzB,OAAK3E,EAIEmE,EAAe1E,YAAYgF,EAAazE,KAAKA,EAAMoE,IAHjDS,GAAkBP,GAAqBpG,aA9EtD,MAAsBmG,GAQpB3K,WAAYA,KACV,OAAOuK,IAgFX,MAAMa,GAA0CrJ,OAAO,sBAEvD,SAASoJ,GAAkBrF,GACzB,OAAQA,EAAsBsF,MACrBtF,EAAsBsF,IAA6B,IAAI7G,ICjHlE,MAAa8G,GAAuC,IAAIxL,EAAoC,sBCmC/EyL,GAAyD,IAAIzL,EACtE,cACA,CACEY,UAAU+J,GAER,MAAM1E,EAAgB0E,EAAOlK,IAAI+K,IAAwBvF,eACnDQ,KAAEA,EAAI0E,OAAEA,GAAWnE,GAAa5C,GAAG6B,GAEnCyF,EAAmC,CACvCjJ,WACE,OAAO0I,GAAUA,EAAO1I,MAAQkI,EAAOlK,IAAIS,IAAiByK,aAE9DlF,WACE,OAAO0E,GAAUA,EAAO1E,OAI5B,MAAO,CACLA,WACE,OAAOA,GAET0E,aACE,OAAOO,OC3CnB,MAAsBE,WAAkD1L,EAKtEC,WAAYA,KACV,OAAOqL,GA8BTJ,iBACE,OAAOrK,KAAKN,IAAIgL,KCtDpB,MAAMI,GACY,IAAI7L,EAA2C,8BAKjE,MAAa8L,WAAiCC,EAY5CnL,cACEkB,QACAf,KAAKV,QAAQ,CAAE2L,EAAGF,GAA0BG,GAAIlL,OAChDA,KAAK4J,OAAS5J,KAAKmL,YAbrB/L,WAAYA,KACV,OAAO0L,GAKTjL,gBACE,OAAO,IAAIkL,ICdf,MAAMK,GAAgC,IAAInM,EACtC,6BACA,CACEmB,UAAWf,GAAiB,IAAM,IAAIgM,MAO5C,MAAaA,WAAiCL,EAE5C5L,WAAYA,KACV,OAAOgM,GAGTvL,YAAYyL,GACVvK,MAAMuK,ICVV,MAAMC,GAAiC,IAAItM,EACvC,8BACA,CACEmB,UAAWf,GAAiBE,GAAW,IAAIiM,GAA0BjM,MAO3E,MAAaiM,WAAkCR,EAE7C5L,WAAYA,KACV,OAAOmM,GAGT1L,YAAYyL,GACVvK,MAAMuK,ICwBV,MAAMG,GAAqCtK,OAAO,kBAKlD,SAAgBuK,GAA+BxG,GAC7C,GAAIA,EAAclC,eAAeyI,IAC/B,OAAQvG,EAAsBuG,IAGhC,MAAME,EAAUC,IACVC,EAAU,IAAIC,EACdC,EAAyCJ,EAAQ9F,KAAKmG,KAAKvH,GAASA,EAAQwH,EAASxH,GAASyH,KAC9F1F,EAAK2F,EAAMJ,EAASF,GACpB9J,EAAYN,GAAayD,EAAexD,GAAQoE,MAAwBpE,GAE9E,GAAIK,EAAW,CAEb,MAAMqK,EAAoBV,GAAa3J,GAEvCyE,EAAG/B,GAAS2H,EAAkBC,KAAK5H,IAGrC,MAAMwD,EAA0B,CAC9BzB,GAAAA,EACA3G,KAAK4E,GACHoH,EAAQQ,KAAK5H,IAEf5E,MAAM4E,GACJkH,EAAQW,GAAK7H,IAMjB,OAFA5C,OAAO4B,eAAeyB,EAAeuG,GAAsB,CAAE9K,MAAOsH,IAE7DA,ECpDF,MAAMsE,GAAiE,IAAItN,EAC9E,kBACA,CACEmB,UAAWf,IAIjB,SAA2BkJ,GAEzB,MAAMiE,EAAmCjE,EAAU7I,IAAI8L,IACjDiB,EAAkClE,EAAU7I,IAAI2L,IAChDqB,EAAc,IAAIZ,EAClBa,EAAa,IAAIb,EAEvB,MAAO,CACLY,YAAAA,EACAC,WAAAA,EACA9M,aAA+BqF,WAE7B,MAAM1B,EAAMyC,GAAa5C,GAAG6B,GACtB0H,EAAc,IAAId,EACxB,IAAIe,EACJ,MAAMC,EAAQlB,GAAW,GACnBmB,EAAyBD,EAAMjH,KAAKmG,KAAKgB,GAAOA,EAAMf,IAAaC,KACzE,IAAIe,EAEJ,SAASC,IACP,OAAOT,EAAgCU,OAAON,GAoEhD,MAAMO,EAAmB,IAjEzB,cAA+BC,GAE7BnI,oBACE,OAAO+H,EAAkB/H,cAG3B+E,kBACE,OAAOgD,EAAkBhD,YAG3BI,iBACE,OAAO4C,EAAkB5C,WAG3BxK,QAAQC,GACN,GAAIA,EAAQiH,IACV,MAAM,IAAIxB,MAAM,WAAWzF,gCAG7B,MAAMC,EAAQuN,EAAgB,CAC5BL,kBAAAA,EACAL,YAAAA,EACAW,SAAUL,IACVpN,QAAAA,EACA0N,aAAahO,GACJM,EAAQN,GAEjBiO,YAAYlO,GA0BH,IAxBP,cAA6BmO,GAE3BnO,cACE,OAAOA,EAGTW,gBACE,WAAOyN,GAAc7N,GAASwM,GAGhCpM,cAAcS,GACZgN,GAAc7N,GAASwM,GAAK3L,MAG9Bd,iBAEE,MAAM+N,EAAc9N,EACd+N,EAAMD,EAAGE,cAEf,OAAO9N,KAAKE,UAAmB,MAAP2N,GAAeA,EAAIE,SAASH,OAOzD7N,MAKH,OAHAA,EAAMkJ,iBACN+E,GAAiBjO,EAAMR,SAEhBQ,IAkEXkN,EAAoB,IA3DpB,cAAgCgB,GAiB9BpO,sBACEkB,QAEA,MAAMxB,EAAUS,KAEhBA,KAAK+M,UAAYA,EAAUf,KAAK,IAAMhM,MAAMkO,KAE5C,MAAMC,EACF,IAAI3C,GAA0BgB,EAAiC4B,OAAOpO,OAE1EmO,EAA0B7O,QAAQ,CAAE2L,EAAGgD,GAAoB/C,GAAIlL,OAC/DmO,EAA0B7O,QAAQ,CAAE2L,EAAGoC,GAAmBnC,GAAIkC,IAC9DpN,KAAKN,IAAMyO,EAA0BhD,YAAYzL,IACjDmN,EAAmC,IAAIxB,GAAyB8C,EAA0BC,OAAOpO,OAEjG,MAAMqO,EAAsC,CAC1CnJ,oBACE,OAAOA,GAET6H,gBACE,OAAOxN,EAAQwN,WAEjBuB,cAAcC,GACLJ,EAA0B7O,QAAQiP,GAE3CC,aAAaD,GACJ1B,EAAiCvN,QAAQiP,iBAIpD/K,GAAIiB,6BAAQ4J,GACZ3C,GAAaxG,GAAeT,MAAM4J,GA3CpCnJ,oBACE,OAAOA,EAGT0H,kBACE,OAAOA,EAAYpG,GAGrByD,kBACE,MAAM,IAAI1E,MAAM,yFAqClB1F,aACI0O,GAEF,OAAO1B,EAAiCvN,QAAQiP,kBAOpD/K,GAAIsB,8BAASmI,GACbP,EAAYL,KAAKY,GAEjB,MAAMhD,EAcV,SACIgD,EACAL,EACA6B,GAGF,MAAMpE,EAAa4C,EAAkBvN,IAAIgL,IAEzC,MAAMgE,UAAgBrE,EAAWD,OAAO1I,KAKtC7B,cACEkB,QAcAiN,GAZgBV,EAAgB,CAC9BL,kBAAAA,EACAL,YAAAA,EACAW,SAAUkB,EACV3O,QAASE,KACTyN,YAAa3G,EACb0G,aAAehO,GAENuB,MAAMvB,MAQnBK,oBACE8N,GAAc3N,MAAMsM,KAItBzM,uBACE8N,GAAc3N,MAAMsM,MAKxB,OAAOoC,EAzDeC,CAAkB1B,EAAmBL,EAAaM,KAUtE,OARArL,OAAO4B,eAAewJ,EAAmB,cAAe,CACtDvJ,cAAc,EACdkL,YAAY,EACZjO,MAAOsJ,IAGT6C,EAAMR,IAAK,EAEJc,IAkDX,SAASE,GACLL,kBACEA,EAAiBL,YACjBA,EAAWW,SACXA,EAAQzN,QACRA,EAAO2N,YACPA,EAAWD,aACXA,IAWJ,MAAMqB,EAASjD,KACTkD,EAAoBlD,IAE1BiD,EAAOrI,GAAGM,GAAMiI,QAAQvJ,GAAUsJ,EAAkBxC,GAAK,CAAC9G,IAE1D,MACMwJ,EAD4BF,EAAkBjJ,KAAKmG,KAAKxG,GAAUA,EAASyG,EAASzG,EAAO,IAAM0G,KACvDgC,KAE1Ca,EAAuBF,EAAOhJ,KAAKmG,KAAKiD,OAAOA,EAA8BhD,IAAaC,KAC1FgD,EAAiCL,EAAOhJ,KAAKmG,KAC/CiD,IACE,OAAIA,EACF,OAAO/C,IAGT,MAAMiD,EAAYC,IAIlB,OAFAL,EAAQb,KAAK,IAAMiB,EAAUE,OAEtBpD,EAASkD,KAItB,IAAIpP,EACJ,MAAM6J,EAAS2D,EAASpC,YAsDxB,MAAM5L,EAAU,IApDhB,cAA+B+P,GAM7BzP,cACEkB,QALOf,SAAM4J,EAAOlK,IACbM,kBAAewN,EAMtB,MAAMT,EAA6B8B,EAAOhJ,KAAKmG,KAAKiD,GAAOA,EAAMhD,EAASjM,MAAQkM,KAElFlM,KAAK+M,UAAYA,EAAUmB,KAG7BhJ,oBACE,OAAO+H,EAAkB/H,cAG3BpF,cACE,OAAOA,EAGT8H,gBACE,MAAM,IAAIrC,MAAM,kFAGlBxF,YACE,OAAOA,IAAUA,EAAQ0N,EAAYzN,OAGvCE,gBACE,WAAO2O,EAAOvC,GAGhB4C,aACE,OAAOA,EAGTH,cACE,OAAOA,EAGTC,oBACE,OAAOA,EAGTnP,QAAQ2F,GACNqJ,EAAOU,KAAK/J,KAOhBjG,EAAQyP,cAAc,KA0E1B,SAAuBzP,GAErB,MAAMO,QAAEA,EAAOC,MAAEA,GAAUR,EAEvBQ,IACFA,EAAMG,WAAY,GAGpB,MAAMsP,EAAsB1P,EAAQ2P,cAEhCD,GACFA,EAAWE,YAAY5P,IArFK6P,CAAcpQ,IAC1CgO,EAASjO,QAAQ,CAAE2L,EAAGqE,GAAmBpE,GAAI3L,IAoB3CsC,OAAO4B,eAAe3D,EAASiH,GAA0B,CAAEpG,MAAOpB,IAClEsC,OAAO4B,eAAe3D,EAAS8P,GAAyB,CAAEC,UAAU,EAAMlP,MAAOkO,IAjBnFlC,EAAWN,KAAK9M,GAChBqN,EAAYP,KAAK9M,GAEjB,MAAMqI,EA+BV,SAAwClG,EAAyBnC,GAE/D,MAAMuQ,EAAQpO,EAAKE,UACbmO,EAAcD,EAAM/I,IAE1B+I,EAAM/I,IAA4BxH,EAClC,IAEE,MAAMqI,EAAY,IAAIlG,EAAKnC,GAI3B,OAFAsC,OAAO4B,eAAemE,EAAWb,GAA0B,CAAEpG,MAAOpB,IAE7DqI,UAEPkI,EAAM/I,IAA4BgJ,GA7ChBC,CAAa/C,EAAkB/H,cAAe3F,GAUhE,OARAsC,OAAO4B,eAAelE,EAAS,YAAa,CAC1CmE,cAAc,EACdkL,YAAY,EACZjO,MAAOiH,IAGTiH,EAAOvC,KAEA/M,QA8CX,MAAMqQ,GAAwCzO,OAAO,oBAErD,SAASwM,GAAc7N,GACrB,OAAOA,EAAQ8P,IAGjB,SAAS5B,GAAiBzO,GACxBA,EAAQgH,cAAc,IAAIgB,GAAe,kBAAmB,CAAE0I,SAAS,KC7ZzE,MAAMC,GAAWrJ,EAAcC,GCJ/B,MAAaqJ,GAIXtQ,YAA6BuQ,GAAApQ,cAAAoQ,EAFrBpQ,sBAAmC,GAGzCoQ,EAASrD,UAAU,KACjB/M,KAAKqQ,iBAAiB/O,QAAQgP,GAAcA,YACrCtQ,KAAKqQ,mBAIhBxG,qBACE,OAAO7J,KAAKoQ,SAAS1Q,IAAIqK,IAG3BlK,OAAyBqF,GACvBlF,KAAKqQ,iBAAiBE,KAAK,KAEzB,MACM7G,EADiB1J,KAAKoQ,SAAS1Q,IAAI6M,IACViE,aAAatL,GAE3CA,EAAsBsE,IAA4BE,EAEnD1J,KAAK6J,eAAe/E,OAAOI,EAAewE,EAAQO,gBCDxD,MAAMwG,GAAmCtP,OAAO,eAKhD,MAAauP,WAAmB5I,EAE9BjI,UAAUuF,GAER,MAAMuL,EAAOvL,EAEb,OAAOuL,EAAKF,MAAwBE,EAAKF,IAAsB,IAAIC,GAAWtL,IAGhFvF,YAAoBuF,GAClBrE,MAAM,WAAWqE,EAAQM,QAG3B7F,KACIkI,GAMF,OAiCAQ,EAhCIR,EAAKxI,QAAQG,IAAIR,IAiCrB0R,EAhCI7I,EAAKG,KAAK2I,KAAK7E,KAAK8E,IAkCnBC,EAA+BC,IAEpC,IAAIC,EACAC,EAAoCC,IACpCC,EAAmCvN,QAAQC,QAAQ,QAEvD,OAAOuN,EAAS,CACdC,OAAQV,EACRW,KAAMC,GAAgBjJ,EAAWqI,KAChCa,KAAK,EAAGH,QAASA,GAASC,KAAAA,MAC3B,IAAKD,EACH,OAAOH,IAGT,MAAOO,GAAWhK,GAAU4J,EAE5B,GAAII,EAAQtM,UAAY6L,EACtB,OAAOC,EAKT,GAFAD,EAASS,EAAQtM,QAEbsC,IAAWuJ,EAEb,OAAOC,EAAS3I,EAAU7I,IAAIgR,GAAWrN,GAAG4N,IAASU,MACjDC,IACEA,EAAQC,GAAGT,GACXA,EAAUQ,EAAQE,MACXF,IAMf,MAAMG,EAAY,IAAIC,GAAczJ,EAAWmJ,EAASH,GAAMM,GAAGT,GAC3Da,EAAYd,EAASY,GAE3B,OAAOb,EAASH,EACZmB,GAAOD,EAAUC,GAAKnD,QAAQ,KAC5BqC,EAAUW,EAAUI,YAExBC,SAnCGf,CAoCJL,KACFH,KAAK7E,KAKV,WAKE,IAAIqG,EAA+C,KAEnD,OAAoBT,GACdS,IAAeT,EACV1F,KAETmG,EAAaT,EAERA,EAIE3F,EAAuC2F,GAHrC3F,KAlBPqG,IAhDN,IACI/J,EACAqI,GA1BJ,SAASE,MAA0ByB,GAEjC,IACIC,EADAC,GAAW,EAGf,IAAK,MAAMnB,KAAUiB,EACnB,OAAQjB,EAAO,IACb,IAAK,KACHmB,GAAW,EACND,IACHA,EAAYlB,GAEd,MACF,IAAK,MACHkB,EAAYlB,EACZ,MACF,IAAK,QACHmB,GAAW,EAIjB,OAAOA,EAAWD,OAAYvP,EA4EhC,SAASuO,GACLjJ,EACAqI,GAEF,OAAOA,EAAKC,KAAKY,KAAKH,IACpB,IAAKA,EACH,OAAOH,IAGT,OAAO3N,IAAEA,IAAS8N,EACZ/M,EAAQ,IAAI1D,GAAS2C,EAAIe,OAE/B,OAAKA,EAAMrD,KAIJwR,KAAanO,EAAMoO,IAAIC,GAAOrK,EAAU7I,IAAIgR,GAAWrN,GAAGuP,MAC5D/B,KAAKc,MAAMkB,IAJP1B,MAQb,SAAS0B,MAAkCtB,GACzC,OAAOtF,KACA/C,EACC4J,EAAMvB,EAAMqB,GAAOA,EAAI,IACvBG,IAQV,MAAaf,GAOXnS,YACa0I,EACAmJ,EACAH,GAFAvR,eAAAuI,EACAvI,aAAA0R,EACA1R,UAAAuR,EALJvR,WAAQ4L,GAAW,GAO1B5L,KAAKgT,KAAO,IAAInP,QAAQC,GAAW9D,KAAKiT,MAAQnP,GAChD9D,KAAKkT,OAASrP,QAAQC,QAAQ,IAAIqP,GAAkBnT,OAGtD8R,YACE,OAAO9R,KAAKkT,OAAOE,KAAKtB,GAASA,EAAMuB,OAGzCvG,YACE,OAAO9M,KAAKsT,MAAMhH,GAGpBzM,GAAGuR,GAED,MAAMmC,EAAYvT,KAAKkT,OAIvB,OAFAlT,KAAKkT,OAAS9B,EAAQgC,KAAKI,GAAMD,EAAUH,KAAKtB,GAASA,EAAM0B,OAExDxT,KAGTH,oBACSG,KAAKkT,OAASlT,KAAKkT,OAAOE,KAAKtB,GAASA,EAAMrN,UAGvD5E,mBACSG,KAAKkT,OAASlT,KAAKkT,OAAOE,KAAKtB,GAASA,EAAMpN,SAGvD7E,eAEE,MAAM4T,EAAYzT,KAAKkT,cAEhBlT,KAAKkT,OAEZ,MAAMpB,QAAc2B,EACdrC,QAAgBU,EAAM4B,OAI5B,OAFA1T,KAAKiT,QAEE7B,GAQX,MAAeuC,GAIb9T,YACa+R,EACQgC,EAA0B,KAAM/P,QAAQC,YADhD9D,YAAA4R,EACQ5R,WAAA4T,EAGrB/T,aACE,OAAOG,KAOTH,OACE,OAAOG,KAAK4T,QAAQR,KAAK,IAAMpT,KAAKqT,OAG5BxT,OAAOgU,GAEf,MAAMtC,KAAEA,GAASvR,KAAK4R,OAEtB,OAAO/N,QAAQiQ,IAAIvC,EAAKoB,IAAIC,GAAOiB,EAAOjB,MAK9C,MAAMO,WAA0BQ,GAE9BN,YACE,MAAO,OAGTxT,4BACQG,KAAK+T,OAAOnC,GAAUA,EAAOnN,SAEnC,MAAM8D,UAAEA,EAAWmJ,SAASlO,IAAEA,IAAUxD,KAAK4R,QACtCrS,EAASyU,GAoEpB,SACIzL,EACAqJ,GAGF,MAAMqC,EF7VR,WAEE,MAAMC,EAA0B,GAChC,IAAI1S,EAAO2S,IAET,MAAMhC,EAASgC,IAIf,OAFAD,EAAQ3D,KAAK4B,GAENA,GAWT,MAAO,CACL6B,OAVa5E,EAAY,KACzB5N,EAAM0O,GACNrH,EACIC,EAAUoL,GAASE,UACnBjC,GAAUA,KAEd+B,EAAQG,OAAS,IAKjB7S,IAAI2S,GACK3S,EAAI2S,IEsUEG,GACjB,IAAIC,EACJ,MAAMpG,EAA4B5F,EAAU7I,IAAI8L,IAC1CiD,EAA2BlG,EAAU7I,IAAI2L,IACzCkC,EAAW,IAAIvC,EAAgCzC,GAC/CiM,EAAiBjM,EAAU7I,IAAI6M,IAC/BkI,EAAeD,EAAe9H,YAAYlG,GAAGkO,QAAQT,EAASD,QAC9DpH,EAAc4H,EAAe7H,WAAWnG,GAAGkO,QAAQT,EAASD,QA8DlE,MAAO,CAAC,IA5DR,cAAsB/O,GAKpBpF,cACEkB,QAJOf,SAAMuN,EAASpC,YAAYzL,IAMlC,MAAMqN,EAAuCsE,EAAS,CACpDsD,GAAI/C,EAAO0B,MACXsB,GAAIhJ,IAA+BiJ,GAAGtM,EAAUwE,aAC/Cf,KACC,EAAG2I,IAAK7H,GAAQ8H,IAAKA,MAAUA,GAAM9H,EAAQb,EAASjM,MAAQkM,KAGlElM,KAAK+M,UAAYA,EAAUmB,KAC3BX,EAASjO,QAAQ,CAAE2L,EAAGhG,GAAgBiG,GAAIlL,OAC1CuU,EAAoB,IAAIpE,GAAkBnQ,MAG5CoF,cACE,OAAOwM,EAAOF,QAAQtM,QAGxBqP,mBACE,OAAOA,EAGT7H,kBACE,OAAOA,EAGT/M,QACI0O,GAEF,OAAO0F,EAASzS,IAAI,IAAM+G,EAAU7I,IAAIqL,IAA0BzL,QAAQiP,IAG5E1O,cACI0O,GAEF,OAAO0F,EAASzS,IAAI,IAAM2M,EAA0B7O,QAAQiP,IAG9D1O,aACI0O,GAEF,OAAO0F,EAASzS,IAAI,IAAMiN,EAAyBnP,QAAQiP,IAG7D1O,gBAAkCqF,GAChC,OJhaN,SACIA,EACA+O,GAGF,MAAMzN,GAAEA,GAAOkF,GAAaxG,GAE5B,OAAO4P,EAAU9D,IACfxK,EAAG,CACDwN,OAAQhD,EAASgD,OAAOzP,MAAM0P,EAASD,QACvCnU,QAAQU,EAAKkE,GAEX,MAAMsI,EAAYtI,EAAMsI,UAAU2H,QAAQT,EAASD,QAEnDhD,EAAS+D,QAAQxU,EAAK,CACpB2E,oBACE,OAAOT,EAAMS,eAEf6H,gBACE,OAAOA,GAETuB,cAAcC,GACL0F,EAASzS,IAAI,IAAMiD,EAAM6J,cAAcC,IAEhDC,aAAaD,GACJ0F,EAASzS,IAAI,IAAMiD,EAAM+J,aAAaD,WIuY5CyG,CAAe9P,EAAe+O,GAGvCpU,OAAyBqF,GACvBqP,EAAkBzP,OAAOI,KAKN+O,EAASD,QA9IJiB,CAAkB1M,EAAWvI,KAAK4R,QAI5D,oBAFApO,GAAIiB,6BAAQlF,GAEL,IAAI2V,GACPlV,KAAK4R,OACLrS,EACA4V,SAAYnB,EAAO3E,OAIzBxP,OACE,OAAOG,KAAKyE,QAAQ2O,KAAKtB,GAASA,EAAMpN,SAK5C,MAAMwQ,WAAyBvB,GAM7B9T,YACIyT,EACiBlD,EACjBsD,GAEF3S,MAAMuS,EAAOI,GAHM1T,cAAAoQ,EANrBiD,YACE,MAAO,QAWTxT,cACE,OAAOG,KAGTH,2BACQG,KAAK+T,OAAOnC,GAAUA,EAAOlN,QAEnC,MAAQgN,SAASlO,IAAEA,IAAUxD,KAAK4R,OAIlC,oBAFApO,GAAIkB,4BAAO1E,KAAKoQ,UAET,IAAIgF,GAAmBpV,OAKlC,MAAMoV,WAA2BzB,GAE/BN,YACE,MAAO,OAGTxT,YAAYyE,GACVvD,MAAMuD,EAAKsN,OAAQ,IAAMtN,EAAKoP,QAC9BpP,EAAKsN,OAAO0B,MAAMhH,IAAK,EAGzBzM,cACE,OAAOG,KAGTH,aACE,OAAOG,MCjVX,MAAaqV,GAKXxV,YACqByV,EACRlQ,EACDmQ,GAFSvV,gBAAAsV,EACRtV,aAAAoF,EACDpF,aAAAuV,EALJvV,WAAQ,EAOdA,KAAKwD,IAAMoB,GAAWvB,GAAG+B,GAG3BvF,QAAQ0S,GAEN,MAAMiD,EAAYxV,KAAKsV,YACjB/H,SAAEA,GAAaiI,EACfC,EAA0B,CAACzV,KAAM,KAAMA,KAAKoF,SA+BlD,OA7BApF,KAAK0V,UAAUnI,EAASjO,QAAQ,CAC9B2L,EAAGyF,GAAWrN,GAAGrD,KAAKoF,SACtB8F,GAAIuK,KAGN,IAAI5U,GAASb,KAAKwD,IAAIgB,KAAKlD,QAAQ8D,IAEjC,MAAMkM,EAA4B,CAACtR,KAAM,MAAOoF,GAEhDpF,KAAK0V,UAAUnI,EAASjO,QAAQ,CAAE2L,EAAGyF,GAAWrN,GAAG+B,GAAU8F,GAAIoG,KAGjE,MAAMI,EAAU8D,EAAU9D,QAAQtM,EAAS,IAAImN,EAASjB,IAExDtR,KAAK0V,UAAU,IAAMhE,EAAQiE,WAG/B,IAAI9U,GAASb,KAAKwD,IAAIe,OAAOjD,QAAQ8D,IAEnC,MAAMkM,EAA4B,CAACtR,KAAM,QAASoF,GAE5CsM,EAAU8D,EAAU9D,QAAQtM,EAAS,IAAImN,EAASjB,IAExDtR,KAAK0V,UAAU,IAAMhE,EAAQiE,SAC7B3V,KAAK0V,UAAUnI,EAASjO,QAAQ,CAAE2L,EAAGyF,GAAWrN,GAAG+B,GAAU8F,GAAIoG,OAGnEtR,KAAK4V,MAAQ,EAEN5V,KAGTH,MAAM0S,GACJ,IAAKvS,KAAK4V,MACR,MAAM,IAAItQ,GAAkBiN,EAAQI,IAAI,GAAIvN,QAAAA,GAAWI,EAAQC,KAAU,CAACL,EAASI,EAAQC,KAK7F,QAFEzF,KAAK4V,MAEA5V,KAGTH,UACSG,KAAK4V,OACV5V,KAAKuV,UAID1V,UAAUgW,GAChB7V,KAAKuV,QAAUtT,GAAe4T,EAAQ7V,KAAKuV,UCjF/C,MAAMO,GAAsC,IAAI7W,EAC5C,oBACA,CACEmB,UAAWf,GAAiBE,GAAW,IAAIwW,GAAiBxW,MAOlE,MAAawW,GASXlW,YAAYN,GAFKS,UAAO,IAAIgW,IAG1BhW,KAAKuN,SAAWhO,EAAQG,IAAIqL,IAR9B3L,WAAYA,KACV,OAAO0W,GAUTjW,QAAQuF,EAAgBmN,EAAwC,IAE9D,MAAM0D,EAAWjW,KAAKkW,KAAKxW,IAAI0F,GAE/B,GAAI6Q,EACF,OAAOA,EAASE,MAAM5D,GAGxB,MAAMb,EAAU,IAAI2D,GAAerV,KAAMoF,EAAS,IAAMpF,KAAKkW,KAAKE,OAAOhR,IAIzE,OAFApF,KAAKkW,KAAKG,IAAIjR,EAASsM,GAEhBA,EAAQA,QAAQa,IChB3B,SAAgB+D,MAAuBC,GAErC,MAAMC,EAA2BzL,GAAyB0L,UACpDhX,iBAAEA,EAAgBiX,SAAEA,GAe5B,SAAuBF,GAErB,MAAM1E,EAAQlG,KACRhC,EAAS4M,EAAyB5M,OAwGxC,MAAMnK,EAAmB,IAtGzB,cAAsBP,GAKpBW,cACEkB,QAJOf,SAAM4J,EAAOlK,IAMpB,MAAMqN,EAAyC+E,EAAMjM,KAAKmG,KACtD1J,GAAKA,EAAI2J,EAASjM,MAAQkM,KAG9BlM,KAAK+M,UAAYA,EAAUmB,KAC3BsI,EAAyBlX,QAAQ,CAAE2L,EAAG3K,GAAyBuU,GAAI8B,IACnEH,EAAyBlX,QAAQ,CAAE2L,EAAG/L,GAAkBgM,GAAIlL,OAG9DH,kBAAoCqF,GAGlC,aAFM,IAAIrB,QAAQC,GAAW9D,KAAK+M,UAAUjJ,UACtC9D,KAAKN,IAAIqK,IAAgB5E,YAAYD,GACpCuE,GAAmBvE,GAG5BrF,KAAKuF,GAOH,MAAMyJ,EAASkC,EAA4BC,IAEzC,MAAMU,EAAUjS,EAAiBC,IAAIqW,IAAkBrE,QAAQtM,GACzDwR,EAAOhL,EAAwB,CACnCiD,OAAQ,CACNzJ,QAAAA,EACA0H,OAAO,KAIX9M,KAAKN,IAAIgR,GAAWrN,GAAG+B,GAAvBpF,CAAiC,CAC/BgU,OAAQhD,EAASgD,OACjBnU,QAAQgX,EAAMC,GAIZ,MAAMlF,EAASkF,EAEfF,EAAKtK,GAAK,CACRuC,OAAQ,CACNzJ,QAASwM,EAAOF,QAAQtM,QACxB0H,MAAO8E,EAAO9E,OAEhBkG,KAAMpB,EAAOoB,MAEVpB,EAAO9E,OACV8E,EAAOlN,OAAO0O,KAAK,KACjBwD,EAAKtK,GAAK,CACRuC,OAAQ,CACNzJ,QAASwM,EAAOF,QAAQtM,QACxB0H,OAAO,GAETkG,KAAMpB,EAAOoB,WAKpBjE,QAAQ,KACT2C,EAAQiE,UAIViB,EAAK/Q,KAAKmL,KACToB,QAEH,IAAI2E,EACJ,MAAM/C,EAASnF,EAAO,EAAGmE,KAAAA,KAAW+D,EAAW/D,GACzCnN,EACFgJ,EAAOgC,KAAK7E,KAAK4K,GAAQA,EAAK/H,QAAQ6F,QAAQV,GAmBlD,OAAO,IAjBP,cAAkBrO,GAEhBE,WACE,OAAOA,EAGTmN,WACE,OAAO+D,EAGTlX,QAAQ2F,GAEN,OADAwO,EAAO3E,IAAI7J,GACJuR,MAYf,MAAO,CACLtX,iBAAAA,EACAI,WACEiS,EAAMxF,OA/H6B0K,CAAcR,GAC/CpR,EAA8B,IAApBmR,EAASlC,OAAekC,EAAS,IAUzBhS,EAV+CgS,EAWhE3R,GAAWE,OAAO,QAA2B,CAAEP,MAAAA,KADxD,IAA0BA,EAHxB,OALA9E,EAAiBC,IAAIqW,IAAkBrE,QAAQtM,GAC/C3F,EAAiBC,IAAIgR,GAAWrN,GAAG+B,GAAnC3F,CAA6CmS,IAC3CA,EAAQlN,OAAO0O,KAAKsD,KAGfjX,EC1BT,MAAawX,GAAoC9V,OAAO,aCGxD,SAAgB+V,GACZxR,EACAyR,GAAgE,GAClE,IAAoB,IAAhBA,EACF,OAAOrQ,EAET,IAAoB,IAAhBqQ,GAA+C,mBAAhBA,EAA4B,CAE7D,MAAM3X,EDMV,SAAgCkG,GAC9B,MAAO,CAACuR,GAAqBvR,GCPf0R,CAAgB1R,GACtB2R,GAAqD,IAAhBF,EAAuBG,GAAqBH,EAEvF,OAAO,SAAmB9P,EAAUC,GAClC+P,EAAOE,KAAKvX,KAAMR,EAAK6H,EAAUC,IAGrC,OAAO,SAAmBD,EAAUC,GAClCN,GAAiB3D,GAAGrD,MAAMmX,YAAYA,EAAa9P,EAAUC,IAIjE,SAASgQ,GAELE,EACAnQ,EACAC,GACFN,GAAiB3D,GAAGrD,MAAMmX,YAAYK,EAAMnQ,EAAUC,GCTxD,MAAamQ,GACK,IAAIxY,EAAqC,uBCvBrDyY,GAAuC,IAAIzY,EAAoC,sBAKrF,MAAa0Y,GASX9X,YAAYU,GAFKP,YAA0D,GAGzEA,KAAK4X,kBAAoBrX,EAAIb,IAAIS,IAAiBiJ,iBARpDhK,WAAYA,KACV,OAAOsY,GAUT7X,IAAI6F,EAAcgD,GAChB1I,KAAK6X,OAAOnS,GAAQzD,GAAiDjC,KAAK6X,OAAOnS,GAAOgD,GAG1F7I,OAAOoK,GAEL,MAAM6N,EAAQ9X,KAAK6X,OACbE,EAAqBlW,OAAOmW,KAAKF,GAElCC,EAAmB1D,SAIxBxS,OAAO4B,eAAewG,EAAa,qBAAsB,CACvDvG,cAAc,EACdkL,YAAY,EACZjO,MAAOoX,IAETlW,OAAO4B,eAAewG,EAAYrI,UAAW,2BAA4B,CACvE8B,cAAc,EACdkL,YAAY,EACZjO,MAAO,SAAU+E,EAAc4B,EAAyBD,GACrDyQ,EAAMpS,GAAc6R,KAAKvQ,GAAiB3D,GAAGrD,MAAM4H,UAAWP,EAAUC,OAK/EzH,MAAME,GAEJ,MAAMD,EAAUC,EAAMD,QAChBgY,EAAQ9X,KAAK6X,OACbI,EAAkBpW,OAAOmW,KAAKF,GAE/BG,EAAgB5D,QAIJ,IAAIrU,KAAK4X,kBACtBM,GAAWA,EAAQ5W,QACf6W,IAEE,MAAMC,EAAgBD,EAAOC,cAE7B,OAAQN,EAAMM,GAAuBb,KACjCvQ,GAAiB3D,GAAGvD,GAAS8H,UAC7B9H,EAAQuY,aAAaD,GACrBD,EAAO7Q,aAGZgC,QAAQxJ,EAAS,CACxBwY,YAAY,EACZL,gBAAAA,EACAM,mBAAmB,KC1EzB,MAIMC,GAAyC,CAC7C3Y,MAAM4E,GACJA,EAAM6J,cAAc,CAAEmK,GAAId,KAC1BlT,EAAM6J,cAAc,CAClBrD,EAAGwM,GACH5C,GAAGtH,GACM,CAAmB7H,EAAcgD,IACpC6E,EAAS/L,IAAIkE,EAAMgD,GAEzBgQ,KAAM,CAACf,MAETlT,EAAMgQ,aAAaxH,IAEjBA,EAAkBF,UAAU,EAAG9C,YAAAA,KAAkBgD,EAAkBvN,IAAIiY,IAAmB7S,OAAOmF,MAEnGxF,EAAMmI,YAAY+L,IAEhB,MAAM5Y,EAAQ4Y,EAAiB5Y,MAE3BA,GAEF4Y,EAAiBjZ,IAAIiY,IAAmB5X,MAAMA,OActD,MAAa6Y,GAEXzU,WAAYA,MACV,OAAOqU,ICpBX,SAAgBK,GACZrV,GAEF,MAAO,CAAIkE,EAAyBoR,EAA8BC,KAEhE,MAAMrT,KAAEA,EAAIyR,YAAEA,GCtBlB,SACIzP,EACAoR,EACA/Q,GAEF,IAAIrC,EACAyR,EAEJ,GAAoB,iBAATpP,EACTrC,EAAOqC,EACPoP,EAAcD,GAAqBxR,OAC9B,CACL,GAAIqC,GAAQA,EAAKrC,KACfA,EAAOqC,EAAKrC,SACP,CAAA,GAA2B,iBAAhBoT,EAChB,MAAM,IAAI3R,UACN,gEACA,GAAGO,EAAO1F,YAAY0D,QAAQoT,EAAYE,cAE9CtT,EAAOoT,EAGT3B,EAAcD,GAAqBxR,EAAMqC,GAAQA,EAAKoP,aAGxD,MAAO,CAAEzR,KAAAA,EAAMyR,YAAAA,GDHiB8B,CAAkBvR,EAAQoR,EAAatV,GAC/D0B,EAAgBwC,EAAO1F,YAE7B4C,GAAWE,OAAOI,EAAe,CAAEX,MAAOqU,KAC1C3S,GAAanB,OACTI,EACA,CACErF,OAAOoN,GACLA,EAAkBvN,IAAI+X,GAAtBxK,CAA0CvH,EAAMyR,MAIxD,MAAM+B,EAAkD,CACtDrZ,MACE,OAAOmH,GAAiB3D,GAAGrD,MAAMF,QAAQuY,aAAa3S,IAExD7F,IAA2BwH,GACzBL,GAAiB3D,GAAGrD,MAAMF,QAAQqZ,aAAazT,EAAM2B,KAIzD,GAAkB,MAAd0R,EAMJ,OAAOG,EAJLrX,OAAO4B,eAAeiE,EAAQoR,EAAaI,IE3CjD,MAAaE,GAAsCjY,OAAO,gBCP1D,MAGMkY,GAAoC,IAAIpa,EAAiC,mBAO/E,MAAaqa,WAAuBC,EAElCna,WAAYA,KACV,OAAOia,ICbX,MAIMG,GAAoC,CACxC3Z,MAAM4E,GACJA,EAAM+J,aAAa,CACjBvD,EAAGqO,GACHzZ,GAAGN,GAED,MAAM+T,EAAQ,IAAIgG,GAIlB,OAFA/Z,EAAQyP,cAAcxJ,GAAU8N,EAAM/D,KAAK/J,IAEpC8N,KAGX7O,EAAM+J,aAAa,CACjBvD,EAAGtE,GACHkO,GAAGvB,GACMA,EAAM+D,OAEfqB,KAAM,CAACY,QAkBb,MAAaG,GAEXtV,WAAYA,MACV,OAAOqV,IC3CX,MAEME,GAAqC,IAAIza,EAAkC,oBASjF,MAAsB0a,GAKpBva,WAAYA,KACV,OAAOsa,ICKX,MAAaE,GAAgB,CAW3B/Z,OACIN,EACAsa,EACArW,EAAiB,IAGnB,MAAMsW,EAAeva,EAAQG,IAAI4Z,IAC3BS,EAAWxa,EAAQG,IAAIia,IAAiBK,eAExCC,QAAEA,GAAYzW,EACpB,IAAI0W,GAAW,EACf,MAAMC,EAAcL,EAAaM,SAAS,KACpCH,GAAW1a,EAAQW,UACrBma,IAEAH,GAAW,IAiBf,SAASG,IACPH,GAAW,EACXH,EAASA,SAASO,GAGpB,SAASA,IACP,OAAS,CAEP,MAAMC,EAAYV,IAElB,GAAIU,IAAcV,GAA+B,mBAAdU,EACjC,MAGFV,EAASU,GA3BTN,EACFI,IAEA9a,EAAQ2P,OAAO,KACRgL,GACHG,MAEDtL,QAAQvJ,IACT2U,EAAY9K,IAAI7J,GAChB0U,GAAW,MCxDbM,GAAqC,CACzC3a,MAAM4E,GACJA,EAAMnF,QAAQ,CACZ2L,EAAGwP,GACH5F,GAAI6F,GACJhC,KAAM,CAACvY,QAYb,MAAawa,GAEXxW,WAAYA,MACV,OAAOqW,IAKX,SAASE,GAAsBra,GA6B7B,OAAO,IA3BP,cAA8Boa,GAE5B5a,cAEE,IAAI+a,EAAwB9T,EAmB5B,OAAO,IAjBP,MAEEjH,SAASga,GAEP,MAAMgB,EAAsBD,EAE5BA,EAAYf,EACRgB,IAAwB/T,GAC1BzG,EAAOya,sBAAsB,KAC3BF,IACAA,EAAY9T,QCrB1B,SAAgBiU,GAAiCvX,GAC/C,MAAO,CAACkE,EAAyBoR,KAE/B,MAAM5T,EAAgBwC,EAAO1F,YAE7BiE,GAAanB,OACTI,EACA,CACErF,OAAOmb,GACLA,EAAWpO,YAAY+L,IACrBA,EAAiB5L,UAAU,KAEzB,MAAMnF,EAAY+Q,EAAiB/Q,UAC7BiS,EAAoBjS,EAAUkR,GAAa5R,KAAKU,GAEtDgS,GAAcC,OAAOlB,EAAkBkB,EAAQrW,QAIrD4B,QAAS,CACPb,MAAO,CAACkV,GAAckB,QC/BlC,MAAaM,GACK,IAAIhc,EAAoC,uBCP1D,MAAaic,WAAuB1T,MAQlC3H,YAAY6B,EAAc+F,GACxB1G,MAAMW,EAAM+F,GAMd0T,iBACE,OAAQnb,KAAK0H,OAAmByT,YCIpC,MAAaC,GACK,IAAIxU,EAA2E,uBC1B3FyU,GAAwC,CAC5Cxb,MAAM4E,GACJA,EAAMnF,QAAQ,CAAE2L,EAAGmQ,GAAmBlQ,GAAIoQ,OAW9C,MAAaC,GAEXpX,WAAYA,MACV,OAAOkX,IAKX,SAASC,GAAa/b,EAA2BmF,GAE/C,MACMyW,EAWR,SAAsBrb,EAAkB4E,GAEtC,MAAMuR,EAAWnW,EAAQqb,WAEzB,GAAIlF,EAEF,OAAOA,EAET,GAAI,iBAAkBnW,EACpB,OAAOA,EAAQwb,aAAa5W,GAG9B,OAvBmB8W,CADHjc,EAAQO,QACiB4E,GAEzC,GAAIyW,EAGF,OAFCA,EAAmBpU,IAA4BxH,EAChDA,EAAQgH,cAAc,IAAI2U,GAAe,uBAAwB,CAAEjL,SAAS,KACrEkL,EClCX,MAcMM,GAA4C,CAAEC,KAAM,QAK7CC,GAAmB,CAa9BC,aAAY,CAAmBpY,EAAwBiY,MAC9C,CACL5b,MAAM4E,GACJA,EAAM+J,aACF,CACEvD,EAAGgQ,GACHpG,GAAGtU,GACMA,EAAIb,IAAI0b,GAAR7a,CAA2BA,EAAKiD,KAI/CiB,EAAM+J,aAAa,CACjBvD,EAAGvE,GACHmO,GAAGtV,GACMA,EAAQG,IAAIub,GAAmB,CAAEY,GAAI,UAIlDzW,QAAS,CAAEb,MAAOgX,OClCxB,SAAgBO,GACZtY,GAEF,OAAQ9B,IACNuE,GAAanB,OACTpD,EACAia,GAAiBC,aAAapY,KCPtC,MAAauY,WACDjU,EAGVjI,YAAY6F,GACV3E,MAAM2E,GAGR7F,KACIkI,GAOF,IAAIiU,EAMJ,OAJAjU,EAAKG,KAAK,IAAI+T,IAAWD,EAmB7B,SAAsDC,GACpD,MAAO,CAAC5a,EAAMqQ,KAEZ,MAAMwK,EAAmE,CAACC,EAAUC,KAElF,MAAMJ,EAAQC,EAAOE,GAErB,OAAKH,EAIEK,EACHL,EACI,CAACM,EAAcF,IAAiBF,EAAMC,EAAW,EAAGG,GACpDF,IANC/a,EAAK+a,IAWhB,OAAOF,EAAM,EAAGxK,IAtCiB6K,CAAmBN,IAEnClU,EAAK3H,UAAU,IAAM,CAACiB,EAAMqQ,IAAYsK,EAAM3a,EAAMqQ,KAElD8K,IAKvB,SAASA,GACLnb,EACAqQ,GAEF,OAAOrQ,EAAKqQ,GCQd,MAAa+K,GACK,IAAIV,GAA0B,oBCrD1CW,GAAmB,GC8BzB,MAAaC,GACK,IAAI/V,EAClB,aACA,CACExG,UAAWf,ID7BjB,SAA6BE,GAE3B,MAAMc,EAASd,EAAQG,IAAIS,IACrB6b,EAAQzc,EAAQG,IAAI+c,IAE1B,MAAO,CAACG,EAAOlY,IAASsX,EAAME,EAAO,IAAIW,QAAQD,EAAOlY,IAExD,SAASwX,EAAMxK,GACb,OAAOoD,EAAU9D,IAEf,MAAM8L,EAAkB,IAAIhR,EAC5B,IAAIkI,EAEJ,GAAI,oBAAqB3T,EAAQ,CAE/B,MAAM0c,EAAkB,IAAK1c,EAAe2c,iBACtCC,OAAEA,GAAWF,EAEnB/I,EAAS5E,EAAY5J,IACfA,IAAWkX,IACbK,EAAgBG,UAGpBlM,EAASgD,OAAOjF,QAAQ,IAAMiF,EAAO3E,IAAIqN,KAAmBnY,MAAMyP,GAClE8I,EAAgBtW,GAAG,CACjBwN,OAAAA,EACAnU,QAAQU,EAAK4c,GACXnM,EAAS+D,QAAQxU,EAAK4c,MAI1B,MAAMC,EAAe1L,EAAQuL,OAEzBG,IACF,IAAI3W,EAAmB2W,GAAc5W,GAAG,SAAS0H,KAAK,IAAM6O,EAAgBG,SACxEE,EAAaC,SACfN,EAAgBG,SAIpBxL,EAAU,IAAImL,QAAQnL,EAAS,CAAEuL,OAAAA,SAEjCjJ,EAAS8I,EAAgBtW,GAAGwK,GAG9B3Q,EAAO6b,MAAMxK,GACR0B,KAAK+J,IACJL,EAAgBzQ,KAAK8Q,GACrBnJ,EAAO3E,QAERiO,MAAM9X,GAAUwO,EAAO3E,IAAI7J,YEtBtC,MAAa+X,WAAuB/V,MAwBlC3H,YAAY6B,EAAcgD,GACxB3D,MAAMW,iCAAWgD,IAAM8Y,YAAY,KACnCxd,KAAKyd,KAAO/Y,EAAK+Y,KACjBzd,KAAK6R,GAAKnN,EAAKmN,IAoCnB,MAAa6L,WAAuBlW,MAwBlC3H,YAAY6B,EAAcgD,GACxB3D,MAAMW,iCAAWgD,IAAM8Y,YAAY,KACnCxd,KAAKyd,KAAO/Y,EAAK+Y,KACjBzd,KAAK4Q,KAAOlM,EAAKkM,KACjB5Q,KAAK6R,GAAKnN,EAAKmN,IAiCnB,MAAa8L,WAAwBnW,MA8BnC3H,YAAY6B,EAAcgD,GACxB3D,MAAMW,iCAAWgD,IAAM8Y,YAAY,KACnCxd,KAAK4Q,KAAOlM,EAAKkM,KACjB5Q,KAAK6R,GAAKnN,EAAKmN,GACf7R,KAAKwF,OAASd,EAAKc,OA7BrBiY,WACE,MAAO,QCrKX,MAcMG,GAAgC,IAAI3e,EAA6B,cAkBvE,MAAsB4e,GAEpBze,WAAYA,KACV,OAAOwe,GAmCTE,IAAKA,KACH,OAAO9d,KAAKwG,GAUdZ,IAAKA,KACH,OAAO5F,KAAK6F,KAQdhG,OACEG,KAAK+d,IAAI,GAQXle,UACEG,KAAK+d,GAAG,GAoBVle,SACEG,KAAK+d,MCzHT,MAgCMC,WACMlW,EAGVjI,YAAY6F,GACV3E,MAAM2E,GAGR7F,KACIkI,GAOF,MAAMvH,SAAEA,GAAauH,EAAKxI,QAAQG,IAAIS,IAEtC,MAAO,CAACkB,EAAMoc,EAAM7M,EAAMiB,KAExB,MAAM5J,EAASF,EAAK3H,UAAU,IAAM6d,GAEpC,OAAOhW,EAASA,EAAO5G,EAAMoc,EAAM7M,EAAMiB,GAAMxQ,EAAKwQ,IAGtD,SAASoM,EACL5c,EACAoc,EACA7M,EACAiB,GAGF,IAAIoK,EAIJ,OAFAlU,EAAKG,KAAKgG,KAAK,IAAIgQ,IAAYjC,EAASiC,GAIxC,SAASC,EAAShC,EAAkBiC,GAElC,MAAMpC,EAAQC,EAAOE,GAErB,IAAKH,EACH,OAAO3a,EAAK+c,GAGdpC,EACI,EAEMqC,IAAKC,EAAUF,EAAQC,IACvBE,MAAOC,EAAYJ,EAAQG,MAC3BE,KAAMC,EAAWN,EAAQK,MACJL,IACtBD,EACDhC,EAAW,EACX,CACEkC,IAAK,IAAIM,IAAIC,OAAON,GAAU9d,EAASqe,SACvCN,MAAOC,EACPC,KAAMC,EACNI,cACE,OAAOV,EAAQU,SAEjBC,cACE,OAAOX,EAAQW,SAEjBrf,IAAIsf,GACKZ,EAAQ1e,IAAIsf,GAErBnf,IAAImf,EAAKpC,GACPwB,EAAQa,IAAID,EAAKpC,MAIzBa,EACA7M,EACAwN,GAvCCD,CAAS,EAAGtM,KA8EzB,MAAaqN,GACK,IAAIlB,GAAmB,oBC7I5BmB,GAAkChe,OAAO,cAWtD,MAAsBie,GAEpBD,IAAKA,MACH,OAAOnf,MCbX,MAAsBqf,WAAyBlgB,GCA/C,MAAMmgB,GAAoC,IAAIrgB,EAC1C,qBACA,CACEmB,UAAWf,GAAiBkB,GAAO,IAAIgf,GAAWhf,MAOxD,MAAagf,GAaX1f,YAA6BuQ,GAAApQ,cAAAoQ,EAJZpQ,cAAW,IAAIgW,IAExBhW,aAAU,EAGhB,MAAMK,EAAS+P,EAAS1Q,IAAIS,IAE5BH,KAAKwf,UAAYnf,EAAOG,SACxBR,KAAKyf,UAAYpf,EAAOqf,SACxB1f,KAAK2f,SAAWtf,EAAOuf,QACvB5f,KAAK6f,KAAOC,KAAKlB,OAAOmB,KAAKC,WAjB/B5gB,WAAYA,KACV,OAAOkgB,GAmBTzf,OAEE,MAAM4e,KAAEA,GAASwB,GAAejgB,KAAK2f,SAASrM,OACxC4M,EAAQlgB,KAAKmgB,SAAS,CAC1B9B,IAAK,IAAIM,IAAI3e,KAAKyf,UAAUW,MAC5B3B,KAAAA,EACAF,MAAOve,KAAKwf,UAAUjB,QASxB,OANAve,KAAKqgB,SAAShK,IAAI6J,EAAM1M,GAAI0M,GAC5BA,EAAMnG,SAAS,KACbmG,EAAMI,MAAM,QACZtgB,KAAK2f,SAASY,aAAavgB,KAAKwgB,cAAcN,GAAQ,MAGjDA,EAGTrgB,SAAS6H,GACP,OAAO,IAAI+Y,GAAUzgB,KAAKoQ,WAAYpQ,KAAK0gB,QAAShZ,GAGtD7H,KACI8gB,EACAhV,GAGF,MAAQiV,MAAMrC,MAAEA,EAAQ,GAAEF,IAAEA,IAAUsC,EAEtC3gB,KAAK2f,SAASkB,UACV7gB,KAAKwgB,cAAcG,GACnBpC,EACAF,EAAI+B,MAGRpgB,KAAK8gB,OAAO,OAAQH,EAAShV,GAGvB9L,OACJ4d,EACAkD,EACAhV,GAGF,MAAMoV,EAAYpV,EAAQW,GAE1BtM,KAAKqgB,SAAShK,IAAIsK,EAAQnN,GAAImN,GAE9B,IAEE,IAAK,IAAIK,EAAID,EAAU1f,KAAM2f,EAAGA,EAAIA,EAAE3f,KACpCrB,KAAKihB,QAAQD,WAGfL,EAAQrc,KAAOyc,EACfA,EAAU1f,KAAOsf,EACjBA,EAAQ5G,SAAS,KACf,IACEgH,EAAUG,gBAEVP,EAAQL,MAAM7C,MAGlB9R,EAAQW,GAAKqU,GAIjB9gB,QACI8gB,EACAhV,GAGF,MAAMoV,EAAYpV,EAAQW,IAClBsU,MAAMrC,MAAEA,EAAQ,GAAEF,IAAEA,IAAUsC,EAEtC3gB,KAAK2f,SAASY,aACVvgB,KAAKwgB,cAAcG,GACnBpC,EACAF,EAAI+B,MAGRpgB,KAAKqgB,SAAShK,IAAIsK,EAAQnN,GAAImN,GAE9B,MAAMrc,EAAOyc,EAAUzc,KAEnBA,IACFqc,EAAQrc,KAAOA,EACfA,EAAKjD,KAAOsf,GAGdA,EAAQ5G,SAAS,KACf,IACEgH,EAAUG,gBAEV,IACElhB,KAAKihB,QAAQF,WAEbJ,EAAQL,MAAM,eAIpB3U,EAAQW,GAAKqU,EAGf9gB,SACIshB,EACAxV,GAGF,MAAM2H,MAAEA,GAAU6N,EAElB,GAAa,MAAT7N,EAEF,OAA2B,MAAvBtT,KAAK2f,SAASrM,MAETtT,KAAKohB,YAAYzV,QAE1B,EAGF,MAAMoV,EAAYpV,EAAQW,IACpB+U,IAAEA,EAAG5C,KAAEA,EAAMjL,GAAI8N,GAAWrB,GAAe3M,GACjD,IAAIqN,EAEJ,MAAMY,EAAgBF,IAAQrhB,KAAK6f,MAAkB,MAAVyB,EAAiBthB,KAAKqgB,SAAS3gB,IAAI4hB,QAAUre,EA0BxF,OAxBIse,EACFZ,EAAUY,GAGVZ,EAAU3gB,KAAKmgB,SAAS,CACtB9B,IAAK,IAAIM,IAAI3e,KAAKyf,UAAUW,MAC5B3B,KAAAA,EACAF,MAAOve,KAAKwf,UAAUjB,QAExBwC,EAAUS,SAASb,EAAS,UAC5B3gB,KAAKqgB,SAAShK,IAAIsK,EAAQnN,GAAImN,GAC9B3gB,KAAK2f,SAASY,aAAavgB,KAAKwgB,cAAcG,GAAU,KAG1DA,EAAQ5G,SAAS,KACf,IACEgH,EAAUG,gBAEVP,EAAQL,MAAM,aAIlB3U,EAAQW,GAAKqU,EAENA,EAGF9gB,WAAW8L,GAChB,GAA2B,MAAvB3L,KAAK2f,SAASrM,MAEhB,OAAOtT,KAAKohB,YAAYzV,GAMrB9L,OAAO8L,EAAkC0S,GAE9C,MAAMoD,EAAW9V,EAAQW,GACnB6T,EAAW,IAAIM,GAAUzgB,KAAKoQ,WAAYpQ,KAAK0gB,uCAAce,EAASb,OAAMvC,IAAAA,IAAOoD,GAMzF,OAJAzhB,KAAKqgB,SAAShK,IAAI8J,EAAS3M,GAAI2M,GAC/BngB,KAAK2f,SAASY,aAAavgB,KAAKwgB,cAAcL,GAAW,GAAI9B,EAAI+B,MACjEpgB,KAAKqgB,SAASjK,OAAOqL,EAASjO,IAEvB7H,EAAQW,GAAK6T,EAGdtgB,YAAY8L,GAElB,MAAMoV,EAAYpV,EAAQW,GACpBqU,EAAU3gB,KAAKmgB,SAAS,CAC5B9B,IAAK,IAAIM,IAAI3e,KAAKyf,UAAUW,MAC5B3B,KAAM,KACNF,MAAOve,KAAKwf,UAAUjB,QAGxB,IACEwC,EAAUS,SAASb,EAAS,iBAE5B3gB,KAAK2f,SAASY,aAAavgB,KAAKwgB,cAAcG,GAAU,IACxD3gB,KAAK8gB,OAAO,QAASH,EAAShV,GAGhC,OAAOgV,EAGD9gB,QAAQqgB,GACdlgB,KAAKqgB,SAASjK,OAAO8J,EAAM1M,IAC3B0M,EAAMwB,SAGA7hB,eAAc2T,GAAEA,EAAIoN,MAAMnC,KAAEA,KAClC,MAAO,CACL5e,CAAC8hB,IAAe,CACdN,IAAKrhB,KAAK6f,KACVrM,GAAAA,EACAiL,KAAAA,KA2BD,MAAMkD,GAAe,wBAS5B,SAAS1B,GAAe3M,GACtB,OAAgB,MAATA,GAAkC,iBAAVA,EAAqB,CAAEmL,KAAMnL,GAAUA,EAAMqO,IAM9E,MAAalB,GASX5gB,YACqBuQ,EACRoD,EACT9L,EACAoI,GAHiB9P,cAAAoQ,EACRpQ,QAAAwT,EAPLxT,eAGAA,aAAsB8G,EAQ5B9G,KAAK4hB,QAAU9R,EAAQA,EAAM8R,QAAU,IAAI5L,IAE3C,MAAMkK,EAAQlgB,KAEdA,KAAK4gB,KAAO,CACVvC,IAAK3W,EAAO2W,IACZE,MAAO7W,EAAO6W,MACdE,KAAM/W,EAAO+W,KACbK,cACE,QAASoB,EAAM2B,SAEjB9C,cACE,WAAOmB,EAAM2B,SAEfniB,IAAIsf,GACKkB,EAAMxgB,IAAIsf,GAEnBnf,IAAImf,EAAKpC,GACPsD,EAAMjB,IAAID,EAAKpC,KAKrB/c,IAAOmf,GAEL,MAAM8C,EAAmD9hB,KAAK4hB,QAAQliB,IAAIsf,EAAIG,KAE9E,OAAO2C,GAAUA,EAAOpiB,MAG1BG,IAAUmf,EAA0BpC,GAElC,MAAMmF,EAAQ/C,EAAIG,IACZ2C,EAA6C9hB,KAAK4hB,QAAQliB,IAAIqiB,GAEpE,GAAID,EAEF,OADAA,EAAO7C,IAAIrC,GACJkF,EAAOpiB,MAGhB,MAAM6N,EAAW,IAAIvC,EAA8BhL,KAAKoQ,UAMxD,MAAM4R,EAAYD,EAAMtL,OAAOzW,KAAK4gB,KAAMhE,EAAO,IAJjD,cAA2ByC,GAA3Bxf,kCACWG,SAA+BuN,EAASpC,YAAYzL,OAU/D,OALAM,KAAK4hB,QAAQvL,IAAI0L,EAAOC,GACpBhiB,KAAK4gB,KAAK7B,SAAWiD,EAAU1B,OACjC0B,EAAU1B,MAAMtgB,KAAK4gB,KAAM,QAGtBoB,EAAUtiB,MAGnBG,SAASgS,EAAe4L,GACtB5U,EAAQ7I,KAAK4hB,QAAQK,UAAW,EAAEF,EAAOD,MACvC,GAAIA,EAAON,SAAU,CAEnB,MAAMU,EAAcJ,EAAON,SAAS3P,EAAG+O,KAAMnD,GAEzCyE,GACFrQ,EAAG+P,QAAQvL,IAAI0L,EAAOG,MAM9BriB,KAAKsiB,GACHtZ,EAAQ7I,KAAK4hB,QAAQhY,SAAUkY,GAAUA,EAAOM,MAAQN,EAAOM,KAAKD,IAGtEtiB,MAAM4d,GACJzd,KAAK6hB,UACLhZ,EAAQ7I,KAAK4hB,QAAQhY,SAAUkY,GAAUA,EAAOxB,OAASwB,EAAOxB,MAAMtgB,KAAK4gB,KAAMnD,IAGnF5d,QACEG,KAAK6hB,UACLhZ,EAAQ7I,KAAK4hB,QAAQhY,SAAUkY,GAAUA,EAAOZ,OAASY,EAAOZ,SAGlErhB,SACEgJ,EAAQ7I,KAAK4hB,QAAQhY,SAAUkY,GAAUA,EAAOJ,QAAUI,EAAOJ,UACjE1hB,KAAK4hB,QAAQS,QAGfxiB,SAASwX,GACPrX,KAAKsiB,QAAUjL,EAGjBxX,QAEE,MAAMwX,EAASrX,KAAKsiB,QAEpBtiB,KAAKsiB,QAAUxb,EACfuQ,cChYYkL,GAAiBhjB,GAE/B,MAAMc,EAASd,EAAQG,IAAIS,KACrBK,SAAEA,EAAQof,QAAEA,GAAYvf,EACxBmiB,EAAa,IAAI/b,EAAmBpG,GACpCoiB,EAAaljB,EAAQG,IAAI6f,IACzBvD,EAAQzc,EAAQG,IAAIwf,IACpBwD,EAAUF,EAAWhc,sBACrBmc,EAAUH,EAAWhc,sBACrBoc,EAASJ,EAAWhc,uBACpBqc,EAAU1W,EAAyBuW,EAASC,EAASC,GACrDE,EAAMlX,EAAsB6W,EAAW/d,QAE7Coe,EAAIjd,KAAKkd,GAAaA,EAAUvgB,SAEhC,MAAMwgB,EAA+BF,EAAIjd,KAAKgL,KAAK7E,KAAKkU,GAASA,EAAMU,MACvE,IAAIvf,EAAqBwC,QAAQC,UAEjC0e,EAAWhc,GAAkB,WAA7Bgc,CAAyCrB,IAEvC,MAAMjB,EAAQuC,EAAWtB,SAASA,EAAU2B,GAExC5C,GACFsC,EAAWnc,SAAS,IAAIkX,qBAEpB,CACEE,KAAwB,MAAlB0D,EAAS7N,MAAgB,SAAW,QAC1CzB,GAAIqO,EAAMU,UAMpB4B,EAAWhc,GAAG,aAAdgc,CAA4B,KAE1B,MAAMtC,EAAQuC,EAAWQ,WAAWH,GAEhC5C,GACFsC,EAAWnc,SAAS,IAAIkX,qBAEpB,CACEE,KAAM,QACN5L,GAAIqO,EAAMU,UAsDpB,OAAO,IAhDP,cAAyBsC,GAEvB7O,aACE,OAAOuL,EAAQvL,OAGjBqO,cACE,OAAOA,EAGTC,cACE,OAAOA,EAGTC,aACE,OAAOA,EAGTpc,SACE,OAAOqc,EAGThd,WACE,OAAOmd,EAGTnjB,GAAGsjB,GACDvD,EAAQ7B,GAAGoF,GAGbtjB,KAAK6H,GACH,OAAOyW,EAAS,WAAY,OAAQzW,GAGtC7H,QAAQ6H,GACN,OAAOyW,EAAS,cAAe,UAAWzW,GAG5C7H,OAAOwe,GACL,OAAOoE,EAAWpL,OAAOyL,EAAKM,EAAM/E,IAAMuC,KAG5C/gB,KAAWmf,EAA0BpC,GACnC,OAOJ,SAASyG,EAAUC,GACjB,MAAO,CACL5K,KAAI,CAASsG,EAA4BpC,IAChCyG,EAAUphB,GAAeqhB,EAAa1C,GAAQA,EAAK3B,IAAID,EAAKpC,KAErE2G,KAAK7b,GACIyW,EAAS,WAAY,OAAQzW,EAAQ4b,GAE9CE,QAAQ9b,GACCyW,EAAS,cAAe,UAAWzW,EAAQ4b,IAhB7CD,CAAUzC,GAAQA,EAAK3B,IAAID,EAAKpC,MAqB3C,SAASwG,EAAM/E,GACb,MAAmB,iBAARA,EACF,IAAIM,IAAIN,EAAK7d,EAASqe,SAExBR,GAAOyE,EAAIxW,GAAGsU,KAAKvC,IAa5B,SAASF,EACLsF,EACAhG,EACA/V,EACA4b,EAAoCxc,GAGtC,MAAM4c,EAjBR,SAAqBhc,GACnB,MAAsB,iBAAXA,GAAuBA,aAAkBiX,IAC3C,CAAEN,IAAK+E,EAAM1b,IAElBA,EAAO2W,eAAeM,IACjBjX,iCAEGA,IAAQ2W,IAAK+E,EAAM1b,EAAO2W,OAUpBsF,CAAYjc,GACxB9D,EAAUvC,EAAOA,EAAK+R,KAAKwQ,EAAYA,GAE7C,OAAOhgB,EAEP,SAASggB,IAEP,IAAIjD,EAEJ,IAEE,MAAMkD,EAyBV,WACE,GAAIxiB,IAASuC,EACX,OAAOwe,IAGT,MAAMrB,EAAY+B,EAAIxW,GAChBqU,EAAU8B,EAAWtC,SAASuD,GAEpC3C,EAAUS,SAASb,EAAS8C,GAE5B,MAAMK,EAAY,IAAIpG,qBAElB,CACED,KAAMgG,EACN7S,KAAMmQ,EAAUH,KAChB/O,GAAI8O,EAAQC,OAKlB,GADA0C,EAAY3C,EAAQC,OACf4B,EAAWnc,SAASyd,IAAcziB,IAASuC,EAC9C,OAAOwe,EAAKzB,GAGd,IAAIoD,EAIJ,GAFA/H,EAAMgI,GAAKD,EAAcC,EAAGP,EAAWK,EAAUlT,KAAMkT,EAAUjS,KAE5DkS,EACH,OAAO3B,EAAKzB,GAGd,OAAOA,EAzDYsD,GAEjB,OAAKJ,GAILlD,EAAUkD,EAEVpB,EAAWhF,GAAMkD,EAASmC,GAE1BN,EAAWnc,SAAS,IAAIkX,qBAEpB,CACEE,KAAAA,EACA5L,GAAI8O,EAAQC,QAIXD,EAAQC,MAfNiD,EAgBT,MAAO7C,GAEP,MADAoB,EAAKzB,EAASK,GACRA,GAuCV,SAASoB,EAAKzB,EAAqBnb,GAcjC,OAbImb,GACFA,EAAQyB,KAAKU,EAAIxW,GAAGsU,MAGtB4B,EAAWnc,SAAS,IAAIsX,sBAEpB,CACE/M,KAAMkS,EAAIxW,GAAGsU,KACb/O,GAAI6R,EACJle,OAAAA,KAIC,OC1Ob,MAIM0e,GAAyC,CAC7CrkB,MAAM4E,GACJA,EAAMnF,QAAQ,CAAE2L,EAAG4S,GAAYhJ,GAAI0N,OCAvC,SAAgB4B,GAAkBvS,GAEhC,IAAI0B,EAMJ,OAAOsN,IAEL,MAAMvC,EAmEV,SAAiBuC,GACf,OAAO,IAAIjC,IAAI,GAAIiC,EAAKvC,KAAK+B,KApEfgE,CAAQxD,GAEpB,GAAItN,EAAO,CACT,GAAIA,EAAM+K,MAAQA,EAChB,OAAO/K,EAAM9M,GAEf8M,EAAM+Q,IAAIhV,MAGZ,IAAIiV,EAIJ,MAAMtQ,EAAS5E,IAAcL,QAAQ,KACnCuE,OAAQrQ,EACRqhB,OAAUrhB,IAGNuD,EAAKsO,EAA8B9D,IACvC,IAAKsT,EAAS,CAEZ,MAAMC,EAAS3S,EAAOgP,GAChBjV,EAAUC,IACV4Y,EAAcD,EAAOE,IACzB9Y,EAAQW,GAAKmY,IACZ1V,QAAQvJ,IAEK,MAAVA,GACFwO,EAAO3E,IAAI7J,KAIfwO,EAAOjF,QAAQvJ,IACbgf,EAAYnV,IAAI7J,GAChBmG,EAAQ4D,KAAK/J,KAGf8e,EAAU,CACR9d,GAAImF,EAAQ9F,KAAK8L,MACbwL,GAAYA,EAAWlR,EAASkR,GAAYjR,KAEhDwY,IAAK,GAIT,MAAMC,EAAYL,EAIlB,QAFEK,EAAUD,IAELC,EAAUne,GAAGwK,GAAUzM,MAAMyP,GAAQjF,QAAQvJ,MAC3Cmf,EAAUD,KAEf7gB,QAAQC,UAAUsP,KAAK,KAChBuR,EAAUD,KAAOC,IAAcL,GAClCtQ,EAAO3E,IAAI7J,SASrB,OAFA8N,EAAQ,CAAE+K,IAAAA,EAAK7X,GAAAA,EAAI6d,IAAKrQ,GAEjBxN,GCtDX,MAAMoe,WAA2Brf,OAKjC,MAAasf,GAIXhlB,YACqBilB,EACAC,GADA/kB,iBAAA8kB,EACA9kB,aAAA+kB,EAJJ/kB,UAAO,IAAIgW,IAO5BgP,gBAEE,MAAM/c,EAAgC,GAEtC,IAAK,MAAMyJ,KAAW1R,KAAM,CAC1B,IAAK0R,EAAQuT,SACX,MAAO,GAEThd,EAAOsI,KAAKmB,EAAQuT,UAGtB,OAAOhd,EAGTpI,CAACsB,OAAOC,YACN,OAAO8jB,EAAYC,EAAUnlB,KAAKkW,KAAKtM,SAAUwb,IAGnDvlB,SAEE,MAAMwlB,EAAOrlB,KACPslB,EAAalW,IACnB,IAAImW,EAAaC,IAEjB,MAAO,CACL3lB,QACAA,IAAI6R,GACF2T,EAAKI,KAAK/T,IAEZ7R,SAASgS,GAEP,MAAMqQ,EAAcmD,EAAKK,YAIzB,OAFA7T,EAAGoN,IAAI0G,GAAuBzD,GAEvBA,EAAYJ,UAErBjiB,MAAM+gB,EAAYnD,GAChB,GAAa,SAATA,EAEF,OAGF8H,EAAanW,IAAc7K,MAAM+gB,GAEjC,MAAMf,EAASzP,EAA8B8Q,IAE3C,MAAM/Z,EAAU,IAAIC,EACdkI,EAASnI,EAAQrF,GAAGof,GAa1B,OAXAP,EAAKN,QAAQnE,EAAbyE,CAAmBlI,GAAYtR,EAAQQ,KAAK8Q,IAAWpO,QAAQ7K,SAC/CjB,IAAViB,GAAyBA,aAAiB0gB,IAE5C/Y,EAAQQ,KAAK,CACXwZ,IAAI,EACJjF,KAAAA,EACA1c,MAAAA,MAGHK,MAAMghB,GAEFvR,IACN5B,QAEHvJ,EACIwc,EACA,EAAGJ,SAAAA,EAAUjU,SAAAA,MAgDzB,SACIuT,EACAU,GAEF,OAAOA,EACDV,EAAO5S,MACLwL,GAAYA,EAAS0I,kCAEZ1I,IACH8H,UACoB,MAAhBA,EAASa,IACP3I,EAAS3c,SAASulB,qBAAqBd,EAASa,KAAK,GACrD3I,EAAS3c,SAASwlB,eAAef,EAASzR,WAC3CvQ,IAELka,GAERoH,GAjEgC0B,CAAW1B,EAAQU,EAAnBgB,CAA6B,CACvDjS,OAAQ5E,IAAc7K,MAAMyM,EAASgD,QACrCnU,QAAQN,EAAS4d,GACfnM,EAAS+D,QAAQxV,EAAS4d,QAKpCtd,QACE0lB,EAAWlW,IAAI,IAAIuV,GAAmB,eAExC/kB,OACEylB,EAAWjW,IAAI,IAAIuV,GAAmB,0BAExC/kB,SACEylB,EAAWjW,IAAI,IAAIuV,GAAmB,qBAMpC/kB,KAAK6R,GAEX,MAAMwU,iCAAWxU,IAASV,SAAUmV,EAAczU,EAAQV,aACpDgD,OAAEA,GAAWkS,EAAIlV,SACjBoV,EAAOpmB,KAAKkW,KAAKxW,IAAIsU,GAEvBoS,EACFA,EAAK7V,KAAK2V,IAEVlmB,KAAKkW,KAAKG,IAAIrC,EAAQ,CAACkS,IACvBlS,EAAOjF,QAAQ,IAAM/O,KAAKkW,KAAKE,OAAOpC,KAIlCnU,YAEN,MAAMqiB,EAAc,IAAI2C,GAAiB7kB,KAAK8kB,YAAa9kB,KAAK+kB,SAEhE,IAAK,MAAO/Q,EAAQoS,KAASpmB,KAAKkW,KAAK+L,UACrCC,EAAYhM,KAAKG,IAAIrC,EAAQ,IAAIoS,IAGnC,OAAOlE,GA4CJ,MAAMyD,GAAuE,IAnBpF,cAAoCvG,GAElCvf,OACIwmB,EACAC,GAEF,MAAO,CACL5mB,IAAG,IACM4mB,EAETrH,IAAKnY,KC/HEyf,GACK,IAAIxK,GAAkC,mBCvC3CyK,GACK,IAAI5f,EAAa,gBAAiB,CAAExG,UAAWyG,EAAcC,KCFlE2f,GAA2B,IAAIxnB,EACxC,cACA,CACEmB,UAAWf,IAIjB,SAAuBE,GAErB,MAAMc,EAASd,EAAQG,IAAIS,IACrBumB,EAAYnnB,EAAQG,IAAIid,IACxBgK,EAAYpnB,EAAQG,IAAI8mB,IACxBxK,EAAQzc,EAAQG,IAAI6mB,IACpBK,EAAoB,IAAKvmB,EAAewmB,UAE9C,OAAOjG,IAEL,MAAMvC,EAAM,IAAIM,IAAIiC,EAAKvC,IAAI+B,MAE7BuG,EAAUtI,GAEV,MAAM3M,EAAU,IAAImL,QAChBwB,EAAI+B,KACJ,CACE1E,KAAM,cACNoL,YAAa,cACbC,QAAS,IAAIC,QAAQ,CAAEC,OAAU,gBAIvC,OAAOnS,EAAU9D,GAAYgL,EAAME,EAAOxK,EAAbsK,CAAsBhL,IAEnD,SAASkL,EAAMgL,GACbA,EA0DN,SAA8BtG,EAAYlP,SAExC,MAAMsT,YAAYpE,EAAKlhB,IAAIimB,0BAAwBX,UAEnD,IAAKA,IAAcA,EAAU3Q,OAC3B,OAAO3C,EAGT,OAAO,IAAImL,QACPnL,EACA,CACEqV,QAAS,CACPI,kBAAmBC,EACfpC,EACA,CAACqC,EAAQpC,KACJoC,EAASA,EAAS,KAAO,KAEN,MAAhBpC,EAASa,IACH,OAASwB,EAAUrC,EAASa,KAC5B,MAAQwB,EAAUrC,EAASzR,KAEzC,OA/EO+T,CAAqB3G,EAAMsG,GAE1C,MAAMM,EAAsB,IAAI1b,EAC1B2b,EAA0CD,EAAoBhhB,GAAGmL,MACnE,CAACwL,EAAUuK,KACT,IAAKvK,EAAS0I,GACZ,MAAO,CACLA,IAAI,EACJjF,KAAAA,EACAzD,SAAAA,EACAjZ,MAAOiZ,EAAStO,QAGpB,IACE,MAAO,CACLgX,IAAI,EACJjF,KAAAA,EACAzD,SAAAA,EACA3c,SAAUmnB,GAAkBf,EAAQvI,EAAKlB,EAAUuK,IAErD,MAAOxjB,GACP,MAAO,CACL2hB,IAAI,EACJjF,KAAAA,EACAzD,SAAAA,EACAjZ,MAAAA,MAMV,OAAO4Q,EAA8B9D,IAEnC,MAAMgD,OAAEA,GAAWhD,EAEnBG,EAAmC,CAAEyP,KAAAA,IAAQ1S,KAAK,CAChD8F,OAAQ5E,IAAc7K,MAAMyP,GAC5BnU,QAAQU,EAAKqnB,GACX5W,EAAS+D,QAAQxU,EAAKqnB,MAI1B,MAAMC,EAAiBnB,EAAUQ,EAAVR,CAAwBvJ,IAC7CsK,EAAWzW,GACXmM,EAASuK,OAAOtU,KACZsU,IACEF,EAAoBnb,KAAK8Q,EAAUuK,GACnC1T,EAAOzP,MAAMsjB,KAEjBvK,MACE0D,GAAKhN,EAAO3E,IAAI2R,eAoC9B,SAAS2G,GAAkBf,EAAmBvI,EAAUlB,EAAoBuK,GAE1E,MAAM7Z,EAAM+Y,EAAOkB,gBACfJ,EACAK,EAAU5K,EAAS4J,QAAQrnB,IAAI,iBAAmB,aAAa,GAAGsoB,GAGtE,GAAIna,EAAIoa,KAAM,CAEZ,MAAMC,EAAOra,EAAIoa,KAAKE,cAAc,QAEpC,GAAID,EACFA,EAAK9H,KAAO,IAAIzB,IAAIuJ,EAAK7P,aAAa,QAAUgG,GAAK+B,SAChD,CAEL,MAAMgI,EAAUva,EAAIwa,cAAc,QAElCD,EAAQhI,KAAO/B,EAAI+B,KAEnBvS,EAAIoa,KAAKK,YAAYF,IAIzB,OAAOva,QC9HI0a,GAAgE,IA3B7E,cAA4BnJ,GAE1Bvf,OAAO+gB,EAAYlP,EAA0BnS,GAE3C,MAAM+mB,EAAW,IAAIzB,GAAiBtlB,EAAQG,IAAIme,IAAasG,GAAkB5kB,EAAQG,IAAI+mB,MACvF3E,EAASwE,EAASxE,SAKxB,OAHAlB,EAAK3B,IAAI0G,GAAuBW,GAChCxE,EAAO7C,IAAIvN,GAEJoQ,ICZL0G,GAAqC,IAAIvpB,EAC3C,oBACA,CACEmB,UAAWf,GAAiBE,GAAW,IAAIkpB,GAAgBlpB,MAOpDmpB,GAAoB,oBAKjC,MAAaD,GASX5oB,YAAYN,GAEV,MAAMopB,EAAMC,GAAOrpB,EAAQG,IAAIS,IAAiBK,UAEhD,GAAKmoB,EAGE,CAEL,MAAME,EAAatpB,EAAQG,IAAIme,IAE/B7d,KAAK8oB,YAAc3X,EAASkN,GAAOA,EAAI0K,aAAa1S,IAAIqS,GAAmBC,IAC3E3oB,KAAKgc,MAAQ7K,EAAS,CAAC9P,EAAMqQ,IACpBrQ,EAAK,IAAIwb,QAAQnL,EAAQ2M,IAAK3M,IAAUC,MAAMwL,IACnD,GAAIA,EAAS0I,GAAI,CAEf,MAAMmD,EAASJ,GAAOzL,EAAS3c,UAE/B,GAAIwoB,GAAUA,IAAWL,EAAK,CAE5B,MAAMtK,EAAM,IAAIM,IAAIxB,EAASyD,KAAKvC,IAAI+B,MAEtC/B,EAAI0K,aAAa1S,IAAIqS,GAAmBM,GACxCH,EAAWxR,OAAOgH,GAClBwK,EAAWI,UAIf,OAAO9L,UAvBXnd,KAAK8oB,YAAc3X,IACnBnR,KAAKgc,MAAQ7K,IAbjB/R,WAAYA,KACV,OAAOopB,IA0CX,SAASI,GAAO/a,SACd,iBAAOA,EAAIsa,cAAc,kDAA6B9P,aAAa,WCjErE,SAmCgB6Q,GACZtY,EACAiB,EACAsX,EACAC,EAAsDC,IAGxD,IAAIC,EAE0B,mBAAnBH,GACTC,EAAgBD,EAChBG,EAAS,MAETA,EAASH,GAAkB,KAG7B,MAAMtb,EAAMgE,EAAG/D,cAEf,GAAIrL,GAAUmO,GAAO,CAEnB,MAAM2Y,EAAe1b,EAAIwa,cAAczX,EAAK4Y,QAAQC,eAMpD,OAJA7Y,EAAK8Y,oBAAoBpoB,QAAQqoB,GAAQJ,EAAapQ,aAAawQ,EAAM/Y,EAAKyH,aAAasR,KAC3FP,EAAcxY,EAAM2Y,GACpB1X,EAAG+X,aAAaL,EAAcD,GAEvBC,EAGT,MAAMM,EAAYhc,EAAIqb,WAAWtY,GAAM,GAIvC,OAFAiB,EAAG+X,aAAaC,EAAWP,GAEpBO,EAST,SAAgBR,GAAkBzY,EAAYiB,GAC5ChJ,EACIC,EAAU8H,EAAKkZ,YACfpnB,GAAQwmB,GAAWxmB,EAAMmP,IC3E/B,SAAgBkY,GAAiBxqB,GAE/B,MAAMsO,EAAMtO,EAAQG,IAAIS,IAAiBK,SAEzC,OAAOa,GAAQA,IAAOsQ,MAClBwL,IACE,GAAIA,EAAS0I,GAAI,CAEf,MAAMmE,EAAa,IAAI/oB,IAAY6R,EAC/BmX,GAAgBpc,EAAK/E,EAAU+E,EAAIqc,UACnC,EAAEC,KAASA,IAGfthB,EACIK,EACI+gB,GAAgB9M,EAAS3c,SAAUsI,EAAUqU,EAAS3c,SAAS4pB,iBAAiB,YAChF,EAAED,MAAUH,EAAWxlB,IAAI2lB,IAE/B,EAAEA,EAAKE,MACLnB,GAAWmB,EAAQxc,EAAIoa,KAAM,CAACqC,EAAOzY,IAAOA,EAAGsY,IAAMA,GACrDH,EAAWxoB,IAAI2oB,KAIvB,OAAOhN,IAKf,SAAS8M,GACLpc,EACAqc,GAEF,OAAOpX,EACH5J,EACIghB,EACAG,KAAYA,EAAOF,KAEvBE,GAAU,CAAC,IAAI1L,IAAI0L,EAAOF,IAAKtc,EAAIgR,SAASuB,KAAMiK,ICtCxD,SAAgBE,GAAehrB,GAE7B,MAAMsO,EAAMtO,EAAQG,IAAIS,IAAiBK,SAEzC,OAAOa,GAAQA,IAAOsQ,MAClBwL,IACE,IAAKA,EAAS0I,GACZ,OAAO1I,EAGT,MAAMqN,EAAYrN,EAAS3c,SAAS4pB,iBAAkC,wBAEtE,IAAKI,EAAUnW,OACb,OAAO8I,EAGT,IAAIzV,EAAemG,EAAIoa,KACnBqB,EAAsB,KAC1B,MAAMmB,EAAY5c,EAAIuc,iBAAkC,wBAClDM,EAAkB,IAAI1U,IACtB2U,EAAgBF,EAAUlpB,KAAK,GAwCrC,OAtCIopB,IACFjjB,EAASijB,EAAcnb,WACvB8Z,EAASqB,EACT9hB,EACIC,EAAU2hB,GACVG,GAAQF,EAAgBrU,IAAI,IAAIsI,IAAIiM,EAAKxK,KAAMvS,EAAIgR,SAASuB,KAAMwK,KAIxE/hB,EACIC,EAAU0hB,GACVK,IAEE,MAAMzK,EAAO,IAAIzB,IAAIkM,EAASzK,KAAMvS,EAAIgR,SAASuB,KAC3C0K,EAAWJ,EAAgBhrB,IAAI0gB,GAEjC0K,GAEEC,EAASL,EAAgB1S,UAAYoI,GAGvC1Y,EAASojB,EAAStb,WAClB8Z,EAASwB,EAASE,aAGlBtjB,EAAOkiB,aAAakB,EAAUxB,GAEhCoB,EAAgBtU,OAAOgK,IAGvB8I,GAAW2B,EAAUnjB,EAAQ4hB,EAAQ,CAACgB,EAAOzY,IAAOA,EAAGuO,KAAOA,KAMtEvX,EAAQ6hB,EAAgB9gB,SAAUqhB,GAASA,EAAMzb,WAAYE,YAAYub,IAElE9N,IC9Df,SAAgB+N,GAAe3rB,GAE7B,MAAMsO,EAAMtO,EAAQG,IAAIS,IAAiBK,SAEzC,OAAOa,GAAQA,IAAOsQ,MAAMwL,IAC1B,GAAIA,EAAS0I,GAAI,CAEf,MAAMtH,EAAQpB,EAAS3c,SAASulB,qBAAqB,SAASxkB,KAAK,GAE/Dgd,GAASA,EAAM4M,cACjBtd,EAAI0Q,MAAQA,EAAM4M,aAItB,OAAOhO,ICjBX,MASMiO,GAAuC,CAC3C7mB,MZKF,MAEEJ,WAAYA,MACV,OAAO+f,KYPTrkB,MAAM4E,GACJA,EAAMnF,QAAQ,CACZ2L,EAAGub,GACH3R,GAAKwW,GAA4BA,EAAOvC,YACxCpQ,KAAM,CAAC+P,MAEThkB,EAAMnF,QAAQ,CACZ2L,EAAGsb,GACH1R,GAAKwW,GAA4BA,EAAOrP,MACxCtD,KAAM,CAAC+P,MAEThkB,EAAMnF,QAAQ,CAAE2L,EAAGsb,GAAe1R,GAAIkV,KACtCtlB,EAAMnF,QAAQ,CAAE2L,EAAGsb,GAAe1R,GAAI0V,KACtC9lB,EAAMnF,QAAQ,CAAE2L,EAAGsb,GAAe1R,GAAIqW,OAqB1C,MAAaI,GAEXnnB,WAAYA,MACV,OAAOinB,ICzBX,MAAaG,GACK,IAAItsB,EAAyC,4BCblDusB,GACK,IAAIC,EAAqC,yBCH9CC,GAAiC,IAAIC,EAC9C,8CACA,OACA,oBAMSC,GACK,IAAI3sB,EAAiB,uBAAwB,CAAEmB,UAIjE,SAAyByrB,GAEvB,MAAMC,EAAUD,EAAcnsB,IAAIY,IAC5Bf,EAAUssB,EAAcnsB,IAAIsH,IAC5BqD,EAAa9K,EAAQG,IAAIgL,IAEzBqhB,EAAQ,GADO1hB,EAAW3E,KAAOyE,EAAazE,KAAK2E,EAAW3E,KAAMomB,GAAW,iBAC1DE,KACrBC,EAAYP,GAAmBhmB,KAAKomB,EAAQJ,IAAqBK,EAAOG,GAK9E,OAJgB3sB,EAAQO,QAEhBqsB,UAAU3qB,IAAIyqB,GAEfA,KAdT,IAAID,GAAiB,ECTrB,MAAMI,GACY,IAAIntB,EAAyC,iCAEzDotB,GAAwC,CAAC,CAAErL,EAAG,UAKpD,MAAauK,GAMX1rB,YACqBuQ,EACAkc,EAAWC,GADXvsB,cAAAoQ,EACApQ,cAAAssB,EANrBltB,WAAYA,KACV,OAAOgtB,GAQTvsB,QAAQ2sB,EAAkBnjB,EAAuB,IAE/C,MAAM9J,EAAUS,KAAKoQ,SACf+K,EAAa5b,EAAQG,IAAIub,GAAmB,CAAEY,GAAI,OAExD,OAAO7b,KAAKssB,SAASE,iCAChBnjB,IACH7I,SAAU6I,EAAQ7I,UAAYjB,EAAQG,IAAIS,IAAiBK,SAC3DisB,OAAQpjB,EAAQojB,QAAUltB,EAAQG,IAAIgH,IACtCgmB,aAAcrjB,EAAQqjB,eAcfvR,EAAakR,GAAe,IAbnCtS,SAAU1Q,EAAQ0Q,UAKpB,WAEE,MAAM4S,EAAYptB,EAAQG,IAAIia,IAE9B,OAAOiT,GAAaD,EAAU3S,cAAcD,SAAS6S,GATvBC,GAC9B/iB,QAAST,EAAQS,SAAWvK,EAAQG,IAAIY,IACxCuZ,OAcF,WAEE,MAAMA,OAAEA,GAAWxQ,EACbyjB,EAAU,IAAIjsB,GAAqBgZ,GACpCrY,OAAOjC,EAAQG,IAAI8rB,KAEnBrQ,GACH2R,EAAQtrB,KASQurB,EATWxtB,EAAQG,IAAIksB,IAUtC,CACLoB,OAAQ,IACRntB,OAAOotB,EAAUC,GACfD,EAASpT,OAAOqT,EAAY,CAC1BC,SAAU,CAAC,CAAEC,EAAG,CAACL,OAAeE,EAASE,gBALjD,IAAwBJ,EANlB,OAAOD,EAAQnsB,MAxBP0sB,OC3Cd,MAIMC,GAAiD,CACrD/oB,MAAOoW,GACP9a,MAAM4E,GACJA,EAAM+J,aAAa,CAAEiK,GAAI8U,KACzB9oB,EAAM+J,aAAa,CACjBvD,EAAGsgB,GACH1W,GAAGoY,GACM,CAACT,EAAOzkB,IAASklB,EAASO,QAAQhB,EAAOzkB,GAElD2Q,KAAM,CAAC6U,QAgBb,MAAaE,GAEXtpB,WAAYA,MACV,OAAOmpB,UCNEI,GAAuB,CAWlC7tB,QACIN,EACAitB,EACAnjB,GAGF,MAAMskB,EAAMC,EAAcpB,GACpBvS,EAAU5Q,GAAWA,EAAQ4Q,QAC7B4T,EAAetuB,EAAQG,IAAI6rB,IAEjC,IACIuC,EADAC,EAAYvI,IAEhB,MAAMxR,EAAS5E,EAAY5J,IACzBsoB,EAAiBhnB,EACjBinB,EAAU1e,IAAI7J,KAOhB,OAJAsoB,EAAiB,KACfC,EAAYF,EAAaF,EAAKtkB,GAAS9E,MAAMyP,IAGvCiG,GACR,IAAK,SACH1a,EAAQwN,UAAU+gB,GAClB,MACF,KAAK,EACHvuB,EAAQ2P,OAAO8e,IACbF,IACAC,EAAUxpB,MAAMypB,KAElB,MACF,QACEzuB,EAAQ2P,OAAOhB,KAAK4f,GAKtB,OAFAvuB,EAAQyP,cAAcxJ,GAAUwO,EAAO3E,IAAI7J,IAEpCwO,ICtDX,SAAgBia,GAAuC5kB,GAMrD,MAAO,CAAC3B,EAAyBoR,KAE/B,MAAM5T,EAAgBwC,EAAO1F,YAE7BiE,GAAanB,OACTI,EACA,CACErF,OAAOmb,GACLA,EAAWpO,YAAY+L,IACrBA,EAAiB5L,UAAU,EAAGnF,UAAAA,MAE5B,MAAMsmB,EAAWtmB,EAAUkR,GAE3B4U,GAAqBF,QACjB7U,EACoB,mBAAbuV,EAA0BA,EAAShnB,KAAKU,GAAasmB,EAC5D7kB,QAKVjE,QAAS,CACPb,MAAO,CAACkpB,QChDpB,MAMMU,GAA4C,CAChD3pB,IAAKipB,GACLlpB,MAAOoW,GACP9a,MAAM4E,GACJA,EAAM+J,aAAa,CACjBvD,EAAGsiB,GACH1Y,GAAGtV,GACM,IAAIguB,GAAwBhuB,EAASsuB,KAGhDppB,EAAM+J,aAAa,CACjBvD,EAAGsgB,GACH1W,GAAGoY,GACM,CAACT,EAAOzkB,IAASklB,EAASO,QAAQhB,EAAOzkB,GAElD2Q,KAAM,CAAC6U,QAgBb,MAAaa,GAEXjqB,WAAYA,MACV,OAAOgqB,ICxCX,MAIME,GAAa,IAAIpvB,EAAwB,SAU/C,MAAsBqvB,GAKpBlvB,WAAYA,KACV,OAAOivB,GAmBTxuB,IAAiC0uB,GAC/B,OAAOA,EAASvuB,KAAKwuB,OCxCzB,MAGMC,GAAoB,IAAIxvB,EAA+B,iBAE7D,MAAsByvB,GAEpBtvB,WAAYA,KACV,OAAOqvB,IC+HX,MAAaE,GAAsD,IAjEnE,cAA4BC,EAE1B/uB,cACEkB,MAAM,eAGRlB,KACIkI,GAGF,MAAM8mB,EAAY,IAAI7Y,IAkCtB,OAhCAjO,EAAKG,KAAK5G,QAAQ2pB,IAEhB,IAAIzrB,EACAsvB,EACAC,EAEiB,mBAAV9D,GACTzrB,EAAMsvB,EAAW7D,EACjB8D,GAAO,IAEPvvB,EAAMyrB,EAAMA,MACZ6D,EAAW7D,EAAM3rB,QAAQ4H,KAAK+jB,GAC9B8D,GAAO,GAGT,MAAMzqB,EAAOuqB,EAAUnvB,IAAIF,GAE3B,GAAK8E,EAEE,CAEL,MAAO0qB,EAAcC,GAAS3qB,EAE9BuqB,EAAUxY,IACN7W,EACA,CACEuvB,EAAOG,GAAcJ,EAAUE,GAAgBE,GAAcF,EAAcF,GAC3EC,GAAQE,SATdJ,EAAUxY,IAAI7W,EAAK,CAACsvB,EAAUC,MAc3BF,EAAU3tB,KAAOiuB,EAAOpnB,EAAK3H,UAAU,IAAM+uB,GAEpD,SAASA,EAAK3b,GAEZ,MAAMyC,EAAW4Y,EAAUnvB,IAAI8T,GAE/B,IAAKyC,EACH,OAAOzC,EAGT,MAAOsb,EAAUG,GAAShZ,EAE1B,OAAOgZ,EAAQH,EAAWI,GAAc1b,EAAIsb,MAWlD,SAASI,GAAchtB,EAA4BC,GACjD,OAAOitB,GAASC,EAAUntB,EAAMktB,GAAQjtB,EAAOitB,ICtIjD,MAAad,WAAcgB,GAKzBzvB,YAA6B0vB,GAC3BxuB,QAD2Bf,aAAAuvB,EAHpBvvB,UAAiBwvB,IACTxvB,YAAS,IAAIgW,IAM9BnW,SAAS4vB,GAEP,MAAML,EAAQpvB,KAEd,OAAO4tB,KAAiB6B,EAAOprB,QAE/B,SAAuBqD,EAAqBujB,GAE1C,MAAMhV,EAAWmZ,EAAMM,OAAOhwB,IAAIurB,GAElC,GAAIhV,EACFvO,EAAO6I,KAAK0F,OACP,CAEL,MAAM0Z,EAAcP,EAAMG,QAAQtE,EAAdmE,CAAqBA,GAEzCA,EAAMM,OAAOrZ,IAAI4U,EAAO0E,GACxBjoB,EAAO6I,KAAKof,GAGd,OAAOjoB,IAhByD,MCbtE,MAAagnB,WAAqBkB,GAEhC/vB,YAA6B0vB,GAC3BxuB,QAD2Bf,aAAAuvB,EAI7B1vB,WACE,OAAO,IAAIyuB,GAAMtuB,KAAKuvB,UCX1B,MAOMM,GAAoC,CACxCtrB,MAAOkpB,GACP5tB,MAAM4E,GACJA,EAAMnF,QAAQ,CAAE2L,EAAGyjB,GAAcjW,GAAImX,GAAelX,KAAM,CAACiW,MAC3DlqB,EAAMnF,QAAQ,CACZ2L,EAAGqjB,GACHzZ,GAAGnL,GACMA,EAAQomB,WAEjBpX,KAAM,CAACgW,QAUb,MAAaqB,GAEX5rB,WAAYA,MACV,OAAO0rB,ICbX,MAAsBG,UAmITC,GACK,IAAIhxB,EAAgC,kBAWtD,MAAsBixB,WACVpvB,EAUVgd,IAAKA,KACH,OAAO9d,KAAKoa,SAUdxU,IAAKA,KACH,OAAO5F,KAAK6F,MC3KhB,MAAMsqB,GAAkC,CAAEC,SAAS,GAKnD,SAAgBC,GACZ9nB,EACAimB,EACA8B,EACAC,GACAC,KAAEA,EAAI1c,IAAEA,IAGV,MAAM2c,EAAU,IAAI3kB,EACdpH,EAAO8rB,EAAOL,QAAaltB,EACjC,IACIytB,EACAvD,EAFAwD,EAAQ,IAAI1vB,IAIc,iBAAnBqvB,EACTnD,EAAWmD,EAEX/nB,EAAUpD,YAAYmrB,GAAgBld,KAAK,EAAG/I,YAAc3E,KAAAA,OAE1D,GADAgrB,OAAWztB,EACPyC,IACFynB,EAAWhjB,EAAazE,KAAKA,EAAM6C,EAAU7I,IAAIY,KAC7CmwB,EAAQvvB,MAAM,CAEhB,MAAM0vB,EAAWC,IAEjB,GAAID,EAAS1vB,KAAM,CAEjB,MAAM4vB,EAAQ,IACT5nB,EACC4J,EAAM8d,EAAUluB,GAAQ6tB,EAAO7tB,IAC/BqQ,IAIF+d,EAAMzc,QACRoc,EAAQpkB,KAAKykB,EAAO,QAQhC,MAAMC,EAAWxoB,EAAU7I,IAAI+I,GAAdF,EA2GjB,SAAgBI,GAEd,MAAMmoB,EAAa,GACbE,EAAe,GAErBroB,EAAUrH,QAAQsH,IAChBC,EACIK,EACI4J,EAAMhK,EAAUF,EAASG,cAAekoB,GACxCle,GAEJrQ,GAAQsuB,EAAQzgB,KAAK7N,IAEzBmG,EACIK,EACI4J,EAAMhK,EAAUF,EAASO,YAAa+nB,GACtCne,GAEJrQ,GAAQouB,EAAMvgB,KAAK7N,OAGrBouB,EAAMzc,QAAU2c,EAAQ3c,SAC1Boc,EAAQpkB,KAAKykB,EAAOE,MAhIxB,IAAIG,EAEJ,MAAM/W,EAAWtF,EAAsB9D,IAErC,MAAMogB,GAAiBX,EAAQvvB,KACzB8S,EAASyc,EAAQjqB,GAAGwK,GAO1B,OALIogB,IACFP,IACAE,EAASznB,QAAQklB,EAAM9pB,IAGlB0K,EAAY5J,IACjBwO,EAAO3E,IAAI7J,GACNirB,EAAQvvB,MACX6vB,EAASM,eAEV9sB,MAAMyP,KAELnO,EAAOkL,EAAgCqJ,EAASpO,KAAK,IAAMmlB,GAAW,IAAM,CAACA,IAC7EG,EACFlX,EAASpO,KAAK,CAAC8kB,EAAOE,IAAY/kB,EAASnL,EAAUuC,GAAGytB,GAAQhwB,EAAUuC,GAAG2tB,KAC3EO,EAAQxgB,EAA2DC,IAEvE,MAAMwgB,EAAiB,IAAI1lB,EAE3B0lB,EAAehrB,GAAGwK,GAClBwgB,EAAenlB,KAAK8kB,EAAUrwB,EAAUuC,GAAG,KAE3CiuB,EAActgB,KAEV9O,EAA0BuvB,EAAc5rB,GAAMgL,KAAK7E,KAAK+e,GAEzDjX,GACH0a,EAAKkD,iBAAiB,kBAAmBprB,IAEvC,MAAMxG,EAAUwG,EAAMoB,OAEtB,GAAIipB,EAAMnsB,IAAI1E,GAAU,CAEtB,MAAM4C,EAAO6tB,EAAOzwB,GAEpB2wB,EAAQpkB,KAAK,CAAC3J,GAAO,OAmC3B,OAAOyuB,EAAW,IA9BlB,cAA8BQ,GAE5BvX,eACE,OAAOA,EAGTvU,WACE,OAAOA,EAGT0rB,YACE,OAAOA,EAGTrvB,YACE,OAAOA,EAGTrC,CAACsB,OAAOC,YACN,OAAO8jB,EAAYwL,IAAaA,EAAWxnB,EACvC4J,EAaC2d,EAAQvvB,KAAOyvB,EAAQE,IAXpB/wB,GAAWywB,EAAOzwB,IAEtBiT,OAYR,SAAS8d,IAEP,OADAH,OAAWztB,EACJ0tB,EAGT,WAEE,MAAMiB,EAAMzE,EAEZ,IAAKyE,EACH,OAAO,IAAI3wB,IAEb,GAAIuvB,EACF,OAAO,IAAIvvB,IAAI6H,EAAU0lB,EAAKpE,iBAAiBwH,KAEjD,OAAO,IAAI3wB,IACPiI,EACIJ,EAAU0lB,EAAKqD,UACftwB,GAAQA,EAAKuwB,QAAQF,KAhBdG,GA+CjB,SAASb,EAAQxuB,GACf,GAAKD,GAAUC,GAGf,OAAIyqB,GAAYzqB,EAAKovB,QAAQ3E,KAAcwD,EAAMnsB,IAAI9B,IACnDiuB,EAAMnvB,IAAIkB,GACH6tB,EAAO7tB,SAFhB,EAOF,SAASuuB,EAAWvuB,GAClB,GAAKD,GAAUC,IAGViuB,EAAMva,OAAO1T,GAGlB,OAAO6tB,EAAO7tB,GAAM,ICzMxB,MAAMsvB,GAKJnyB,YAA6BoyB,EAAgCnyB,GAAhCE,SAAAiyB,EAAgCjyB,aAAAF,EAH5CE,eAAY,IAAIgW,IAMjC+a,eACE,GAAI/wB,KAAKkyB,UACP,OAAOlyB,KAAKkyB,UAGd,MAAMC,EAAqCnyB,KAAKiyB,IAAIvyB,IAAIS,IAAyBiJ,iBAEjF,OAAOpJ,KAAKkyB,UAAY,IAAIC,EAASxpB,GAAa3I,KAAKsiB,QAAQ3Z,IAGjE9I,QAAQ6F,EAAcsL,GAEpB,MAAMqU,EAAOrlB,KACP+wB,EAAW/wB,KAAK+wB,SAChBllB,EAAU7L,KAAKoyB,SAAS1sB,GACxBwM,EAAMiU,EAAcnV,GACpBgD,EAASnI,EAAQrF,GAAG,CACxBwN,OAAQ5E,EAAY,KAClBpP,KAAKqyB,UAAUjc,OAAO1Q,GACtBqrB,EAASM,aACLrxB,KAAKqyB,UAAUnxB,KACjBoxB,IAEAtyB,KAAKkyB,eAAYjvB,IAElBsB,MAAM2N,EAAI8B,QACbe,QAAS,CAACxU,EAAK8G,EAAUC,IAAa4K,EAAI6C,QAAQxU,EAAK8G,EAAUC,KAMnE,OAHAypB,EAASM,aACTiB,IAEOte,EAEP,SAASse,IACPjN,EAAK/C,QAAQyO,EAASwB,eACtBxB,EAASznB,QAAQ+b,EAAKvlB,QAAS,CAC7BwY,YAAY,EACZC,mBAAmB,EACnBN,gBAAiB,IAAIoN,EAAKgN,UAAUra,WAKlCnY,QAAQ8I,GACdA,EAAUrH,QAAQsH,IAEhB,MAAMwP,EAAgBxP,EAASwP,cACzBvM,EAAU7L,KAAKqyB,UAAU3yB,IAAI0Y,GAE/BvM,GACFA,EAAQQ,KAAKrM,KAAKF,QAAQuY,aAAaD,GAA0BxP,EAAStB,YAKxEzH,SAAS6F,GAEf,MAAMmG,EAAU,IAAIC,EAIpB,OAFA9L,KAAKqyB,UAAUhc,IAAI3Q,EAAMmG,GAElBA,GAKX,MAAM2mB,WAAyBC,EAK7B5yB,YACqBqyB,EACAQ,GAEnB3xB,QAHmBf,eAAAkyB,EACAlyB,WAAA0yB,EALJ1yB,cAAW,IAAI8L,EAS9B,IAAI6mB,EAAgBnN,IAEpBxlB,KAAKwG,GAAKsO,EAAU9D,IACbhR,KAAK4yB,SAAS1xB,OACjByxB,EAAgB3yB,KAAKkyB,UAAU5oB,QAC3BopB,EACA,CAACrrB,EAAUC,IAAatH,KAAK4yB,SAASvmB,KAAKhF,EAAUC,KAG3D0J,EAASgD,OAAOzP,MAAMouB,GACtB3yB,KAAK4yB,SAASpsB,GAAGwK,GAAUjC,QAAQvJ,IAC5BxF,KAAK4yB,SAAS1xB,MACjByxB,EAActjB,IAAI7J,OAM1B8G,SACE,OAAOtM,KAAKkyB,UAAUpyB,QAAQuY,aAAarY,KAAK0yB,OAGlDpmB,OAAO3L,GACLX,KAAKkyB,UAAUpyB,QAAQqZ,aAAanZ,KAAK0yB,MAAO/xB,GAGlDd,KAAK2F,GAEH,OADAxF,KAAK4yB,SAASrjB,KAAK/J,GACZxF,MAQX,MAAa6yB,GAKXhzB,YAAY+U,EAAsB9U,GAHjBE,YAAS,IAAIgW,IAI5BhW,KAAKkyB,UAAY,IAAIF,GAAmBpd,EAAI9U,GAG9CD,IAAI6F,GAEF,MAAMuQ,EAAWjW,KAAK6X,OAAOnY,IAAIgG,GAEjC,GAAIuQ,EACF,OAAOA,EAGT,MAAM6c,EAAU,IAAIN,GAAiBxyB,KAAKkyB,UAAWxsB,GAIrD,OAFA1F,KAAK6X,OAAOxB,IAAI3Q,EAAMotB,GAEfA,GCxJX,MAAMC,WAA2BN,EAK/B5yB,YACqBmzB,EACAC,GACnBlyB,QAFmBf,cAAAgzB,EACAhzB,UAAAizB,EALJjzB,cAAW,IAAI8L,EACxB9L,aAAUwlB,IAQlBhf,SACE,OAAOxG,KAAK4yB,SAASpsB,GAGvB3G,KAAKN,GAEH,MAAM2zB,EAAgB3zB,EAAQG,IAAI4Z,IAAgBiY,OtDOiB/xB,EsDPOQ,KAAKizB,KtDQ1E,CAAC7Z,GAAuB5Z,KADjC,IAAuEA,EsDLnEQ,KAAKmzB,QAAUD,EAAc9Y,SAAS,CACpCpG,OAAQ5E,IAAcL,QAAQvJ,GAAUxF,KAAK4yB,SAASrjB,KAAK/J,IAC3DuP,QAAS,CAAC8B,EAAMuc,EAAO/rB,EAAeC,IAAkBtH,KAAK4yB,SAASvmB,KAAKhF,EAAUC,KAIzFgF,SACE,OAAOtM,KAAKgzB,SAAShzB,KAAKizB,MAG5B3mB,OAAO3L,GACLX,KAAKgzB,SAAShzB,KAAKizB,MAAQtyB,EAG7Bd,KAAK2F,GAEH,OADAxF,KAAKmzB,QAAQ9jB,IAAI7J,GACVxF,MAQX,MAAaqzB,GAKXxzB,YAA6BmzB,GAAAhzB,cAAAgzB,EAHZhzB,YAAS,IAAIgW,IAM9BnW,KAAKN,GACHS,KAAKoQ,SAAW7Q,EAChBS,KAAKszB,OAAOhyB,QAAQiyB,GAAQA,EAAKrsB,KAAK3H,IAGxCM,IAAOL,GAEL,MAAMyW,EAAWjW,KAAKszB,OAAO5zB,IAAIF,GAEjC,GAAIyW,EACF,OAAOA,EAGT,MAAM6c,EAAU,IAAIC,GAAqB/yB,KAAKgzB,SAAUxzB,GAOxD,OALIQ,KAAKoQ,UACP0iB,EAAQ5rB,KAAKlH,KAAKoQ,UAEpBpQ,KAAKszB,OAAOjd,IAAI7W,EAAKszB,GAEdA,GC5DX,MAAMU,GAAoCryB,OAAO,gBAEjD,MAAM6uB,WAAoByD,GAKxB5zB,YAA6BoyB,EAAgCnyB,GAC3DiB,QAD2Bf,SAAAiyB,EAAgCjyB,aAAAF,EAE3DE,KAAK6X,OAAS,IAAIgb,GAAeZ,EAAKnyB,GACtCE,KAAKszB,OAAS,IAAID,GAAevzB,GAChCA,EAAgB0zB,IAAuBxzB,KAExC,MAAMT,EAAWO,EAAgBiH,IAE7BxH,EACFS,KAAK0zB,MAAMn0B,GAEXO,EAAQ4xB,iBAAiB,kBAAmBprB,GAAStG,KAAK0zB,MAAOptB,EAAyB/G,UAI9FA,cACE,OAAQS,KAAKF,QAAgBiH,IAG/B0lB,aAEE,MAAMA,EAASzsB,KAAKF,QAAQ2P,cAE5B,OAAiB,MAAVgd,EAAiBkH,GAAc3zB,KAAKiyB,IAAKxF,GAAU,KAG5D5sB,OAAOstB,EAAwCplB,GAC7C,OA+BJ,SACI6M,EACA4Z,EACArB,EACAplB,EAAkC,IAGpC,MAAMM,EAAUuM,EAAGlV,IAAImI,IAEvB,GAAIE,EAAK+L,IACP,OAAOuc,GACHzb,EACA4Z,EACArB,EACA,CAACrtB,EAAS8zB,IAAaD,GAAc/e,EAAI9U,EAAS8zB,GAClD7rB,GAGN,OAAOsoB,GACHzb,EACA4Z,EACArB,EACA,CAACrtB,EAAS8zB,KACR,GAAIvrB,EAAQvI,GACV,OAAO6zB,GAAc/e,EAAI9U,EAAS8zB,IAItC7rB,GA3DK8rB,CAAY7zB,KAAKiyB,IAAKjyB,KAAKF,QAASqtB,EAAUplB,GAGvDlI,UAAU6F,GACR,OAAO1F,KAAK6X,OAAOnY,IAAIgG,GAGzB7F,SAAYL,GACV,OAAOQ,KAAKszB,OAAO5zB,IAAIF,GAGjBK,MAAMN,GACZS,KAAKszB,OAAOpsB,KAAK3H,IAQrB,SAAgBo0B,GAAc/e,EAAsB9U,EAAkB8zB,GAEpE,MAAME,EAA2Bh0B,EAAgB0zB,IAEjD,OAAII,GAAYE,EACPA,EAGF,IAAI9D,GAAYpb,EAAI9U,GCzE7B,MAIMi0B,GAA4C,CAChDxvB,MAAOkV,GACP5Z,MAAM4E,GACJA,EAAM+J,aAAa,CACjBvD,EAAGglB,GACHpb,GAAGtV,GACMo0B,GAAcp0B,EAAQG,IAAIR,IAAmBK,EAAQO,aAWpE,MAAak0B,GAEX7vB,WAAYA,MACV,OAAO4vB"}