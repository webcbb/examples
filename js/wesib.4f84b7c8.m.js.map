{"version":3,"file":"wesib.4f84b7c8.m.js","sources":["../../node_modules/@wesib/wesib/src/boot/bootstrap-context.key.impl.ts","../../node_modules/@wesib/wesib/src/boot/bootstrap-context.ts","../../node_modules/@wesib/wesib/src/boot/bootstrap-default.ts","../../node_modules/@wesib/wesib/src/component/definition/component-factory.ts","../../node_modules/@wesib/wesib/src/boot/globals/bootstrap-window.ts","../../node_modules/@wesib/wesib/src/boot/globals/default-namespace-aliaser.ts","../../node_modules/@wesib/wesib/src/boot/globals/bootstrap-root.ts","../../node_modules/@wesib/wesib/src/common/types.impl.ts","../../node_modules/@wesib/wesib/src/common/array-set.ts","../../node_modules/@wesib/wesib/src/common/classes.ts","../../node_modules/@wesib/wesib/src/common/functions.ts","../../node_modules/@wesib/wesib/src/common/is-element.ts","../../node_modules/@wesib/wesib/src/common/meta-accessor.ts","../../node_modules/@wesib/wesib/src/common/promises.ts","../../node_modules/@wesib/wesib/src/feature/feature-def.ts","../../node_modules/@wesib/wesib/src/feature/feature.decorator.ts","../../node_modules/@wesib/wesib/src/feature/feature-context.ts","../../node_modules/@wesib/wesib/src/feature/feature-needs-error.ts","../../node_modules/@wesib/wesib/src/feature/feature-ref.ts","../../node_modules/@wesib/wesib/src/component/component-def.ts","../../node_modules/@wesib/wesib/src/component/component.decorator.ts","../../node_modules/@wesib/wesib/src/component/component-context.key.impl.ts","../../node_modules/@wesib/wesib/src/component/component-event.key.impl.ts","../../node_modules/@wesib/wesib/src/component/content-root.ts","../../node_modules/@wesib/wesib/src/component/state-updater.ts","../../node_modules/@wesib/wesib/src/component/component-context.ts","../../node_modules/@wesib/wesib/src/component/component-event.ts","../../node_modules/@wesib/wesib/src/component/component-mount.ts","../../node_modules/@wesib/wesib/src/boot/globals/element-adapter.ts","../../node_modules/@wesib/wesib/src/boot/globals/element-observer.ts","../../node_modules/@wesib/wesib/src/boot/impl/component-factory.symbol.impl.ts","../../node_modules/@wesib/wesib/src/component/definition/custom-elements.ts","../../node_modules/@wesib/wesib/src/component/definition/definition.context.key.impl.ts","../../node_modules/@wesib/wesib/src/component/definition/element-def.ts","../../node_modules/@wesib/wesib/src/component/definition/definition-context.ts","../../node_modules/@wesib/wesib/src/boot/impl/bootstrap-context-registry.impl.ts","../../node_modules/@wesib/wesib/src/boot/impl/component-context-registry.impl.ts","../../node_modules/@wesib/wesib/src/boot/impl/definition-context-registry.impl.ts","../../node_modules/@wesib/wesib/src/boot/impl/post-def-setup.impl.ts","../../node_modules/@wesib/wesib/src/boot/impl/element-builder.impl.ts","../../node_modules/@wesib/wesib/src/boot/impl/unloader.impl.ts","../../node_modules/@wesib/wesib/src/feature/loader/component-registry.impl.ts","../../node_modules/@wesib/wesib/src/feature/loader/feature-loader.impl.ts","../../node_modules/@wesib/wesib/src/feature/loader/feature-request.impl.ts","../../node_modules/@wesib/wesib/src/feature/loader/feature-requester.impl.ts","../../node_modules/@wesib/wesib/src/boot/bootstrap/bootstrap-components.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-path.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-state-update.impl.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-def.impl.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-registrar.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-registry.impl.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attributes-support.feature.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute.decorator.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-changed.decorator.ts","../../node_modules/@wesib/wesib/src/feature/dom-properties/dom-property-path.ts","../../node_modules/@wesib/wesib/src/feature/state/component-state.ts","../../node_modules/@wesib/wesib/src/feature/state/state-support.feature.ts","../../node_modules/@wesib/wesib/src/feature/render/render-scheduler.ts","../../node_modules/@wesib/wesib/src/feature/render/element-render.ts","../../node_modules/@wesib/wesib/src/feature/render/render-support.feature.ts","../../node_modules/@wesib/wesib/src/feature/render/render.decorator.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/shadow-content-root.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/shadow-dom-event.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/shadow-root-builder.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/shadow-dom-support.feature.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/shadow-content-def.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/attach-shadow.decorator.ts","../../node_modules/@wesib/generic/src/fetch/fetch-agent-key.impl.ts","../../node_modules/@wesib/generic/src/fetch/http-fetch-agent.ts","../../node_modules/@wesib/generic/src/fetch/http-fetch.impl.ts","../../node_modules/@wesib/generic/src/fetch/http-fetch.ts","../../node_modules/@wesib/generic/src/input/component-in.ts","../../node_modules/@wesib/generic/src/tree/element-node.ts","../../node_modules/@wesib/generic/src/tree/element-node-list.impl.ts","../../node_modules/@wesib/generic/src/tree/node-attributes.impl.ts","../../node_modules/@wesib/generic/src/tree/node-properties.impl.ts","../../node_modules/@wesib/generic/src/tree/element-node.impl.ts","../../node_modules/@wesib/generic/src/tree/component-tree-support.feature.ts","../../node_modules/@wesib/generic/src/input/enable-component-in.ts","../../node_modules/@wesib/generic/src/input/component-in-control.ts","../../node_modules/@wesib/generic/src/navigation/navigation.event.ts","../../node_modules/@wesib/generic/src/navigation/navigation.ts","../../node_modules/@wesib/generic/src/navigation/navigation-agent.ts","../../node_modules/@wesib/generic/src/navigation/page-param.ts","../../node_modules/@wesib/generic/src/navigation/page-param-context.ts","../../node_modules/@wesib/generic/src/navigation/nav-history.impl.ts","../../node_modules/@wesib/generic/src/navigation/navigation.impl.ts","../../node_modules/@wesib/generic/src/navigation/navigation-support.feature.ts","../../node_modules/@wesib/generic/src/navigation/page-load/caching-page-loader.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-load-requests.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-load-agent.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-load-url-modifier.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-loader.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-load-param.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-cache-buster.impl.ts","../../node_modules/@wesib/generic/src/util/import-node.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-scripts-agent.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-style-agent.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-title-agent.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-load-support.feature.ts","../../node_modules/@wesib/generic/src/styp/component-style-producer.ts","../../node_modules/@wesib/generic/src/styp/component-styp-render.ts","../../node_modules/@wesib/generic/src/styp/element-id-class.impl.ts","../../node_modules/@wesib/generic/src/styp/component-style-producer.impl.ts","../../node_modules/@wesib/generic/src/styp/basic-style-producer-support.feature.ts","../../node_modules/@wesib/generic/src/styp/component-styp-options.ts","../../node_modules/@wesib/generic/src/styp/produce-style.decorator.ts","../../node_modules/@wesib/generic/src/styp/style-producer-support.feature.ts","../../node_modules/@wesib/generic/src/theme/theme.ts","../../node_modules/@wesib/generic/src/theme/theme-factory.ts","../../node_modules/@wesib/generic/src/theme/theme-style.ts","../../node_modules/@wesib/generic/src/theme/theme.impl.ts","../../node_modules/@wesib/generic/src/theme/theme-factory.impl.ts","../../node_modules/@wesib/generic/src/theme/theme-support.feature.ts"],"sourcesContent":["import { SingleContextKey } from 'context-values';\nimport { BootstrapContext } from './bootstrap-context';\n\n/**\n * @internal\n */\nexport const BootstrapContext__key = /*#__PURE__*/ new SingleContextKey<BootstrapContext>('bootstrap-context');\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, ContextValues } from 'context-values';\nimport { OnEvent } from 'fun-events';\nimport { Class } from '../common';\nimport { ComponentClass, ComponentFactory } from '../component/definition';\nimport { FeatureRef } from '../feature';\nimport { BootstrapContext__key } from './bootstrap-context.key.impl';\n\n/**\n * Components bootstrap context.\n *\n * An instance of this class is passed to [[FeatureDef.init]] method so that the feature can configure itself.\n *\n * Extends `BootstrapValues` interface. The values are {@link FeatureDef.set pre-configured} in feature definitions.\n *\n * @category Core\n */\nexport abstract class BootstrapContext extends ContextValues {\n\n  /**\n   * A key of bootstrap context value containing the bootstrap context itself.\n   */\n  static get [ContextKey__symbol](): ContextKey<BootstrapContext> {\n    return BootstrapContext__key;\n  }\n\n  /**\n   * An `OnEvent` sender of bootstrap readiness event.\n   *\n   * The registered receiver will be notified once bootstrap is complete.\n   *\n   * If bootstrap is complete already, the receiver will be notified immediately.\n   */\n  abstract readonly whenReady: OnEvent<[BootstrapContext]>;\n\n  /**\n   * Allows to wait for component definition.\n   *\n   * This corresponds to `window.customElements.whenDefined()` method.\n   *\n   * @param componentType  Component class constructor.\n   *\n   * @return A promise that is resolved to component factory when the given `componentType` is registered.\n   *\n   * @throws TypeError  If `componentType` does not contain a component definition.\n   */\n  abstract whenDefined<C extends object>(componentType: ComponentClass<C>): Promise<ComponentFactory<C>>;\n\n  /**\n   * Allows to loads the given `feature`.\n   *\n   * @param feature  The feature to load.\n   *\n   * @returns  Loaded feature reference.\n   */\n  abstract load(feature: Class): FeatureRef;\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKeyDefault } from 'context-values';\nimport { BootstrapContext } from './bootstrap-context';\n\n/**\n * Provides a default value for bootstrap context key.\n *\n * @param provide  A function accepting bootstrap context and target key as parameters, and returning either a default\n * value, or `null`/`undefined` if unknown.\n *\n * @returns A provider of default value for bootstrap context value key.\n */\nexport function bootstrapDefault<Value, Key extends ContextKey<any, any, any>>(\n    provide: (this: void, context: BootstrapContext, key: Key) => Value | null | undefined,\n): ContextKeyDefault<Value, Key> {\n  return (context, key) => {\n\n    const bootstrapContext = context.get(BootstrapContext);\n\n    return context === bootstrapContext ? provide(bootstrapContext, key) : bootstrapContext.get(key);\n  };\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { Class } from '../../common';\nimport { ComponentMount } from '../component-mount';\nimport { ComponentClass } from './component-class';\nimport { ElementDef } from './element-def';\n\nconst ComponentFactory__key = /*#__PURE__*/ new SingleContextKey<ComponentFactory>('component-factory');\n\n/**\n * A factory of components of particular type.\n *\n * @category Core\n * @typeparam T  A type of component.\n */\nexport abstract class ComponentFactory<T extends object = any> {\n\n  /**\n   * A key of definition context value containing a component factory.\n   */\n  static get [ContextKey__symbol](): ContextKey<ComponentFactory> {\n    return ComponentFactory__key;\n  }\n\n  /**\n   * Component class constructor.\n   */\n  abstract readonly componentType: ComponentClass<T>;\n\n  /**\n   * Custom element class constructor.\n   *\n   * It is an error accessing this property before the element class is created, e.g. from inside of\n   * `DefinitionListener` or `ComponentDef.define()` function. In these cases you may wish to add a `whenReady()`\n   * callback.\n   */\n  abstract readonly elementType: Class;\n\n  /**\n   * Custom element definition.\n   */\n  abstract readonly elementDef: ElementDef;\n\n  /**\n   * Mounts a component to arbitrary element.\n   *\n   * This method creates a component, but instead of creating a custom element for, it mounts it to the target\n   * `element`.\n   *\n   * It is up to the features to update the target element. They can use a `ComponentContext.mount` property to check\n   * whether the component is mounted or is constructed in standard way.\n   *\n   * The constructed component will be in disconnected state. To update its connection state either update a\n   * `ComponentMount.connected` property, or use a `connectTo()` method.\n   *\n   * @param element  Target element to mount new component to.\n   *\n   * @returns New component mount.\n   *\n   * @throws Error If target element is already bound to some component.\n   */\n  abstract mountTo(element: any): ComponentMount<T>;\n\n  /**\n   * Connects a component to arbitrary element.\n   *\n   * This method does the same as `mountTo()`, but also marks the mounted component as connected.\n   *\n   * @param element  Target element to mount new component to.\n   *\n   * @returns New component mount.\n   *\n   * @throws Error If target element is already bound to some component.\n   */\n  connectTo(element: any): ComponentMount<T> {\n\n    const mount = this.mountTo(element);\n\n    mount.connected = true;\n\n    return mount;\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\n\n/**\n * A window the components bootstrap is performed against.\n *\n * @category Core\n */\nexport type BootstrapWindow = Window & typeof globalThis;\n\n/**\n * A key of bootstrap context value containing a window instance the bootstrap is performed against.\n *\n * Target value defaults to current window.\n *\n * @category Core\n */\nexport const BootstrapWindow: SingleContextRef<BootstrapWindow> = /*#__PURE__*/ new SingleContextKey(\n    'window',\n    {\n      byDefault() {\n        return window;\n      },\n    },\n);\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport { NamespaceAliaser } from 'namespace-aliaser';\n\n/**\n * Namespace aliaser used by default.\n *\n * Maps namespaces to their unique aliases.\n *\n * @category Core\n */\nexport type DefaultNamespaceAliaser = NamespaceAliaser;\n\n/**\n * A key of bootstrap context value containing the default namespace aliaser.\n *\n * @category Core\n */\nexport const DefaultNamespaceAliaser: SingleContextRef<DefaultNamespaceAliaser> =\n    /*#__PURE__*/ new SingleContextKey<DefaultNamespaceAliaser>('default-namespace-aliaser');\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport { BootstrapWindow } from './bootstrap-window';\n\n/**\n * A window (e.g. DOM) element all bootstrapped components belong to.\n *\n * @category Core\n */\nexport type BootstrapRoot = any;\n\n/**\n * A key of bootstrap context value containing a bootstrap root.\n *\n * Target value defaults to document body of [[BootstrapWindow]].\n *\n * @category Core\n */\nexport const BootstrapRoot: SingleContextRef<BootstrapRoot> = /*#__PURE__*/ new SingleContextKey(\n    'bootstrap-root',\n    {\n      byDefault(ctx) {\n        return ctx.get(BootstrapWindow).document.body;\n      },\n    },\n);\n","/**\n * @internal\n */\nexport function isArray<T>(value: T | T[]): value is T[];\n\n/**\n * @internal\n */\nexport function isArray<T>(value: T | readonly T[]): value is readonly T[];\n\nexport function isArray<T>(value: T | readonly T[]): value is T[] {\n  return Array.isArray(value);\n}\n","/**\n * @module @wesib/wesib\n */\nimport { AIterable } from 'a-iterable';\nimport { isArray } from './types.impl';\n\n/**\n * @category Utility\n */\nexport class ArraySet<T> extends AIterable<T> {\n\n  readonly items: Set<T>;\n\n  constructor(value?: T | readonly T[]) {\n    super();\n    this.items = value == null ? new Set() : isArray(value) ? new Set(value) : new Set([value]);\n  }\n\n  get value(): T | T[] | undefined {\n    switch (this.items.size) {\n    case 0: return;\n    case 1: return this.items[Symbol.iterator]().next().value;\n    default: return [...this.items];\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.items[Symbol.iterator]();\n  }\n\n  add(...items: T[]): this {\n    items.forEach(item => this.items.add(item));\n    return this;\n  }\n\n  get size(): number {\n    return this.items.size;\n  }\n\n  merge(items: readonly T[] | T | undefined): this {\n    if (items == null) {\n      return this;\n    }\n    if (isArray(items)) {\n      return this.add(...items);\n    }\n    return this.add(items);\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\n/**\n * Arbitrary class constructor.\n *\n * @category Utility\n * @typeparam T  A type of object.\n */\nexport interface Class<T extends object = any> extends Function {\n  new(...args: any[]): T;\n  prototype: T;\n}\n\n/**\n * Detects super class of the given class optionally satisfying the given criteria.\n *\n * Traverses all class ancestors until reaches the one satisfying the given criteria, or stops when there is no more\n * ancestors.\n *\n * @category Utility\n * @param type  The class constructor to find super class of.\n * @param satisfying  The criteria of super class matching. It is a function accepting a super class constructor\n * as the only parameter and returning `true` if the given super class matches, or `false` otherwise. Always returns\n * `true` by default.\n *\n * @return A super class `satisfying` the given criteria, or `undefined` if there is no such super class, or there is no\n * super class at all (e.g. when `Object` is passed in).\n */\nexport function superClassOf(type: Class, satisfying: (type: Class) => boolean = () => true): Class | undefined {\n\n  const prototype = Object.getPrototypeOf(type.prototype);\n\n  if (prototype == null) {\n    return;\n  }\n\n  const superType = prototype.constructor as Class;\n\n  if (satisfying(superType)) {\n    return superType;\n  }\n\n  return superClassOf(superType, satisfying);\n}\n","/**\n * @module @wesib/wesib\n */\n/**\n * Merges two functions by calling one after another.\n *\n * Optionally merges function call results.\n *\n * @category Utility\n * @typeparam P  Function parameter types as tuple.\n * @typeparam R  A type of function result.\n * @typeparam T  A type if `this` object expected by function.\n * @param first  The first function to call.\n * @param second  The second function to call.\n * @param merge  Optional function call results merger. Accepts two function results as arguments and returns the final\n * result. When omitted the first function call result is ignored and the second function's call result is returned.\n *\n * @return A function that calls both of the given ones and merges their results. If one of the functions is absent,\n * then just returns another one. If both are absent, then returns `undefined`.\n */\nexport function mergeFunctions<P extends any[], R, T>(\n    first: (this: T, ...args: P) => R,\n    second: ((this: T, ...args: P) => R) | undefined,\n    merge: (first: R, second: R) => R): (this: T, ...args: P) => R;\n\nexport function mergeFunctions<P extends any[], R, T>(\n    first: ((this: T, ...args: P) => R) | undefined,\n    second: (this: T, ...args: P) => R,\n    merge?: (first: R, second: R) => R): (this: T, ...args: P) => R;\n\nexport function mergeFunctions<P extends any[], R, T>(\n    first: ((this: T, ...args: P) => R) | undefined,\n    second: ((this: T, ...args: P) => R) | undefined,\n    merge?: (first: R, second: R) => R): ((this: T, ...args: P) => R) | undefined;\n\nexport function mergeFunctions<P extends any[], R, T>(\n    first: ((this: T, ...args: P) => R) | undefined,\n    second: ((this: T, ...args: P) => R) | undefined,\n    merge: (first: R, second: R) => R = (_f, s) => s): ((this: T, ...args: P) => R) | undefined {\n  if (!first) {\n    return second;\n  }\n  if (!second) {\n    return first;\n  }\n  return function(this: T, ...args: P) {\n    return merge(\n      first.apply(this, args),\n      second.apply(this, args));\n  };\n}\n","/**\n * Checks whether the given DOM node is element.\n *\n * @param node  A DOM node to check.\n *\n * @returns `true` is `node` is element, or `false` otherwise.\n */\nexport function isElement(node: Node): node is Element {\n  return node.nodeType === Node.ELEMENT_NODE;\n}\n","/**\n * @module @wesib/wesib\n */\nimport { Class, superClassOf } from './classes';\n\n/**\n * @category Utility\n */\nexport abstract class MetaAccessor<M> {\n\n  readonly symbol: symbol;\n\n  protected constructor(symbol: symbol) {\n    this.symbol = symbol;\n  }\n\n  own(type: Class): M | undefined {\n    return type.hasOwnProperty(this.symbol) ? (type as any)[this.symbol] : undefined;\n  }\n\n  of(type: Class): M | undefined {\n\n    const ownDef: M | undefined = this.own(type);\n    const superType = superClassOf(type);\n    const superDef = superType && this.of(superType);\n\n    return ownDef ? (superDef ? this.merge(superDef, ownDef) : ownDef) : superDef;\n  }\n\n  define<C extends Class>(type: C, ...defs: M[]): C {\n\n    const prevDef = this.own(type);\n    const def = prevDef ? this.merge(prevDef, ...defs) : this.merge(...defs);\n\n    Object.defineProperty(\n        type,\n        this.symbol,\n        {\n          configurable: true,\n          value: def,\n        },\n    );\n\n    return type;\n  }\n\n  abstract merge(...defs: M[]): M;\n\n}\n","/**\n * @module @wesib/wesib\n */\n/**\n * @category Utility\n */\nexport class PromiseResolver<T = void> {\n\n  readonly promise: Promise<T>;\n  private _resolve!: (value: T) => void;\n  private _reject!: (error: any) => void;\n\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  resolve(value: T) {\n    this._resolve(value);\n  }\n\n  reject(error: any) {\n    this._reject(error);\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { BootstrapSetup } from '../boot';\nimport { ArraySet, Class, mergeFunctions, MetaAccessor } from '../common';\nimport { FeatureContext } from './feature-context';\n\n/**\n * A key of a property holding a feature definition within its class constructor.\n *\n * @category Core\n */\nexport const FeatureDef__symbol = /*#__PURE__*/ Symbol('feature-def');\n\n/**\n * Feature definition.\n *\n * @category Core\n */\nexport interface FeatureDef {\n\n  /**\n   * Features this one requires.\n   */\n  readonly needs?: Class | readonly Class[];\n\n  /**\n   * Features this one provides.\n   *\n   * The feature always provides itself.\n   */\n  readonly has?: Class | readonly Class[];\n\n  /**\n   * Sets up bootstrap.\n   *\n   * This method is called before bootstrap context created.\n   *\n   * @param setup  Bootstrap setup.\n   */\n  setup?(setup: BootstrapSetup): void;\n\n  /**\n   * Bootstraps this feature by calling the given bootstrap context constructed.\n   *\n   * @param context  Feature initialization context.\n   */\n  init?(context: FeatureContext): void;\n\n}\n\nclass FeatureMeta extends MetaAccessor<FeatureDef> {\n\n  constructor() {\n    super(FeatureDef__symbol);\n  }\n\n  merge(...defs: readonly FeatureDef[]): FeatureDef {\n    return defs.reduce<FeatureDef>(\n        (prev, def) => ({\n          needs: new ArraySet(prev.needs).merge(def.needs).value,\n          has: new ArraySet(prev.has).merge(def.has).value,\n          setup: mergeFunctions<[BootstrapSetup], void, Class>(prev.setup, def.setup),\n          init: mergeFunctions<[FeatureContext], void, Class>(prev.init, def.init),\n        }),\n        {},\n    );\n  }\n\n}\n\nconst meta = /*#__PURE__*/ new FeatureMeta();\n\n/**\n * @category Core\n */\nexport const FeatureDef = {\n\n  /**\n   * Extracts a feature definition from its type.\n   *\n   * @param featureType  Target feature class constructor.\n   *\n   * @returns A feature definition. May be empty when there is no feature definition found in the given `featureType`.\n   */\n  of(this: void, featureType: Class): FeatureDef {\n    return meta.of(featureType) || {};\n  },\n\n  /**\n   * Merges multiple feature definitions.\n   *\n   * @param defs  Feature definitions to merge.\n   *\n   * @returns Merged feature definition.\n   */\n  merge(this: void, ...defs: readonly FeatureDef[]): FeatureDef {\n    return meta.merge(...defs);\n  },\n\n  /**\n   * Defines a feature.\n   *\n   * Either creates new or extends an existing feature definition and stores it under `[FeatureDef__symbol]` key.\n   *\n   * @typeparam T  Feature type.\n   * @param type  Feature class constructor.\n   * @param defs  Feature definitions.\n   *\n   * @returns The `type` instance.\n   */\n  define<T extends Class>(this: void, type: T, ...defs: readonly FeatureDef[]): T {\n    return meta.define(type, ...defs);\n  },\n\n};\n","/**\n * @module @wesib/wesib\n */\nimport { Class, TypedClassDecorator } from '../common';\nimport { FeatureDef } from './feature-def';\n\n/**\n * Feature class decorator.\n *\n * Decorate a class with this decorator to define it as a feature like this:\n * ```TypeScript\n * @Feature({ needs: [OtherFeature, MyComponent] })\n * class MyFeature {\n *   // ...\n * }\n * ```\n *\n * Such feature can be passed to [[bootstrapComponents]] function or referenced by other features.\n *\n * This is an alternative to direct call to [[FeatureDef.define]] method.\n *\n * @category Core\n * @typeparam T  A type of decorated feature class.\n * @param def  Feature definition.\n *\n * @returns A feature class decorator.\n */\nexport function Feature<T extends Class = any>(def: FeatureDef): TypedClassDecorator<T> {\n  return (type: T) => FeatureDef.define(type, def);\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, ContextValueSpec, SingleContextKey } from 'context-values';\nimport { OnEvent } from 'fun-events';\nimport { BootstrapContext, BootstrapSetup } from '../boot';\nimport { Class } from '../common';\nimport { ComponentContext } from '../component';\nimport { ComponentClass, ComponentFactory, DefinitionContext, DefinitionSetup } from '../component/definition';\nimport { FeatureRef } from './feature-ref';\n\nconst FeatureContext_key = new SingleContextKey<FeatureContext>('feature-context');\n\n/**\n * Feature initialization context.\n */\nexport abstract class FeatureContext extends BootstrapContext implements BootstrapSetup {\n\n  /**\n   * A key of feature context value containing the feature context itself.\n   */\n  static get [ContextKey__symbol](): ContextKey<FeatureContext> {\n    return FeatureContext_key;\n  }\n\n  /**\n   * Feature class this context is created for.\n   */\n  abstract readonly feature: Class;\n\n  abstract readonly whenReady: OnEvent<[FeatureContext]>;\n\n  abstract readonly onDefinition: OnEvent<[DefinitionContext]>;\n\n  abstract readonly onComponent: OnEvent<[ComponentContext]>;\n\n  /**\n   * Provides bootstrap context value.\n   *\n   * Note that this happens when bootstrap context already exists. To provide a value before bootstrap context created\n   * a [[BootstrapSetup.provide]] method can be used.\n   *\n   * @typeparam Deps  Dependencies tuple type.\n   * @typeparam Src  Source value type.\n   * @typeparam Seed  Value seed type.\n   * @param spec  Context value specifier.\n   *\n   * @returns A function that removes the given context value specifier when called.\n   */\n  abstract provide<Deps extends any[], Src, Seed>(\n      spec: ContextValueSpec<BootstrapContext, any, Deps, Src, Seed>,\n  ): () => void;\n\n  abstract perDefinition<Deps extends any[], Src, Seed>(\n      spec: ContextValueSpec<DefinitionContext, any, Deps, Src, Seed>,\n  ): () => void;\n\n  abstract perComponent<Deps extends any[], Src, Seed>(\n      spec: ContextValueSpec<ComponentContext, any, Deps, Src, Seed>,\n  ): () => void;\n\n  abstract setupDefinition<T extends object>(componentType: ComponentClass<T>): OnEvent<[DefinitionSetup]>;\n\n  /**\n   * Defines a component.\n   *\n   * Creates a custom element according to component definition, and registers it with custom elements registry.\n   *\n   * Note that custom element definition will happen only when all features configuration complete.\n   *\n   * @typeparam T  A type of component.\n   * @param componentType  Component class constructor.\n   *\n   * @return Custom element class constructor registered as custom element.\n   *\n   * @throws TypeError  If `componentType` does not contain a component definition.\n   */\n  abstract define<T extends object>(componentType: ComponentClass<T>): void;\n\n  whenDefined<C extends object>(componentType: ComponentClass<C>): Promise<ComponentFactory<C>> {\n    return this.get(BootstrapContext).whenDefined(componentType);\n  }\n\n  load(feature: Class): FeatureRef {\n    return this.get(BootstrapContext).load(feature);\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { Class } from '../common';\n\n/**\n * Feature need.\n *\n * Indicates why one feature needs another one. The reason can be one of:\n *\n * - `needs` when feature {@link FeatureDef.needs depends} on another one, or\n * - `has` when feature {@link FeatureDef.has provides} another one.\n */\nexport type FeatureNeed = [Class, 'needs' | 'has', Class];\n\n/**\n * An error in feature needs. I.e. circular dependency.\n */\nexport class FeatureNeedsError extends Error {\n\n  /**\n   * Feature needs causing this error.\n   */\n  readonly needs: readonly FeatureNeed[];\n\n  /**\n   * Constructs feature needs error.\n   *\n   * @param needs  Feature needs causing the error.\n   */\n  constructor(needs: readonly FeatureNeed[]) {\n    super(\n        'Circular feature needs: '\n        + needs.reduce(\n        (prev, [feature, reason, need]) =>\n            (prev ? prev : feature.name) + ` ${reason} ${need.name}`, ''));\n    this.needs = needs;\n  }\n\n}\n","/**\n * @module wesib/wesib\n */\nimport { AfterEvent, AfterEvent__symbol, EventKeeper } from 'fun-events';\nimport { FeatureStatus } from './feature-status';\n\n/**\n * Dynamically loaded feature reference.\n *\n * It is returned from [[BootstrapContext.load]] and can be used to read feature load status and unload it.\n *\n * Implements an `EventKeeper` interface by sending a feature load status updates.\n */\nexport abstract class FeatureRef implements EventKeeper<[FeatureStatus]> {\n\n  /**\n   * An `AfterEvent` sender of feature load status updates.\n   *\n   * The `[AfterEvent__symbol]` property is an alias of this one.\n   */\n  abstract readonly read: AfterEvent<[FeatureStatus]>;\n\n  get [AfterEvent__symbol](): AfterEvent<[FeatureStatus]> {\n    return this.read;\n  }\n\n  /**\n   * A promise resolved when feature is unloaded.\n   *\n   * This happens after all feature references dismissed.\n   */\n  abstract readonly down: Promise<void>;\n\n  /**\n   * Dismisses feature reference.\n   *\n   * When all feature references dismissed, then unloads the feature. This removes everything set up by the\n   * feature via [[BootstrapSetup]] and [[DefinitionSetup]].\n   *\n   * @param reason  Arbitrary reason of feature reference dismiss. This will be reported by load status supplies\n   * as their cut off reason.\n   *\n   * @returns A promise resolved when feature is unloaded. This happens only after all feature references dismissed.\n   */\n  abstract dismiss(reason?: any): Promise<void>;\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { QualifiedName } from 'namespace-aliaser';\nimport { mergeFunctions, MetaAccessor } from '../common';\nimport { FeatureDef } from '../feature';\nimport { ComponentClass, DefinitionContext, DefinitionSetup, ElementDef } from './definition';\n\n/**\n * A key of a property holding a component definition within its class constructor.\n *\n * @category Core\n */\nexport const ComponentDef__symbol = /*#__PURE__*/ Symbol('component-def');\n\n/**\n * Component definition.\n *\n * A custom element class will be created for each registered component in accordance to this definition.\n *\n * @category Core\n * @typeparam T  A type of component.\n */\nexport interface ComponentDef<T extends object = any> {\n\n  /**\n   * Custom element name.\n   *\n   * The name may belong to some namespace to avoid naming conflicts. I.e. it can be either a string, or\n   * name/namespace tuple.\n   *\n   * When omitted an anonymous component will be registered. Such component is not bound to custom element, but it\n   * still can be mounted.\n   */\n  readonly name?: QualifiedName;\n\n  /**\n   * Existing element to extend by custom one.\n   */\n  readonly extend?: ElementDef.Extend;\n\n  /**\n   * Additional feature definition options.\n   */\n  readonly feature?: FeatureDef;\n\n  /**\n   * Sets up component definition.\n   *\n   * This method is called before component definition context constructed.\n   *\n   * @param setup  Component definition setup.\n   */\n  setup?(setup: DefinitionSetup<T>): void;\n\n  /**\n   * Defines this component by calling the given component definition context methods.\n   *\n   * This function is called before the custom element is defined.\n   *\n   * @param context  Component definition context.\n   */\n  define?(context: DefinitionContext<T>): void;\n\n}\n\nclass ComponentMeta extends MetaAccessor<ComponentDef> {\n\n  constructor() {\n    super(ComponentDef__symbol);\n  }\n\n  merge<T extends object>(...defs: ComponentDef<T>[]): ComponentDef<T> {\n    return defs.reduce(\n        (prev, def) => ({\n          ...prev,\n          ...def,\n          setup: mergeFunctions(prev.setup, def.setup),\n          define: mergeFunctions(prev.define, def.define),\n          feature: prev.feature\n              ? def.feature ? FeatureDef.merge(prev.feature, def.feature) : prev.feature\n              : def.feature,\n        }),\n        {},\n    );\n  }\n\n}\n\nconst meta = /*#__PURE__*/ new ComponentMeta();\nconst componentDefined = /*#__PURE__*/ Symbol('component-defined');\n\n/**\n * @category Core\n */\nexport const ComponentDef = {\n\n  /**\n   * Extracts a component definition from its type.\n   *\n   * @typeparam T  A type of component.\n   * @param componentType  Target component class constructor.\n   *\n   * @returns Component definition. May be empty if there is not definition attached to component type.\n   */\n  of<T extends object>(this: void, componentType: ComponentClass<T>): ComponentDef<T> {\n    return meta.of(componentType) as ComponentDef<T> || {};\n  },\n\n  /**\n   * Merges multiple (partial) component definitions.\n   *\n   * @typeparam T  A type of component.\n   * @param defs  Partial component definitions to merge.\n   *\n   * @returns Merged component definition.\n   */\n  merge<T extends object>(this: void, ...defs: ComponentDef<T>[]): ComponentDef<T> {\n    return meta.merge(...defs);\n  },\n\n  /**\n   * Defines a component.\n   *\n   * Either assigns new or extends an existing component definition and stores it under [[ComponentDef__symbol]] key.\n   *\n   * Note that each component is also a feature able to register itself, so it can be passed directly to\n   * [[bootstrapComponents]] function or added as a requirement of another feature.\n   *\n   * @typeparam T  A type of component.\n   * @param type  Component class constructor.\n   * @param defs  Component definitions.\n   *\n   * @returns The `type` instance.\n   */\n  define<T extends ComponentClass>(\n      this: void,\n      type: T,\n      ...defs: ComponentDef<InstanceType<T>>[]\n  ): T {\n\n    const def = ComponentDef.merge(...defs);\n\n    meta.define(type, def);\n    FeatureDef.define(type, ComponentDef.featureDef(type, def));\n\n    return type;\n  },\n\n  /**\n   * Builds feature definition for the given component definition.\n   *\n   * @param type  Target component type.\n   * @param def  Component definition.\n   *\n   * @returns New feature definition that defines the component and performs definitions from [[ComponentDef.feature]]\n   * property.\n   */\n  featureDef<T extends object>(this: void, type: ComponentClass<T>, def: ComponentDef<T>): FeatureDef {\n\n    const registrar: FeatureDef = {\n      init(context) {\n        if (context.feature === type && !type.hasOwnProperty(componentDefined)) {\n          Object.defineProperty(type, componentDefined, { value: 1 });\n          context.define(type);\n        }\n      },\n    };\n    const { feature } = def;\n\n    return feature ? FeatureDef.merge(feature, registrar) : registrar;\n  },\n\n};\n","/**\n * @module @wesib/wesib\n */\nimport { TypedClassDecorator } from '../common';\nimport { ComponentDef } from './component-def';\nimport { ComponentClass } from './definition';\n\n/**\n * Component class decorator.\n *\n * Decorate a class with this decorator to define a component like this:\n * ```TypeScript\n * @Component({ name: 'my-element' })\n * class MyComponent {\n *   // ...\n * }\n * ```\n *\n * Such component can be registered with [[BootstrapContext.define]] method, or used as a feature, e.g. passed to\n * [[bootstrapComponents]] function, or added to [[FeatureDef.needs]] property of another feature.\n *\n * This is an alternative to direct call to [[ComponentDef.define]] method.\n *\n * @category Core\n * @typeparam T  A type of decorated component class.\n * @param def  A component definition or just custom element name.\n *\n * @returns A component class decorator.\n */\nexport function Component<T extends ComponentClass = any>(\n    def: ComponentDef<InstanceType<T>> | string,\n): TypedClassDecorator<T> {\n  return (type: T) => ComponentDef.define(type, typeof def === 'string' ? { name: def } : def);\n}\n","import { SingleContextKey } from 'context-values';\nimport { ComponentContext } from './component-context';\n\n/**\n * @internal\n */\nexport const ComponentContext__key = /*#__PURE__*/ new SingleContextKey<ComponentContext>('component-context');\n","import { SingleContextKey } from 'context-values';\nimport { DomEventDispatcher, OnDomEvent } from 'fun-events';\nimport { ComponentContext } from './component-context';\nimport { ComponentEventDispatcher } from './component-event';\n\n/**\n * @internal\n */\nexport const ComponentEventDispatcher__key = /*#__PURE__*/ new SingleContextKey<ComponentEventDispatcher>(\n    'component-event-dispatcher',\n    {\n      byDefault() {\n        return {\n          dispatch(context: ComponentContext, event: Event): boolean {\n            return context.element.dispatchEvent(event);\n          },\n          on<E extends Event>(context: ComponentContext, type: string): OnDomEvent<E> {\n\n            const dispatcher = new DomEventDispatcher(context.element);\n\n            return dispatcher.on(type);\n          },\n        };\n      },\n    },\n);\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport { ComponentContext__key } from './component-context.key.impl';\n\n/**\n * Component content root node.\n *\n * @category Core\n */\nexport type ContentRoot = ParentNode;\n\n/**\n * A key of component context value containing a component root element.\n *\n * This is an element itself by default. But can be overridden e.g. by {@link AttachShadow @AttachShadow} decorator.\n *\n * @category Core\n */\nexport const ContentRoot: SingleContextRef<ContentRoot> = /*#__PURE__*/ new SingleContextKey<ContentRoot>(\n    'content-root',\n    {\n      byDefault(ctx) {\n        return ctx.get(ComponentContext__key).element;\n      },\n    },\n);\n","/**\n * @module @wesib/wesib\n */\nimport { noop, valueProvider } from 'call-thru';\nimport { FnContextKey, FnContextRef } from 'context-values';\nimport { StatePath } from 'fun-events';\n\n/**\n * Component state updater function.\n *\n * @category Core\n */\nexport type StateUpdater =\n/**\n * @typeparam V  Updated value type\n * @param path  Updated state node path.\n * @param newValue  New value.\n * @param oldValue  Replaced value.\n */\n    <V>(this: void, path: StatePath, newValue: V, oldValue: V) => void;\n\n/**\n * A key of component context value containing a component state updates receiver function.\n *\n * Features are calling this function by default when component state changes, e.g. attribute value or DOM property\n * modified.\n *\n * Note that this value is not provided, unless the `StateSupport` feature is enabled.\n *\n * @category Core\n */\nexport const StateUpdater: FnContextRef<Parameters<StateUpdater>> = /*#__PURE__*/ new FnContextKey(\n    'state-updater',\n    {\n      byDefault: valueProvider(noop),\n    },\n);\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, ContextValues } from 'context-values';\nimport { EventSupply, OnDomEvent, OnEvent, StatePath } from 'fun-events';\nimport { BootstrapContext__key } from '../boot/bootstrap-context.key.impl';\nimport { ComponentContext__key } from './component-context.key.impl';\nimport { ComponentEventDispatcher__key } from './component-event.key.impl';\nimport { ComponentMount } from './component-mount';\nimport { ContentRoot } from './content-root';\nimport { ComponentClass } from './definition';\nimport { StateUpdater } from './state-updater';\n\n/**\n * A key of a custom element and component properties containing a reference to component context.\n *\n * @category Core\n */\nexport const ComponentContext__symbol = /*#__PURE__*/ Symbol('component-context');\n\n/**\n * Component context.\n *\n * Passed to component constructor as its only parameter.\n *\n * Extends `ContextValues` interface. The values are provided by corresponding providers registered with\n * [[BootstrapContext.perComponent]] method.\n *\n * @category Core\n * @typeparam T  A type of component.\n */\nexport abstract class ComponentContext<T extends object = any> extends ContextValues {\n\n  /**\n   * A key of component context value containing the component context instance itself.\n   */\n  static get [ContextKey__symbol](): ContextKey<ComponentContext> {\n    return ComponentContext__key;\n  }\n\n  /**\n   * Component class constructor.\n   */\n  abstract readonly componentType: ComponentClass<T>;\n\n  /**\n   * Custom element constructed for the component according to its type.\n   *\n   * E.g. `HTMLElement` instance.\n   */\n  abstract readonly element: any;\n\n  /**\n   * A component instance.\n   *\n   * It is an error accessing this property before the component is created, e.g. from inside of component constructor\n   * or {@link DefinitionContext.onComponent component construction event} receiver. In these cases you may wish to\n   * add a [[whenReady]] callback.\n   */\n  abstract readonly component: T;\n\n  /**\n   * Component mount.\n   *\n   * This is defined when component is mounted to arbitrary element by [[ComponentFactory.mountTo]]. Ot is `undefined`\n   * for components created in standard way.\n   */\n  abstract readonly mount: ComponentMount<T> | undefined;\n\n  /**\n   * Whether the custom element is connected.\n   *\n   * This becomes `true` right before [[whenOn]] event is sent, and becomes `false` right before [[whenOff]] event is\n   * sent.\n   */\n  abstract readonly connected: boolean;\n\n  /**\n   * An `OnEvent` sender of custom element connection events.\n   *\n   * The registered receivers are called when custom element is connected, i.e. its `connectedCallback()` method is\n   * called. If component is connected already the receiver is called immediately.\n   *\n   * Sends a connection supply that is cut off once custom element is disconnected.\n   */\n  abstract readonly whenOn: OnEvent<[EventSupply]>;\n\n  /**\n   * An `OnEvent` sender of custom element disconnection events.\n   *\n   * The registered receivers are called when custom element is disconnected, i.e. its `disconnectedCallback()` method\n   * is called. If component is ready but disconnected, the receiver is called immediately.\n   */\n  abstract readonly whenOff: OnEvent<[]>;\n\n  /**\n   * An `OnEvent` sender of component readiness event.\n   *\n   * The component is constructed shortly after custom element. So the component may not exist when requested\n   * e.g. inside component constructor or {@link DefinitionContext.onComponent component construction event} receiver.\n   * The registered receiver will be notified when the component is constructed.\n   *\n   * If the component is constructed already, the receiver will be notified immediately.\n   */\n  abstract readonly whenReady: OnEvent<[this]>;\n\n  /**\n   * An `OnEvent` sender of component destruction reason event.\n   *\n   * The registered receiver is notified when [[destroy]] method is called. If the component is destroyed already\n   * the receiver is notified immediately.\n   */\n  abstract readonly whenDestroyed: OnEvent<[any]>;\n\n  /**\n   * Updates component's state.\n   *\n   * This is a shorthand for invoking a component {@link StateUpdater state updater} .\n   *\n   * Note that state update has no effect unless [[StateSupport]] feature is enabled or [[StateUpdater]] context value\n   * is provided by other means.\n   *\n   * @typeparam V  A type of changed value.\n   * @param key  Changed value key.\n   * @param newValue  New value.\n   * @param oldValue  Previous value.\n   */\n  readonly updateState: StateUpdater = updateComponentState.bind(this);\n\n  /**\n   * Extracts component context from its custom element or from component itself.\n   *\n   * @param element  Custom element instance created for the component or the component itself.\n   *\n   * @return Component context reference stored under [[ComponentContext__symbol]] key.\n   *\n   * @throws TypeError  When the given `element` does not contain component context reference.\n   */\n  static of<T extends object>(element: any): ComponentContext<T> {\n\n    const context = element[ComponentContext__symbol];\n\n    if (!context) {\n      throw TypeError(`No component context found in ${element}`);\n    }\n\n    return context;\n  }\n\n  /**\n   * Component content root.\n   *\n   * This is a shorthand for requesting a {@link ContentRoot content root} from component context.\n   */\n  get contentRoot(): ContentRoot {\n    return this.get(ContentRoot);\n  }\n\n  /**\n   * Returns a `super` property value inherited from custom element parent.\n   *\n   * @param key  Target property key.\n   */\n  abstract elementSuper(key: PropertyKey): any;\n\n  /**\n   * Returns a DOM event producer for the given event type.\n   *\n   * This is a shorthand for invoking a component event producer function available under\n   * `[ComponentEventProducer.key]` key.\n   *\n   * @param type  An event type to listen for.\n   *\n   * @returns A producer of DOM event events of the given type.\n   */\n  on<E extends Event>(type: string): OnDomEvent<E> {\n    return this.get(ComponentEventDispatcher__key).on(this, type);\n  }\n\n  /**\n   * Dispatches an event to component element.\n   *\n   * This is a shorthand for invoking a component {@link ComponentEventDispatcher event dispatcher}.\n   *\n   * @param event  An event to dispatch.\n   */\n  dispatchEvent(event: Event): void {\n    this.get(BootstrapContext__key).get(ComponentEventDispatcher__key).dispatch(this, event);\n  }\n\n  /**\n   * Destroys the component.\n   *\n   * Removes element from the DOM tree. I.e. disconnects custom element first.\n   *\n   * After this method call the component should no longer be used.\n   *\n   * Note that component destruction is virtual. It is up to developer to decide when component is no longer needed.\n   *\n   * @param reason  Optional reason of destruction.\n   */\n  abstract destroy(reason?: any): void;\n\n}\n\nfunction updateComponentState<V>(this: ComponentContext<any>, key: StatePath, newValue: V, oldValue: V) {\n  this.get(StateUpdater)(key, newValue, oldValue);\n}\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextRef } from 'context-values';\nimport { OnDomEvent } from 'fun-events';\nimport { ComponentContext } from './component-context';\nimport { ComponentEventDispatcher__key } from './component-event.key.impl';\n\n/**\n * Component event.\n *\n * Events of this type are thrown by various services to inform on component status changes.\n *\n * It is illegal to dispatch such events for elements not bound to components. It is reasonable to dispatch events\n * using [[ComponentEventDispatcher]] available in component context.\n *\n * The following event types supported:\n * - `wesib:component` is thrown when component is bound to element. I.e. when HTML element is upgraded to custom one\n *   defined by component, or component is bound to the element. This event bubbles and is not cancelable.\n *\n * @category Core\n * @event ComponentEvent#wesib:component\n */\nexport class ComponentEvent extends Event {\n\n  /**\n   * Constructs component event.\n   *\n   * @param type  Event type.\n   * @param eventInitDict  Event initialization dictionary.\n   */\n  constructor(type: string, eventInitDict?: EventInit) {\n    super(type, eventInitDict);\n  }\n\n  /**\n   * Target component context.\n   */\n  get context(): ComponentContext {\n    return ComponentContext.of(this.target);\n  }\n\n}\n\n/**\n * Component event dispatcher is used to listen for and dispatch component events.\n *\n * It is available in bootstrap context context.\n *\n * By default treats a component element as event target.\n *\n * @category Core\n */\nexport interface ComponentEventDispatcher {\n\n  /**\n   * Dispatches the DOM event for the given component.\n   *\n   * @param context  Target component context.\n   * @param event  An event to dispatch.\n   *\n   * @returns `true` if either event's `cancelable` attribute value is `false` or its `preventDefault()` method was not\n   * invoked, or `false` otherwise.\n   */\n  dispatch(context: ComponentContext, event: Event): boolean;\n\n  /**\n   * Returns an `OnDomEvent` sender of DOM events of the given type.\n   *\n   * @param context  Target component context.\n   * @param type  An event type to listen for.\n   *\n   * @returns A producer of DOM event events of the given type.\n   */\n  on<E extends Event>(context: ComponentContext, type: string): OnDomEvent<E>;\n\n}\n\n/**\n * A key of bootstrap context value containing component event dispatcher.\n *\n * @category Core\n */\nexport const ComponentEventDispatcher: SingleContextRef<ComponentEventDispatcher> =\n    /*#__PURE__*/ ComponentEventDispatcher__key;\n","/**\n * @module @wesib/wesib\n */\nimport { ComponentContext } from './component-context';\n\n/**\n * A mount of the component to an element.\n *\n * This is constructed when a component is mounted to arbitrary element by [[ComponentFactory.mountTo]] method.\n *\n * Mounted components do not maintain their connection state automatically. It is a calling code responsibility to set\n * their connection state by updating [[ComponentMount.connected]] property. E.g. by calling a\n * [[ComponentMount.checkConnected]] method. An [[ElementObserver]] and [[AutoConnectSupport]] feature could be used to\n * do it automatically.\n *\n * @category Core\n * @typeparam T  A type of component.\n */\nexport abstract class ComponentMount<T extends object = any> {\n\n  /**\n   * Mounted component context.\n   */\n  abstract readonly context: ComponentContext<T>;\n\n  /**\n   * Component connection state.\n   *\n   * Updating this property triggers appropriate listeners registered in [[ComponentContext]].\n   *\n   * The initial state is set by [[checkConnected]] method.\n   */\n  abstract connected: boolean;\n\n  /**\n   * Mounted component.\n   */\n  get component(): T {\n    return this.context.component;\n  }\n\n  /**\n   * An element the component is mounted to.\n   */\n  get element(): any {\n    return this.context.element;\n  }\n\n  /**\n   * Checks whether the mounted component element is actually connected to its owning document.\n   *\n   * Updates the `connected` property and returns its value.\n   *\n   * @returns `true` if the component element is connected, or `false` otherwise.\n   */\n  abstract checkConnected(): boolean;\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextUpKey, ContextUpRef, ContextValueOpts, ContextValues } from 'context-values';\nimport { AfterEvent, EventKeeper } from 'fun-events';\nimport { ComponentContext, ComponentContext__symbol } from '../../component';\n\n/**\n * Element adapter is a function able to convert a raw element to component. E.g. mount a component to it.\n *\n * Features may use it internally. E.g. an `AutoConnectSupport` applies it to each added DOM element.\n *\n * Multiple element adapters can be registered in bootstrap context.\n *\n * @category Core\n */\nexport type ElementAdapter =\n/**\n * @param element  Target raw element to adapt.\n *\n * @returns An adapted component's context, or `undefined` if element can not be adapted.\n */\n    (this: void, element: any) => ComponentContext | undefined;\n\nclass ElementAdapterKey extends ContextUpKey<ElementAdapter, ElementAdapter> {\n\n  constructor() {\n    super('element-adapter');\n  }\n\n  grow<Ctx extends ContextValues>(\n      opts: ContextValueOpts<\n          Ctx,\n          ElementAdapter,\n          EventKeeper<ElementAdapter[]> | ElementAdapter, AfterEvent<ElementAdapter[]>>,\n  ): ElementAdapter {\n\n    const defaultElementAdapter = (element: any) => element[ComponentContext__symbol];\n\n    let result: ElementAdapter;\n\n    opts.seed((...adapters) => {\n\n      const combined = adapters.reduce(\n          (prev, adapter) => (element: any) => prev(element) || adapter(element),\n          defaultElementAdapter,\n      );\n\n      result = combined !== defaultElementAdapter\n          ? combined\n          : opts.byDefault(() => defaultElementAdapter) || defaultElementAdapter;\n    });\n\n    return element => result(element);\n  }\n\n}\n\n/**\n * A key of bootstrap context value containing combined [[ElementAdapter]] instance.\n *\n * @category Core\n */\nexport const ElementAdapter: ContextUpRef<ElementAdapter, ElementAdapter> = /*#__PURE__*/ new ElementAdapterKey();\n","/**\n * @module wesib/wesib\n */\nimport { filterIt, itsEach, overArray } from 'a-iterable';\nimport { FnContextKey } from 'context-values';\nimport { isElement } from '../../common';\nimport { ComponentContext__symbol, ComponentMount } from '../../component';\nimport { bootstrapDefault } from '../bootstrap-default';\nimport { ElementAdapter } from './element-adapter';\n\n/**\n * Element mutations observer.\n *\n * It is a `MutationObserver` implementation that:\n * - always observes target's children,\n * - applies {@link ElementAdapter element adapter} to added elements,\n * - tracks mounted components {@link ComponentMount.connected connection state}.\n *\n * A function constructing element observer instance could be obtained from bootstrap context.\n */\nexport interface ElementObserver extends MutationObserver {\n\n  /**\n   * Configures the observer callback to begin receiving notifications of changes to the DOM that match the given\n   * options.\n   * To stop the MutationObserver (so that none of its callbacks will be triggered any longer), call\n   * [[disconnect]].\n   *\n   * @param target  A DOM node within the DOM tree to watch for changes, and to be the root of a subtree of nodes\n   * to be watched.\n   * @param options  An options that describe what DOM mutations should be reported to the observer's callback.\n   */\n  observe(target: Node, options?: ElementObserverInit): void;\n\n}\n\n/**\n * A key of bootstrap context value containing a function constructing a new [[ElementObserver]] instance.\n */\nexport const ElementObserver: FnContextKey<[MutationCallback], ElementObserver> = /*#__PURE__*/ new FnContextKey(\n    'element-observer',\n    {\n      byDefault: bootstrapDefault(bsContext => {\n\n        const adapter = bsContext.get(ElementAdapter);\n        class DefaultElementObserver extends MutationObserver implements ElementObserver {\n\n          constructor(callback: MutationCallback) {\n            super(mutations => {\n              mutations.forEach(mutation => {\n                itsEach(\n                    overArray(mutation.removedNodes),\n                    node => mountOf(node)?.checkConnected(),\n                );\n                itsEach(\n                    filterIt(\n                        overArray(mutation.addedNodes),\n                        isElement,\n                    ),\n                    element => adapter(element)?.mount?.checkConnected(),\n                );\n              });\n              callback(mutations, this);\n            });\n          }\n\n          observe(target: Node, options?: ElementObserverInit): void {\n            super.observe(target, { ...options, childList: true });\n          }\n\n        }\n\n        return callback => new DefaultElementObserver(callback);\n      }),\n    },\n);\n\n/**\n * Element observer initialization options.\n */\nexport interface ElementObserverInit extends MutationObserverInit {\n\n  /**\n   * Whether mutations to target's children are to be observed.\n   *\n   * Always `true`.\n   */\n  childList?: true;\n\n}\n\nfunction mountOf(node: any): ComponentMount | undefined {\n  return node[ComponentContext__symbol]?.mount;\n}\n","import { ComponentClass, ComponentFactory } from '../../component/definition';\n\n/**\n * @internal\n */\nexport const ComponentFactory__symbol = /*#__PURE__*/ Symbol('component-factory');\n\n/**\n * @internal\n */\nexport function componentFactoryOf<T extends object>(componentType: ComponentClass<T>): ComponentFactory<T> {\n\n  const factory = (componentType as any)[ComponentFactory__symbol];\n\n  if (!factory) {\n    throw new TypeError(`Component is not defined: ${componentType}`);\n  }\n\n  return factory;\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, ContextValues, SingleContextKey } from 'context-values';\nimport { html__naming, isQualifiedName, QualifiedName } from 'namespace-aliaser';\nimport { BootstrapWindow, DefaultNamespaceAliaser } from '../../boot/globals';\nimport { componentFactoryOf } from '../../boot/impl/component-factory.symbol.impl';\nimport { Class, PromiseResolver } from '../../common';\nimport { ComponentClass } from './component-class';\n\nconst CustomElements__key = /*#__PURE__*/ new SingleContextKey<CustomElements>(\n    'custom-elements',\n    {\n      byDefault: createCustomElements,\n    },\n);\n\n/**\n * Custom elements registry.\n *\n * This is used to register custom elements.\n *\n * Typically implemented by `window.customElements`.\n *\n * @category Core\n */\nexport abstract class CustomElements {\n\n  /**\n   * A key of bootstrap context value containing a `CustomElements` instance used to register custom\n   * elements.\n   *\n   * Target value defaults to `window.customElements` from the window provided under `[BootstrapWindow.key]`.\n   */\n  static get [ContextKey__symbol](): ContextKey<CustomElements> {\n    return CustomElements__key;\n  }\n\n  /**\n   * Defines custom element.\n   *\n   * @param componentTypeOrName  A component class constructor or custom element name. The latter may belong to\n   * namespace to avoid naming conflicts.\n   * @param elementType  A constructor of custom element to define.\n   */\n  abstract define(componentTypeOrName: ComponentClass | QualifiedName, elementType: Class): void;\n\n  /**\n   * Allows to wait for component definition.\n   *\n   * This corresponds to `window.customElements.whenDefined()` method.\n   *\n   * @param componentTypeOrName  Component class constructor or custom element name possibly belonging to some\n   * namespace.\n   *\n   * @return A promise that is resolved when custom element is registered.\n   *\n   * @throws TypeError If `componentType` does not contain a component definition.\n   */\n  abstract whenDefined(componentTypeOrName: ComponentClass | QualifiedName): Promise<void>;\n\n}\n\nfunction createCustomElements(values: ContextValues) {\n\n  const customElements: CustomElementRegistry = values.get(BootstrapWindow).customElements;\n  const nsAlias = values.get(DefaultNamespaceAliaser);\n\n  class WindowCustomElements extends CustomElements {\n\n    define(componentTypeOrName: ComponentClass | string, elementType: Class): void {\n      if (isQualifiedName(componentTypeOrName)) {\n        customElements.define(html__naming.name(componentTypeOrName, nsAlias), elementType);\n        return;\n      }\n\n      const factory = componentFactoryOf(componentTypeOrName);\n      const { name, extend } = factory.elementDef;\n\n      if (!name) {\n        componentResolver(componentTypeOrName).resolve(undefined);\n        return; // Anonymous component.\n      }\n      if (extend && extend.name) {\n        customElements.define(\n            html__naming.name(name, nsAlias),\n            elementType,\n            {\n              extends: extend.name,\n            });\n      } else {\n        customElements.define(html__naming.name(name, nsAlias), elementType);\n      }\n    }\n\n    whenDefined(componentTypeOrName: ComponentClass | string): Promise<void> {\n      if (isQualifiedName(componentTypeOrName)) {\n        return customElements.whenDefined(html__naming.name(componentTypeOrName, nsAlias));\n      }\n\n      const factory = componentFactoryOf(componentTypeOrName);\n      const { name } = factory.elementDef;\n\n      if (!name) {\n        return componentResolver(componentTypeOrName).promise;\n      }\n\n      return customElements.whenDefined(html__naming.name(name, nsAlias));\n    }\n\n  }\n\n  return new WindowCustomElements();\n}\n\nconst ComponentResolver__symbol = /*#__PURE__*/ Symbol('component-resolver');\n\nfunction componentResolver(componentType: ComponentClass): PromiseResolver<void> {\n  return (componentType as any)[ComponentResolver__symbol]\n      || ((componentType as any)[ComponentResolver__symbol] = new PromiseResolver());\n}\n","import { SingleContextKey } from 'context-values';\nimport { DefinitionContext } from './definition-context';\n\n/**\n * @internal\n */\nexport const DefinitionContext__key = /*#__PURE__*/ new SingleContextKey<DefinitionContext>('definition-context');\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport { QualifiedName } from 'namespace-aliaser';\nimport { BootstrapWindow } from '../../boot/globals';\nimport { Class } from '../../common';\nimport { ComponentDef } from '../component-def';\nimport { DefinitionContext__key } from './definition.context.key.impl';\n\n/**\n * Custom element definition meta.\n *\n * @category Core\n */\nexport interface ElementDef {\n\n  /**\n   * Custom element name.\n   *\n   * The name may belong to some namespace to avoid naming conflicts. I.e. it can be either a string, or\n   * name/namespace tuple.\n   *\n   * When omitted an anonymous component will be registered. Such component is not bound to custom element, but it\n   * still can be mounted.\n   */\n  readonly name?: QualifiedName;\n\n  /**\n   * Existing element to extend by custom one.\n   */\n  readonly extend: ElementDef.Extend;\n\n}\n\n/**\n * A key of definition context value containing a custom element definition.\n *\n * Target value defaults to `HTMLElement` from the window provided under `[BootstrapWindow.key]`,\n * unless `ComponentDef.extend.type` is specified.\n */\nexport const ElementDef: SingleContextRef<ElementDef> = /*#__PURE__*/ new SingleContextKey<ElementDef>(\n    'element-def',\n    {\n      byDefault(values) {\n\n        const componentType = values.get(DefinitionContext__key).componentType;\n        const { name, extend } = ComponentDef.of(componentType);\n\n        const elementExtend: ElementDef.Extend = {\n          get type() {\n            return extend && extend.type || values.get(BootstrapWindow).HTMLElement;\n          },\n          get name() {\n            return extend && extend.name;\n          },\n        };\n\n        return {\n          get name() {\n            return name;\n          },\n          get extend() {\n            return elementExtend;\n          },\n        };\n      },\n    },\n);\n\n/**\n * @category Core\n */\nexport namespace ElementDef {\n\n  /**\n   * The definition of element to extend by custom one.\n   */\n  export interface Extend {\n\n    /**\n     * The class constructor of element to extend.\n     */\n    readonly type: Class;\n\n    /**\n     * The name of element to extend.\n     *\n     * This is to support `as` attribute of standard HTML element. Note that this is not supported by polyfills.\n     */\n    readonly name?: string;\n\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, ContextValues, ContextValueSpec } from 'context-values';\nimport { OnEvent } from 'fun-events';\nimport { Class } from '../../common';\nimport { ComponentContext } from '../component-context';\nimport { ComponentClass } from './component-class';\nimport { DefinitionContext__key } from './definition.context.key.impl';\nimport { ElementDef } from './element-def';\n\n/**\n * Component definition context.\n *\n * Extends `ContextValues` interface. The values are provided by corresponding providers registered with\n * `BootstrapContext.perDefinition()` method. All [[BootstrapContext]] values are available too.\n *\n * @category Core\n * @typeparam T  A type of component.\n */\nexport abstract class DefinitionContext<T extends object = any> extends ContextValues {\n\n  /**\n   * A key of definition context value containing the definition context itself.\n   */\n  static get [ContextKey__symbol](): ContextKey<DefinitionContext> {\n    return DefinitionContext__key;\n  }\n\n  /**\n   * Component class constructor.\n   */\n  abstract readonly componentType: ComponentClass<T>;\n\n  /**\n   * Custom element class constructor.\n   *\n   * It is an error accessing this property before the element class is created, e.g. from inside of\n   * `DefinitionListener` or `ComponentDef.define()` function. In these cases you may wish to add a `whenReady()`\n   * callback.\n   */\n  abstract readonly elementType: Class;\n\n  /**\n   * An `OnEvent` sender of component definition readiness event.\n   *\n   * The custom element class is not constructed until component definition is complete.\n   * The registered receiver will be notified when the custom element class is constructed.\n   *\n   * If the custom element class is constructed already, the receiver will be notified immediately.\n   */\n  abstract readonly whenReady: OnEvent<[this]>;\n\n  /**\n   * Custom element definition.\n   */\n  get elementDef(): ElementDef {\n    return this.get(ElementDef);\n  }\n\n  /**\n   * An `OnEvent` sender of component construction events.\n   *\n   * The registered receiver will be notified right before the defined component is constructed.\n   */\n  abstract readonly onComponent: OnEvent<[ComponentContext<T>]>;\n\n  /**\n   * Provides a value available in the context of each component of the defined component type.\n   *\n   * @typeparam Deps  A type of dependencies.\n   * @typeparam Src  The type of context value sources.\n   * @typeparam Seed  Value seed type.\n   * @param spec  Component context value specifier.\n   *\n   * @returns A function that removes the given context value specifier when called.\n   */\n  abstract perComponent<Deps extends any[], Src, Seed>(\n      spec: ContextValueSpec<ComponentContext<T>, any, Deps, Src, Seed>,\n  ): () => void;\n\n}\n","import { ContextKey, ContextKey__symbol, ContextRegistry, ContextValues, SingleContextKey } from 'context-values';\nimport { BootstrapContext } from '../bootstrap-context';\n\nconst BootstrapContextRegistry__key =\n    /*#__PURE__*/ new SingleContextKey<BootstrapContextRegistry>('bootstrap-context-registry');\n\n/**\n * @internal\n */\nexport class BootstrapContextRegistry extends ContextRegistry<BootstrapContext> {\n\n  static get [ContextKey__symbol](): ContextKey<BootstrapContextRegistry> {\n    return BootstrapContextRegistry__key;\n  }\n\n  readonly values: ContextValues;\n\n  static create(): BootstrapContextRegistry {\n    return new BootstrapContextRegistry();\n  }\n\n  private constructor() {\n    super();\n    this.provide({ a: BootstrapContextRegistry, is: this });\n    this.values = this.newValues();\n  }\n\n}\n","import { ContextKey, ContextKey__symbol, ContextRegistry, ContextSeeds, SingleContextKey } from 'context-values';\nimport { ComponentContext } from '../../component';\nimport { bootstrapDefault } from '../bootstrap-default';\n\nconst ComponentContextRegistry__key = new SingleContextKey<ComponentContextRegistry>(\n    'component-context-registry',\n    {\n      byDefault: bootstrapDefault(() => new ComponentContextRegistry()),\n    },\n);\n\n/**\n * @internal\n */\nexport class ComponentContextRegistry extends ContextRegistry<ComponentContext> {\n\n  static get [ContextKey__symbol](): ContextKey<ComponentContextRegistry> {\n    return ComponentContextRegistry__key;\n  }\n\n  constructor(initial?: ContextSeeds<ComponentContext>) {\n    super(initial);\n  }\n\n}\n","import {\n  ContextKey,\n  ContextKey__symbol,\n  ContextRegistry,\n  ContextSeeds,\n  ContextValues,\n  SingleContextKey,\n} from 'context-values';\nimport { DefinitionContext } from '../../component/definition';\nimport { bootstrapDefault } from '../bootstrap-default';\n\nconst DefinitionContextRegistry__key = new SingleContextKey<DefinitionContextRegistry>(\n    'definition-context-registry',\n    {\n      byDefault: bootstrapDefault(context => new DefinitionContextRegistry(context)),\n    },\n);\n\n/**\n * @internal\n */\nexport class DefinitionContextRegistry extends ContextRegistry<DefinitionContext> {\n\n  static get [ContextKey__symbol](): ContextKey<DefinitionContextRegistry> {\n    return DefinitionContextRegistry__key;\n  }\n\n  constructor(initial?: ContextSeeds<DefinitionContext> | ContextValues) {\n    super(initial);\n  }\n\n}\n","import { nextArgs, nextSkip } from 'call-thru';\nimport { EventEmitter, onAny, OnEvent, onEventBy, trackValue } from 'fun-events';\nimport { superClassOf } from '../../common';\nimport { ComponentDef__symbol } from '../../component';\nimport { ComponentClass, DefinitionSetup } from '../../component/definition';\nimport { Unloader } from './unloader.impl';\n\n/**\n * @internal\n */\nexport function onPostDefSetup(\n    componentType: ComponentClass,\n    unloader: Unloader,\n): OnEvent<[DefinitionSetup]> {\n\n  const { on } = postDefSetup(componentType);\n\n  return onEventBy(receiver => {\n    on({\n      supply: receiver.supply.needs(unloader.supply),\n      receive(ctx, setup) {\n\n        const whenReady = setup.whenReady.tillOff(unloader.supply);\n\n        receiver.receive(ctx, {\n          get componentType() {\n            return setup.componentType;\n          },\n          get whenReady() {\n            return whenReady;\n          },\n          perDefinition(spec) {\n            return unloader.add(() => setup.perDefinition(spec));\n          },\n          perComponent(spec) {\n            return unloader.add(() => setup.perComponent(spec));\n          },\n        });\n      },\n    });\n  });\n}\n\n/**\n * @internal\n */\nexport interface PostDefSetup<T extends object = any> {\n  readonly on: OnEvent<[DefinitionSetup<T>]>;\n  send(setup: DefinitionSetup): void;\n  setup(setup: DefinitionSetup<T>): void;\n}\n\nconst PostDefSetup__symbol = /*#__PURE__*/ Symbol('post-def-setup');\n\n/**\n * @internal\n */\nexport function postDefSetup<T extends object>(componentType: ComponentClass<T>): PostDefSetup<T> {\n  if (componentType.hasOwnProperty(PostDefSetup__symbol)) {\n    return (componentType as any)[PostDefSetup__symbol];\n  }\n\n  const tracker = trackValue<DefinitionSetup<T>>();\n  const emitter = new EventEmitter<[DefinitionSetup]>();\n  const onSetup: OnEvent<[DefinitionSetup<T>]> = tracker.read.thru(setup => setup ? nextArgs(setup) : nextSkip());\n  const on = onAny(onSetup, emitter);\n  const superType = superClassOf(componentType, type => ComponentDef__symbol in type);\n\n  if (superType) {\n\n    const superPostDefSetup = postDefSetup(superType);\n\n    on(setup => superPostDefSetup.send(setup));\n  }\n\n  const result: PostDefSetup<T> = {\n    on,\n    send(setup) {\n      emitter.send(setup);\n    },\n    setup(setup) {\n      tracker.it = setup;\n    },\n  };\n\n  Object.defineProperty(componentType, PostDefSetup__symbol, { value: result });\n\n  return result;\n}\n","import { nextArgs, nextSkip, noop } from 'call-thru';\nimport { ContextValues, ContextValueSpec, SingleContextKey, SingleContextRef } from 'context-values';\nimport { EventEmitter, eventSupply, EventSupply, OnEvent, trackValue, ValueTracker } from 'fun-events';\nimport { Class } from '../../common';\nimport {\n  ComponentContext as ComponentContext_,\n  ComponentContext__symbol,\n  ComponentDef,\n  ComponentEvent,\n  ComponentMount as ComponentMount_,\n} from '../../component';\nimport {\n  ComponentClass,\n  ComponentFactory as ComponentFactory_,\n  DefinitionContext as DefinitionContext_, DefinitionSetup,\n  ElementDef,\n} from '../../component/definition';\nimport { BootstrapContext } from '../bootstrap-context';\nimport { bootstrapDefault } from '../bootstrap-default';\nimport { ComponentContextRegistry } from './component-context-registry.impl';\nimport { DefinitionContextRegistry } from './definition-context-registry.impl';\nimport { postDefSetup } from './post-def-setup.impl';\n\n/**\n * @internal\n */\nexport interface ElementBuilder {\n  readonly definitions: EventEmitter<[DefinitionContext_]>;\n  readonly components: EventEmitter<[ComponentContext_]>;\n  buildElement<T extends object>(this: void, componentType: ComponentClass<T>): ComponentFactory_<T>;\n}\n\n/**\n * @internal\n */\nexport const ElementBuilder: SingleContextRef<ElementBuilder> = /*#__PURE__*/ new SingleContextKey<ElementBuilder>(\n    'element-builder',\n    {\n      byDefault: bootstrapDefault(newElementBuilder),\n    },\n);\n\nfunction newElementBuilder(bsContext: BootstrapContext): ElementBuilder {\n\n  const definitionContextRegistry_global = bsContext.get(DefinitionContextRegistry);\n  const componentContextRegistry_global = bsContext.get(ComponentContextRegistry);\n  const definitions = new EventEmitter<[DefinitionContext_]>();\n  const components = new EventEmitter<[ComponentContext_]>();\n\n  return {\n    definitions,\n    components,\n    buildElement<T extends object>(componentType: ComponentClass<T>) {\n\n      const def = ComponentDef.of(componentType);\n      const onComponent = new EventEmitter<[ComponentContext_]>();\n      let componentContextRegistry_perType!: ComponentContextRegistry;\n      const ready = trackValue(false);\n      const whenReady: OnEvent<[]> = ready.read.thru(cls => cls ? nextArgs() : nextSkip());\n      let definitionContext: DefinitionContext;\n\n      function createComponentContextRegistry() {\n        return componentContextRegistry_global.append(componentContextRegistry_perType);\n      }\n\n      class ComponentFactory extends ComponentFactory_ < T > {\n\n        get componentType() {\n          return definitionContext.componentType;\n        }\n\n        get elementType() {\n          return definitionContext.elementType;\n        }\n\n        get elementDef() {\n          return definitionContext.elementDef;\n        }\n\n        mountTo(element: any): ComponentMount_<T> {\n          if (element[ComponentContext__symbol]) {\n            throw new Error(`Element ${element} already bound to component`);\n          }\n\n          const mount = createComponent({\n            definitionContext,\n            onComponent,\n            registry: createComponentContextRegistry(),\n            element,\n            elementSuper(key) {\n              return element[key];\n            },\n            createMount(context: ComponentContext_<T>) {\n\n              class ComponentMount extends ComponentMount_<T> {\n\n                get context() {\n                  return context;\n                }\n\n                get connected() {\n                  return elementStatus(element).it === ComponentStatus.On;\n                }\n\n                set connected(value: boolean) {\n                  elementStatus(element).it = value ? ComponentStatus.On : ComponentStatus.Off;\n                }\n\n                checkConnected(): boolean {\n\n                  const el: Element = element;\n                  const doc = el.ownerDocument;\n\n                  return this.connected = doc != null && doc.contains(el);\n                }\n\n              }\n\n              return new ComponentMount();\n            },\n          }).mount as ComponentMount_<T>;\n\n          mount.checkConnected();\n          componentCreated(mount.context);\n\n          return mount;\n        }\n\n      }\n\n      const componentFactory = new ComponentFactory();\n\n      class DefinitionContext extends DefinitionContext_<T> {\n\n        readonly get: ContextValues['get'];\n        readonly whenReady: OnEvent<[this]>;\n\n        get componentType() {\n          return componentType;\n        }\n\n        get onComponent() {\n          return onComponent.on;\n        }\n\n        get elementType(): Class {\n          throw new Error('Custom element class is not constructed yet. Consider to use a `whenReady()` callback');\n        }\n\n        constructor() {\n          super();\n\n          const context = this;\n\n          this.whenReady = whenReady.thru(() => this).once;\n\n          const definitionContextRegistry =\n              new DefinitionContextRegistry(definitionContextRegistry_global.seedIn(this));\n\n          definitionContextRegistry.provide({ a: DefinitionContext_, is: this });\n          definitionContextRegistry.provide({ a: ComponentFactory_, is: componentFactory });\n          this.get = definitionContextRegistry.newValues().get;\n          componentContextRegistry_perType = new ComponentContextRegistry(definitionContextRegistry.seedIn(this));\n\n          const definitionSetup: DefinitionSetup<T> = {\n            get componentType() {\n              return componentType;\n            },\n            get whenReady() {\n              return context.whenReady;\n            },\n            perDefinition(spec) {\n              return definitionContextRegistry.provide(spec);\n            },\n            perComponent(spec) {\n              return componentContextRegistry_perType.provide(spec);\n            },\n          };\n\n          def.setup?.(definitionSetup);\n          postDefSetup(componentType).setup(definitionSetup);\n        }\n\n        perComponent<Deps extends any[], Src, Seed>(\n            spec: ContextValueSpec<ComponentContext_<T>, any, Deps, Src, Seed>,\n        ): () => void {\n          return componentContextRegistry_perType.provide(spec);\n        }\n\n      }\n\n      definitionContext = new DefinitionContext();\n\n      def.define?.(definitionContext);\n      definitions.send(definitionContext);\n\n      const elementType = createElementType(definitionContext, onComponent, createComponentContextRegistry());\n\n      Object.defineProperty(definitionContext, 'elementType', {\n        configurable: true,\n        enumerable: true,\n        value: elementType,\n      });\n\n      ready.it = true;\n\n      return componentFactory;\n    },\n  };\n\n  function createElementType<T extends object>(\n      definitionContext: DefinitionContext_<T>,\n      onComponent: EventEmitter<[ComponentContext_<T>]>,\n      componentContextRegistry: ComponentContextRegistry,\n  ) {\n\n    const elementDef = definitionContext.get(ElementDef);\n\n    class Element extends elementDef.extend.type {\n\n      // Component context reference\n      [ComponentContext__symbol]: ComponentContext_<T>;\n\n      constructor() {\n        super();\n\n        const context = createComponent({\n          definitionContext,\n          onComponent,\n          registry: componentContextRegistry,\n          element: this,\n          createMount: noop,\n          elementSuper: (key) => {\n            // @ts-ignore\n            return super[key] as any;\n          },\n        });\n\n        componentCreated(context);\n      }\n\n      // noinspection JSUnusedGlobalSymbols\n      connectedCallback() {\n        elementStatus(this).it = ComponentStatus.On;\n      }\n\n      // noinspection JSUnusedGlobalSymbols\n      disconnectedCallback() {\n        elementStatus(this).it = ComponentStatus.Off;\n      }\n\n    }\n\n    return Element;\n  }\n\n  function createComponent<T extends object>(\n      {\n        definitionContext,\n        onComponent,\n        registry,\n        element,\n        createMount,\n        elementSuper,\n      }: {\n        definitionContext: DefinitionContext_<T>;\n        onComponent: EventEmitter<[ComponentContext_<T>]>;\n        registry: ComponentContextRegistry;\n        element: any;\n        elementSuper(name: PropertyKey): any;\n        createMount(context: ComponentContext_<T>): ComponentMount_<T> | undefined;\n      },\n  ): ComponentContext_<T> {\n\n    const status = trackValue<ComponentStatus>(ComponentStatus.Building);\n    const destructionReason = trackValue<[any] | undefined>();\n\n    status.on(noop).whenOff(reason => destructionReason.it = [reason]);\n\n    const destroyed: OnEvent<[any]> = destructionReason.read.thru(reason => reason ? nextArgs(reason[0]) : nextSkip());\n    const whenDestroyed: OnEvent<[any]> = destroyed.once;\n\n    const whenOff: OnEvent<[]> = status.read.thru(sts => sts === ComponentStatus.Off ? nextArgs() : nextSkip());\n    const whenOn: OnEvent<[EventSupply]> = status.read.thru(\n        sts => {\n          if (sts !== ComponentStatus.On) {\n            return nextSkip();\n          }\n\n          const offSupply = eventSupply();\n\n          whenOff.once(() => offSupply.off());\n\n          return nextArgs(offSupply);\n        },\n    );\n\n    let mount: ComponentMount_<T> | undefined;\n    const values = registry.newValues();\n\n    class ComponentContext extends ComponentContext_<T> {\n\n      readonly get = values.get;\n      readonly elementSuper = elementSuper;\n      readonly whenReady: OnEvent<[this]>;\n\n      constructor() {\n        super();\n\n        const whenReady: OnEvent<[this]> = status.read.thru(sts => sts ? nextArgs(this) : nextSkip());\n\n        this.whenReady = whenReady.once;\n      }\n\n      get componentType() {\n        return definitionContext.componentType;\n      }\n\n      get element() {\n        return element;\n      }\n\n      get component(): T {\n        throw new Error('The component is not constructed yet. Consider to use a `whenReady()` callback');\n      }\n\n      get mount(): ComponentMount_<T> | undefined {\n        return mount || (mount = createMount(this));\n      }\n\n      get connected(): boolean {\n        return status.it === ComponentStatus.On;\n      }\n\n      get whenOn(): OnEvent<[EventSupply]> {\n        return whenOn;\n      }\n\n      get whenOff(): OnEvent<[]> {\n        return whenOff;\n      }\n\n      get whenDestroyed() {\n        return whenDestroyed;\n      }\n\n      destroy(reason?: any): void {\n        status.done(reason);\n      }\n\n    }\n\n    const context = new ComponentContext();\n\n    context.whenDestroyed(() => removeElement(context));\n    registry.provide({ a: ComponentContext_, is: context });\n\n    augmentElement();\n\n    components.send(context);\n    onComponent.send(context);\n\n    const component = newComponent(definitionContext.componentType, context);\n\n    Object.defineProperty(context, 'component', {\n      configurable: true,\n      enumerable: true,\n      value: component,\n    });\n\n    status.it = ComponentStatus.Ready;\n\n    return context;\n\n    function augmentElement() {\n      Object.defineProperty(element, ComponentContext__symbol, { value: context });\n      Object.defineProperty(element, ComponentStatus__symbol, { writable: true, value: status });\n    }\n  }\n\n}\n\n/**\n * Creates new component of the given type.\n *\n * It makes component context available under `[ComponentContext__symbol]` key in constructed component.\n * The component context is also available inside component constructor by temporarily assigning it to component\n * prototype.\n *\n * @typeparam T  A type of component.\n * @param type  Component class constructor.\n * @param context  Target component context.\n */\nfunction newComponent<T extends object>(type: ComponentClass<T>, context: ComponentContext_<T>): T {\n\n  const proto = type.prototype as any;\n  const prevContext = proto[ComponentContext__symbol];\n\n  proto[ComponentContext__symbol] = context;\n  try {\n\n    const component = new type(context);\n\n    Object.defineProperty(component, ComponentContext__symbol, { value: context });\n\n    return component;\n  } finally {\n    proto[ComponentContext__symbol] = prevContext;\n  }\n}\n\nconst enum ComponentStatus {\n  Building,\n  Ready,\n  Off,\n  On,\n}\n\nconst ComponentStatus__symbol = /*#__PURE__*/ Symbol('component-status');\n\nfunction elementStatus(element: any): ValueTracker<ComponentStatus> {\n  return element[ComponentStatus__symbol];\n}\n\nfunction componentCreated(context: ComponentContext_) {\n  context.dispatchEvent(new ComponentEvent('wesib:component', { bubbles: true }));\n}\n\nfunction removeElement(context: ComponentContext_) {\n\n  const { element, mount } = context;\n\n  if (mount) {\n    mount.connected = false; // Disconnect mounted element\n  }\n\n  const parentNode: Element = element.parentElement;\n\n  if (parentNode) {\n    parentNode.removeChild(element);\n  }\n}\n","import { itsEach, overArray } from 'a-iterable';\nimport { noop, valueProvider } from 'call-thru';\nimport { EventSupply, eventSupply } from 'fun-events';\n\n/**\n * @internal\n */\nexport interface Unloader {\n  readonly supply: EventSupply;\n  add(adder: () => () => void): () => void;\n}\n\nconst doNotAdd = valueProvider(noop);\n\n/**\n * @internal\n */\nexport function newUnloader(): Unloader {\n\n  const unloads: (() => void)[] = [];\n  let add = (adder: () => () => void) => {\n\n    const unload = adder();\n\n    unloads.push(unload);\n\n    return unload;\n  };\n  const supply = eventSupply(() => {\n    add = doNotAdd;\n    itsEach(\n        overArray(unloads).reverse(),\n        unload => unload(),\n    );\n    unloads.length = 0;\n  });\n\n  return {\n    supply,\n    add(adder) {\n      return add(adder);\n    },\n  };\n}\n","import { ElementBuilder } from '../../boot/impl';\nimport { ComponentFactory__symbol } from '../../boot/impl/component-factory.symbol.impl';\nimport { ComponentClass, CustomElements } from '../../component/definition';\nimport { FeatureContext } from '../feature-context';\n\n/**\n * @internal\n */\nexport class ComponentRegistry {\n\n  private _definitionQueue: (() => void)[] = [];\n\n  constructor(private readonly _context: FeatureContext) {\n    _context.whenReady(() => {\n      this._definitionQueue.forEach(definition => definition());\n      delete this._definitionQueue;\n    });\n  }\n\n  get customElements(): CustomElements {\n    return this._context.get(CustomElements);\n  }\n\n  define<T extends object>(componentType: ComponentClass<T>) {\n    this._definitionQueue.push(() => {\n\n      const elementBuilder = this._context.get(ElementBuilder);\n      const factory = elementBuilder.buildElement(componentType);\n\n      (componentType as any)[ComponentFactory__symbol] = factory;\n\n      this.customElements.define(componentType, factory.elementType);\n    });\n  }\n\n}\n","import { filterIt, mapIt } from 'a-iterable';\nimport { isPresent, NextArgs, nextArgs, NextSkip, nextSkip } from 'call-thru';\nimport { ContextRegistry, ContextUpKey, ContextValueOpts, ContextValues, ContextValueSpec } from 'context-values';\nimport {\n  afterAll,\n  afterEach,\n  AfterEvent,\n  afterEventBy,\n  afterThe,\n  EventKeeper,\n  EventSupply,\n  OnEvent,\n  trackValue,\n} from 'fun-events';\nimport { BootstrapContext } from '../../boot';\nimport {\n  BootstrapContextRegistry,\n  ComponentContextRegistry,\n  DefinitionContextRegistry,\n  ElementBuilder,\n  newUnloader,\n  onPostDefSetup,\n} from '../../boot/impl';\nimport { ArraySet, Class } from '../../common';\nimport { ComponentContext } from '../../component';\nimport { ComponentClass, DefinitionContext, DefinitionSetup } from '../../component/definition';\nimport { FeatureContext } from '../feature-context';\nimport { ComponentRegistry } from './component-registry.impl';\nimport { FeatureClause, FeatureRequest } from './feature-request.impl';\n\nconst FeatureKey__symbol = /*#__PURE__*/ Symbol('feature-key');\n\n/**\n * @internal\n */\nexport class FeatureKey extends ContextUpKey<AfterEvent<[FeatureLoader?]>, FeatureClause> {\n\n  static of(feature: Class): FeatureKey {\n\n    const feat = feature as any;\n\n    return feat[FeatureKey__symbol] || (feat[FeatureKey__symbol] = new FeatureKey(feature));\n  }\n\n  private constructor(feature: Class) {\n    super(`feature:${feature.name}`);\n  }\n\n  grow<Ctx extends ContextValues>(\n      opts: ContextValueOpts<\n          Ctx,\n          AfterEvent<[FeatureLoader?]>,\n          EventKeeper<FeatureClause[]> | FeatureClause,\n          AfterEvent<FeatureClause[]>>,\n  ): AfterEvent<[FeatureLoader?]> | null | undefined {\n    return loadFeature(\n        opts.context.get(BootstrapContext),\n        opts.seed.keep.thru(preferredFeatureClause),\n    );\n  }\n\n}\n\nfunction preferredFeatureClause(...clauses: FeatureClause[]): FeatureClause | undefined {\n\n  let required = false;\n  let preferred: FeatureClause | undefined;\n\n  for (const clause of clauses) {\n    switch (clause[1]) {\n      case 'is':\n        required = true;\n        if (!preferred) {\n          preferred = clause;\n        }\n        break;\n      case 'has':\n        preferred = clause;\n        break;\n      case 'needs':\n        required = true;\n    }\n  }\n\n  return required ? preferred : undefined;\n}\n\nfunction loadFeature(\n    bsContext: BootstrapContext,\n    from: AfterEvent<[FeatureClause?]>,\n): AfterEvent<[FeatureLoader?]> {\n  return afterEventBy<[FeatureLoader?]>(receiver => {\n\n    let origin: Class | undefined;\n    let source: OnEvent<[FeatureLoader?]> = afterThe();\n    let stageId: Promise<FeatureStageId> = Promise.resolve('idle');\n\n    return afterAll({\n      clause: from,\n      deps: loadFeatureDeps(bsContext, from),\n    }).dig_(({ clause: [clause], deps }) => {\n      if (!clause) {\n        return afterThe();\n      }\n\n      const [request, , target] = clause;\n\n      if (request.feature === origin) {\n        return source; // Origin didn't change. Reuse the source.\n      }\n\n      origin = request.feature;\n\n      if (target !== origin) {\n        // Originated from replacement feature provider. Reuse its loader.\n        return source = bsContext.get(FeatureKey.of(origin)).thru_(\n            loader => {\n              loader!.to(stageId);\n              stageId = loader!.stage;\n              return loader;\n            },\n        );\n      }\n\n      // Create feature's own loader\n      const ownLoader = new FeatureLoader(bsContext, request, deps).to(stageId);\n      const ownSource = afterThe(ownLoader);\n\n      return source = afterEventBy<[FeatureLoader]>(\n          rcv => ownSource(rcv).whenOff(() => {\n            stageId = ownLoader.unload();\n          }),\n      ).share(); // Can be accessed again when reused\n    })(receiver);\n  }).keep.thru(\n      preventDuplicateLoader(),\n  );\n}\n\nfunction preventDuplicateLoader():\n    <NextReturn>(\n        loader?: FeatureLoader,\n    ) => NextArgs<[FeatureLoader?], NextReturn> | NextSkip<[FeatureLoader?], NextReturn> {\n\n  let lastLoader: FeatureLoader | null | undefined = null; // Initially `null` to differ from `undefined`\n\n  return <NextReturn>(loader?: FeatureLoader) => {\n    if (lastLoader === loader) {\n      return nextSkip();\n    }\n    lastLoader = loader;\n\n    if (!loader) {\n      return nextArgs<[FeatureLoader?], NextReturn>();\n    }\n\n    return nextArgs<[FeatureLoader?], NextReturn>(loader);\n  };\n}\n\nfunction loadFeatureDeps(\n    bsContext: BootstrapContext,\n    from: AfterEvent<[FeatureClause?]>,\n): AfterEvent<FeatureLoader[]> {\n  return from.keep.dig_(clause => {\n    if (!clause) {\n      return afterThe();\n    }\n\n    const [{ def }] = clause;\n    const needs = new ArraySet(def.needs);\n\n    if (!needs.size) {\n      return afterThe();\n    }\n\n    return afterEach(...needs.map(dep => bsContext.get(FeatureKey.of(dep))))\n        .keep.thru_(presentFeatureDeps);\n  });\n}\n\nfunction presentFeatureDeps<NextReturn>(...deps: [FeatureLoader?][]): NextArgs<FeatureLoader[], NextReturn> {\n  return nextArgs<FeatureLoader[], NextReturn>(\n      ...filterIt<FeatureLoader | undefined, FeatureLoader>(\n          mapIt(deps, dep => dep[0]),\n          isPresent,\n      ),\n  );\n}\n\n/**\n * @internal\n */\nexport class FeatureLoader {\n\n  readonly down: Promise<void>;\n  private _stage: Promise<FeatureStage>;\n  private _down!: () => void;\n  readonly state = trackValue(false);\n\n  constructor(\n      readonly bsContext: BootstrapContext,\n      readonly request: FeatureRequest,\n      readonly deps: FeatureLoader[],\n  ) {\n    this.down = new Promise(resolve => this._down = resolve);\n    this._stage = Promise.resolve(new SetupFeatureStage(this));\n  }\n\n  get stage(): Promise<FeatureStageId> {\n    return this._stage.then(stage => stage.after);\n  }\n\n  get ready(): boolean {\n    return this.state.it;\n  }\n\n  to(stageId: Promise<FeatureStageId>): this {\n\n    const lastStage = this._stage;\n\n    this._stage = stageId.then(id => lastStage.then(stage => stage[id]()));\n\n    return this;\n  }\n\n  async setup(): Promise<void> {\n    await (this._stage = this._stage.then(stage => stage.setup()));\n  }\n\n  async init(): Promise<void> {\n    await (this._stage = this._stage.then(stage => stage.init()));\n  }\n\n  async unload(): Promise<FeatureStageId> {\n\n    const prevStage = this._stage;\n\n    delete this._stage; // Unloaded feature should never be accessed again.\n\n    const stage = await prevStage;\n    const stageId = await stage.stop();\n\n    this._down();\n\n    return stageId;\n  }\n\n}\n\ntype FeatureStageId = 'idle' | 'setup' | 'init';\ntype FeatureStageStop = (this: void) => Promise<any>;\n\nabstract class FeatureStage {\n\n  abstract readonly after: FeatureStageId;\n\n  constructor(\n      readonly loader: FeatureLoader,\n      private readonly _stop: FeatureStageStop = () => Promise.resolve(),\n  ) {}\n\n  async idle(): Promise<this> {\n    return this;\n  }\n\n  abstract setup(): Promise<FeatureStage>;\n\n  abstract init(): Promise<FeatureStage>;\n\n  stop(): Promise<FeatureStageId> {\n    return this._stop().then(() => this.after);\n  }\n\n  protected perDep(action: (dep: FeatureLoader) => Promise<void>): Promise<any> {\n\n    const { deps } = this.loader;\n\n    return Promise.all(deps.map(dep => action(dep)));\n  }\n\n}\n\nclass SetupFeatureStage extends FeatureStage {\n\n  get after() {\n    return 'idle' as const;\n  }\n\n  async setup(): Promise<FeatureStage> {\n    await this.perDep(loader => loader.setup());\n\n    const { bsContext, request: { def } } = this.loader;\n    const [context, supply] = newFeatureContext(bsContext, this.loader);\n\n    def.setup?.(context);\n\n    return new InitFeatureStage(\n        this.loader,\n        context,\n        async () => supply.off(),\n    );\n  }\n\n  init(): Promise<FeatureStage> {\n    return this.setup().then(stage => stage.init());\n  }\n\n}\n\nclass InitFeatureStage extends FeatureStage {\n\n  get after() {\n    return 'setup' as const;\n  }\n\n  constructor(\n      state: FeatureLoader,\n      private readonly _context: FeatureContext,\n      stop: FeatureStageStop,\n  ) {\n    super(state, stop);\n  }\n\n  async setup(): Promise<FeatureStage> {\n    return this;\n  }\n\n  async init(): Promise<FeatureStage> {\n    await this.perDep(loader => loader.init());\n\n    const { request: { def } } = this.loader;\n\n    def.init?.(this._context);\n\n    return new ActiveFeatureStage(this);\n  }\n\n}\n\nclass ActiveFeatureStage extends FeatureStage {\n\n  get after() {\n    return 'init' as const;\n  }\n\n  constructor(prev: InitFeatureStage) {\n    super(prev.loader, () => prev.stop());\n    prev.loader.state.it = true;\n  }\n\n  async setup(): Promise<FeatureStage> {\n    return this;\n  }\n\n  async init(): Promise<FeatureStage> {\n    return this;\n  }\n\n}\n\nfunction newFeatureContext(\n    bsContext: BootstrapContext,\n    loader: FeatureLoader,\n): [FeatureContext, EventSupply] {\n\n  const unloader = newUnloader();\n  let componentRegistry: ComponentRegistry;\n  const definitionContextRegistry = bsContext.get(DefinitionContextRegistry);\n  const componentContextRegistry = bsContext.get(ComponentContextRegistry);\n  const registry = new ContextRegistry<FeatureContext>(bsContext);\n  const elementBuilder = bsContext.get(ElementBuilder);\n  const onDefinition = elementBuilder.definitions.on.tillOff(unloader.supply);\n  const onComponent = elementBuilder.components.on.tillOff(unloader.supply);\n\n  class Context extends FeatureContext {\n\n    readonly get = registry.newValues().get;\n    readonly whenReady: OnEvent<[FeatureContext]>;\n\n    constructor() {\n      super();\n\n      const whenReady: OnEvent<[FeatureContext]> = afterAll({\n        st: loader.state,\n        bs: trackValue<BootstrapContext>().by(bsContext.whenReady),\n      }).thru(\n          ({ st: [ready], bs: [bs] }) => bs && ready ? nextArgs(this) : nextSkip(),\n      );\n\n      this.whenReady = whenReady.once;\n      registry.provide({ a: FeatureContext, is: this });\n      componentRegistry = new ComponentRegistry(this);\n    }\n\n    get feature() {\n      return loader.request.feature;\n    }\n\n    get onDefinition() {\n      return onDefinition;\n    }\n\n    get onComponent() {\n      return onComponent;\n    }\n\n    provide<Deps extends any[], Src, Seed>(\n        spec: ContextValueSpec<BootstrapContext, any, Deps, Src, Seed>,\n    ): () => void {\n      return unloader.add(() => bsContext.get(BootstrapContextRegistry).provide(spec));\n    }\n\n    perDefinition<Deps extends any[], Src, Seed>(\n        spec: ContextValueSpec<DefinitionContext, any, Deps, Src, Seed>,\n    ): () => void {\n      return unloader.add(() => definitionContextRegistry.provide(spec));\n    }\n\n    perComponent<Deps extends any[], Src, Seed>(\n        spec: ContextValueSpec<ComponentContext, any, Deps, Src, Seed>,\n    ): () => void {\n      return unloader.add(() => componentContextRegistry.provide(spec));\n    }\n\n    setupDefinition<T extends object>(componentType: ComponentClass<T>): OnEvent<[DefinitionSetup]> {\n      return onPostDefSetup(componentType, unloader);\n    }\n\n    define<T extends object>(componentType: ComponentClass<T>): void {\n      componentRegistry.define(componentType);\n    }\n\n  }\n\n  return [new Context(), unloader.supply];\n}\n","import { ArraySet, Class, mergeFunctions } from '../../common';\nimport { FeatureDef } from '../feature-def';\nimport { FeatureNeedsError } from '../feature-needs-error';\nimport { FeatureKey } from './feature-loader.impl';\nimport { FeatureRequester } from './feature-requester.impl';\n\n/**\n * @internal\n */\nexport type FeatureClause = [FeatureRequest, 'is' | 'needs' | 'has', Class];\n\n/**\n * @internal\n */\nexport type FeatureNeedClause = [FeatureRequest, 'needs' | 'has', Class];\n\n/**\n * @internal\n */\nexport class FeatureRequest {\n\n  readonly def: FeatureDef;\n  private _uses = 0;\n\n  constructor(\n      private readonly _requester: FeatureRequester,\n      readonly feature: Class,\n      private _revoke: () => void,\n  ) {\n    this.def = FeatureDef.of(feature);\n  }\n\n  request(clauses: readonly FeatureNeedClause[]): this {\n\n    const requester = this._requester;\n    const { registry } = requester;\n    const isClause: FeatureClause = [this, 'is', this.feature];\n\n    this._revokeBy(registry.provide({\n      a: FeatureKey.of(this.feature),\n      is: isClause,\n    }));\n\n    new ArraySet(this.def.has).forEach(feature => {\n\n      const clause: FeatureNeedClause = [this, 'has', feature];\n\n      this._revokeBy(registry.provide({ a: FeatureKey.of(feature), is: clause }));\n\n      // Request the provided feature _after_ provider\n      const request = requester.request(feature, [...clauses, clause]);\n\n      this._revokeBy(() => request.unuse());\n    });\n\n    new ArraySet(this.def.needs).forEach(feature => {\n\n      const clause: FeatureNeedClause = [this, 'needs', feature];\n\n      const request = requester.request(feature, [...clauses, clause]);\n\n      this._revokeBy(() => request.unuse());\n      this._revokeBy(registry.provide({ a: FeatureKey.of(feature), is: clause }));\n    });\n\n    this._uses = 1;\n\n    return this;\n  }\n\n  reuse(clauses: readonly FeatureNeedClause[]): this {\n    if (!this._uses) {\n      throw new FeatureNeedsError(clauses.map(([{ feature }, reason, need]) => [feature, reason, need]));\n    }\n\n    ++this._uses;\n\n    return this;\n  }\n\n  unuse() {\n    if (!--this._uses) {\n      this._revoke();\n    }\n  }\n\n  private _revokeBy(revoke: () => void) {\n    this._revoke = mergeFunctions(revoke, this._revoke);\n  }\n\n}\n","import { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { BootstrapContext, bootstrapDefault } from '../../boot';\nimport { BootstrapContextRegistry } from '../../boot/impl';\nimport { Class } from '../../common';\nimport { FeatureNeedClause, FeatureRequest } from './feature-request.impl';\n\nconst FeatureRequester__key = /*#__PURE__*/ new SingleContextKey<FeatureRequester>(\n    'feature-requester',\n    {\n      byDefault: bootstrapDefault(context => new FeatureRequester(context)),\n    },\n);\n\n/**\n * @internal\n */\nexport class FeatureRequester {\n\n  static get [ContextKey__symbol](): ContextKey<FeatureRequester> {\n    return FeatureRequester__key;\n  }\n\n  readonly registry: BootstrapContextRegistry;\n  private readonly _map = new Map<Class, FeatureRequest>();\n\n  constructor(context: BootstrapContext) {\n    this.registry = context.get(BootstrapContextRegistry);\n  }\n\n  request(feature: Class, clauses: readonly FeatureNeedClause[] = []): FeatureRequest {\n\n    const existing = this._map.get(feature);\n\n    if (existing) {\n      return existing.reuse(clauses);\n    }\n\n    const request = new FeatureRequest(this, feature, () => this._map.delete(feature));\n\n    this._map.set(feature, request);\n\n    return request.request(clauses);\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { nextArgs, nextSkip } from 'call-thru';\nimport { AfterEvent, afterEventBy, OnEvent, trackValue } from 'fun-events';\nimport { newNamespaceAliaser } from 'namespace-aliaser';\nimport { Class } from '../../common';\nimport { ComponentClass, CustomElements } from '../../component/definition';\nimport { FeatureDef, FeatureRef, FeatureStatus } from '../../feature';\nimport { FeatureKey, FeatureLoader, FeatureRequester } from '../../feature/loader';\nimport { BootstrapContext } from '../bootstrap-context';\nimport { DefaultNamespaceAliaser } from '../globals';\nimport { BootstrapContextRegistry } from '../impl';\nimport { componentFactoryOf } from '../impl/component-factory.symbol.impl';\n\n/**\n * Bootstraps components.\n *\n * Note that both features and components can be passed as parameters to this function, as components are features too.\n *\n * @category Core\n * @param features  Features and components to enable.\n *\n * @returns Bootstrap context instance.\n */\nexport function bootstrapComponents(...features: Class[]): BootstrapContext {\n\n  const bootstrapContextRegistry = BootstrapContextRegistry.create();\n  const { bootstrapContext, complete } = initBootstrap(bootstrapContextRegistry);\n  const feature = features.length === 1 ? features[0] : bootstrapFeature(features);\n\n  bootstrapContext.get(FeatureRequester).request(feature);\n  bootstrapContext.get(FeatureKey.of(feature))(loader => {\n    loader!.init().then(complete);\n  });\n\n  return bootstrapContext;\n}\n\nfunction bootstrapFeature(needs: Class[]): Class {\n  return FeatureDef.define(class BootstrapFeature {}, { needs });\n}\n\nfunction initBootstrap(bootstrapContextRegistry: BootstrapContextRegistry) {\n\n  const stage = trackValue<BootstrapStage>(BootstrapStage.Init);\n  const values = bootstrapContextRegistry.values;\n\n  class Context extends BootstrapContext {\n\n    readonly get = values.get;\n    readonly whenReady: OnEvent<[BootstrapContext]>;\n\n    constructor() {\n      super();\n\n      const whenReady: OnEvent<[BootstrapContext]> = stage.read.thru(\n          s => s ? nextArgs(this) : nextSkip(),\n      );\n\n      this.whenReady = whenReady.once;\n      bootstrapContextRegistry.provide({ a: DefaultNamespaceAliaser, by: newNamespaceAliaser });\n      bootstrapContextRegistry.provide({ a: BootstrapContext, is: this });\n    }\n\n    async whenDefined<C extends object>(componentType: ComponentClass<C>) {\n      await new Promise(resolve => this.whenReady(resolve));\n      await this.get(CustomElements).whenDefined(componentType);\n      return componentFactoryOf(componentType);\n    }\n\n    load(feature: Class<any>): FeatureRef {\n\n      interface FeatureInfo {\n        status: FeatureStatus;\n        down?: Promise<void>;\n      }\n\n      const status = afterEventBy<[FeatureInfo]>(receiver => {\n\n        const request = bootstrapContext.get(FeatureRequester).request(feature);\n        const info = trackValue<FeatureInfo>({\n          status: {\n            feature,\n            ready: false,\n          },\n        });\n\n        this.get(FeatureKey.of(feature))({\n          supply: receiver.supply,\n          receive(_ctx, ldr) {\n\n            // Present until `request` revoked\n            // But that happens only when supply is cut off.\n            const loader = ldr as FeatureLoader;\n\n            info.it = {\n              status: {\n                feature: loader.request.feature,\n                ready: loader.ready,\n              },\n              down: loader.down,\n            };\n            if (!loader.ready) {\n              loader.init().then(() => {\n                info.it = {\n                  status: {\n                    feature: loader.request.feature,\n                    ready: true,\n                  },\n                  down: loader.down,\n                };\n              });\n            }\n          },\n        }).whenOff(() => {\n          request.unuse(); // Apply this callback _after_ registration complete,\n                           // to prevent receiver call.\n        });\n\n        info.read(receiver);\n      }).share();\n\n      let whenDown: Promise<void>;\n      const supply = status(({ down }) => whenDown = down!);\n      const read: AfterEvent<[FeatureStatus]> =\n          status.keep.thru(info => info.status).tillOff(supply);\n\n      class Ref extends FeatureRef {\n\n        get read() {\n          return read;\n        }\n\n        get down() {\n          return whenDown;\n        }\n\n        dismiss(reason?: any) {\n          supply.off(reason);\n          return whenDown;\n        }\n\n      }\n\n      return new Ref();\n    }\n\n  }\n\n  const bootstrapContext = new Context();\n\n  return {\n    bootstrapContext,\n    complete() {\n      stage.it = BootstrapStage.Ready;\n    },\n  };\n}\n\nconst enum BootstrapStage {\n  Init,\n  Ready,\n}\n","/**\n * @module @wesib/wesib\n */\n/**\n * A path to sub-state containing element an attributes.\n *\n * Thus, an attribute state path is always something like `[AttributePath__root, 'attribute-name']`.\n *\n * @category Feature\n */\nexport const AttributePath__root = /*#__PURE__*/ Symbol('attribute');\n\n/**\n * A path to the named attribute state.\n *\n * @category Feature\n */\nexport type AttributePath = readonly [keyof AttributePath__root_Keys, string];\n\n/**\n * Constructs a named attribute state path.\n *\n * @category Feature\n * @param name  Target attribute name.\n *\n * @return Attribute state path.\n */\nexport function attributePathTo(name: string): AttributePath {\n  return [AttributePath__root, name];\n}\n\n/**\n * @category Feature\n */\n// tslint:disable-next-line:class-name\nexport interface AttributePath__root_Keys {\n  [AttributePath__root]: true;\n}\n","/**\n * @module @wesib/wesib\n */\nimport { noop } from 'call-thru';\nimport { StatePath } from 'fun-events';\nimport { ComponentContext } from '../../component';\nimport { AttributeUpdateReceiver } from './attribute-def';\nimport { AttributePath, attributePathTo } from './attribute-path';\nimport { AttributeChangedCallback } from './attribute-registrar';\n\n/**\n * @internal\n */\nexport function attributeStateUpdate<T extends object>(\n    name: string,\n    updateState: boolean | AttributeUpdateReceiver<T> | StatePath = true): AttributeChangedCallback<T> {\n  if (updateState === false) {\n    return noop;\n  }\n  if (updateState === true || typeof updateState === 'function') {\n\n    const key = attributePathTo(name);\n    const update: AttributeUpdateReceiver<T> = updateState === true ? defaultUpdateState : updateState;\n\n    return function (this: T, newValue, oldValue) {\n      update.call(this, key, newValue, oldValue);\n    };\n  }\n  return function (this: T, newValue, oldValue) {\n    ComponentContext.of(this).updateState(updateState, newValue, oldValue);\n  };\n}\n\nfunction defaultUpdateState<T extends object>(\n    this: T,\n    path: AttributePath,\n    newValue: string,\n    oldValue: string | null) {\n  ComponentContext.of(this).updateState(path, newValue, oldValue);\n}\n","import { ComponentClass } from '../../component/definition';\nimport { AttributeDef } from './attribute-def';\nimport { AttributeChangedCallback } from './attribute-registrar';\nimport { attributeStateUpdate } from './attribute-state-update.impl';\n\n/**\n * @internal\n */\nexport function parseAttributeDef<T extends ComponentClass>(\n    target: InstanceType<T>,\n    propertyKey: string | symbol,\n    opts?: AttributeDef<InstanceType<T>> | string) {\n\n  let name: string;\n  let updateState: AttributeChangedCallback<InstanceType<T>>;\n\n  if (typeof opts === 'string') {\n    name = opts;\n    updateState = attributeStateUpdate(name);\n  } else {\n    if (opts && opts.name) {\n      name = opts.name;\n    } else if (typeof propertyKey !== 'string') {\n      throw new TypeError(\n          'Attribute name is required, as property key is not a string: ' +\n          `${target.constructor.name}.${propertyKey.toString()}`);\n    } else {\n      name = propertyKey;\n    }\n\n    updateState = attributeStateUpdate(name, opts && opts.updateState);\n  }\n\n  return { name, updateState };\n}\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\n\n/**\n * Custom element attribute change callback.\n *\n * This function is called whenever a new attribute value assigned.\n *\n * @category Feature\n * @typeparam T  A type of component.\n */\nexport type AttributeChangedCallback<T extends object = any> =\n/**\n * @param this  Component instance.\n * @param newValue  New attribute value.\n * @param oldValue  Previous attribute value, or `null` if there were no value assigned.\n */\n    (this: T, newValue: string, oldValue: string | null) => void;\n\n/**\n * @category Feature\n */\nexport type AttributeRegistrar<T extends object = any> = (name: string, callback: AttributeChangedCallback<T>) => void;\n\n/**\n * @category Feature\n */\nexport const AttributeRegistrar: SingleContextRef<AttributeRegistrar> =\n    /*#__PURE__*/ new SingleContextKey<AttributeRegistrar>('attribute-registrar');\n","import { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { BootstrapWindow } from '../../boot/globals';\nimport { Class, mergeFunctions } from '../../common';\nimport { ComponentContext, ComponentMount } from '../../component';\nimport { DefinitionContext } from '../../component/definition';\nimport { AttributeChangedCallback } from './attribute-registrar';\n\nconst AttributeRegistry__key = /*#__PURE__*/ new SingleContextKey<AttributeRegistry>('attribute-registry');\n\n/**\n * @internal\n */\nexport class AttributeRegistry<T extends object = any> {\n\n  static get [ContextKey__symbol](): ContextKey<AttributeRegistry> {\n    return AttributeRegistry__key;\n  }\n\n  private readonly _MutationObserver: typeof MutationObserver;\n  private readonly _attrs: { [name: string]: AttributeChangedCallback<T> } = {};\n\n  constructor(ctx: DefinitionContext) {\n    this._MutationObserver = ctx.get(BootstrapWindow).MutationObserver;\n  }\n\n  add(name: string, callback: AttributeChangedCallback<T>): void {\n    this._attrs[name] = mergeFunctions<[string, string | null], void, T>(this._attrs[name], callback);\n  }\n\n  define(elementType: Class) {\n\n    const attrs = this._attrs;\n    const observedAttributes = Object.keys(attrs);\n\n    if (!observedAttributes.length) {\n      return; // No attributes defined\n    }\n\n    Object.defineProperty(elementType, 'observedAttributes', {\n      configurable: true,\n      enumerable: true,\n      value: observedAttributes,\n    });\n    Object.defineProperty(elementType.prototype, 'attributeChangedCallback', {\n      configurable: true,\n      enumerable: true,\n      value: function (name: string, oldValue: string | null, newValue: string) {\n        (attrs[name] as any).call(ComponentContext.of(this).component, newValue, oldValue);\n      },\n    });\n  }\n\n  mount(mount: ComponentMount<T>) {\n\n    const element = mount.element;\n    const attrs = this._attrs;\n    const attributeFilter = Object.keys(attrs);\n\n    if (!attributeFilter.length) {\n      return; // No attributes defined\n    }\n\n    const observer = new this._MutationObserver(\n        records => records.forEach(\n            record => {\n\n              const attributeName = record.attributeName as string;\n\n              return (attrs[attributeName] as any).call(\n                  ComponentContext.of(element).component,\n                  element.getAttribute(attributeName),\n                  record.oldValue);\n            }));\n\n    observer.observe(element, {\n      attributes: true,\n      attributeFilter,\n      attributeOldValue: true,\n    });\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { FeatureDef, FeatureDef__symbol } from '../feature-def';\nimport { AttributeChangedCallback, AttributeRegistrar } from './attribute-registrar';\nimport { AttributeRegistry } from './attribute-registry.impl';\n\nconst AttributesSupport__feature: FeatureDef = {\n  setup(setup) {\n    setup.perDefinition({ as: AttributeRegistry });\n    setup.perDefinition({\n      a: AttributeRegistrar,\n      by(registry: AttributeRegistry) {\n        return <T extends object>(name: string, callback: AttributeChangedCallback<T>) =>\n            registry.add(name, callback);\n      },\n      with: [AttributeRegistry],\n    });\n    setup.onDefinition(definitionContext => {\n      // Define element prototype attributes\n      definitionContext.whenReady(({ elementType }) => definitionContext.get(AttributeRegistry).define(elementType));\n    });\n    setup.onComponent(componentContext => {\n\n      const mount = componentContext.mount;\n\n      if (mount) {\n        // Mount element attributes\n        componentContext.get(AttributeRegistry).mount(mount);\n      }\n    });\n  },\n};\n\n/**\n * A feature adding attributes to custom elements.\n *\n * This feature is enabled automatically whenever an `@Attribute`, `@Attributes`, or `@AttributeChanged` decorator\n * applied to component.\n *\n * @category Feature\n */\nexport class AttributesSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return AttributesSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { TypedPropertyDecorator } from '../../common';\nimport { ComponentContext, ComponentDef } from '../../component';\nimport { ComponentClass } from '../../component/definition';\nimport { FeatureDef } from '../feature-def';\nimport { AttributeDef } from './attribute-def';\nimport { parseAttributeDef } from './attribute-def.impl';\nimport { AttributeRegistrar } from './attribute-registrar';\nimport { AttributesSupport } from './attributes-support.feature';\n\n/**\n * Creates a decorator for component's property that accesses custom element's attribute.\n *\n * The decorated property accesses corresponding attribute on read, and updates it on setting.\n *\n * This decorator automatically enables [[AttributesSupport]] feature.\n *\n * @category Feature\n * @typeparam T  A type of decorated component class.\n * @param def  Attribute definition or just an attribute name.\n *\n * @return Component property decorator.\n */\nexport function Attribute<T extends ComponentClass>(\n    def?: AttributeDef<InstanceType<T>> | string,\n): TypedPropertyDecorator<T> {\n  return <V>(target: InstanceType<T>, propertyKey: string | symbol, descriptor?: TypedPropertyDescriptor<V>) => {\n\n    const { name, updateState } = parseAttributeDef(target, propertyKey, def);\n    const componentType = target.constructor as T;\n\n    FeatureDef.define(componentType, { needs: AttributesSupport });\n    ComponentDef.define(\n        componentType,\n        {\n          define(definitionContext) {\n            definitionContext.get(AttributeRegistrar)(name, updateState);\n          },\n        });\n\n    const newDesc: TypedPropertyDescriptor<string | null> = {\n      get(this: InstanceType<T>): string | null {\n        return ComponentContext.of(this).element.getAttribute(name);\n      },\n      set(this: InstanceType<T>, newValue: string | null) {\n        ComponentContext.of(this).element.setAttribute(name, newValue as string);\n      },\n    };\n\n    if (descriptor == null) {\n      // Annotated field\n      Object.defineProperty(target, propertyKey, newDesc);\n      return;\n    }\n\n    return newDesc;\n  };\n}\n","/**\n * @module @wesib/wesib\n */\nimport { TypedPropertyDecorator } from '../../common';\nimport { ComponentDef } from '../../component';\nimport { ComponentClass } from '../../component/definition';\nimport { FeatureDef } from '../feature-def';\nimport { AttributeDef } from './attribute-def';\nimport { parseAttributeDef } from './attribute-def.impl';\nimport { AttributeChangedCallback, AttributeRegistrar } from './attribute-registrar';\nimport { AttributesSupport } from './attributes-support.feature';\n\n/**\n * Creates a component method decorator for custom element attribute change callback.\n *\n * The decorated method should have up to two parameters:\n *\n * - the first one accepts new attribute value.\n * - the second one accepts old attribute value (or `null`),\n *\n * Example:\n * ```TypeScript\n * @Component('my-component')\n * class MyComponent {\n *\n *   @AttributeChanged('my-attribute')\n *   void myAttributeChanged(newValue: string, oldValue: string | null) {\n *     console.log(`my-attribute value changed from ${oldValue} to ${newValue}`);\n *   }\n *\n * }\n * ```\n *\n * This decorator automatically enables [[AttributesSupport]] feature.\n *\n * @category Feature\n * @typeparam T  A type of decorated component class.\n * @param def  Attribute definition or just an attribute name.\n *\n * @return Component method decorator.\n */\nexport function AttributeChanged<T extends ComponentClass>(\n    def?: AttributeDef<InstanceType<T>> | string,\n): TypedPropertyDecorator<T> {\n  return (target: InstanceType<T>, propertyKey: string | symbol) => {\n\n    const { name, updateState } = parseAttributeDef(target, propertyKey, def);\n    const componentType = target.constructor as T;\n\n    FeatureDef.define(componentType, { needs: AttributesSupport });\n    ComponentDef.define(\n        componentType,\n        {\n          define(defContext) {\n            defContext.get(AttributeRegistrar)(name, function (\n                this: InstanceType<T>,\n                newValue: string,\n                oldValue: string | null) {\n\n              const callback: AttributeChangedCallback<InstanceType<T>> = (this as any)[propertyKey];\n\n              callback.call(this, newValue, oldValue);\n              updateState.call(this, newValue, oldValue);\n            });\n          },\n        });\n  };\n}\n","/**\n * @module @wesib/wesib\n */\n/**\n * A path to sub-state containing DOM properties.\n *\n * Thus a property state path is always something like `[DomPropertyPath__root, 'property-name']`.\n *\n * @category Feature\n */\nexport const DomPropertyPath__root = /*#__PURE__*/ Symbol('dom-property');\n\n/**\n * A path to the named DOM property state.\n *\n * @category Feature\n */\nexport type DomPropertyPath<K extends PropertyKey = PropertyKey> = readonly [keyof DomPropertyPath__root_Keys, K];\n\n/**\n * Constructs a named DOM property state path.\n *\n * @category Feature\n * @param key  Target property key.\n *\n * @return DOM property state path.\n */\nexport function domPropertyPathTo<K extends PropertyKey = PropertyKey>(key: K): DomPropertyPath<K> {\n  return [DomPropertyPath__root, key];\n}\n\n/**\n * @category Feature\n */\n// tslint:disable-next-line:class-name\nexport interface DomPropertyPath__root_Keys {\n  [DomPropertyPath__root]: true;\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { StateTracker } from 'fun-events';\n\nconst ComponentState__key = /*#__PURE__*/ new SingleContextKey<ComponentState>('component-state');\n\n/**\n * Component state tracker.\n *\n * @category Feature\n */\nexport class ComponentState extends StateTracker {\n\n  static get [ContextKey__symbol](): ContextKey<ComponentState> {\n    return ComponentState__key;\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ComponentContext, StateUpdater } from '../../component';\nimport { FeatureDef, FeatureDef__symbol } from '../feature-def';\nimport { ComponentState } from './component-state';\n\nconst StateSupport__feature: FeatureDef = {\n  setup(setup) {\n    setup.perComponent({\n      a: ComponentState,\n      by(context: ComponentContext) {\n\n        const state = new ComponentState();\n\n        context.whenDestroyed(reason => state.done(reason));\n\n        return state;\n      },\n    });\n    setup.perComponent({\n      a: StateUpdater,\n      by(state: ComponentState) {\n        return state.update;\n      },\n      with: [ComponentState],\n    });\n  },\n};\n\n/**\n * Component state support feature.\n *\n * When enabled, it registers the following component context values:\n *\n * - [[StateUpdater]] that allows to update the component state, and\n * - [[ComponentState]] that allows to track component state changes.\n *\n * Other features would use this to notify when the state changes. E.g. [[DomPropertiesSupport]]\n * and [[AttributesSupport]] features issue state updates when needed.\n *\n * @category Feature\n */\nexport class StateSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return StateSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\n\nconst RenderScheduler__key = /*#__PURE__*/ new SingleContextKey<RenderScheduler>('render-scheduler');\n\n/**\n * Rendering scheduler.\n *\n * Schedules components rendering in order to make it less often. E.g. by utilizing `requestAnimationFrame()`.\n *\n * @category Feature\n */\nexport abstract class RenderScheduler {\n\n  /**\n   * A key of bootstrap, definition, or component context value containing [[RenderScheduler]] instance.\n   */\n  static get [ContextKey__symbol](): ContextKey<RenderScheduler> {\n    return RenderScheduler__key;\n  }\n\n  /**\n   * Creates new render schedule.\n   *\n   * @returns New render schedule instance.\n   */\n  abstract newSchedule(): RenderSchedule;\n\n}\n\n/**\n * Render schedule.\n *\n * @category Feature\n */\nexport interface RenderSchedule {\n\n  /**\n   * Schedules component rendering.\n   *\n   * Only the latest rendering request has affect. I.e. if multiple rendering have been scheduled then the rendering\n   * will be performed by the latest one.\n   *\n   * @param render  A rendering function.\n   */\n  schedule(render: (this: void) => void): void;\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ComponentContext } from '../../component';\nimport { ComponentState } from '../state';\nimport { RenderDef } from './render-def';\nimport { RenderScheduler } from './render-scheduler';\n\n/**\n * Component element render function interface.\n *\n * It has no arguments. It may return either nothing, or a function. In the latter case the returned function will be\n * called immediately to render the element. It may, in turn, return a render function, and so on.\n *\n * @category Feature\n */\nexport type ElementRender =\n/**\n * @returns Either delegated render, or nothing.\n */\n    (this: void) => void | ElementRender;\n\n/**\n * @category Feature\n */\nexport const ElementRender = {\n\n  /**\n   * Enables component element rendering.\n   *\n   * The `render` call will be scheduled by [[RenderScheduler]] once component state updated.\n   *\n   * @param context  Target component context.\n   * @param render  Element render function.\n   * @param def  Optional element render definition.\n   */\n  render(\n      this: void,\n      context: ComponentContext,\n      render: ElementRender,\n      def: RenderDef = {},\n  ): void {\n\n    const { offline, path = [] } = def;\n    const stateTracker = context.get(ComponentState).track(path);\n    const schedule = context.get(RenderScheduler).newSchedule();\n\n    let rendered = false;\n    const stateSupply = stateTracker.onUpdate(() => {\n      if (offline || context.connected) {\n        scheduleRender();\n      } else {\n        rendered = false;\n      }\n    });\n\n    if (offline) {\n      scheduleRender();\n    } else {\n      context.whenOn(() => {\n        if (!rendered) {\n          scheduleRender();\n        }\n      }).whenOff(reason => {\n        stateSupply.off(reason);\n        rendered = true;\n      });\n    }\n\n    function scheduleRender() {\n      rendered = true;\n      schedule.schedule(renderElement);\n    }\n\n    function renderElement() {\n      for (;;) {\n\n        const newRender = render();\n\n        if (newRender === render || typeof newRender !== 'function') {\n          break;\n        }\n\n        render = newRender;\n      }\n    }\n  },\n\n};\n","/**\n * @module @wesib/wesib\n */\nimport { noop } from 'call-thru';\nimport { BootstrapWindow } from '../../boot/globals';\nimport { FeatureDef, FeatureDef__symbol } from '../feature-def';\nimport { RenderSchedule as RenderSchedule_, RenderScheduler as RenderScheduler_ } from './render-scheduler';\n\nconst RenderSupport__feature: FeatureDef = {\n  setup(setup) {\n    setup.provide({\n      a: RenderScheduler_,\n      by: createRenderScheduler,\n      with: [BootstrapWindow],\n    });\n  },\n};\n\n/**\n * Rendering support feature.\n *\n * This feature is automatically enabled when {@link Render @Render} decorator is used.\n *\n * @category Feature\n */\nexport class RenderSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return RenderSupport__feature;\n  }\n\n}\n\nfunction createRenderScheduler(window: BootstrapWindow) {\n\n  class RenderScheduler extends RenderScheduler_ {\n\n    newSchedule() {\n\n      let scheduled: () => void = noop;\n\n      class RenderSchedule implements RenderSchedule_ {\n\n        schedule(render: (this: void) => void): void {\n\n          const previouslyScheduled = scheduled;\n\n          scheduled = render;\n          if (previouslyScheduled === noop) {\n            window.requestAnimationFrame(() => {\n              scheduled();\n              scheduled = noop;\n            });\n          }\n        }\n\n      }\n\n      return new RenderSchedule();\n    }\n  }\n\n  return new RenderScheduler();\n}\n","/**\n * @module @wesib/wesib\n */\nimport { TypedPropertyDecorator } from '../../common';\nimport { ComponentDef } from '../../component';\nimport { ComponentClass } from '../../component/definition';\nimport { StateSupport } from '../state';\nimport { ElementRender } from './element-render';\nimport { RenderDef } from './render-def';\nimport { RenderSupport } from './render-support.feature';\n\n/**\n * Component property decorator that declares a rendering method for the component.\n *\n * The decorated method call will be scheduled by [[RenderScheduler]] once component state updated.\n *\n * The decorated method should have no arguments. It may return either nothing, or a function. In the latter case the\n * returned function will be called immediately to render the element. It may, in turn, return a renderer function,\n * and so on.\n *\n * This decorator automatically enables [[StateSupport]] and [[RenderSupport]] features.\n *\n * Utilizes [[ElementRender.render]] function to define rendering.\n *\n * @category Feature\n * @typeparam T  A type of decorated component class.\n * @param def  Non-mandatory render definition.\n *\n * @returns Component method decorator.\n */\nexport function Render<T extends ComponentClass>(def?: RenderDef): TypedPropertyDecorator<T> {\n  return (target: InstanceType<T>, propertyKey: string | symbol) => {\n\n    const componentType = target.constructor as T;\n\n    ComponentDef.define(\n        componentType,\n        {\n          define(defContext) {\n            defContext.onComponent(componentContext => {\n              componentContext.whenReady(() => {\n\n                const component = componentContext.component as any;\n                const render: () => any = component[propertyKey].bind(component);\n\n                ElementRender.render(componentContext, render, def);\n              });\n            });\n          },\n          feature: {\n            needs: [StateSupport, RenderSupport],\n          },\n        });\n  };\n}\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\n\n/**\n * Component shadow content root.\n *\n * @category Feature\n */\nexport type ShadowContentRoot = ShadowRoot;\n\n/**\n * A key of component context value containing a shadow content root instance.\n *\n * This is only available when the component is decorated with {@link AttachShadow @AttachShadow} decorator.\n *\n * @category Feature\n */\nexport const ShadowContentRoot: SingleContextRef<ShadowContentRoot> =\n    /*#__PURE__*/ new SingleContextKey<ShadowContentRoot>('shadow-content-root');\n","/**\n * @module @wesib/wesib\n */\n/**\n * An event related to element's shadow DOM.\n *\n * The following event types supported:\n * - `wesib:shadowAttached` is thrown when a shadow root is attached to element.\n *   In particular, it is thrown for components decorated with {@link AttachShadow @AttachShadow}.\n *   This event bubbles and is not cancelable.\n *\n * @category Feature\n */\nexport class ShadowDomEvent extends Event {\n\n  /**\n   * Constructs shadow DOM event.\n   *\n   * @param type  Event type.\n   * @param eventInitDict  Event initialization dictionary.\n   */\n  constructor(type: string, eventInitDict?: EventInit) {\n    super(type, eventInitDict);\n  }\n\n  /**\n   * Shadow root this event relates to.\n   */\n  get shadowRoot(): ShadowRoot {\n    return (this.target as Element).shadowRoot as ShadowRoot;\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { FnContextKey, FnContextRef } from 'context-values';\nimport { ComponentContext } from '../../component';\nimport { ShadowContentDef } from './shadow-content-def';\n\n/**\n * Shadow root builder function type.\n *\n * An instance of this function is available in component context and is used by {@link AttachShadow @AttachShadow}\n * decorator to attach shadow root to decorated component's custom element.\n *\n * By default, if shadow root already exists for the component's element, it uses it.\n *\n * Dispatches a `wesib:shadowAttached` event for the found or attached shadow root.\n *\n * @category Feature\n */\nexport type ShadowRootBuilder =\n/**\n * @param context  Target component context.\n * @param init  Shadow root initialization options.\n *\n * @returns A shadow root instance for target component, or `null`/`undefined` if one can not be attached.\n */\n    (context: ComponentContext<any>, init: ShadowContentDef) => ShadowRoot | null | undefined;\n\n/**\n * A key of component context value containing a shadow root builder instance.\n *\n * @category Feature\n */\nexport const ShadowRootBuilder: FnContextRef<Parameters<ShadowRootBuilder>, ReturnType<ShadowRootBuilder>> =\n    /*#__PURE__*/ new FnContextKey<Parameters<ShadowRootBuilder>, ReturnType<ShadowRootBuilder>>('shadow-root-builder');\n","/**\n * @module @wesib/wesib\n */\nimport { ComponentContext, ComponentContext__symbol } from '../../component';\nimport { FeatureDef, FeatureDef__symbol } from '../feature-def';\nimport { ShadowDomEvent } from './shadow-dom-event';\nimport { ShadowRootBuilder } from './shadow-root-builder';\n\nconst ShadowDomSupport__feature: FeatureDef = {\n  setup(setup) {\n    setup.provide({ a: ShadowRootBuilder, is: attachShadow });\n  },\n};\n\n/**\n * Shadow root support feature.\n *\n * This feature is automatically enabled when {@link AttachShadow @AttachShadow} decorator is used.\n *\n * @category Feature\n */\nexport class ShadowDomSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return ShadowDomSupport__feature;\n  }\n\n}\n\nfunction attachShadow(context: ComponentContext, init: ShadowRootInit): ShadowRoot | undefined {\n\n  const element = context.element;\n  const shadowRoot = shadowRootOf(element, init);\n\n  if (shadowRoot) {\n    (shadowRoot as any)[ComponentContext__symbol] = context;\n    context.dispatchEvent(new ShadowDomEvent('wesib:shadowAttached', { bubbles: true }));\n    return shadowRoot;\n  }\n\n  return;\n}\n\nfunction shadowRootOf(element: Element, init: ShadowRootInit): ShadowRoot | undefined {\n\n  const existing = element.shadowRoot;\n\n  if (existing) {\n    // Shadow root already attached. Using it.\n    return existing;\n  }\n  if ('attachShadow' in element) {\n    return element.attachShadow(init);\n  }\n\n  return; // Unable to attach shadow root.\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ComponentContext, ComponentDef, ContentRoot } from '../../component';\nimport { ShadowContentRoot } from './shadow-content-root';\nimport { ShadowDomSupport } from './shadow-dom-support.feature';\nimport { ShadowRootBuilder } from './shadow-root-builder';\n\n/**\n * Shadow content root definition.\n *\n * This is a readonly component shadow root initialization options.\n *\n * @category Feature\n */\nexport type ShadowContentDef = Readonly<ShadowRootInit>;\n\nconst defaultShadowContentDef: ShadowContentDef = { mode: 'open' };\n\n/**\n * @category Feature\n */\nexport const ShadowContentDef = {\n\n  /**\n   * Creates component definition for the given shadow content root definition.\n   *\n   * The returned component definition enables [[ShadowDomSupport]] feature and attaches shadow content root to the\n   * component.\n   *\n   * @typeparam T  A type of component.\n   * @param def  Shadow content root definition. Uses `mode: 'open'` by default.\n   *\n   * @returns Component definition.\n   */\n  componentDef<T extends object>(\n      this: void,\n      def: ShadowContentDef = defaultShadowContentDef,\n  ): ComponentDef<T> {\n    return {\n      setup(setup) {\n        setup.perComponent(\n            {\n              a: ShadowContentRoot,\n              by(ctx: ComponentContext<T>) {\n                return ctx.get(ShadowRootBuilder)(ctx, def);\n              },\n            },\n        );\n        setup.perComponent({ // Content root is an alias of shadow root when present.\n          a: ContentRoot,\n          by(context: ComponentContext<T>) {\n            return context.get(ShadowContentRoot, { or: null });\n          },\n        });\n      },\n      feature: { needs: ShadowDomSupport },\n    };\n  },\n\n};\n","/**\n * @module @wesib/wesib\n */\nimport { TypedClassDecorator } from '../../common';\nimport { ComponentDef } from '../../component';\nimport { ComponentClass } from '../../component/definition';\nimport { ShadowContentDef } from './shadow-content-def';\n\n/**\n * Component class decorator that attaches shadow root to decorated component instance.\n *\n * Applies component definition created by [[ShadowContentDef.componentDef]] function.\n *\n * @category Feature\n * @typeparam T  A type of decorated component class.\n * @param def  Shadow content root definition. Uses `mode: 'open'` by default.\n *\n * @return Component class decorator.\n */\nexport function AttachShadow<T extends ComponentClass = any>(\n    def?: ShadowContentDef,\n): TypedClassDecorator<T> {\n  return (type: T) => {\n    ComponentDef.define(\n        type,\n        ShadowContentDef.componentDef(def));\n  };\n}\n","import { ContextUpKey, ContextUpRef, ContextValueOpts, ContextValues } from 'context-values';\nimport { AfterEvent, EventKeeper, EventSender, OnEvent, onSupplied } from 'fun-events';\n\ntype FetchAgent<Res extends any[]> = (\n    this: void,\n    next: (this: void, request?: Request) => OnEvent<Res>,\n    request: Request,\n) => EventSender<Res>;\n\ntype CombinedFetchAgent<Res extends any[]> = (\n    this: void,\n    next: (this: void, request: Request) => OnEvent<Res>,\n    request: Request,\n) => OnEvent<Res>;\n\n/**\n * @internal\n */\nexport class FetchAgentKey<Res extends any[]>\n    extends ContextUpKey<CombinedFetchAgent<Res>, FetchAgent<Res>>\n    implements ContextUpRef<CombinedFetchAgent<Res>, FetchAgent<Res>, AfterEvent<FetchAgent<Res>[]>> {\n\n  constructor(name: string) {\n    super(name);\n  }\n\n  grow<Ctx extends ContextValues>(\n      opts: ContextValueOpts<\n          Ctx,\n          CombinedFetchAgent<Res>,\n          EventKeeper<FetchAgent<Res>[]> | FetchAgent<Res>,\n          AfterEvent<FetchAgent<Res>[]>>,\n  ): CombinedFetchAgent<Res> {\n\n    let agent!: CombinedFetchAgent<Res>;\n\n    opts.seed((...agents) => agent = combineFetchAgents(agents));\n\n    const fallback = opts.byDefault(() => (next, request) => agent(next, request));\n\n    return fallback || defaultFetchAgent;\n  }\n\n}\n\nfunction defaultFetchAgent<Res extends any[]>(\n    next: (this: void, request: Request) => OnEvent<Res>,\n    request: Request,\n): OnEvent<Res> {\n  return next(request);\n}\n\n/**\n * @internal\n */\nexport function combineFetchAgents<Res extends any[]>(agents: FetchAgent<Res>[]): CombinedFetchAgent<Res> {\n  return (next, request) => {\n\n    const fetch: (agentIdx: number, agentRequest: Request) => OnEvent<Res> = (agentIdx, agentRequest) => {\n\n      const agent = agents[agentIdx];\n\n      if (!agent) {\n        return next(agentRequest);\n      }\n\n      return onSupplied(\n          agent(\n              (nextRequest = agentRequest) => fetch(agentIdx + 1, nextRequest),\n              agentRequest,\n          ),\n      );\n    };\n\n    return fetch(0, request);\n  };\n}\n","/**\n * @module @wesib/generic\n */\nimport { ContextUpRef } from 'context-values';\nimport { EventSender, OnEvent } from 'fun-events';\nimport { FetchAgentKey } from './fetch-agent-key.impl';\n\n/**\n * HTTP fetch agent signature.\n *\n * The agent can be used to alter [[HttpFetch]] processing. For that it should be registered in appropriate context.\n *\n * All registered agents are organized into chain. The first agent in chain is called by [[HttpFetch]].\n */\nexport type HttpFetchAgent =\n/**\n * @param next  Either calls the next agent in chain, or actually fetches the data if this agent is the last one.\n * Accepts an optional `Request` parameter. The original request will be used instead when omitted.\n * @param request  HTTP request.\n *\n * @returns An `EventSender` of response object(s). It is returned either to preceding agent in chain, or as a result of\n * [[HttpFetch]] call.\n */\n    (\n        this: void,\n        next: (this: void, request?: Request) => OnEvent<[Response]>,\n        request: Request,\n    ) => EventSender<[Response]>;\n\nexport namespace HttpFetchAgent {\n\n  /**\n   * Combined HTTP fetch agent signature.\n   *\n   * This is what is available under [[HttpFetchAgent]] key.\n   */\n  export type Combined =\n  /**\n   * @param next  Either calls the next agent in chain, or actually fetches the data if this agent is the last one.\n   * Accepts `Request` parameter.\n   * @param request  HTTP request.\n   *\n   * @returns An `OnEvent` registrar of response object(s) receivers. It is returned as a result of [[HttpFetch]] call.\n   */\n      (\n          this: void,\n          next: (this: void, request: Request) => OnEvent<[Response]>,\n          request: Request,\n      ) => OnEvent<[Response]>;\n\n}\n\n/**\n * A key of context value containing an [[HttpFetchAgent]] instance.\n *\n * The agent returned combines all registered agents into one. If no agent registered it just performs the fetch.\n */\nexport const HttpFetchAgent: ContextUpRef<HttpFetchAgent.Combined, HttpFetchAgent> =\n    /*#__PURE__*/ new FetchAgentKey<[Response]>('http-fetch-agent');\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { DomEventDispatcher, EventEmitter, EventSupply, eventSupply, OnEvent, onEventBy } from 'fun-events';\nimport { HttpFetch } from './http-fetch';\nimport { HttpFetchAgent } from './http-fetch-agent';\n\nconst HttpFetchAborted = {};\n\n/**\n * @internal\n */\nexport function newHttpFetch(context: BootstrapContext): HttpFetch {\n\n  const window = context.get(BootstrapWindow);\n  const agent = context.get(HttpFetchAgent);\n\n  return (input, init) => agent(fetch, new Request(input, init));\n\n  function fetch(request: Request): OnEvent<[Response]> {\n    return onEventBy(receiver => {\n\n      const responseEmitter = new EventEmitter<[Response]>();\n      let supply: EventSupply;\n\n      if ('AbortController' in window) {\n\n        const abortController = new (window as any).AbortController();\n        const { signal } = abortController;\n\n        supply = eventSupply(reason => {\n          if (reason === HttpFetchAborted) {\n            abortController.abort();\n          }\n        });\n        receiver.supply.whenOff(() => supply.off(HttpFetchAborted)).needs(supply);\n        responseEmitter.on({\n          supply,\n          receive(ctx, response) {\n            receiver.receive(ctx, response);\n          },\n        });\n\n        const customSignal = request.signal;\n\n        if (customSignal) {\n          new DomEventDispatcher(customSignal).on('abort').once(() => abortController.abort());\n          if (customSignal.aborted) {\n            abortController.abort();\n          }\n        }\n\n        request = new Request(request, { signal });\n      } else {\n        supply = responseEmitter.on(receiver);\n      }\n\n      window.fetch(request)\n          .then(response => {\n            responseEmitter.send(response);\n            supply.off();\n          })\n          .catch(reason => supply.off(reason));\n    });\n  }\n}\n","/**\n * @module @wesib/generic\n */\nimport { bootstrapDefault } from '@wesib/wesib';\nimport { FnContextKey, FnContextRef } from 'context-values';\nimport { OnEvent } from 'fun-events';\nimport { newHttpFetch } from './http-fetch.impl';\n\n/**\n * HTTP fetch function signature.\n *\n * This is a function that wraps browser's\n * [fetch()](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch) function and provides\n * additional functionality. E.g. request interception.\n *\n * This function returns an `OnEvent` sender instead of a `Promise`. This allows to report multiple responses.\n * E.g. when the resource refresh requested and delivered. The request is sent whenever a receiver is registered\n * in this sender. When the fetch completes the response supply is cut off, and callbacks registered with its\n * `whenOff()` method are notified. When fetch fails for whatever reason, this reason is passed to these callbacks.\n * The fetch can be aborted by cutting off the response supply. I.e. by calling its `off()` method.\n *\n * An instance of [[HttpFetch]] is available from bootstrap context.\n */\nexport type HttpFetch =\n/**\n * @param input  The resource to fetch. This can either an URL string, or a `Request` object.\n * @param init  Custom settings to apply to the request.\n *\n * @returns An `OnEvent` sender of responses.\n */\n    (this: void, input: RequestInfo, init?: RequestInit) => OnEvent<[Response]>;\n\n/**\n * A key of bootstrap context value containing an [[HttpFetch]] instance.\n */\nexport const HttpFetch: FnContextRef<Parameters<HttpFetch>, ReturnType<HttpFetch>> =\n    /*#__PURE__*/ new FnContextKey<Parameters<HttpFetch>, ReturnType<HttpFetch>>(\n    'http-fetch',\n    {\n      byDefault: bootstrapDefault(newHttpFetch),\n    },\n);\n","/**\n * @module @wesib/generic\n */\nimport { MultiContextKey, MultiContextRef } from 'context-values';\nimport { EventKeeper, EventSupply } from 'fun-events';\nimport { ComponentInContext } from './component-in-context';\n\n/**\n * Component input - a component's participant in user input.\n *\n * A component participating in user input should have component input instance in its context.\n *\n * This is a function invoked by parent component to enable participation in user input. E.g. via input aspects.\n */\nexport type ComponentIn =\n/**\n * @param context  A context of component input to participate in.\n *\n * @returns A participation supply. When this supply is cut off the participation is disabled.\n */\n    (this: void, context: ComponentInContext) => EventSupply;\n\n/**\n * A key of component context value containing an array of event keepers sending component inputs.\n */\nexport const ComponentIn: MultiContextRef<EventKeeper<ComponentIn[]>> =\n    /*#__PURE__*/ new MultiContextKey<EventKeeper<ComponentIn[]>>('component-in');\n","/**\n * @module @wesib/generic\n */\nimport { ComponentClass, ComponentContext } from '@wesib/wesib';\nimport { AIterable, ArrayLikeIterable } from 'a-iterable';\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport {\n  AfterEvent,\n  AfterEvent__symbol,\n  EventKeeper,\n  EventSender,\n  OnEvent,\n  OnEvent__symbol,\n  ValueTracker,\n} from 'fun-events';\n\n/**\n * Component tree node representing arbitrary element.\n */\nexport abstract class ElementNode {\n\n  /**\n   * The element itself.\n   */\n  abstract readonly element: any;\n\n  /**\n   * A context of component bound to this element, if any.\n   */\n  abstract readonly context?: ComponentContext<any>;\n\n  /**\n   * Parent element node, or `null` if element has no parent.\n   */\n  abstract readonly parent: ElementNode | null;\n\n  /**\n   * Select element nodes matching the given selector.\n   *\n   * @param selector  Simple CSS selector of nested components. E.g. component element name.\n   * @param opts  Element selector options.\n   */\n  abstract select(\n      selector: string,\n      opts: ElementNode.ElementSelectorOpts,\n  ): ElementNodeList;\n\n  /**\n   * Select component nodes matching the given selector.\n   *\n   * @param selector  Simple CSS selector of nested components (e.g. component element name), or component type.\n   * The latter should have custom element name.\n   * @param opts  Component selector options.\n   */\n  abstract select(\n      selector: string,\n      opts?: ElementNode.ComponentSelectorOpts,\n  ): ElementNodeList<ComponentNode>;\n\n  /**\n   * Select component nodes of the given type.\n   *\n   * @param componentType  Nested component type with custom element name.\n   * @param opts  Component selector options.\n   */\n  abstract select<T extends object>(\n      componentType: ComponentClass<T>,\n      opts?: ElementNode.ComponentSelectorOpts,\n  ): ElementNodeList<ComponentNode<T>>;\n\n  /**\n   * Returns a value tracker of element's attribute.\n   *\n   * @param name  Target attribute name.\n   *\n   * @returns Target attribute's value tracker.\n   */\n  abstract attribute(name: string): ValueTracker<string | null, string>;\n\n  /**\n   * Returns a value tracker of element's property.\n   *\n   * The changes are tracked with `StateTracker`. So it is expected that the target property notifies on its changes\n   * with state updater. E.g. when it is defined by `@DomProperty` decorator.\n   *\n   * @param key  Target property key.\n   *\n   * @returns Target property's value tracker.\n   */\n  abstract property<V>(key: PropertyKey): ValueTracker<V>;\n\n}\n\nexport namespace ElementNode {\n\n  /**\n   * Element node representing raw element no bound to any component.\n   */\n  export interface Raw extends ElementNode {\n\n    readonly context?: undefined;\n\n  }\n\n  /**\n   * Any element node. Either bound to some component or not.\n   */\n  export type Any = Raw | ComponentNode;\n\n  /**\n   * Element node selector options.\n   */\n  export interface SelectorOpts {\n\n    /**\n     * Set to `true` to select arbitrary nodes. Otherwise - select only component nodes.\n     */\n    all?: boolean;\n\n    /**\n     * Set to `true` to select from entire subtree. Otherwise - select from element child nodes only.\n     */\n    deep?: boolean;\n\n  }\n\n  /**\n   * Component node selector options.\n   */\n  export interface ComponentSelectorOpts extends SelectorOpts {\n\n    all?: false;\n\n  }\n\n  /**\n   * Any element node selector options.\n   */\n  export interface ElementSelectorOpts extends SelectorOpts {\n\n    /**\n     * Set to `true` to select arbitrary nodes. Otherwise - select only component nodes.\n     */\n    all: true;\n\n  }\n\n}\n\n/**\n * Element node representing an element bound to some component.\n */\nexport interface ComponentNode<T extends object = any> extends ElementNode {\n\n  readonly context: ComponentContext<T>;\n\n}\n\n/**\n * A key of component context value containing a component node instance.\n */\nexport const ComponentNode: SingleContextRef<ComponentNode> =\n    /*#__PURE__*/ new SingleContextKey<ComponentNode>('component-node');\n\n/**\n * Dynamic list of selected component tree nodes.\n *\n * It is an iterable of nodes.\n *\n * Implements an `EventSender` interface by sending added and removed nodes arrays.\n *\n * Implements an `EventKeeper` interface by sending updated node list.\n */\nexport abstract class ElementNodeList<N extends ElementNode = ElementNode.Any>\n    extends AIterable<N>\n    implements EventSender<[N[], N[]]>, EventKeeper<[ElementNodeList<N>]> {\n\n  /**\n   * An `OnEvent` sender of list changes. Sends arrays of added and removed nodes.\n   *\n   * The `[OnEvent__symbol]` property is an alias of this one.\n   */\n  abstract readonly onUpdate: OnEvent<[N[], N[]]>;\n\n  get [OnEvent__symbol](): OnEvent<[N[], N[]]> {\n    return this.onUpdate;\n  }\n\n  /**\n   * An `AfterEvent` keeper of current node list.\n   *\n   * The `[AfterEvent__symbol]` property is an alias of this one.\n   */\n  abstract readonly read: AfterEvent<[ElementNodeList<N>]>;\n\n  get [AfterEvent__symbol](): AfterEvent<[ElementNodeList<N>]> {\n    return this.read;\n  }\n\n  /**\n   * An `AfterEvent` keeper of node list changes.\n   *\n   * Sends an iterables of added and removed nodes. Sends current nodes immediately upon receiver registration.\n   */\n  abstract readonly track: AfterEvent<[ArrayLikeIterable<N>, ArrayLikeIterable<N>]>;\n\n  /**\n   * An `AfterEvent` keeper of the first node in this list.\n   */\n  abstract readonly first: AfterEvent<[N?]>;\n\n}\n","import {\n  BootstrapContext,\n  ComponentClass,\n  DefaultNamespaceAliaser,\n  ElementObserver,\n  ElementObserverInit,\n  isElement,\n} from '@wesib/wesib';\nimport { AIterable, ArrayLikeIterable, filterIt, itsEach, itsFirst, itsIterator, mapIt, overArray } from 'a-iterable';\nimport { isPresent, nextArgs } from 'call-thru';\nimport { AfterEvent, afterEventBy, afterSupplied, EventEmitter, eventSupply, OnEvent, onEventBy } from 'fun-events';\nimport { html__naming } from 'namespace-aliaser';\nimport { ElementNode, ElementNodeList as ElementNodeList_ } from './element-node';\n\nconst WATCH_DEEP: ElementObserverInit = { subtree: true };\n\n/**\n * @internal\n */\nexport function elementNodeList<N extends ElementNode>(\n    bsContext: BootstrapContext,\n    root: Element,\n    selectorOrType: string | ComponentClass<any>,\n    nodeOf: (node: Element, optional?: boolean) => N | undefined,\n    { deep, all }: ElementNode.SelectorOpts,\n): ElementNodeList_<N> {\n\n  const updates = new EventEmitter<[N[], N[]]>();\n  const init = deep ? WATCH_DEEP : undefined;\n  let cache = new Set<Element>();\n  let iterable: Iterable<N> | undefined;\n  let selector: string | undefined;\n\n  if (typeof selectorOrType === 'string') {\n    selector = selectorOrType;\n  } else {\n    bsContext.whenDefined(selectorOrType).then(({ elementDef: { name } }) => {\n      iterable = undefined;\n      if (name) {\n        selector = html__naming.name(name, bsContext.get(DefaultNamespaceAliaser));\n        if (updates.size) {\n\n          const selected = refresh();\n\n          if (selected.size) {\n\n            const added = [\n              ...filterIt<N | undefined, N>(\n                  mapIt(selected, node => nodeOf(node)),\n                  isPresent,\n              ),\n            ];\n\n            if (added.length) {\n              updates.send(added, []);\n            }\n          }\n        }\n      }\n    });\n  }\n\n  const observer = bsContext.get(ElementObserver)(update);\n  let nodeList: ElementNodeList;\n\n  const onUpdate = onEventBy<[N[], N[]]>(receiver => {\n\n    const firstReceiver = !updates.size;\n    const supply = updates.on(receiver);\n\n    if (firstReceiver) {\n      refresh();\n      observer.observe(root, init);\n    }\n\n    return eventSupply(reason => {\n      supply.off(reason);\n      if (!updates.size) {\n        observer.disconnect();\n      }\n    }).needs(supply);\n  });\n  const read = afterEventBy<[ElementNodeList]>(onUpdate.thru(() => nodeList), () => [nodeList]);\n  const onTrackUpdate: OnEvent<[ArrayLikeIterable<N>, ArrayLikeIterable<N>]> =\n      onUpdate.thru((added, removed) => nextArgs(AIterable.of(added), AIterable.of(removed)));\n  const track = afterEventBy<[ArrayLikeIterable<N>, ArrayLikeIterable<N>]>(receiver => {\n\n    const initialEmitter = new EventEmitter<[ArrayLikeIterable<N>, ArrayLikeIterable<N>]>();\n\n    initialEmitter.on(receiver);\n    initialEmitter.send(nodeList, AIterable.of([]));\n\n    onTrackUpdate(receiver);\n  });\n  const first: AfterEvent<[N?]> = afterSupplied(read).keep.thru(itsFirst);\n\n  if (!all) {\n    root.addEventListener('wesib:component', event => {\n\n      const element = event.target as Element;\n\n      if (cache.has(element)) {\n\n        const node = nodeOf(element) as N;\n\n        updates.send([node], []);\n      }\n    });\n  }\n\n  class ElementNodeList extends ElementNodeList_<N> {\n\n    get onUpdate() {\n      return onUpdate;\n    }\n\n    get read() {\n      return read;\n    }\n\n    get track() {\n      return track;\n    }\n\n    get first() {\n      return first;\n    }\n\n    [Symbol.iterator]() {\n      return itsIterator(iterable || (iterable = filterIt<N | undefined, N>(\n          mapIt(\n              elements(),\n              element => nodeOf(element),\n          ),\n          isPresent,\n      )));\n    }\n\n  }\n\n  return nodeList = new ElementNodeList();\n\n  function elements(): Set<Element> {\n    return updates.size ? cache : refresh();\n  }\n\n  function refresh(): Set<Element> {\n    iterable = undefined;\n    return cache = select();\n  }\n\n  function select(): Set<Element> {\n\n    const sel = selector;\n\n    if (!sel) {\n      return new Set();\n    }\n    if (deep) {\n      return new Set(overArray(root.querySelectorAll(sel)));\n    }\n    return new Set(\n        filterIt(\n            overArray(root.children),\n            item => item.matches(sel),\n        ),\n    );\n  }\n\n  function update(mutations: MutationRecord[]) {\n\n    const added: N[] = [];\n    const removed: N[] = [];\n\n    mutations.forEach(mutation => {\n      itsEach(\n          filterIt<N | undefined, N>(\n              mapIt(overArray(mutation.removedNodes), removeNode),\n              isPresent,\n          ),\n          node => removed.push(node),\n      );\n      itsEach(\n          filterIt<N | undefined, N>(\n              mapIt(overArray(mutation.addedNodes), addNode),\n              isPresent,\n          ),\n          node => added.push(node),\n      );\n    });\n    if (added.length || removed.length) {\n      updates.send(added, removed);\n    }\n  }\n\n  function addNode(node: Node): N | undefined {\n    if (!isElement(node)) {\n      return;\n    }\n    if (selector && node.matches(selector) && !cache.has(node)) {\n      cache.add(node);\n      return nodeOf(node);\n    }\n    return;\n  }\n\n  function removeNode(node: Node): N | undefined {\n    if (!isElement(node)) {\n      return;\n    }\n    if (!cache.delete(node)) {\n      return;\n    }\n    return nodeOf(node, true);\n  }\n\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport {\n  EventEmitter,\n  eventReceiver,\n  EventReceiver, eventSupply,\n  EventSupply,\n  noEventSupply,\n  OnEvent,\n  onEventBy,\n  ValueTracker,\n} from 'fun-events';\n\nclass AttributesObserver {\n\n  private readonly _emitters = new Map<string, EventEmitter<[string, string | null]>>();\n  private _observer?: MutationObserver;\n\n  constructor(private readonly _bs: BootstrapContext, readonly element: Element) {\n  }\n\n  private get observer(): MutationObserver {\n    if (this._observer) {\n      return this._observer;\n    }\n\n    const Observer: typeof MutationObserver = (this._bs.get(BootstrapWindow) as any).MutationObserver;\n\n    return this._observer = new Observer(mutations => this._update(mutations));\n  }\n\n  observe(name: string, receiver: EventReceiver<[string, string | null]>): EventSupply {\n\n    const self = this;\n    const observer = this.observer;\n    const emitter = this._emitter(name);\n    const rcv = eventReceiver(receiver);\n    const supply = emitter.on({\n      supply: eventSupply(() => {\n        this._emitters.delete(name);\n        observer.disconnect();\n        if (this._emitters.size) {\n          reconnect();\n        } else {\n          this._observer = undefined;\n        }\n      }).needs(rcv.supply),\n      receive: (ctx, newValue, oldValue) => rcv.receive(ctx, newValue, oldValue),\n    });\n\n    observer.disconnect();\n    reconnect();\n\n    return supply;\n\n    function reconnect() {\n      self._update(observer.takeRecords());\n      observer.observe(self.element, {\n        attributes: true,\n        attributeOldValue: true,\n        attributeFilter: [...self._emitters.keys()],\n      });\n    }\n  }\n\n  private _update(mutations: MutationRecord[]) {\n    mutations.forEach(mutation => {\n\n      const attributeName = mutation.attributeName as string;\n      const emitter = this._emitters.get(attributeName);\n\n      if (emitter) {\n        emitter.send(this.element.getAttribute(attributeName) as string, mutation.oldValue);\n      }\n    });\n  }\n\n  private _emitter(name: string): EventEmitter<[string, string | null]> {\n\n    const emitter = new EventEmitter<[string, string | null]>();\n\n    this._emitters.set(name, emitter);\n\n    return emitter;\n  }\n\n}\n\nclass AttributeTracker extends ValueTracker<string | null, string> {\n\n  private readonly _updates = new EventEmitter<[string, string | null]>();\n  readonly on: OnEvent<[string, string | null]>;\n\n  constructor(\n      private readonly _observer: AttributesObserver,\n      private readonly _name: string,\n  ) {\n    super();\n\n    let observeSupply = noEventSupply();\n\n    this.on = onEventBy(receiver => {\n      if (!this._updates.size) {\n        observeSupply = this._observer.observe(\n            _name,\n            (newValue, oldValue) => this._updates.send(newValue, oldValue),\n        );\n      }\n      receiver.supply.needs(observeSupply);\n      this._updates.on(receiver).whenOff(reason => {\n        if (!this._updates.size) {\n          observeSupply.off(reason);\n        }\n      });\n    });\n  }\n\n  get it(): string | null {\n    return this._observer.element.getAttribute(this._name);\n  }\n\n  set it(value: string | null) {\n    this._observer.element.setAttribute(this._name, value as string);\n  }\n\n  done(reason?: any): this {\n    this._updates.done(reason);\n    return this;\n  }\n\n}\n\n/**\n * @internal\n */\nexport class NodeAttributes {\n\n  private readonly _attrs = new Map<string, AttributeTracker>();\n  private readonly _observer: AttributesObserver;\n\n  constructor(bs: BootstrapContext, element: any) {\n    this._observer = new AttributesObserver(bs, element);\n  }\n\n  get(name: string): ValueTracker<string | null, string> {\n\n    const existing = this._attrs.get(name);\n\n    if (existing) {\n      return existing;\n    }\n\n    const created = new AttributeTracker(this._observer, name);\n\n    this._attrs.set(name, created);\n\n    return created;\n  }\n\n}\n","import { ComponentContext, ComponentState, domPropertyPathTo } from '@wesib/wesib';\nimport { EventEmitter, eventSupply, noEventSupply, OnEvent, ValueTracker } from 'fun-events';\n\nclass PropertyTracker<T> extends ValueTracker<T> {\n\n  private readonly _updates = new EventEmitter<[T, T]>();\n  private _supply = noEventSupply();\n\n  constructor(\n      private readonly _element: any,\n      private readonly _key: PropertyKey,\n  ) {\n    super();\n  }\n\n  get on(): OnEvent<[T, T]> {\n    return this._updates.on;\n  }\n\n  bind(context: ComponentContext) {\n\n    const propertyState = context.get(ComponentState).track(domPropertyPathTo(this._key));\n\n    this._supply = propertyState.onUpdate({\n      supply: eventSupply().whenOff(reason => this._updates.done(reason)),\n      receive: (_ctx, _path, newValue: any, oldValue: any) => this._updates.send(newValue, oldValue),\n    });\n  }\n\n  get it(): T {\n    return this._element[this._key];\n  }\n\n  set it(value: T) {\n    this._element[this._key] = value;\n  }\n\n  done(reason?: any): this {\n    this._supply.off(reason);\n    return this;\n  }\n\n}\n\n/**\n * @internal\n */\nexport class NodeProperties {\n\n  private readonly _props = new Map<PropertyKey, PropertyTracker<any>>();\n  private _context?: ComponentContext<any>;\n\n  constructor(private readonly _element: any) {\n  }\n\n  bind(context: ComponentContext) {\n    this._context = context;\n    this._props.forEach(prop => prop.bind(context));\n  }\n\n  get<T>(key: PropertyKey): ValueTracker<T> {\n\n    const existing = this._props.get(key);\n\n    if (existing) {\n      return existing;\n    }\n\n    const created = new PropertyTracker<any>(this._element, key);\n\n    if (this._context) {\n      created.bind(this._context);\n    }\n    this._props.set(key, created);\n\n    return created;\n  }\n\n}\n","import {\n  BootstrapContext,\n  ComponentClass,\n  ComponentContext,\n  ComponentContext__symbol,\n  ComponentEvent,\n  ElementAdapter,\n} from '@wesib/wesib';\nimport { ValueTracker } from 'fun-events';\nimport { ComponentNode, ElementNode as ElementNode_, ElementNodeList } from './element-node';\nimport { elementNodeList } from './element-node-list.impl';\nimport { NodeAttributes } from './node-attributes.impl';\nimport { NodeProperties } from './node-properties.impl';\n\nconst ElementNode__symbol = /*#__PURE__*/ Symbol('element-node');\n\nclass ElementNode extends ElementNode_ {\n\n  private readonly _attrs: NodeAttributes;\n  private readonly _props: NodeProperties;\n\n  constructor(private readonly _bs: BootstrapContext, readonly element: Element) {\n    super();\n    this._attrs = new NodeAttributes(_bs, element);\n    this._props = new NodeProperties(element);\n    (element as any)[ElementNode__symbol] = this;\n\n    const context = (element as any)[ComponentContext__symbol] as ComponentContext<any> | undefined;\n\n    if (context) {\n      this._bind(context);\n    } else {\n      element.addEventListener('wesib:component', event => this._bind((event as ComponentEvent).context));\n    }\n  }\n\n  get context(): ComponentContext<any> | undefined {\n    return (this.element as any)[ComponentContext__symbol];\n  }\n\n  get parent() {\n\n    const parent = this.element.parentElement;\n\n    return parent != null ? elementNodeOf(this._bs, parent) : null;\n  }\n\n  select(selector: string | ComponentClass<any>, opts?: ElementNode_.SelectorOpts): ElementNodeList<any> {\n    return selectNodes(this._bs, this.element, selector, opts);\n  }\n\n  attribute(name: string): ValueTracker<string | null, string> {\n    return this._attrs.get(name);\n  }\n\n  property<V>(key: PropertyKey): ValueTracker<V> {\n    return this._props.get(key);\n  }\n\n  private _bind(context: ComponentContext) {\n    this._props.bind(context);\n  }\n\n}\n\n/**\n * @internal\n */\nexport function elementNodeOf(bsContext: BootstrapContext, element: Element, optional?: boolean): ElementNode_.Any {\n\n  const existing: ElementNode_.Any = (element as any)[ElementNode__symbol];\n\n  return (existing || optional) ? existing : new ElementNode(bsContext, element);\n}\n\nfunction selectNodes(\n    bsContext: BootstrapContext,\n    root: Element,\n    selector: string | ComponentClass<any>,\n    opts: ElementNode_.SelectorOpts = {},\n): ElementNodeList<any> {\n  if (opts.all) {\n    return elementNodeList<ElementNode_.Any>(\n        bsContext,\n        root,\n        selector,\n        (element, optional) => elementNodeOf(bsContext, element, optional),\n        opts,\n    );\n  }\n\n  const adapter = bsContext.get(ElementAdapter);\n\n  return elementNodeList<ComponentNode>(\n      bsContext,\n      root,\n      selector,\n      (element, optional) => adapter(element) && elementNodeOf(bsContext, element, optional) as ComponentNode,\n      opts,\n  );\n}\n","/**\n * @module @wesib/generic\n */\nimport { BootstrapContext, ComponentContext, FeatureDef, FeatureDef__symbol, StateSupport } from '@wesib/wesib';\nimport { ComponentNode } from './element-node';\nimport { elementNodeOf } from './element-node.impl';\n\nconst ComponentTreeSupport__feature: FeatureDef = {\n  needs: StateSupport,\n  setup(setup) {\n    setup.perComponent({\n      a: ComponentNode,\n      by(context: ComponentContext) {\n        return elementNodeOf(context.get(BootstrapContext), context.element) as ComponentNode;\n      },\n    });\n  },\n};\n\n/**\n * Component tree support feature.\n *\n * Provides a [[ComponentNode]] instance for each component.\n */\nexport class ComponentTreeSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return ComponentTreeSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ArrayLikeIterable, filterIt, itsEach, mapIt } from 'a-iterable';\nimport { isPresent } from 'call-thru';\nimport { afterSupplied, EventKeeper, eventSupply, EventSupply } from 'fun-events';\nimport { InControl } from 'input-aspects';\nimport { ComponentNode } from '../tree';\nimport { ComponentIn } from './component-in';\n\n/**\n * Enables user input in the given component input context.\n *\n * Searches for the nested components with {@link ComponentIn component input} in their contexts and enables their\n * participation in user input.\n *\n * @param root  Root component node initiating the user input.\n * @param control  User input control.\n *\n * @returns User input supply. The user input is disabled once this supply is cut off.\n */\nexport function enableComponentIn(\n    {\n      root,\n      control,\n    }: {\n      root: ComponentNode;\n      control: InControl<any>;\n    },\n): EventSupply {\n\n  const inputSupply = eventSupply();\n\n  root.context.whenOn(connectionSupply => {\n    connectionSupply.needs(inputSupply);\n\n    const map = new Map<ComponentNode, ComponentInNode>();\n\n    root.select('*', { deep: true }).track({\n      supply: connectionSupply,\n      receive: (_ctx, added, removed) => {\n        itsEach(removed, removeInNode);\n        itsEach(addedInNodes(added), participate);\n      },\n    });\n\n    function addedInNodes(nodes: ArrayLikeIterable<ComponentNode>): Iterable<ComponentInNode> {\n      return filterIt<ComponentInNode | undefined, ComponentInNode>(\n          mapIt(\n              nodes,\n              toInNode,\n          ),\n          isPresent,\n      );\n    }\n\n    function toInNode(node: ComponentNode): ComponentInNode | undefined {\n\n      const ins = node.context.get(ComponentIn, { or: null });\n\n      if (!ins) {\n        return;\n      }\n\n      const { element } = node;\n\n      for (const n of map.keys()) {\n        if (element.contains(n.element)) {\n          removeInNode(n);\n        } else if (n.element.contains(element)) {\n          return;\n        }\n      }\n\n      const inNode: ComponentInNode = {\n        node,\n        ins,\n        supply: eventSupply().needs(connectionSupply),\n      };\n\n      map.set(node, inNode);\n\n      return inNode;\n    }\n\n    function participate({ ins, supply: inSupply }: ComponentInNode) {\n\n      const supply = eventSupply().needs(inSupply);\n\n      itsEach(\n          ins,\n          participantSupplier => afterSupplied(participantSupplier)({\n            supply,\n            receive: (_, ...participants) => itsEach(\n                participants,\n                participant => participant({\n                  root,\n                  control,\n                }).needs(supply),\n            ),\n          }),\n      );\n    }\n\n    function removeInNode(node: ComponentNode) {\n\n      const inNode = map.get(node);\n\n      if (inNode) {\n        map.delete(node);\n        inNode.supply.off();\n      }\n    }\n  }).needs(inputSupply);\n\n  return inputSupply;\n}\n\ninterface ComponentInNode {\n\n  readonly node: ComponentNode;\n  readonly ins: readonly EventKeeper<ComponentIn[]>[];\n  readonly supply: EventSupply;\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ComponentContext, DefinitionSetup } from '@wesib/wesib';\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { afterThe, EventSupply } from 'fun-events';\nimport { InControl } from 'input-aspects';\nimport { ComponentNode } from '../tree';\nimport { ComponentIn } from './component-in';\nimport { enableComponentIn } from './enable-component-in';\n\nconst ComponentInControl__key = /*#__PURE__*/ new SingleContextKey<ComponentInControl>('component-in-control');\n\n/**\n * User input control maintained by component.\n *\n * An instance of this class intended to be constructed available component context. A [[setup]] method can be used for\n * that.\n *\n * To initiate user input, the component should obtain an instance from its context and [[enable]] it.\n */\nexport class ComponentInControl<Value = any> {\n\n  /**\n   * A key of component context value containing an component input control.\n   */\n  static get [ContextKey__symbol](): ContextKey<ComponentInControl> {\n    return  ComponentInControl__key;\n  }\n\n  /**\n   * Root component node.\n   */\n  readonly root: ComponentNode;\n\n  /**\n   * Sets up component definition to make it contain a component input control instance.\n   *\n   * @param setup  Target component definition setup.\n   */\n  static setup(setup: DefinitionSetup): void {\n    setup.perComponent({ as: ComponentInControl });\n    setup.perComponent({ a: ComponentIn, is: afterThe() });\n  }\n\n  /**\n   * Constructs component user input control.\n   *\n   * Normally, a [[setup]] method should be used instead.\n   *\n   * @param context  Component context.\n   */\n  constructor(context: ComponentContext) {\n    this.root = context.get(ComponentNode);\n  }\n\n  /**\n   * Enables user input for the given control.\n   *\n   * Utilizes [[enableComponentIn]] for that.\n   *\n   * @param control  User input control to enable.\n   *\n   * @returns User input supply. The user input is disabled once this supply is cut off.\n   */\n  enable(control: InControl<Value>): EventSupply {\n    return enableComponentIn({\n      root: this.root,\n      control,\n    });\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { Navigation } from './navigation';\nimport { Page } from './page';\n\n/**\n * Navigation event.\n */\nexport type NavigationEvent = LeavePageEvent | EnterPageEvent | StayOnPageEvent;\n\n/**\n * Navigation event type.\n */\nexport const enum NavigationEventType {\n\n  /**\n   * {@link EnterPageEvent Enter page event} type.\n   */\n  EnterPage = 'wesib:enterPage',\n\n  /**\n   * {@link LeavePageEvent Leave page event} type.\n   */\n  LeavePage = 'wesib:leavePage',\n\n  /**\n   * {@link StayOnPageEvent Stay on page event} type.\n   */\n  StayOnPage = 'wesib:stayOnPage',\n\n}\n\n/**\n * An event fired when navigation target reached by entering destination page.\n *\n * @event EnterPageEvent#wesib:enterPage\n */\nexport class EnterPageEvent extends Event {\n\n  /**\n   * When navigation event occurred.\n   *\n   * Can be one of:\n   * - `open` when opening a new page,\n   * - `replace` when replacing navigation history entry,\n   * - `enter` when entering new page by user action (e.g. hashchange event),\n   * - `return` when navigated to previously visited entry in navigation history.\n   */\n  readonly when: 'open' | 'replace' | 'enter' | 'return';\n\n  /**\n   * Entered page.\n   */\n  readonly to: Page;\n\n  /**\n   * Constructs enter page event.\n   *\n   * @param type  Event type.\n   * @param init  Initialization options.\n   */\n  constructor(type: string, init: EnterPageEventInit) {\n    super(type, { ...init, cancelable: false });\n    this.when = init.when;\n    this.to = init.to;\n  }\n\n}\n\n/**\n * {@link EnterPageEvent Enter page event} initialization options.\n */\nexport interface EnterPageEventInit extends Omit<EventInit, 'cancelable'> {\n\n  /**\n   * When navigation event occurred.\n   *\n   * Can be one of:\n   * - `open` when opening a new page,\n   * - `replace` when replacing navigation history entry,\n   * - `enter` when entering new page by user action (e.g. hashchange event),\n   * - `return` when navigated to previously visited entry in navigation history.\n   */\n  readonly when: 'open' | 'replace' | 'enter' | 'return';\n\n  /**\n   * Entered page.\n   */\n  readonly to: Page;\n\n}\n\n/**\n * An event fired right before leaving the page in order to navigate to another one.\n *\n * This event can be cancelled in order to prevent actual navigation or history update. The navigation is also\n * cancelled when another navigation initiated by one of the handlers of this event.\n *\n * @event LeavePageEvent#wesib:leavePage\n */\nexport class LeavePageEvent extends Event {\n\n  /**\n   * When navigation event occurred. Either `pre-open` when leaving a page to open a new one, or `pre-replace` when\n   * leaving a page to replace it with another history entry.\n   */\n  readonly when: 'pre-open' | 'pre-replace';\n\n  /**\n   * The page to leave.\n   */\n  readonly from: Page;\n\n  /**\n   * Navigation target page.\n   */\n  readonly to: Page;\n\n  /**\n   * Constructs leave page event.\n   *\n   * @param type  Event type.\n   * @param init  Initialization options.\n   */\n  constructor(type: string, init: LeavePageEventInit) {\n    super(type, { ...init, cancelable: true });\n    this.when = init.when;\n    this.from = init.from;\n    this.to = init.to;\n  }\n\n}\n\n/**\n * {@link LeavePageEvent Leave page event} initialization options.\n */\nexport interface LeavePageEventInit extends Omit<EventInit, 'cancelable'> {\n\n  /**\n   * When navigation event occurred. Either `pre-open` when leaving a page to open a new one, or `pre-replace` when\n   * leaving a page to replace it with another history entry.\n   */\n  readonly when: 'pre-open' | 'pre-replace';\n\n  /**\n   * The page to leave.\n   */\n  readonly from: Page;\n\n  /**\n   * Navigation target page.\n   */\n  readonly to: Page;\n\n}\n\n/**\n * An event fired when navigation cancelled or failed.\n *\n * @event StayOnPageEvent#wesib:stayOnPage\n */\nexport class StayOnPageEvent extends Event {\n\n  /**\n   * When navigation event occurred. Always `stay`.\n   */\n  get when(): 'stay' {\n    return 'stay';\n  }\n\n  /**\n   * The page to stay at.\n   */\n  readonly from: Page;\n\n  /**\n   * Navigation target.\n   */\n  readonly to: Navigation.URLTarget;\n\n  /**\n   * A reason of navigation failure. This is set when navigation failed due to some error.\n   */\n  readonly reason?: any;\n\n  /**\n   * Constructs stay on page event.\n   *\n   * @param type  Event type.\n   * @param init  Initialization options.\n   */\n  constructor(type: string, init: StayOnPageEventInit) {\n    super(type, { ...init, cancelable: true });\n    this.from = init.from;\n    this.to = init.to;\n    this.reason = init.reason;\n  }\n\n}\n\n/**\n * {@link StayOnPageEvent Stay on page event} initialization options.\n */\nexport interface StayOnPageEventInit extends Omit<EventInit, 'cancelable'> {\n\n  /**\n   * The page to stay at.\n   */\n  readonly from: Page;\n\n  /**\n   * Navigation target.\n   */\n  readonly to: Navigation.URLTarget;\n\n  /**\n   * A reason of navigation failure. This is set when navigation failed due to some error.\n   */\n  readonly reason?: any;\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport {\n  AfterEvent,\n  AfterEvent__symbol,\n  EventKeeper,\n  EventSender,\n  OnDomEvent,\n  OnEvent,\n  OnEvent__symbol,\n} from 'fun-events';\nimport { EnterPageEvent, LeavePageEvent, NavigationEvent, StayOnPageEvent } from './navigation.event';\nimport { Page } from './page';\nimport { PageParam } from './page-param';\n\nconst Navigation__key = /*#__PURE__*/ new SingleContextKey<Navigation>('navigation');\n\n/**\n * Browser navigation service.\n *\n * Expected to be used as a [History] and [Location] APIs replacement.\n *\n * Fires additional navigation events the browser does not support natively.\n *\n * Implements an `EventSender` interface by sending {@link NavigationEvent navigation events} to registered receivers.\n *\n * Implements an `EventKeeper` interface by sending current {@link Page page} to registered receivers.\n *\n * Available as bootstrap context value when [[NavigationSupport]] feature is enabled.\n *\n * [History]: https://developer.mozilla.org/en-US/docs/Web/API/History\n * [Location]: https://developer.mozilla.org/en-US/docs/Web/API/Location\n */\nexport abstract class Navigation implements EventSender<[NavigationEvent]>, EventKeeper<[Page]> {\n\n  static get [ContextKey__symbol](): ContextKey<Navigation> {\n    return Navigation__key;\n  }\n\n  /**\n   * The number of element in navigation history.\n   */\n  abstract readonly length: number;\n\n  /**\n   * An `OnDomEvent` registrar of enter page event receivers.\n   */\n  abstract readonly onEnter: OnDomEvent<EnterPageEvent>;\n\n  /**\n   * An `OnDomEvent` registrar of leave page event receivers.\n   *\n   * These receivers may cancel navigation by calling `preventDefault()` method of received event.\n   */\n  abstract readonly onLeave: OnDomEvent<LeavePageEvent>;\n\n  /**\n   * An `OnDomEvent` registrar of stay on page event receivers.\n   *\n   * These receivers are informed when navigation has been cancelled by one of leave page event receivers,\n   * navigation failed due to e.g. invalid URL, or when another navigation request initiated before the page left.\n   */\n  abstract readonly onStay: OnDomEvent<StayOnPageEvent>;\n\n  /**\n   * An `OnEvent` registrar of navigation events receivers.\n   *\n   * The `[OnEvent__symbol]` property is an alias of this one.\n   */\n  abstract readonly on: OnEvent<[NavigationEvent]>;\n\n  get [OnEvent__symbol](): OnEvent<[NavigationEvent]> {\n    return this.on;\n  }\n\n  /**\n   * An `AfterEvent` registrar of current page receivers.\n   *\n   * The `[AfterEvent__symbol]` property is an alias of this one.\n   */\n  abstract readonly read: AfterEvent<[Page]>;\n\n  get [AfterEvent__symbol](): AfterEvent<[Page]> {\n    return this.read;\n  }\n\n  /**\n   * Goes to the previous page in navigation history.\n   *\n   * Calling this method is the same as calling `go(-1)`.\n   */\n  back(): void {\n    this.go(-1);\n  }\n\n  /**\n   * Goes to the next page in navigation history.\n   *\n   * Calling this method is the same as calling `go(1)`.\n   */\n  forward(): void {\n    this.go(1);\n  }\n\n  /**\n   * Loads a page from navigation history, identified by its relative location to the current page.\n   *\n   * For example `-1` navigates to previous page, while `1` navigates to the next one. If you specify an out-of-bounds\n   * value (for instance, specifying -1 when there are no previously-visited pages in navigation history), this method\n   * silently has no effect.\n   *\n   * @param delta  Relative location in navigation history to navigate to. The absent value or value of `0` reloads\n   * the current page.\n   */\n  abstract go(delta?: number): void;\n\n  /**\n   * Reloads current page.\n   *\n   * Calling this method is the same as calling `go()`.\n   */\n  reload(): void {\n    this.go();\n  }\n\n  /**\n   * Opens a page by navigating to the given `target`.\n   *\n   * Appends an entry to navigation history.\n   *\n   * @param target  Either navigation target or URL to navigate to.\n   * @fires PreNavigateEvent#wesib:preNavigate  On window object prior to actually navigate.\n   * Then navigates to the `target`, unless the event cancelled.\n   * @fires NavigateEvent@wesib:navigate  On window object when navigation succeed.\n   *\n   * @returns A promise resolved to navigated page, or to `null` otherwise.\n   */\n  abstract open(target: Navigation.Target | string | URL): Promise<Page | null>;\n\n  /**\n   * Replaces current navigation history entry with the given `target`.\n   *\n   * @param target  Either navigation target or URL to replace current history entry with.\n   * @fires PreNavigateEvent#wesib:preNavigate  On window object prior to actually update the history.\n   * Then navigates to the `target`, unless the event cancelled.\n   * @fires NavigateEvent@wesib:navigate  On window object when history updated.\n   *\n   * @returns A promise resolved to navigated page, or to `null` otherwise.\n   */\n  abstract replace(target: Navigation.Target | string | URL): Promise<Page | null>;\n\n  /**\n   * Replaces current page URL with the given one.\n   *\n   * Does not alter current page state, and does not trigger any events.\n   *\n   * @param url  An URL to replace the\n   *\n   * @returns Current page with updated URL.\n   */\n  abstract update(url: string | URL): Page;\n\n  /**\n   * Creates parameterized navigation instance and assigns a page parameter to apply to target page.\n   *\n   * @typeparam T  Parameter value type.\n   * @typeparam I  Parameter input type.\n   * @param ref  A reference to page navigation parameter to apply.\n   * @param input  Parameter input to use when constructing its value.\n   *\n   * @returns New parameterized navigation instance.\n   */\n  abstract with<T, I>(ref: PageParam.Ref<T, I>, input: I): Navigation.Parameterized;\n\n}\n\nexport namespace Navigation {\n\n  /**\n   * Parameterized navigation.\n   *\n   * Allows to assign target page parameters prior to navigating to it.\n   */\n  export interface Parameterized {\n\n    /**\n     * Applies parameter to navigation target page.\n     *\n     * @typeparam T  Parameter value type.\n     * @typeparam I  Parameter input type.\n     * @param ref  A reference to page navigation parameter to apply.\n     * @param input  Parameter input to use when constructing its value.\n     *\n     * @returns New parameterized navigation instance.\n     */\n    with<T, I>(ref: PageParam.Ref<T, I>, input: I): Parameterized;\n\n    /**\n     * Opens a page by navigating to the given `target` with provided page parameters.\n     *\n     * Appends an entry to navigation history.\n     *\n     * @param target  Either navigation target or URL to navigate to.\n     * @fires PreNavigateEvent#wesib:preNavigate  On window object prior to actually navigate.\n     * Then navigates to the `target`, unless the event cancelled.\n     * @fires NavigateEvent@wesib:navigate  On window object when navigation succeed.\n     *\n     * @returns A promise resolved to navigated page, or to `null` otherwise.\n     */\n    open(target: Navigation.Target | string | URL): Promise<Page | null>;\n\n    /**\n     * Replaces the most recent entry in navigation history with the given `target` and provided page parameters.\n     *\n     * @param target  Either navigation target or URL to replace the latest history entry with.\n     * @fires PreNavigateEvent#wesib:preNavigate  On window object prior to actually update the history.\n     * Then navigates to the `target`, unless the event cancelled.\n     * @fires NavigateEvent@wesib:navigate  On window object when history updated.\n     *\n     * @returns A promise resolved to navigated page, or to `null` otherwise.\n     */\n    replace(target: Navigation.Target | string | URL): Promise<Page | null>;\n\n  }\n\n  /**\n   * Navigation target.\n   *\n   * This is passed to [[Navigation.open]] and [[Navigation.replace]] methods.\n   */\n  export interface Target {\n\n    /**\n     * An URL to update the browser location string to.\n     */\n    readonly url?: string | URL;\n\n    /**\n     * Opaque data to apply to session history. I.e. either push or replace.\n     */\n    readonly data?: any;\n\n    /**\n     * New window title.\n     */\n    readonly title?: string;\n\n  }\n\n  /**\n   * Navigation target with URL value.\n   */\n  export interface URLTarget extends Target {\n\n    readonly url: URL;\n\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { BootstrapWindow } from '@wesib/wesib';\nimport { ContextUpKey, ContextUpRef, ContextValueOpts, ContextValues } from 'context-values';\nimport { AfterEvent, EventKeeper } from 'fun-events';\nimport { Navigation } from './navigation';\nimport { Page } from './page';\nimport Target = Navigation.Target;\n\n/**\n * Navigation agent signature.\n *\n * The agent is called by navigation methods when leaving current page and may alter navigation processing.\n * E.g. change navigation target. For that it should be registered in appropriate context.\n *\n * All registered agents are organized into chain. The first agent in chain is called by navigation method.\n */\nexport type NavigationAgent =\n/**\n * @param next  Either calls the next agent in chain, or applies the final navigation target if this agent is the last\n * one. Not calling this function effectively prevents navigation.\n * Accepts an optional [[Navigation.Target]] parameter. The original target will be used instead when omitted.\n * @param when  When navigation occurred. Either `pre-open`, or `pre-replace`.\n * @param from  The page to leave.\n * @param to  Navigation target page.\n */\n    (\n        this: void,\n        next: (this: void, target?: Target) => void,\n        when: 'pre-open' | 'pre-replace',\n        from: Page,\n        to: Page,\n    ) => void;\n\nclass NavigationAgentKey\n    extends ContextUpKey<NavigationAgent.Combined, NavigationAgent>\n    implements ContextUpRef<NavigationAgent.Combined, NavigationAgent, AfterEvent<NavigationAgent[]>> {\n\n  constructor(name: string) {\n    super(name);\n  }\n\n  grow<Ctx extends ContextValues>(\n      opts: ContextValueOpts<\n          Ctx,\n          NavigationAgent.Combined,\n          EventKeeper<NavigationAgent[]> | NavigationAgent,\n          AfterEvent<NavigationAgent[]>>,\n  ): NavigationAgent.Combined {\n\n    const { document } = opts.context.get(BootstrapWindow);\n\n    return (next, when, from, to) => {\n\n      const result = opts.byDefault(() => combinedAgent);\n\n      return result ? result(next, when, from, to) : next(to);\n    };\n\n    function combinedAgent(\n        next: (this: void, target: Navigation.URLTarget) => void,\n        when: 'pre-open' | 'pre-replace',\n        from: Page,\n        to: Page,\n    ): void {\n\n      let agents!: NavigationAgent[];\n\n      opts.seed.once((...sources) => agents = sources);\n\n      return navigate(0, to);\n\n      function navigate(agentIdx: number, agentTo: Page): void {\n\n        const agent = agents[agentIdx];\n\n        if (!agent) {\n          return next(agentTo);\n        }\n\n        agent(\n            (\n                {\n                  url: nextURL = agentTo.url,\n                  title: nextTitle = agentTo.title,\n                  data: nextData = agentTo.data,\n                }: Navigation.Target = agentTo,\n            ) => navigate(\n                agentIdx + 1,\n                {\n                  url: new URL(String(nextURL), document.baseURI),\n                  title: nextTitle,\n                  data: nextData,\n                  get visited() {\n                    return agentTo.visited;\n                  },\n                  get current() {\n                    return agentTo.current;\n                  },\n                  get(ref) {\n                    return agentTo.get(ref);\n                  },\n                  put(ref, input) {\n                    agentTo.put(ref, input);\n                  },\n                },\n            ),\n            when,\n            from,\n            agentTo,\n        );\n      }\n    }\n  }\n\n}\n\nexport namespace NavigationAgent {\n\n  /**\n   * Combined navigation agent signature.\n   *\n   * This is what is available under [[NavigationAgent]] key.\n   */\n  export type Combined =\n  /**\n   * @param next  Either calls the next agent in chain, or applies the final navigation target if this agent is the last\n   * one. Not calling this function effectively prevents navigation.\n   * Accepts an optional [[Navigation.Target]] parameter. The original target will be used instead when omitted.\n   * @param when  When navigation occurred. Either `pre-open`, or `pre-replace`.\n   * @param from  The page to leave.\n   * @param to  Navigation target page.\n   */\n      (\n          this: void,\n          next: (this: void, target: Navigation.URLTarget) => void,\n          when: 'pre-open' | 'pre-replace',\n          from: Page,\n          to: Page,\n      ) => void;\n\n}\n\n/**\n * A key of context value containing an [[NavigationAgent]] instance.\n *\n * The agent returned combines all registered agents into one. If no agent registered it just performs the navigation.\n */\nexport const NavigationAgent: ContextUpRef<NavigationAgent.Combined, NavigationAgent> =\n    /*#__PURE__*/ new NavigationAgentKey('navigation-agent');\n","/**\n * @module @wesib/generic\n */\nimport { Page } from './page';\nimport { PageParamContext } from './page-param-context';\n\n/**\n * A key of {@link PageParam.Ref page parameter request} property containing requested page parameter.\n */\nexport const PageParam__symbol = /*#__PURE__*/ Symbol('page-param');\n\n/**\n * Page navigation parameter.\n *\n * Can applied before navigation happened (i.e. to [[LeavePageEvent]]). Then it will be available to the target page\n * both before and after navigation.\n *\n * @typeparam T  Parameter value type.\n * @typaparam I  Parameter input type.\n */\nexport abstract class PageParam<T, I> implements PageParam.Ref<T, I> {\n\n  get [PageParam__symbol](): this {\n    return this;\n  }\n\n  /**\n   * Creates page parameter handle.\n   *\n   * This method is called when {@link Page.put assigning new page parameter}.It is called at most once per request,\n   * unless this parameter is assigned already. A {@link PageParam.Handle.put} method will be called instead\n   * in the latter case.\n   *\n   * @param page  A page to assign navigation parameter to.\n   * @param input  Parameter input used to construct its initial value.\n   * @param context  Page parameter context.\n   *\n   * @returns New page parameter value handle.\n   */\n  abstract create(page: Page, input: I, context: PageParamContext): PageParam.Handle<T, I>;\n\n}\n\nexport namespace PageParam {\n\n  /**\n   * Page navigation parameter reference.\n   *\n   * @typeparam T  Parameter value type.\n   * @typaparam I  Parameter input type.\n   */\n  export interface Ref<T, I> {\n\n    /**\n     * Referred page navigation parameter instance.\n     */\n    readonly [PageParam__symbol]: PageParam<T, I>;\n\n  }\n\n  /**\n   * Page navigation parameter value handle.\n   *\n   * Holds and maintains parameter value.\n   *\n   * Created by {@link PageParam.create} method.\n   *\n   * @typeparam T  Parameter value type.\n   * @typaparam I  Parameter input type.\n   */\n  export interface Handle<T, I> {\n\n    /**\n     * Returns current parameter value.\n     *\n     * @returns Parameter value.\n     */\n    get(): T;\n\n    /**\n     * Puts page parameter value.\n     *\n     * This method is called when {@link Page.put re-assigning page parameter}. It is called when page parameter\n     * is assigned already and can be used to update it. The update logic is up to the implementation.\n     *\n     * @param input  Parameter input to use when updating its value.\n     */\n    put(input: I): void;\n\n    /**\n     * Transfers parameter to target page.\n     *\n     * This is called right before [[LeavePageEvent]] is fired for each parameter handle of current page.\n     *\n     * @param to  A page to transfer parameter to.\n     * @param when  When the transfer happens. Either `pre-open`, `pre-replace`, `open`, or `return`. The latter is used\n     * when return to page generated by another app version. E.g. from the page that has been reloaded.\n     *\n     * @returns New parameter handle instance for target page, or `undefined` if nothing to transfer.\n     */\n    transfer?(to: Page, when: 'pre-open' | 'pre-replace' | 'enter' | 'return'): Handle<T, I> | undefined;\n\n    /**\n     * This method is called when the page this parameter created for is entered.\n     *\n     * @param page  Entered page.\n     * @param when  When the page is entered. Either `init`, `open`, `replace`, `enter`, or `return`.\n     */\n    enter?(page: Page, when: 'init' | 'open' | 'replace' | 'enter' | 'return'): void;\n\n    /**\n     * This method is called when the page this parameter created for is left.\n     */\n    leave?(): void;\n\n    /**\n     * This method is called when page navigation aborted and target page won't be reached.\n     *\n     * The handle won't be accessed after this method call.\n     *\n     * @param at  The page the browser remains at.\n     */\n    stay?(at: Page): void;\n\n    /**\n     * This method is called when the page this parameter is created for is removed from navigation history.\n     *\n     * The handle won't be accessed after this method call.\n     */\n    forget?(): void;\n\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ContextValues } from 'context-values';\n\n/**\n * Page parameter context.\n *\n * Provides values available in bootstrap context.\n */\nexport abstract class PageParamContext extends ContextValues {\n}\n","import { BootstrapContext, bootstrapDefault, BootstrapWindow } from '@wesib/wesib';\nimport { itsEach } from 'a-iterable';\nimport { noop } from 'call-thru';\nimport { ContextKey__symbol, ContextRegistry, SingleContextKey } from 'context-values';\nimport { ValueTracker } from 'fun-events';\nimport { Navigation } from './navigation';\nimport { Page } from './page';\nimport { PageParam, PageParam__symbol } from './page-param';\nimport { PageParamContext } from './page-param-context';\n\nconst RoutingHistory__key = /*#__PURE__*/ new SingleContextKey<NavHistory>(\n    'navigation-history',\n    {\n      byDefault: bootstrapDefault(ctx => new NavHistory(ctx)),\n    },\n);\n\n/**\n * @internal\n */\nexport class NavHistory {\n\n  static get [ContextKey__symbol]() {\n    return RoutingHistory__key;\n  }\n\n  private readonly _document: Document;\n  private readonly _location: Location;\n  private readonly _history: History;\n  private readonly _entries = new Map<number, PageEntry>();\n  private readonly _uid: string;\n  private _lastId = 0;\n\n  constructor(private readonly _context: BootstrapContext) {\n    const window = _context.get(BootstrapWindow);\n\n    this._document = window.document;\n    this._location = window.location;\n    this._history = window.history;\n    this._uid = btoa(String(Math.random()));\n  }\n\n  init(): PageEntry {\n\n    const { data } = extractNavData(this._history.state);\n    const entry = this.newEntry({\n      url: new URL(this._location.href),\n      data,\n      title: this._document.title,\n    });\n\n    this._entries.set(entry.id, entry);\n    entry.schedule(() => {\n      entry.enter('init');\n      this._history.replaceState(this._historyState(entry), '');\n    });\n\n    return entry;\n  }\n\n  newEntry(target: Navigation.URLTarget): PageEntry {\n    return new PageEntry(this._context, ++this._lastId, target);\n  }\n\n  open(\n      toEntry: PageEntry,\n      tracker: ValueTracker<PageEntry>,\n  ) {\n\n    const { page: { title = '', url } } = toEntry;\n\n    this._history.pushState(\n        this._historyState(toEntry),\n        title,\n        url.href,\n    );\n\n    this._enter('open', toEntry, tracker);\n  }\n\n  private _enter(\n      when: 'open' | 'enter',\n      toEntry: PageEntry,\n      tracker: ValueTracker<PageEntry>,\n  ) {\n\n    const fromEntry = tracker.it;\n\n    this._entries.set(toEntry.id, toEntry);\n\n    try {\n      // Forget all entries starting from next one\n      for (let e = fromEntry.next; e; e = e.next) {\n        this._forget(e);\n      }\n    } finally {\n      toEntry.prev = fromEntry;\n      fromEntry.next = toEntry;\n      toEntry.schedule(() => {\n        try {\n          fromEntry.leave();\n        } finally {\n          toEntry.enter(when);\n        }\n      });\n      tracker.it = toEntry;\n    }\n  }\n\n  replace(\n      toEntry: PageEntry,\n      tracker: ValueTracker<PageEntry>,\n  ) {\n\n    const fromEntry = tracker.it;\n    const { page: { title = '', url } } = toEntry;\n\n    this._history.replaceState(\n        this._historyState(toEntry),\n        title,\n        url.href,\n    );\n\n    this._entries.set(toEntry.id, toEntry);\n\n    const prev = fromEntry.prev;\n\n    if (prev) {\n      toEntry.prev = prev;\n      prev.next = toEntry;\n    }\n\n    toEntry.schedule(() => {\n      try {\n        fromEntry.leave();\n      } finally {\n        try {\n          this._forget(fromEntry);\n        } finally {\n          toEntry.enter('replace');\n        }\n      }\n    });\n    tracker.it = toEntry;\n  }\n\n  popState(\n      popState: PopStateEvent,\n      tracker: ValueTracker<PageEntry>,\n  ): PageEntry | undefined {\n\n    const { state } = popState;\n\n    if (state == null) {\n      // Hash change\n      if (this._history.state == null) {\n        // Not a return\n        return this._changeHash(tracker);\n      }\n      return; // Already handled by `hashchange` handler\n    }\n\n    const fromEntry = tracker.it;\n    const { uid, data, id: pageId } = extractNavData(state);\n    let toEntry: PageEntry;\n\n    const existingEntry = uid === this._uid && pageId != null ? this._entries.get(pageId) : undefined;\n\n    if (existingEntry) {\n      toEntry = existingEntry;\n    } else {\n      // Returning to page existed in previous app version\n      toEntry = this.newEntry({\n        url: new URL(this._location.href),\n        data,\n        title: this._document.title,\n      });\n      fromEntry.transfer(toEntry, 'return');\n      this._entries.set(toEntry.id, toEntry);\n      this._history.replaceState(this._historyState(toEntry), '');\n    }\n\n    toEntry.schedule(() => {\n      try {\n        fromEntry.leave();\n      } finally {\n        toEntry.enter('return');\n      }\n    });\n\n    tracker.it = toEntry;\n\n    return toEntry;\n  }\n\n  public hashChange(tracker: ValueTracker<PageEntry>): PageEntry | void {\n    if (this._history.state == null) {\n      // Not a return\n      return this._changeHash(tracker);\n    }\n    // Otherwise, a `popstate` event is also triggered,\n    // and its handler would do the job (or already did).\n  }\n\n  public update(tracker: ValueTracker<PageEntry>, url: URL): PageEntry {\n\n    const oldEntry = tracker.it;\n    const newEntry = new PageEntry(this._context, ++this._lastId, { ...oldEntry.page, url }, oldEntry);\n\n    this._entries.set(newEntry.id, newEntry);\n    this._history.replaceState(this._historyState(newEntry), '', url.href);\n    this._entries.delete(oldEntry.id);\n\n    return tracker.it = newEntry;\n  }\n\n  private _changeHash(tracker: ValueTracker<PageEntry>): PageEntry {\n\n    const fromEntry = tracker.it;\n    const toEntry = this.newEntry({\n      url: new URL(this._location.href),\n      data: null,\n      title: this._document.title,\n    });\n\n    try {\n      fromEntry.transfer(toEntry, 'enter');\n    } finally {\n      this._history.replaceState(this._historyState(toEntry), '');\n      this._enter('enter', toEntry, tracker);\n    }\n\n    return toEntry;\n  }\n\n  private _forget(entry: PageEntry) {\n    this._entries.delete(entry.id);\n    entry.forget();\n  }\n\n  private _historyState({ id, page: { data } }: PageEntry): NavDataEnvelope {\n    return {\n      [NAV_DATA_KEY]: {\n        uid: this._uid,\n        id,\n        data,\n      },\n    };\n  }\n\n}\n\n/**\n * @internal\n */\nexport interface PartialNavData {\n  readonly uid?: string;\n  readonly id?: number;\n  readonly data: any;\n}\n\n/**\n * @internal\n */\nexport interface NavData extends PartialNavData {\n  readonly uid: string;\n  readonly id: number;\n}\n\n/**\n * @internal\n */\nexport const NAV_DATA_KEY = 'wesib:navigation:data' as const;\n\n/**\n * @internal\n */\nexport interface NavDataEnvelope {\n  readonly [NAV_DATA_KEY]: NavData;\n}\n\nfunction extractNavData(state: any): PartialNavData {\n  return state == null || typeof state !== 'object' ? { data: state } : state[NAV_DATA_KEY];\n}\n\n/**\n * @internal\n */\nexport class PageEntry {\n\n  next?: PageEntry;\n  prev?: PageEntry;\n  private _status: PageStatus = PageStatus.New;\n  readonly page: Page;\n  private readonly _params: Map<PageParam<any, any>, PageParam.Handle<any, any>>;\n  private _update: () => void = noop;\n\n  constructor(\n      private readonly _context: BootstrapContext,\n      readonly id: number,\n      target: Navigation.URLTarget,\n      proto?: PageEntry,\n  ) {\n    this._params = proto ? proto._params : new Map<PageParam<any, any>, PageParam.Handle<any, any>>();\n\n    const entry = this;\n\n    this.page = {\n      url: target.url,\n      title: target.title,\n      data: target.data,\n      get visited() {\n        return !!entry._status;\n      },\n      get current() {\n        return entry._status === PageStatus.Current;\n      },\n      get(ref) {\n        return entry.get(ref);\n      },\n      put(ref, input) {\n        entry.put(ref, input);\n      },\n    };\n  }\n\n  get<T>(ref: PageParam.Ref<T, unknown>): T | undefined {\n\n    const handle: PageParam.Handle<T, unknown> | undefined = this._params.get(ref[PageParam__symbol]);\n\n    return handle && handle.get();\n  }\n\n  put<T, I>(ref: PageParam.Ref<T, I>, input: I): T {\n\n    const param = ref[PageParam__symbol];\n    const handle: PageParam.Handle<T, I> | undefined = this._params.get(param);\n\n    if (handle) {\n      handle.put(input);\n      return handle.get();\n    }\n\n    const registry = new ContextRegistry<ParamContext>(this._context);\n\n    class ParamContext extends PageParamContext {\n      readonly get: PageParamContext['get'] = registry.newValues().get;\n    }\n\n    const newHandle = param.create(this.page, input, new ParamContext());\n\n    this._params.set(param, newHandle);\n    if (this.page.current && newHandle.enter) {\n      newHandle.enter(this.page, 'init');\n    }\n\n    return newHandle.get();\n  }\n\n  transfer(to: PageEntry, when: 'pre-open' | 'pre-replace' | 'enter' | 'return') {\n    itsEach(this._params.entries(), ([param, handle]) => {\n      if (handle.transfer) {\n\n        const transferred = handle.transfer(to.page, when);\n\n        if (transferred) {\n          to._params.set(param, transferred);\n        }\n      }\n    });\n  }\n\n  stay(at: Page) {\n    itsEach(this._params.values(), handle => handle.stay && handle.stay(at));\n  }\n\n  enter(when: 'init' | 'open' | 'replace' | 'enter' | 'return') {\n    this._status = PageStatus.Current;\n    itsEach(this._params.values(), handle => handle.enter && handle.enter(this.page, when));\n  }\n\n  leave() {\n    this._status = PageStatus.Visited;\n    itsEach(this._params.values(), handle => handle.leave && handle.leave());\n  }\n\n  forget() {\n    itsEach(this._params.values(), handle => handle.forget && handle.forget());\n    this._params.clear();\n  }\n\n  schedule(update: () => void) {\n    this._update = update;\n  }\n\n  apply() {\n\n    const update = this._update;\n\n    this._update = noop;\n    update();\n  }\n\n}\n\nconst enum PageStatus {\n  New,\n  Visited,\n  Current,\n}\n","import { BootstrapContext, BootstrapWindow, mergeFunctions } from '@wesib/wesib';\nimport { noop } from 'call-thru';\nimport { AfterEvent, DomEventDispatcher, onAny, trackValue } from 'fun-events';\nimport { NavHistory, PageEntry } from './nav-history.impl';\nimport { Navigation as Navigation_ } from './navigation';\nimport { NavigationAgent } from './navigation-agent';\nimport {\n  EnterPageEvent,\n  LeavePageEvent,\n  NavigationEvent,\n  NavigationEventType,\n  StayOnPageEvent,\n} from './navigation.event';\nimport { Page } from './page';\nimport { PageParam } from './page-param';\n\nexport function createNavigation(context: BootstrapContext): Navigation_ {\n\n  const window = context.get(BootstrapWindow);\n  const { document, history } = window;\n  const dispatcher = new DomEventDispatcher(window);\n  const navHistory = context.get(NavHistory);\n  const agent = context.get(NavigationAgent);\n  const onEnter = dispatcher.on<EnterPageEvent>(NavigationEventType.EnterPage);\n  const onLeave = dispatcher.on<LeavePageEvent>(NavigationEventType.LeavePage);\n  const onStay = dispatcher.on<StayOnPageEvent>(NavigationEventType.StayOnPage);\n  const onEvent = onAny<[NavigationEvent]>(onEnter, onLeave, onStay);\n  const nav = trackValue<PageEntry>(navHistory.init());\n\n  nav.read(nextEntry => nextEntry.apply()); // The very first page entry receiver applies scheduled updates to page\n\n  const readPage: AfterEvent<[Page]> = nav.read.keep.thru(entry => entry.page);\n  let next: Promise<any> = Promise.resolve();\n\n  dispatcher.on<PopStateEvent>('popstate')(popState => {\n\n    const entry = navHistory.popState(popState, nav);\n\n    if (entry) {\n      dispatcher.dispatch(new EnterPageEvent(\n          NavigationEventType.EnterPage,\n          {\n            when: popState.state != null ? 'return' : 'enter',\n            to: entry.page,\n          },\n      ));\n    }\n  });\n\n  dispatcher.on('hashchange')(() => {\n\n    const entry = navHistory.hashChange(nav);\n\n    if (entry) {\n      dispatcher.dispatch(new EnterPageEvent(\n          NavigationEventType.EnterPage,\n          {\n            when: 'enter',\n            to: entry.page,\n          },\n      ));\n    }\n  });\n\n  class Navigation extends Navigation_ {\n\n    get length() {\n      return history.length;\n    }\n\n    get onEnter() {\n      return onEnter;\n    }\n\n    get onLeave() {\n      return onLeave;\n    }\n\n    get onStay() {\n      return onStay;\n    }\n\n    get on() {\n      return onEvent;\n    }\n\n    get read() {\n      return readPage;\n    }\n\n    go(delta?: number): void {\n      history.go(delta);\n    }\n\n    open(target: Navigation_.Target | string | URL) {\n      return navigate('pre-open', 'open', target);\n    }\n\n    replace(target: Navigation_.Target | string | URL) {\n      return navigate('pre-replace', 'replace', target);\n    }\n\n    update(url: string | URL): Page {\n      return navHistory.update(nav, toURL(url)).page;\n    }\n\n    with<T, I>(ref: PageParam.Ref<T, I>, input: I): Navigation_.Parameterized {\n      return withParam(page => page.put(ref, input));\n    }\n\n  }\n\n  return new Navigation();\n\n  function withParam(applyParams: (page: Page) => void): Navigation_.Parameterized {\n    return {\n      with<TT, II>(ref: PageParam.Ref<TT, II>, input: II): Navigation_.Parameterized {\n        return withParam(mergeFunctions(applyParams, page => page.put(ref, input)));\n      },\n      open(target: Navigation_.Target | string | URL) {\n        return navigate('pre-open', 'open', target, applyParams);\n      },\n      replace(target: Navigation_.Target | string | URL) {\n        return navigate('pre-replace', 'replace', target, applyParams);\n      },\n    };\n  }\n\n  function toURL(url: string | URL | undefined): URL {\n    if (typeof url === 'string') {\n      return new URL(url, document.baseURI);\n    }\n    return url || nav.it.page.url;\n  }\n\n  function urlTargetOf(target: Navigation_.Target | string | URL): Navigation_.URLTarget {\n    if (typeof target === 'string' || target instanceof URL) {\n      return { url: toURL(target) };\n    }\n    if (target.url instanceof URL) {\n      return target as Navigation_.URLTarget;\n    }\n    return { ...target, url: toURL(target.url) };\n  }\n\n  function navigate(\n      whenLeave: 'pre-open' | 'pre-replace',\n      when: 'open' | 'replace',\n      target: Navigation_.Target | string | URL,\n      applyParams: (page: Page) => void = noop,\n  ): Promise<Page | null> {\n\n    const urlTarget = urlTargetOf(target);\n    const promise = next = next.then(doNavigate, doNavigate);\n\n    return promise;\n\n    function doNavigate(): Page | null {\n\n      let toEntry: PageEntry | undefined;\n\n      try {\n\n        const prepared = prepare();\n\n        if (!prepared) {\n          return prepared; // Navigation cancelled\n        }\n\n        toEntry = prepared;\n\n        navHistory[when](toEntry, nav);\n\n        dispatcher.dispatch(new EnterPageEvent(\n            NavigationEventType.EnterPage,\n            {\n              when,\n              to: toEntry.page,\n            },\n        ));\n\n        return toEntry.page;\n      } catch (e) {\n        stay(toEntry, e);\n        throw e;\n      }\n    }\n\n    function prepare(): PageEntry | null {\n      if (next !== promise) {\n        return stay();\n      }\n\n      const fromEntry = nav.it;\n      const toEntry = navHistory.newEntry(urlTarget);\n\n      fromEntry.transfer(toEntry, whenLeave);\n\n      const leavePage = new LeavePageEvent(\n          NavigationEventType.LeavePage,\n          {\n            when: whenLeave,\n            from: fromEntry.page,\n            to: toEntry.page,\n          },\n      );\n\n      applyParams(toEntry.page);\n      if (!dispatcher.dispatch(leavePage) || next !== promise) {\n        return stay(toEntry);\n      }\n\n      let finalTarget: Navigation_.URLTarget | undefined;\n\n      agent(t => finalTarget = t, whenLeave, leavePage.from, leavePage.to);\n\n      if (!finalTarget) {\n        return stay(toEntry); // Some agent didn't call `next()`.\n      }\n\n      return toEntry;\n    }\n\n    function stay(toEntry?: PageEntry, reason?: any): null {\n      if (toEntry) {\n        toEntry.stay(nav.it.page);\n      }\n\n      dispatcher.dispatch(new StayOnPageEvent(\n          NavigationEventType.StayOnPage,\n          {\n            from: nav.it.page,\n            to: urlTarget,\n            reason,\n          },\n      ));\n\n      return null;\n    }\n\n  }\n}\n","/**\n * @module @wesib/generic\n */\nimport { FeatureDef, FeatureDef__symbol } from '@wesib/wesib';\nimport { Navigation } from './navigation';\nimport { createNavigation } from './navigation.impl';\n\nconst NavigationSupport__feature: FeatureDef = {\n  setup(setup) {\n    setup.provide({ a: Navigation, by: createNavigation });\n  },\n};\n\n/**\n * Browser navigation support feature.\n *\n * Makes [[Navigation]] available in bootstrap context.\n */\nexport class NavigationSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return NavigationSupport__feature;\n  }\n\n}\n","import { nextArgs, nextSkip } from 'call-thru';\nimport { eventSupply, EventSupply, OnEvent, onEventBy, trackValue } from 'fun-events';\nimport { Page } from '../page';\nimport { PageLoadResponse } from './page-load-response';\nimport { PageLoader } from './page-loader.impl';\n\n/**\n * @internal\n */\nexport function cachingPageLoader(loader: PageLoader): PageLoader {\n\n  let state: {\n    readonly url: string;\n    readonly on: OnEvent<[PageLoadResponse]>;\n    readonly sup: EventSupply;\n  } | undefined;\n\n  return page => {\n\n    const url = pageUrl(page);\n\n    if (state) {\n      if (state.url === url) {\n        return state.on;\n      }\n      state.sup.off();\n    }\n\n    let tracked: {\n      readonly on: OnEvent<[PageLoadResponse]>;\n      num: number;\n    } | undefined;\n    const supply = eventSupply().whenOff(() => {\n      state = undefined;\n      tracked = undefined;\n    });\n\n    const on = onEventBy<[PageLoadResponse]>(receiver => {\n      if (!tracked) {\n\n        const onLoad = loader(page);\n        const tracker = trackValue<PageLoadResponse>();\n        const trackSupply = onLoad(resp => {\n          tracker.it = resp;\n        }).whenOff(reason => {\n          // Error drops page cache, unlike successful page load.\n          if (reason != null) {\n            supply.off(reason);\n          }\n        });\n\n        supply.whenOff(reason => {\n          trackSupply.off(reason);\n          tracker.done(reason);\n        });\n\n        tracked = {\n          on: tracker.read.thru_(\n              response => response ? nextArgs(response) : nextSkip(),\n          ),\n          num: 0,\n        };\n      }\n\n      const requested = tracked;\n\n      ++requested.num;\n\n      return requested.on(receiver).needs(supply).whenOff(reason => {\n        if (!--requested.num) {\n          // Allow to request the same page again\n          Promise.resolve().then(() => {\n            if (!requested.num && requested === tracked) {\n              supply.off(reason);\n            }\n          });\n        }\n      });\n    });\n\n    state = { url, on, sup: supply };\n\n    return on;\n  };\n}\n\nfunction pageUrl(page: Page): string {\n  return new URL('', page.url).href;\n}\n","import { flatMapIt, itsEach, itsIterator } from 'a-iterable';\nimport { asis, noop } from 'call-thru';\nimport {\n  EventEmitter,\n  eventReceiver,\n  EventReceiver,\n  eventSupply,\n  EventSupply,\n  noEventSupply,\n  OnEvent,\n  onEventBy,\n} from 'fun-events';\nimport { Navigation } from '../navigation';\nimport { Page } from '../page';\nimport { PageParam } from '../page-param';\nimport { PageFragmentRequest, PageLoadRequest } from './page-load-request';\nimport { PageLoadResponse } from './page-load-response';\nimport { PageLoader } from './page-loader.impl';\n\n/**\n * @internal\n */\nexport interface PageLoadReq extends PageLoadRequest {\n\n  readonly receiver: EventReceiver.Generic<[PageLoadResponse]>;\n\n}\n\nclass PageLoadAbortError extends Error {}\n\n/**\n * @internal\n */\nexport class PageLoadRequests implements Iterable<PageLoadReq> {\n\n  private readonly _map = new Map<EventSupply, PageLoadReq[]>();\n\n  constructor(\n      private readonly _navigation: Navigation,\n      private readonly _loader: PageLoader,\n  ) {}\n\n  get fragments(): readonly PageFragmentRequest[] {\n\n    const result: PageFragmentRequest[] = [];\n\n    for (const request of this) {\n      if (!request.fragment) {\n        return [];\n      }\n      result.push(request.fragment);\n    }\n\n    return result;\n  }\n\n  [Symbol.iterator](): Iterator<PageLoadReq> {\n    return itsIterator(flatMapIt(this._map.values(), asis));\n  }\n\n  handle(): PageParam.Handle<void, PageLoadRequest> {\n\n    const self = this;\n    const pageSupply = eventSupply();\n    let loadSupply = noEventSupply();\n\n    return {\n      get() {},\n      put(request: PageLoadRequest): void {\n        self._add(request);\n      },\n      transfer(to: Page) {\n\n        const transferred = self._transfer();\n\n        to.put(pageLoadRequestsParam, transferred);\n\n        return transferred.handle();\n      },\n      enter(page: Page, when: 'init' | 'open' | 'replace' | 'return'): void {\n        if (when === 'init') {\n          // The page is loaded already. No need to fetch it.\n          return;\n        }\n\n        loadSupply = eventSupply().needs(pageSupply);\n\n        const onLoad = onEventBy<[PageLoadResponse]>(responseReceiver => {\n\n          const emitter = new EventEmitter<[PageLoadResponse]>();\n          const supply = emitter.on(responseReceiver);\n\n          self._loader(page)(response => emitter.send(response)).whenOff(error => {\n            if (error !== undefined && !(error instanceof PageLoadAbortError)) {\n              // Report current page load error as failed load response\n              emitter.send({\n                ok: false as const,\n                page,\n                error,\n              });\n            }\n          }).needs(loadSupply);\n\n          return supply;\n        }).share();\n\n        itsEach(\n            self,\n            ({ fragment, receiver }) => onFragment(onLoad, fragment)({\n              supply: eventSupply().needs(receiver.supply),\n              receive(context, response): void {\n                receiver.receive(context, response);\n              },\n            }),\n        );\n      },\n      leave(): void {\n        loadSupply.off(new PageLoadAbortError('page left'));\n      },\n      stay() {\n        pageSupply.off(new PageLoadAbortError('navigation cancelled'));\n      },\n      forget() {\n        pageSupply.off(new PageLoadAbortError('page forgotten'));\n      },\n    };\n\n  }\n\n  private _add(request: PageLoadRequest) {\n\n    const req = { ...request, receiver: eventReceiver(request.receiver) };\n    const { supply } = req.receiver;\n    const list = this._map.get(supply);\n\n    if (list) {\n      list.push(req);\n    } else {\n      this._map.set(supply, [req]);\n      supply.whenOff(() => this._map.delete(supply));\n    }\n  }\n\n  private _transfer(): PageLoadRequests {\n\n    const transferred = new PageLoadRequests(this._navigation, this._loader);\n\n    for (const [supply, list] of this._map.entries()) {\n      transferred._map.set(supply, [...list]);\n    }\n\n    return transferred;\n  }\n\n}\n\nfunction onFragment(\n    onLoad: OnEvent<[PageLoadResponse]>,\n    fragment?: PageFragmentRequest,\n): OnEvent<[PageLoadResponse]> {\n  return fragment\n      ? onLoad.thru_(\n          response => response.ok\n              ? {\n                ...response,\n                fragment: (\n                    fragment.tag != null\n                    ? response.document.getElementsByTagName(fragment.tag)[0]\n                    : response.document.getElementById(fragment.id)\n                ) || undefined,\n              }\n              : response,\n      )\n      : onLoad;\n}\n\nclass PageLoadRequestsParam extends PageParam<PageLoadRequests, PageLoadRequests> {\n\n  create(\n      _page: Page,\n      requests: PageLoadRequests,\n  ): PageParam.Handle<PageLoadRequests, PageLoadRequests> {\n    return {\n      get() {\n        return requests;\n      },\n      put: noop,\n    };\n  }\n\n}\n\n/**\n * @internal\n */\nexport const pageLoadRequestsParam: PageParam<PageLoadRequests, PageLoadRequests> = new PageLoadRequestsParam();\n","/**\n * @module @wesib/generic\n */\nimport { ContextUpRef } from 'context-values';\nimport { EventSender, OnEvent } from 'fun-events';\nimport { FetchAgentKey } from '../../fetch/fetch-agent-key.impl';\nimport { PageLoadResponse } from './page-load-response';\n\n/**\n * Page load agent signature.\n *\n * The agent can be used to alter loaded page document processing. For that it should be registered in appropriate\n * context.\n *\n * All registered agents are organized into chain. The first agent in chain is called by page loader.\n */\nexport type PageLoadAgent =\n/**\n * @param next  Either calls the next agent in chain, or actually loads page document if this agent is the last one.\n * Accepts an optional `Request` parameter. The original request will be used instead when omitted.\n * @param request  HTTP request.\n *\n * @returns An `EventSender` of page load response. It is returned either to preceding agent in chain, or as a loaded\n * document.\n */\n    (\n        this: void,\n        next: (this: void, request?: Request) => OnEvent<[PageLoadResponse]>,\n        request: Request,\n    ) => EventSender<[PageLoadResponse]>;\n\nexport namespace PageLoadAgent {\n\n  /**\n   * Combined page load agent signature.\n   *\n   * This is what is available under [[PageLoadAgent]] key.\n   */\n  export type Combined =\n  /**\n   * @param next  Either calls the next agent in chain, or actually loads page document if this agent is the last one.\n   * Accepts `Request` parameter.\n   * @param request  HTTP request.\n   *\n   * @returns An `OnEvent` registrar of loaded document.\n   */\n      (\n          this: void,\n          next: (this: void, request: Request) => OnEvent<[PageLoadResponse]>,\n          request: Request,\n      ) => OnEvent<[PageLoadResponse]>;\n\n}\n\n/**\n * A key of context value containing an [[DomFetchAgent]] instance.\n *\n * The agent returned combines all registered agents into one. If no agent registered it just performs the fetch.\n */\nexport const PageLoadAgent: ContextUpRef<PageLoadAgent.Combined, PageLoadAgent> =\n    /*#__PURE__*/ new FetchAgentKey<[PageLoadResponse]>('page-load-agent');\n","import { noop, valueProvider } from 'call-thru';\nimport { ContextUpRef, FnContextKey } from 'context-values';\n\n/**\n * A signature of page load URL modifier function.\n *\n * All such functions registered in bootstrap context are called in order of their registration with current page URL.\n * They are able to modify it, e.g. by applying additional URL search parameters. The modified URL is used then to load\n * the page.\n */\nexport type PageLoadURLModifier =\n/**\n * @param url  An URL of page to load.\n */\n    (this: void, url: URL) => void;\n\n/**\n * A key of bootstrap context value containing a page load URL modifier.\n *\n * Does not modify URL by default.\n */\nexport const PageLoadURLModifier: ContextUpRef<PageLoadURLModifier, PageLoadURLModifier> =\n    /*#__PURE__*/ new FnContextKey('page-load-url', { byDefault: valueProvider(noop) });\n","import { BootstrapContext, bootstrapDefault, BootstrapWindow } from '@wesib/wesib';\nimport { itsReduction } from 'a-iterable';\nimport { SingleContextKey } from 'context-values';\nimport { afterThe, EventEmitter, eventSupply, OnEvent, onEventBy } from 'fun-events';\nimport { hthvParse, hthvQuote } from 'http-header-value';\nimport { HttpFetch } from '../../fetch';\nimport { Page } from '../page';\nimport { PageLoadAgent } from './page-load-agent';\nimport { pageLoadRequestsParam } from './page-load-requests.impl';\nimport { PageLoadResponse } from './page-load-response';\nimport { PageLoadURLModifier } from './page-load-url-modifier';\n\n/**\n * @internal\n */\nexport type PageLoader = (this: void, page: Page) => OnEvent<[PageLoadResponse]>;\n\n/**\n * @internal\n */\nexport const PageLoader = /*#__PURE__*/ new SingleContextKey<PageLoader>(\n    'page-loader',\n    {\n      byDefault: bootstrapDefault(newPageLoader),\n    },\n);\n\nfunction newPageLoader(context: BootstrapContext): PageLoader {\n\n  const window = context.get(BootstrapWindow);\n  const httpFetch = context.get(HttpFetch);\n  const modifyURL = context.get(PageLoadURLModifier);\n  const agent = context.get(PageLoadAgent);\n  const parser: DOMParser = new (window as any).DOMParser();\n\n  return page => {\n\n    const url = new URL(page.url.href);\n\n    modifyURL(url);\n\n    const request = new Request(\n        url.href,\n        {\n          mode: 'same-origin',\n          credentials: 'same-origin',\n          headers: new Headers({ 'Accept': 'text/html' }),\n        },\n    );\n\n    return onEventBy(receiver => agent(fetch, request)(receiver));\n\n    function fetch(fetchRequest: Request): OnEvent<[PageLoadResponse]> {\n      fetchRequest = pageFragmentsRequest(page, fetchRequest);\n\n      const responseTextEmitter = new EventEmitter<[Response, string]>();\n      const onResponse: OnEvent<[PageLoadResponse]> = responseTextEmitter.on.thru_(\n          (response, text) => {\n            if (!response.ok) {\n              return {\n                ok: false as const,\n                page,\n                response,\n                error: response.status,\n              };\n            }\n            try {\n              return {\n                ok: true as const,\n                page,\n                response,\n                document: parsePageDocument(parser, url, response, text),\n              };\n            } catch (error) {\n              return {\n                ok: false as const,\n                page,\n                response,\n                error,\n              };\n            }\n          },\n      );\n\n      return onEventBy<[PageLoadResponse]>(receiver => {\n\n        const { supply } = receiver;\n\n        afterThe<[PageLoadResponse.Start]>({ page }).once({\n          supply: eventSupply().needs(supply),\n          receive(ctx, start) {\n            receiver.receive(ctx, start);\n          },\n        });\n\n        const responseSupply = httpFetch(fetchRequest)(response => {\n          onResponse(receiver);\n          response.text().then(\n              text => {\n                responseTextEmitter.send(response, text);\n                supply.needs(responseSupply);\n              },\n          ).catch(\n              e => supply.off(e),\n          );\n        });\n      });\n    }\n  };\n}\n\nfunction pageFragmentsRequest(page: Page, request: Request ) {\n\n  const fragments = page.get(pageLoadRequestsParam)?.fragments;\n\n  if (!fragments || !fragments.length) {\n    return request;\n  }\n\n  return new Request(\n      request,\n      {\n        headers: {\n          'Accept-Fragment': itsReduction(\n              fragments,\n              (header, fragment) =>\n                  (header ? header + ', ' : '')\n                  + (\n                      fragment.tag != null\n                          ? 'tag=' + hthvQuote(fragment.tag)\n                          : 'id=' + hthvQuote(fragment.id)\n                  ),\n              '',\n          ),\n        },\n      },\n  );\n}\n\nfunction parsePageDocument(parser: DOMParser, url: URL, response: Response, text: string): Document {\n\n  const doc = parser.parseFromString(\n      text,\n      hthvParse(response.headers.get('Content-Type') || 'text/html')[0].v as SupportedType,\n  );\n\n  if (doc.head) {\n\n    const base = doc.head.querySelector('base');\n\n    if (base) {\n      base.href = new URL(base.getAttribute('href')!, url).href;\n    } else {\n\n      const newBase = doc.createElement('base');\n\n      newBase.href = url.href;\n\n      doc.head.appendChild(newBase);\n    }\n  }\n\n  return doc;\n}\n","import { Navigation } from '../navigation';\nimport { Page } from '../page';\nimport { PageParam } from '../page-param';\nimport { PageParamContext } from '../page-param-context';\nimport { cachingPageLoader } from './caching-page-loader.impl';\nimport { PageLoadRequest } from './page-load-request';\nimport { PageLoadRequests, pageLoadRequestsParam } from './page-load-requests.impl';\nimport { PageLoader } from './page-loader.impl';\n\nclass PageLoadParam extends PageParam<void, PageLoadRequest> {\n\n  create(page: Page, request: PageLoadRequest, context: PageParamContext) {\n\n    const requests = new PageLoadRequests(context.get(Navigation), cachingPageLoader(context.get(PageLoader)));\n    const handle = requests.handle();\n\n    page.put(pageLoadRequestsParam, requests);\n    handle.put(request);\n\n    return handle;\n  }\n\n}\n\n/**\n * Page load parameter.\n *\n * Accepts a {@link PageLoadRequest page load request} as input.\n *\n * A page load is initiated whenever a page with new address is {@link Navigation.onEnter entered}.\n *\n * Page load won't be initiated if:\n * - page load parameter is not {@link Page.put} added,\n * - all added {@link PageLoadRequest.receiver response receiver}s supplies are cut off, or\n * - the entered page address is the the same one as previous one, except the hash,\n */\nexport const pageLoadParam: PageParam<void, PageLoadRequest> = /*#__PURE__*/ new PageLoadParam();\n","import { BootstrapContext, bootstrapDefault, BootstrapWindow } from '@wesib/wesib';\nimport { ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { AfterEvent, afterThe } from 'fun-events';\nimport { Navigation } from '../navigation';\nimport { PageLoadAgent } from './page-load-agent';\nimport { PageLoadURLModifier } from './page-load-url-modifier';\n\nconst PageCacheBuster__key = /*#__PURE__*/ new SingleContextKey<PageCacheBuster>(\n    'page-cache-buster',\n    {\n      byDefault: bootstrapDefault(context => new PageCacheBuster(context)),\n    },\n);\n\n/**\n * @internal\n */\nexport const appRevSearchParam = '__wesib_app_rev__';\n\n/**\n * @internal\n */\nexport class PageCacheBuster {\n\n  static get [ContextKey__symbol](): SingleContextKey<PageCacheBuster> {\n    return PageCacheBuster__key;\n  }\n\n  readonly urlModifier: AfterEvent<PageLoadURLModifier[]>;\n  readonly agent: AfterEvent<PageLoadAgent[]>;\n\n  constructor(context: BootstrapContext) {\n\n    const rev = appRev(context.get(BootstrapWindow).document);\n\n    if (!rev) {\n      this.urlModifier = afterThe();\n      this.agent = afterThe();\n    } else {\n\n      const navigation = context.get(Navigation);\n\n      this.urlModifier = afterThe(url => url.searchParams.set(appRevSearchParam, rev));\n      this.agent = afterThe((next, request) => {\n        return next(new Request(request.url, request)).thru_(response => {\n          if (response.ok) {\n\n            const newRev = appRev(response.document);\n\n            if (newRev && newRev !== rev) {\n\n              const url = new URL(response.page.url.href);\n\n              url.searchParams.set(appRevSearchParam, newRev);\n              navigation.update(url);\n              navigation.reload();\n            }\n          }\n\n          return response;\n        });\n      });\n    }\n  }\n\n}\n\nfunction appRev(doc: Document) {\n  return doc.querySelector('meta[name=wesib-app-rev]')?.getAttribute('content');\n}\n","/**\n * @module @wesib/generic\n */\nimport { isElement } from '@wesib/wesib';\nimport { itsEach, overArray } from 'a-iterable';\n\n/**\n * Imports DOM node from one document to another.\n *\n * @param from  The node to import.\n * @param to  The node to append imported node to.\n * @param importContent  A function that imports nodes nested in parent element. [[importNodeContents]] by default.\n *\n * @returns Imported node.\n */\nexport function importNode<N extends Node>(\n    from: N,\n    to: Node,\n    importContent?: (this: void, from: N, to: N) => void,\n): N;\n\n/**\n * Imports DOM node from one document to another and inserts it before the given node.\n *\n * @param from  The node to import.\n * @param to  The node to append imported node to.\n * @param before  The node to insert imported node before, or `null` to append it to the end of target one.\n * @param importContent  A function that imports nodes nested in parent element. [[importNodeContents]] by default.\n *\n * @returns Imported node.\n */\nexport function importNode<N extends Node>(\n    from: N,\n    to: Node,\n    before?: Node | null,\n    importContent?: (this: void, from: N, to: N) => void,\n): N;\n\nexport function importNode<N extends Node>(\n    from: N,\n    to: Node,\n    beforeOrImport?: Node | null | ((this: void, from: N, to: N) => void),\n    importContent: (this: void, from: N, to: N) => void = importNodeContent,\n): N {\n\n  let before: Node | null;\n\n  if (typeof beforeOrImport === 'function') {\n    importContent = beforeOrImport;\n    before = null;\n  } else {\n    before = beforeOrImport || null;\n  }\n\n  const doc = to.ownerDocument!;\n\n  if (isElement(from)) {\n\n    const elementClone = doc.createElement(from.tagName.toLowerCase()) as Node as (Element & N);\n\n    from.getAttributeNames().forEach(attr => elementClone.setAttribute(attr, from.getAttribute(attr)!));\n    importContent(from, elementClone);\n    to.insertBefore(elementClone, before);\n\n    return elementClone;\n  }\n\n  const nodeClone = doc.importNode(from, false);\n\n  to.insertBefore(nodeClone, before);\n\n  return nodeClone;\n}\n\n/**\n * Imports DOM node contents from one document to another.\n *\n * @param from  The node which contents to import.\n * @param to  The node to append imported nodes to.\n */\nexport function importNodeContent(from: Node, to: Node): void {\n  itsEach(\n      overArray(from.childNodes),\n      node => importNode(node, to),\n  );\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { filterIt, itsEach, mapIt, overArray } from 'a-iterable';\nimport { importNode } from '../../util';\nimport { PageLoadAgent } from './page-load-agent';\n\n/**\n * @internal\n */\nexport function pageScriptsAgent(context: BootstrapContext): PageLoadAgent {\n\n  const doc = context.get(BootstrapWindow).document;\n\n  return next => next().thru_(\n      response => {\n        if (response.ok) {\n\n          const allScripts = new Set<string>(mapIt(\n              externalScripts(doc, overArray(doc.scripts)),\n              ([src]) => src,\n          ));\n\n          itsEach(\n              filterIt(\n                  externalScripts(response.document, overArray(response.document.querySelectorAll('script'))),\n                  ([src]) => !allScripts.has(src),\n              ),\n              ([src, script]) => {\n                importNode(script, doc.head, (_from, to) => to.src = src);\n                allScripts.add(src);\n              },\n          );\n        }\n        return response;\n      },\n  );\n}\n\nfunction externalScripts(\n    doc: Document,\n    scripts: Iterable<HTMLScriptElement>,\n): Iterable<readonly [string, HTMLScriptElement]> {\n  return mapIt(\n      filterIt(\n          scripts,\n          script => !!script.src,\n      ),\n      script => [new URL(script.src, doc.baseURI).href, script] as const,\n  );\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { itsEach, itsFirst, overArray } from 'a-iterable';\nimport { importNode } from '../../util';\nimport { PageLoadAgent } from './page-load-agent';\n\n/**\n * @internal\n */\nexport function pageStyleAgent(context: BootstrapContext): PageLoadAgent {\n\n  const doc = context.get(BootstrapWindow).document;\n\n  return next => next().thru_(\n      response => {\n        if (!response.ok) {\n          return response;\n        }\n\n        const newStyles = response.document.querySelectorAll<HTMLLinkElement>('link[rel=stylesheet]');\n\n        if (!newStyles.length) {\n          return response;\n        }\n\n        let target: Node = doc.head;\n        let before: Node | null = null;\n        const oldStyles = doc.querySelectorAll<HTMLLinkElement>('link[rel=stylesheet]');\n        const oldStylesByHref = new Map<string, HTMLLinkElement>();\n        const firstOldStyle = oldStyles.item(0);\n\n        if (firstOldStyle) {\n          target = firstOldStyle.parentNode!;\n          before = firstOldStyle;\n          itsEach(\n              overArray(oldStyles),\n              link => oldStylesByHref.set(new URL(link.href, doc.baseURI).href, link),\n          );\n        }\n\n        itsEach(\n            overArray(newStyles),\n            newStyle => {\n\n              const href = new URL(newStyle.href, doc.baseURI).href;\n              const oldStyle = oldStylesByHref.get(href);\n\n              if (oldStyle) {\n                // Style already exists.\n                if (itsFirst(oldStylesByHref.keys()) === href) {\n                  // In proper position already.\n                  // Insert the remaining styles after it.\n                  target = oldStyle.parentNode!;\n                  before = oldStyle.nextSibling;\n                } else {\n                  // Move to proper position.\n                  target.insertBefore(oldStyle, before);\n                }\n                oldStylesByHref.delete(href);\n              } else {\n                // Import new style\n                importNode(newStyle, target, before, (_from, to) => to.href = href);\n              }\n            },\n        );\n\n        // Remove remaining old styles\n        itsEach(oldStylesByHref.values(), style => style.parentNode!.removeChild(style));\n\n        return response;\n      },\n  );\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { PageLoadAgent } from './page-load-agent';\n\n/**\n * @internal\n */\nexport function pageTitleAgent(context: BootstrapContext): PageLoadAgent {\n\n  const doc = context.get(BootstrapWindow).document;\n\n  return next => next().thru_(response => {\n    if (response.ok) {\n\n      const title = response.document.getElementsByTagName('title').item(0);\n\n      if (title && title.textContent) {\n        doc.title = title.textContent;\n      }\n    }\n\n    return response;\n  });\n}\n","/**\n * @module @wesib/generic\n */\nimport { FeatureDef, FeatureDef__symbol } from '@wesib/wesib';\nimport { NavigationSupport } from '../navigation-support.feature';\nimport { PageCacheBuster } from './page-cache-buster.impl';\nimport { PageLoadAgent } from './page-load-agent';\nimport { PageLoadURLModifier } from './page-load-url-modifier';\nimport { pageScriptsAgent } from './page-scripts-agent.impl';\nimport { pageStyleAgent } from './page-style-agent.impl';\nimport { pageTitleAgent } from './page-title-agent.impl';\n\nconst PageLoadSupport__feature: FeatureDef = {\n  needs: NavigationSupport,\n  setup(setup) {\n    setup.provide({\n      a: PageLoadURLModifier,\n      by: (buster: PageCacheBuster) => buster.urlModifier,\n      with: [PageCacheBuster],\n    });\n    setup.provide({\n      a: PageLoadAgent,\n      by: (buster: PageCacheBuster) => buster.agent,\n      with: [PageCacheBuster],\n    });\n    setup.provide({ a: PageLoadAgent, by: pageScriptsAgent });\n    setup.provide({ a: PageLoadAgent, by: pageStyleAgent });\n    setup.provide({ a: PageLoadAgent, by: pageTitleAgent });\n  },\n};\n\n/**\n * Page load support feature.\n *\n * Enables default {@link PageLoadAgent page load agents}:\n * 1. Page cache busting agent.\n *    If `<meta name=\"wesib-app-rev\">` tag is present in initial page, then sends this tag's content with each page load\n *    request as `__wesib_app_rev__` search parameter. If the loaded page contains the same named meta tag with\n *    different content, then reloads the page.\n *    This serves both as cache busting technique, and as server-side application updates handler.\n * 2. Scripts agent.\n *    Includes external scripts from loaded page into main document.\n * 3. Style agent.\n *    Replaces external styles of main document styles with the ones from loaded page.\n *    Unless loaded page has no external styles.\n * 4. Title agent.\n *    Applies loaded page title to bootstrap window. If there is one.\n */\nexport class PageLoadSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return PageLoadSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport { EventSupply } from 'fun-events';\nimport { StypOptions, StypRules } from 'style-producer';\n\n/**\n * Component style producer function interface.\n */\nexport type ComponentStyleProducer =\n/**\n * @param rules  CSS rules to produce stylesheets for. This can be e.g. a `StypRule.rules` to render all rules,\n * or a result of `StypRuleList.grab()` method call to render only matching ones.\n * @param opts  Production options.\n *\n * @returns Styles supply. Once cut off (i.e. its `off()` method is called) the produced stylesheets are removed.\n */\n    (\n        rules: StypRules,\n        opts?: StypOptions,\n    ) => EventSupply;\n\n/**\n * A key of component context value containing a component style producer.\n */\nexport const ComponentStyleProducer: SingleContextRef<ComponentStyleProducer> =\n    /*#__PURE__*/ new SingleContextKey<ComponentStyleProducer>('component-style-producer');\n","/**\n * @module @wesib/generic\n */\nimport { MultiContextKey, MultiContextRef } from 'context-values';\nimport { StypRender } from 'style-producer';\n\n/**\n * A CSS render that will be enabled by default by [[ComponentStyleProducer]].\n */\nexport type ComponentStypRender = StypRender;\n\n/**\n * A key of component context value containing component CSS renders.\n */\nexport const ComponentStypRender: MultiContextRef<ComponentStypRender> =\n    /*#__PURE__*/ new MultiContextKey<ComponentStypRender>('component-styp-render');\n","import { ComponentContext, DefaultNamespaceAliaser, ElementDef } from '@wesib/wesib';\nimport { ContextValues, SingleContextKey, SingleContextRef } from 'context-values';\nimport { css__naming, html__naming, NamespaceDef, QualifiedName } from 'namespace-aliaser';\n\n/**\n * @internal\n */\nexport type ElementIdClass = QualifiedName;\n\n/**\n * @internal\n */\nexport const ElementIdClass__NS = /*#__PURE*/ new NamespaceDef(\n    'https://wesib.github.io/ns/element-id-class',\n    'elic',\n    'element-id-class',\n);\n\n/**\n * @internal\n */\nexport const ElementIdClass: SingleContextRef<ElementIdClass> =\n    /*#__PURE__*/ new SingleContextKey('unique-element-class', { byDefault: assignElementId });\n\nlet uniqueClassSeq = 0;\n\nfunction assignElementId(contextValues: ContextValues): ElementIdClass {\n\n  const aliaser = contextValues.get(DefaultNamespaceAliaser);\n  const context = contextValues.get(ComponentContext);\n  const elementDef = context.get(ElementDef);\n  const name: string = elementDef.name ? html__naming.name(elementDef.name, aliaser) : 'component';\n  const local = `${name}#${++uniqueClassSeq}`;\n  const qualified = ElementIdClass__NS.name(aliaser(ElementIdClass__NS), local, css__naming);\n  const element = context.element as Element;\n\n  element.classList.add(qualified);\n\n  return qualified;\n}\n","import {\n  ArraySet,\n  BootstrapWindow,\n  ComponentContext,\n  ContentRoot,\n  DefaultNamespaceAliaser,\n  RenderScheduler,\n  ShadowContentRoot,\n} from '@wesib/wesib';\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { EventSupply } from 'fun-events';\nimport { produceBasicStyle, StypOptions, StypRender, StypRules, StypSelector } from 'style-producer';\nimport { ComponentStypRender } from './component-styp-render';\nimport { ElementIdClass } from './element-id-class.impl';\n\nconst ComponentStyleProducer__key =\n    /*#__PURE__*/ new SingleContextKey<ComponentStyleProducer>('component-style-producer:impl');\n\nconst hostSelector: StypSelector.Normalized = [{ e: ':host' }];\n\n/**\n * @internal\n */\nexport class ComponentStyleProducer {\n\n  static get [ContextKey__symbol](): ContextKey<ComponentStyleProducer> {\n    return ComponentStyleProducer__key;\n  }\n\n  constructor(\n      private readonly _context: ComponentContext,\n      private readonly _produce = produceBasicStyle,\n  ) {}\n\n  produce(rules: StypRules, options: StypOptions = {}): EventSupply {\n\n    const context = this._context;\n    const shadowRoot = context.get(ShadowContentRoot, { or: null });\n\n    return this._produce(rules, {\n      ...options,\n      document: options.document || context.get(BootstrapWindow).document,\n      parent: options.parent || context.get(ContentRoot),\n      rootSelector: options.rootSelector || buildRootSelector(),\n      schedule: options.schedule || buildScheduler(),\n      nsAlias: options.nsAlias || context.get(DefaultNamespaceAliaser),\n      render: buildRender(),\n    });\n\n    function buildScheduler(): (operation: () => void) => void {\n\n      const scheduler = context.get(RenderScheduler);\n\n      return operation => scheduler.newSchedule().schedule(operation);\n    }\n\n    function buildRootSelector(): StypSelector {\n      return shadowRoot ? hostSelector : [];\n    }\n\n    function buildRender(): StypRender | readonly StypRender[] | undefined {\n\n      const { render } = options;\n      const renders = new ArraySet<StypRender>(render)\n          .add(...context.get(ComponentStypRender));\n\n      if (!shadowRoot) {\n        renders.add(noShadowRender(context.get(ElementIdClass)));\n      }\n\n      return renders.value;\n    }\n  }\n\n}\n\nfunction noShadowRender(idClass: ElementIdClass): StypRender {\n  return {\n    order: -100,\n    render(producer, properties) {\n      producer.render(properties, {\n        selector: [{ c: [idClass] }, ...producer.selector],\n      });\n    },\n  };\n}\n","/**\n * @module @wesib/generic\n */\nimport { FeatureDef, FeatureDef__symbol, RenderSupport } from '@wesib/wesib';\nimport { ComponentStyleProducer } from './component-style-producer';\nimport { ComponentStyleProducer as ComponentStyleProducer_ } from './component-style-producer.impl';\n\nconst BasicStyleProducerSupport__feature: FeatureDef = {\n  needs: RenderSupport,\n  setup(setup) {\n    setup.perComponent({ as: ComponentStyleProducer_ });\n    setup.perComponent({\n      a: ComponentStyleProducer,\n      by(producer: ComponentStyleProducer_): ComponentStyleProducer {\n        return (rules, opts) => producer.produce(rules, opts);\n      },\n      with: [ComponentStyleProducer_],\n    });\n  },\n};\n\n/**\n * Basic style producer support feature.\n *\n * Depends on [style-producer].\n *\n * Unlike [[StyleProducerSupport]] feature this one does not enable default CSS renders.\n *\n * It is enabled automatically by {@link ProduceStyle @ProduceStyle} decorator.\n *\n * [style-producer]: https://www.npmjs.com/package/style-producer\n */\nexport class BasicStyleProducerSupport {\n\n  static get [FeatureDef__symbol]() {\n    return BasicStyleProducerSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ComponentContext } from '@wesib/wesib';\nimport { noop } from 'call-thru';\nimport { eventSupply, EventSupply, noEventSupply } from 'fun-events';\nimport { lazyStypRules, StypOptions, StypRules } from 'style-producer';\nimport { ComponentStyleProducer } from './component-style-producer';\n\n/**\n * Component CSS styles production options.\n */\nexport interface ComponentStypOptions extends StypOptions {\n\n  /**\n   * Whether to produce CSS stylesheets while component is not connected.\n   *\n   * Can be one of:\n   * - `true` - to produce stylesheets when first connected and update them even if component is disconnected after\n   *   that. This is the default, as stylesheet updates is expected to be rare operation.\n   * - `false` - to produce stylesheet whenever component is connected and remove them once disconnected.\n   *   This is a good choice if stylesheets are small and updated frequently.\n   * - `always` - to produce stylesheets immediately upon component readiness and update them offline after that.\n   *   This is the right choice if component needs a stylesheet ready before it is added to the document.\n   */\n  offline?: boolean | 'always';\n\n}\n\nexport const ComponentStypOptions = {\n\n  /**\n   * Produces and dynamically updates component's CSS stylesheets based on the given CSS rules.\n   *\n   * @param context  Target component context.\n   * @param rules  A source of CSS rules to produce stylesheets for.\n   * @param options  Production options.\n   *\n   * @returns CSS rules supply. Once cut off the produced stylesheets are removed.\n   */\n  produce(\n      context: ComponentContext,\n      rules: StypRules.Source,\n      options?: ComponentStypOptions,\n  ): EventSupply {\n\n    const css = lazyStypRules(rules);\n    const offline = options && options.offline;\n    const produceStyle = context.get(ComponentStyleProducer);\n\n    let cssSupply = noEventSupply();\n    let doProduceStyle: () => void;\n    const supply = eventSupply(reason => {\n      doProduceStyle = noop;\n      cssSupply.off(reason);\n    });\n\n    doProduceStyle = () => {\n      cssSupply = produceStyle(css, options).needs(supply);\n    };\n\n    switch (offline) {\n    case 'always':\n      context.whenReady(doProduceStyle);\n      break;\n    case false:\n      context.whenOn(connectionSupply => {\n        doProduceStyle();\n        cssSupply.needs(connectionSupply);\n      });\n      break;\n    default:\n      context.whenOn.once(doProduceStyle);\n    }\n\n    context.whenDestroyed(reason => supply.off(reason));\n\n    return supply;\n  },\n};\n","/**\n * @module @wesib/generic\n */\nimport { ComponentClass, ComponentDef } from '@wesib/wesib';\nimport { StypRules } from 'style-producer';\nimport { BasicStyleProducerSupport } from './basic-style-producer-support.feature';\nimport { ComponentStypOptions } from './component-styp-options';\n\n/**\n * A decorator of component property returning CSS rules to produce.\n *\n * Decorated property value should either contain a CSS rules source of type `StypRules.Source` or be a method\n * returning it.\n *\n * This decorator automatically enables [[BasicStyleProducerSupport]] feature.\n *\n * Utilizes [[ComponentStypOptions.produce]] function to produce CSS stylesheets.\n *\n * @typeparam T  A type of decorated component class.\n * @param options  Non-mandatory CSS style production options.\n *\n * @returns Component property decorator.\n */\nexport function ProduceStyle<T extends ComponentClass>(options?: ComponentStypOptions):\n    <V extends StypRules.Source | (() => StypRules.Source)>(\n        target: InstanceType<T>,\n        propertyKey: string | symbol,\n        descriptor?: TypedPropertyDescriptor<V>,\n    ) => any | void {\n  return (target: InstanceType<T>, propertyKey: string | symbol) => {\n\n    const componentType = target.constructor as T;\n\n    ComponentDef.define(\n        componentType,\n        {\n          define(defContext) {\n            defContext.onComponent(componentContext => {\n              componentContext.whenReady(({ component }) => {\n\n                const property = component[propertyKey];\n\n                ComponentStypOptions.produce(\n                    componentContext,\n                    typeof property === 'function' ? property.bind(component) : property,\n                    options,\n                );\n              });\n            });\n          },\n          feature: {\n            needs: [BasicStyleProducerSupport],\n          },\n        });\n  };\n}\n","/**\n * @module @wesib/generic\n */\nimport { ComponentContext, FeatureDef, FeatureDef__symbol, RenderSupport } from '@wesib/wesib';\nimport { produceStyle } from 'style-producer';\nimport { BasicStyleProducerSupport } from './basic-style-producer-support.feature';\nimport { ComponentStyleProducer } from './component-style-producer';\nimport { ComponentStyleProducer as ComponentStyleProducer_ } from './component-style-producer.impl';\n\nconst StyleProducerSupport__feature: FeatureDef = {\n  has: BasicStyleProducerSupport,\n  needs: RenderSupport,\n  setup(setup) {\n    setup.perComponent({\n      a: ComponentStyleProducer_,\n      by(context: ComponentContext) {\n        return new ComponentStyleProducer_(context, produceStyle);\n      },\n    });\n    setup.perComponent({\n      a: ComponentStyleProducer,\n      by(producer: ComponentStyleProducer_): ComponentStyleProducer {\n        return (rules, opts) => producer.produce(rules, opts);\n      },\n      with: [ComponentStyleProducer_],\n    });\n  },\n};\n\n/**\n * Style producer support feature.\n *\n * Depends on [style-producer].\n *\n * This is an implementation of [[BasicStyleProducerSupport]] feature that enables default CSS renders.\n *\n * It is _not_ enabled automatically by {@link ProduceStyle @ProduceStyle} decorator.\n *\n * [style-producer]: https://www.npmjs.com/package/style-producer\n */\nexport class StyleProducerSupport {\n\n  static get [FeatureDef__symbol]() {\n    return StyleProducerSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { RefStypRule, StypProperties, StypRule, StypRuleRef, StypRules } from 'style-producer';\nimport { ThemeStyle } from './theme-style';\n\nconst Theme__key = new SingleContextKey<Theme>('theme');\n\n/**\n * A hierarchy of CSS rules within single root.\n *\n * A component may use it to extract styling information.\n *\n * Current theme is available in bootstrap, definition, or component context. By default, only one theme is declared\n * per bootstrap. But this can be overridden.\n */\nexport abstract class Theme {\n\n  /**\n   * A key of bootstrap, definition, or component context value containing current theme instance.\n   */\n  static get [ContextKey__symbol](): ContextKey<Theme> {\n    return Theme__key;\n  }\n\n  /**\n   * Root CSS rule.\n   *\n   * All theme styling is represented as rules within this root.\n   */\n  abstract readonly root: StypRule;\n\n  /**\n   * Obtains CSS rule reference by its `referrer`.\n   *\n   * This is a helper method that resolves the given `referrer` against the `root` CSS rule of this theme.\n   *\n   * @param referrer  Target CSS rule referrer.\n   *\n   * @returns CSS rule reference.\n   */\n  ref<T extends StypProperties<T>>(referrer: RefStypRule<T>): StypRuleRef<T> {\n    return referrer(this.root);\n  }\n\n  /**\n   * Obtains a styling for the given theme styles.\n   *\n   * This method requests the registered {@link ThemeStyle theme styles} for CSS rules they provide.\n   * If some of the styles are not registered then uses the given style as provider.\n   *\n   * @param styles  The styles to obtain styling information for.\n   *\n   * @returns Dynamically updated CSS rule set containing the requested styling.\n   */\n  abstract style(...styles: ThemeStyle.Provider[]): StypRules;\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { Theme } from './theme';\n\nconst ThemeFactory__key = new SingleContextKey<ThemeFactory>('theme-factory');\n\nexport abstract class ThemeFactory {\n\n  static get [ContextKey__symbol](): ContextKey<ThemeFactory> {\n    return ThemeFactory__key;\n  }\n\n  abstract newTheme(): Theme;\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { AIterable } from 'a-iterable';\nimport { ContextRef, ContextValueOpts, ContextValues, SimpleContextKey } from 'context-values';\nimport { stypRules, StypRules } from 'style-producer';\nimport { Theme } from './theme';\n\n/**\n * Theme style provides part of the theme styling information.\n *\n * Theme style(s) can be provided in bootstrap context. They are applied to the theme at most once, when requested\n * by calling [[Theme.style]] method.\n *\n * Theme style is either a function, or an extension of another theme style.\n */\nexport type ThemeStyle = ThemeStyle.Provider | ThemeStyle.Extension;\n\nexport namespace ThemeStyle {\n\n  /**\n   * Theme style provider function.\n   *\n   * This function is called at most once per theme to apply styles to the latter. E.g. by declaring CSS rules.\n   *\n   * This function is used as an identifier of particular style and can be extended using [[ThemeStyle.Extension]].\n   *\n   * It is not absolutely necessary to register style provider. It will be applied on request anyway.\n   *\n   * @param theme  A theme to apply styling to.\n   *\n   * @returns Dynamically updated CSS rule set containing the applied styling.\n   */\n  export type Provider = (this: void, theme: Theme) => StypRules;\n\n  /**\n   * Theme style extension.\n   *\n   * An extension should be registered in bootstrap context in order to be applied.\n   */\n  export interface Extension {\n\n    /**\n     * A theme style provider to extend.\n     */\n    readonly style: ThemeStyle.Provider;\n\n    /**\n     * Extends the theme style.\n     *\n     * This method is called at most once per theme to apply styles to the latter. E.g. by declaring CSS rules.\n     *\n     * It will be called after the style provider it extends.\n     *\n     * @param theme  A theme to apply styling to.\n     *\n     * @returns Dynamically updated CSS rule set containing the applied styling.\n     */\n    provide(theme: Theme): StypRules;\n\n  }\n\n  /**\n   * A function obtaining combined style provider. I.e. the one that applies the style along with all extensions.\n   *\n   * @param A  provider of theme style to apply.\n   *\n   * @returns A combined theme style provider.\n   */\n  export type ById = (this: void, style: ThemeStyle.Provider) => ThemeStyle.Provider;\n\n}\n\nclass ThemeStyleKey extends SimpleContextKey<ThemeStyle.ById, ThemeStyle> {\n\n  constructor() {\n    super('theme-style');\n  }\n\n  grow<Ctx extends ContextValues>(\n      opts: ContextValueOpts<Ctx, ThemeStyle.ById, ThemeStyle, AIterable<ThemeStyle>>,\n  ): ThemeStyle.ById | null | undefined {\n\n    const providers = new Map<ThemeStyle.Provider, [ThemeStyle.Provider, boolean]>();\n\n    opts.seed.forEach(style => {\n\n      let key: ThemeStyle.Provider;\n      let provider: ThemeStyle.Provider;\n      let isId: boolean;\n\n      if (typeof style === 'function') {\n        key = provider = style;\n        isId = true;\n      } else {\n        key = style.style;\n        provider = style.provide.bind(style);\n        isId = false;\n      }\n\n      const prev = providers.get(key);\n\n      if (!prev) {\n        providers.set(key, [provider, isId]);\n      } else {\n\n        const [prevProvider, hasId] = prev;\n\n        providers.set(\n            key,\n            [\n              isId ? combineStyles(provider, prevProvider) : combineStyles(prevProvider, provider),\n              isId || hasId,\n            ]);\n      }\n    });\n\n    return providers.size ? byId : opts.byDefault(() => byId);\n\n    function byId(id: ThemeStyle.Provider): ThemeStyle.Provider {\n\n      const existing = providers.get(id);\n\n      if (!existing) {\n        return id;\n      }\n\n      const [provider, hasId] = existing;\n\n      return hasId ? provider : combineStyles(id, provider);\n    }\n  }\n\n}\n\n/**\n * A key of bootstrap context value containing theme styles.\n */\nexport const ThemeStyle: ContextRef<ThemeStyle.ById, ThemeStyle> = new ThemeStyleKey();\n\nfunction combineStyles(first: ThemeStyle.Provider, second: ThemeStyle.Provider): ThemeStyle.Provider {\n  return theme => stypRules(first(theme), second(theme));\n}\n","import { lazyStypRules, stypRoot, StypRule, StypRules } from 'style-producer';\nimport { Theme as Theme_ } from './theme';\nimport { ThemeStyle } from './theme-style';\n\n/**\n * @internal\n */\nexport class Theme extends Theme_ {\n\n  readonly root: StypRule = stypRoot();\n  private readonly _rules = new Map<ThemeStyle.Provider, StypRules>();\n\n  constructor(private readonly _styles: ThemeStyle.ById) {\n    super();\n  }\n\n  style(...styles: ThemeStyle.Provider[]): StypRules {\n\n    const theme = this;\n\n    return lazyStypRules(...styles.reduce<StypRules[]>(addStyleRules, []));\n\n    function addStyleRules(target: StypRules[], style: ThemeStyle.Provider) {\n\n      const existing = theme._rules.get(style);\n\n      if (existing) {\n        target.push(existing);\n      } else {\n\n        const constructed = theme._styles(style)(theme);\n\n        theme._rules.set(style, constructed);\n        target.push(constructed);\n      }\n\n      return target;\n    }\n  }\n\n}\n","import { ThemeFactory as ThemeFactory_ } from './theme-factory';\nimport { ThemeStyle } from './theme-style';\nimport { Theme } from './theme.impl';\n\n/**\n * @internal\n */\nexport class ThemeFactory extends ThemeFactory_ {\n\n  constructor(private readonly _styles: ThemeStyle.ById) {\n    super();\n  }\n\n  newTheme() {\n    return new Theme(this._styles);\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { FeatureDef, FeatureDef__symbol } from '@wesib/wesib';\nimport { BasicStyleProducerSupport } from '../styp';\nimport { Theme } from './theme';\nimport { ThemeFactory } from './theme-factory';\nimport { ThemeFactory as ThemeFactory_ } from './theme-factory.impl';\nimport { ThemeStyle } from './theme-style';\n\nconst ThemeSupport__feature: FeatureDef = {\n  needs: BasicStyleProducerSupport,\n  setup(setup) {\n    setup.provide({ a: ThemeFactory, as: ThemeFactory_, with: [ThemeStyle] });\n    setup.provide({\n      a: Theme,\n      by(factory: ThemeFactory) {\n        return factory.newTheme();\n      },\n      with: [ThemeFactory],\n    });\n  },\n};\n\n/**\n * Theme support feature.\n *\n * This needs to be enabled in order [[Theme]] and [[ThemeFactory]] to be available.\n */\nexport class ThemeSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return ThemeSupport__feature;\n  }\n\n}\n"],"names":["BootstrapContext__key","SingleContextKey","BootstrapContext","ContextValues","ContextKey__symbol","bootstrapDefault","provide","context","key","bootstrapContext","get","ComponentFactory__key","ComponentFactory","[object Object]","element","mount","this","mountTo","connected","BootstrapWindow","byDefault","window","DefaultNamespaceAliaser","ctx","document","body","isArray","value","Array","ArraySet","AIterable","super","items","Set","size","Symbol","iterator","next","forEach","item","add","superClassOf","type","satisfying","prototype","Object","getPrototypeOf","superType","constructor","mergeFunctions","first","second","merge","_f","s","args","apply","isElement","node","nodeType","Node","ELEMENT_NODE","MetaAccessor","symbol","hasOwnProperty","undefined","ownDef","own","superDef","of","defs","prevDef","def","defineProperty","configurable","PromiseResolver","promise","Promise","resolve","reject","_resolve","_reject","error","FeatureDef__symbol","FeatureMeta","reduce","prev","needs","has","setup","init","meta","FeatureDef","featureType","define","Feature","FeatureContext_key","FeatureContext","componentType","whenDefined","feature","load","FeatureNeedsError","Error","reason","need","name","FeatureRef","AfterEvent__symbol","read","ComponentDef__symbol","ComponentMeta","componentDefined","ComponentDef","featureDef","registrar","Component","ComponentContext__key","ComponentEventDispatcher__key","dispatch","event","dispatchEvent","on","DomEventDispatcher","ContentRoot","StateUpdater","FnContextKey","valueProvider","noop","ComponentContext__symbol","ComponentContext","updateComponentState","bind","TypeError","contentRoot","newValue","oldValue","ComponentEvent","Event","eventInitDict","target","ComponentMount","component","ElementAdapter","ContextUpKey","opts","defaultElementAdapter","result","seed","adapters","combined","adapter","ElementObserver","bsContext","DefaultElementObserver","MutationObserver","callback","mutations","mutation","itsEach","overArray","removedNodes","mountOf","checkConnected","filterIt","addedNodes","options","observe","childList","ComponentFactory__symbol","componentFactoryOf","factory","CustomElements__key","values","customElements","nsAlias","CustomElements","componentTypeOrName","elementType","isQualifiedName","html__naming","extend","elementDef","extends","componentResolver","ComponentResolver__symbol","DefinitionContext__key","ElementDef","elementExtend","HTMLElement","DefinitionContext","BootstrapContextRegistry__key","BootstrapContextRegistry","ContextRegistry","a","is","newValues","ComponentContextRegistry__key","ComponentContextRegistry","initial","DefinitionContextRegistry__key","DefinitionContextRegistry","PostDefSetup__symbol","postDefSetup","tracker","trackValue","emitter","EventEmitter","onSetup","thru","nextArgs","nextSkip","onAny","superPostDefSetup","send","it","ElementBuilder","definitionContextRegistry_global","componentContextRegistry_global","definitions","components","onComponent","componentContextRegistry_perType","ready","whenReady","cls","definitionContext","createComponentContextRegistry","append","componentFactory","ComponentFactory_","createComponent","registry","elementSuper","createMount","ComponentMount_","elementStatus","el","doc","ownerDocument","contains","componentCreated","DefinitionContext_","once","definitionContextRegistry","seedIn","definitionSetup","perDefinition","spec","perComponent","componentContextRegistry","Element","createElementType","enumerable","status","destructionReason","whenOff","whenDestroyed","sts","whenOn","offSupply","eventSupply","off","ComponentContext_","done","parentNode","parentElement","removeChild","removeElement","ComponentStatus__symbol","writable","proto","prevContext","newComponent","bubbles","doNotAdd","ComponentRegistry","_context","_definitionQueue","definition","push","buildElement","FeatureKey__symbol","FeatureKey","feat","from","keep","preferredFeatureClause","afterEventBy","receiver","origin","source","afterThe","stageId","afterAll","clause","deps","loadFeatureDeps","dig_","request","thru_","loader","to","stage","ownLoader","FeatureLoader","ownSource","rcv","unload","share","lastLoader","preventDuplicateLoader","clauses","preferred","required","afterEach","map","dep","presentFeatureDeps","mapIt","isPresent","down","_down","_stage","SetupFeatureStage","then","after","state","lastStage","id","prevStage","stop","FeatureStage","_stop","action","all","perDep","supply","unloader","unloads","adder","reverse","length","newUnloader","componentRegistry","elementBuilder","onDefinition","tillOff","st","bs","by","onEventBy","receive","onPostDefSetup","newFeatureContext","InitFeatureStage","async","ActiveFeatureStage","FeatureRequest","_requester","_revoke","requester","isClause","_revokeBy","unuse","_uses","revoke","FeatureRequester__key","FeatureRequester","Map","existing","_map","reuse","delete","set","bootstrapComponents","features","bootstrapContextRegistry","create","complete","newNamespaceAliaser","info","_ctx","ldr","whenDown","initBootstrap","AttributePath__root","attributeStateUpdate","updateState","attributePathTo","update","defaultUpdateState","call","path","parseAttributeDef","propertyKey","toString","AttributeRegistrar","AttributeRegistry__key","AttributeRegistry","_MutationObserver","_attrs","attrs","observedAttributes","keys","attributeFilter","records","record","attributeName","getAttribute","attributes","attributeOldValue","AttributesSupport__feature","as","with","componentContext","AttributesSupport","Attribute","descriptor","newDesc","setAttribute","AttributeChanged","defContext","DomPropertyPath__root","ComponentState__key","ComponentState","StateTracker","StateSupport__feature","StateSupport","RenderScheduler__key","RenderScheduler","ElementRender","render","offline","stateTracker","track","schedule","newSchedule","rendered","stateSupply","onUpdate","scheduleRender","renderElement","newRender","RenderSupport__feature","RenderScheduler_","createRenderScheduler","RenderSupport","scheduled","previouslyScheduled","requestAnimationFrame","Render","ShadowContentRoot","ShadowDomEvent","shadowRoot","ShadowRootBuilder","ShadowDomSupport__feature","attachShadow","ShadowDomSupport","shadowRootOf","defaultShadowContentDef","mode","ShadowContentDef","componentDef","or","AttachShadow","FetchAgentKey","agent","agents","fetch","agentIdx","agentRequest","onSupplied","nextRequest","combineFetchAgents","defaultFetchAgent","HttpFetchAgent","HttpFetchAborted","HttpFetch","input","Request","responseEmitter","abortController","AbortController","signal","abort","response","customSignal","aborted","catch","ComponentIn","MultiContextKey","ElementNode","ComponentNode","ElementNodeList","OnEvent__symbol","WATCH_DEEP","subtree","elementNodeList","root","selectorOrType","nodeOf","deep","updates","iterable","selector","cache","selected","refresh","added","observer","removed","removeNode","addNode","nodeList","firstReceiver","disconnect","onTrackUpdate","initialEmitter","afterSupplied","itsFirst","addEventListener","ElementNodeList_","itsIterator","sel","querySelectorAll","children","matches","select","AttributesObserver","_bs","_observer","Observer","_update","self","_emitter","eventReceiver","_emitters","reconnect","takeRecords","AttributeTracker","ValueTracker","_name","observeSupply","noEventSupply","_updates","NodeAttributes","created","PropertyTracker","_element","_key","propertyState","_supply","_path","NodeProperties","_props","prop","ElementNode__symbol","ElementNode_","_bind","parent","elementNodeOf","optional","selectNodes","ComponentTreeSupport__feature","ComponentTreeSupport","enableComponentIn","control","inputSupply","connectionSupply","toInNode","ins","n","removeInNode","inNode","participate","inSupply","participantSupplier","_","participants","participant","nodes","addedInNodes","ComponentInControl__key","ComponentInControl","EnterPageEvent","cancelable","when","LeavePageEvent","StayOnPageEvent","Navigation__key","Navigation","go","NavigationAgentKey","combinedAgent","sources","navigate","agentTo","url","nextURL","title","nextTitle","data","nextData","URL","String","baseURI","visited","current","ref","put","NavigationAgent","PageParam__symbol","PageParam","PageParamContext","RoutingHistory__key","NavHistory","_document","_location","location","_history","history","_uid","btoa","Math","random","extractNavData","entry","newEntry","href","_entries","enter","replaceState","_historyState","PageEntry","_lastId","toEntry","page","pushState","_enter","fromEntry","e","_forget","leave","popState","_changeHash","uid","pageId","existingEntry","transfer","oldEntry","forget","NAV_DATA_KEY","_params","_status","handle","param","newHandle","entries","transferred","at","stay","clear","createNavigation","dispatcher","navHistory","onEnter","onLeave","onStay","onEvent","nav","nextEntry","readPage","hashChange","Navigation_","delta","toURL","withParam","applyParams","open","replace","whenLeave","urlTarget","urlTargetOf","doNavigate","prepared","leavePage","finalTarget","t","prepare","NavigationSupport__feature","cachingPageLoader","pageUrl","sup","tracked","onLoad","trackSupply","resp","num","requested","PageLoadAbortError","PageLoadRequests","_navigation","_loader","fragments","fragment","flatMapIt","asis","pageSupply","loadSupply","_add","_transfer","pageLoadRequestsParam","responseReceiver","ok","tag","getElementsByTagName","getElementById","onFragment","req","list","_page","requests","PageLoadAgent","PageLoadURLModifier","PageLoader","httpFetch","modifyURL","parser","DOMParser","credentials","headers","Headers","Accept","fetchRequest","Accept-Fragment","itsReduction","header","hthvQuote","pageFragmentsRequest","responseTextEmitter","onResponse","text","parsePageDocument","start","responseSupply","parseFromString","hthvParse","v","head","base","querySelector","newBase","createElement","appendChild","pageLoadParam","PageCacheBuster__key","PageCacheBuster","appRevSearchParam","rev","appRev","navigation","urlModifier","searchParams","newRev","reload","importNode","beforeOrImport","importContent","importNodeContent","before","elementClone","tagName","toLowerCase","getAttributeNames","attr","insertBefore","nodeClone","childNodes","pageScriptsAgent","allScripts","externalScripts","scripts","src","script","_from","pageStyleAgent","newStyles","oldStyles","oldStylesByHref","firstOldStyle","link","newStyle","oldStyle","nextSibling","style","pageTitleAgent","textContent","PageLoadSupport__feature","buster","PageLoadSupport","ComponentStyleProducer","ComponentStypRender","ElementIdClass__NS","NamespaceDef","ElementIdClass","contextValues","aliaser","local","uniqueClassSeq","qualified","css__naming","classList","ComponentStyleProducer__key","hostSelector","_produce","produceBasicStyle","rules","rootSelector","scheduler","operation","buildScheduler","renders","idClass","order","producer","properties","c","buildRender","BasicStyleProducerSupport__feature","ComponentStyleProducer_","produce","BasicStyleProducerSupport","ComponentStypOptions","css","lazyStypRules","produceStyle","doProduceStyle","cssSupply","ProduceStyle","property","StyleProducerSupport__feature","StyleProducerSupport","Theme__key","Theme","referrer","ThemeFactory__key","ThemeFactory","ThemeStyle","SimpleContextKey","providers","provider","isId","prevProvider","hasId","combineStyles","byId","theme","stypRules","Theme_","_styles","stypRoot","styles","_rules","constructed","ThemeFactory_","ThemeSupport__feature","newTheme","ThemeSupport"],"mappings":"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"}