{"version":3,"file":"wesib.53f2dfad.module.js","sources":["../../node_modules/@wesib/wesib/src/boot/bootstrap-context.key.impl.ts","../../node_modules/@wesib/wesib/src/boot/bootstrap-context.ts","../../node_modules/@wesib/wesib/src/boot/bootstrap-default.ts","../../node_modules/@wesib/wesib/src/component/definition/component-factory.ts","../../node_modules/@wesib/wesib/src/boot/globals/bootstrap-window.ts","../../node_modules/@wesib/wesib/src/boot/globals/default-namespace-aliaser.ts","../../node_modules/@wesib/wesib/src/boot/globals/bootstrap-root.ts","../../node_modules/@wesib/wesib/src/common/types.impl.ts","../../node_modules/@wesib/wesib/src/common/array-set.ts","../../node_modules/@wesib/wesib/src/common/functions.ts","../../node_modules/@wesib/wesib/src/common/meta-accessor.ts","../../node_modules/@wesib/wesib/src/common/classes.ts","../../node_modules/@wesib/wesib/src/common/promises.ts","../../node_modules/@wesib/wesib/src/feature/feature-def.ts","../../node_modules/@wesib/wesib/src/feature/feature.decorator.ts","../../node_modules/@wesib/wesib/src/feature/feature-context.ts","../../node_modules/@wesib/wesib/src/feature/feature-needs-error.ts","../../node_modules/@wesib/wesib/src/feature/feature-ref.ts","../../node_modules/@wesib/wesib/src/component/component-def.ts","../../node_modules/@wesib/wesib/src/component/component.decorator.ts","../../node_modules/@wesib/wesib/src/component/component-context.key.impl.ts","../../node_modules/@wesib/wesib/src/component/component-event.key.impl.ts","../../node_modules/@wesib/wesib/src/component/content-root.ts","../../node_modules/@wesib/wesib/src/component/state-updater.ts","../../node_modules/@wesib/wesib/src/component/component-context.ts","../../node_modules/@wesib/wesib/src/component/component-event.ts","../../node_modules/@wesib/wesib/src/component/component-mount.ts","../../node_modules/@wesib/wesib/src/boot/globals/element-adapter.ts","../../node_modules/@wesib/wesib/src/boot/impl/component-factory.symbol.impl.ts","../../node_modules/@wesib/wesib/src/component/definition/custom-elements.ts","../../node_modules/@wesib/wesib/src/component/definition/definition.context.key.impl.ts","../../node_modules/@wesib/wesib/src/component/definition/element-def.ts","../../node_modules/@wesib/wesib/src/component/definition/definition-context.ts","../../node_modules/@wesib/wesib/src/boot/impl/bootstrap-context-registry.impl.ts","../../node_modules/@wesib/wesib/src/boot/impl/component-context-registry.impl.ts","../../node_modules/@wesib/wesib/src/boot/impl/definition-context-registry.impl.ts","../../node_modules/@wesib/wesib/src/boot/impl/element-builder.impl.ts","../../node_modules/@wesib/wesib/src/boot/impl/unloader.impl.ts","../../node_modules/@wesib/wesib/src/feature/loader/component-registry.impl.ts","../../node_modules/@wesib/wesib/src/feature/loader/on-featured-def-setup.impl.ts","../../node_modules/@wesib/wesib/src/feature/loader/feature-loader.impl.ts","../../node_modules/@wesib/wesib/src/feature/loader/feature-request.impl.ts","../../node_modules/@wesib/wesib/src/feature/loader/feature-requester.impl.ts","../../node_modules/@wesib/wesib/src/boot/bootstrap/bootstrap-components.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-path.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-state-update.impl.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-registrar.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-registry.impl.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attributes-support.feature.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute.decorator.ts","../../node_modules/@wesib/wesib/src/feature/attributes/attribute-def.impl.ts","../../node_modules/@wesib/wesib/src/feature/dom-properties/dom-property-path.ts","../../node_modules/@wesib/wesib/src/feature/state/component-state.ts","../../node_modules/@wesib/wesib/src/feature/state/state-support.feature.ts","../../node_modules/@wesib/wesib/src/feature/render/render-scheduler.ts","../../node_modules/@wesib/wesib/src/feature/render/element-render.ts","../../node_modules/@wesib/wesib/src/feature/render/render-support.feature.ts","../../node_modules/@wesib/wesib/src/feature/render/render.decorator.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/shadow-content-root.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/shadow-dom-event.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/shadow-root-builder.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/shadow-dom-support.feature.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/shadow-content-def.ts","../../node_modules/@wesib/wesib/src/feature/shadow-dom/attach-shadow.decorator.ts","../../node_modules/@wesib/generic/src/fetch/fetch-agent-key.impl.ts","../../node_modules/@wesib/generic/src/fetch/http-fetch-agent.ts","../../node_modules/@wesib/generic/src/fetch/http-fetch.impl.ts","../../node_modules/@wesib/generic/src/fetch/http-fetch.ts","../../node_modules/@wesib/generic/src/navigation/navigation.event.ts","../../node_modules/@wesib/generic/src/navigation/navigation.ts","../../node_modules/@wesib/generic/src/navigation/navigation-agent.ts","../../node_modules/@wesib/generic/src/navigation/page-param.ts","../../node_modules/@wesib/generic/src/navigation/page-param-context.ts","../../node_modules/@wesib/generic/src/navigation/nav-history.impl.ts","../../node_modules/@wesib/generic/src/navigation/navigation.impl.ts","../../node_modules/@wesib/generic/src/navigation/navigation-support.feature.ts","../../node_modules/@wesib/generic/src/navigation/page-load/caching-page-loader.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-load-requests.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-load-agent.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-load-url-modifier.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-loader.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-load-param.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-cache-buster.impl.ts","../../node_modules/@wesib/generic/src/util/import-node.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-scripts-agent.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-style-agent.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-title-agent.impl.ts","../../node_modules/@wesib/generic/src/navigation/page-load/page-load-support.feature.ts","../../node_modules/@wesib/generic/src/styp/component-style-producer.ts","../../node_modules/@wesib/generic/src/styp/component-styp-render.ts","../../node_modules/@wesib/generic/src/styp/element-id-class.impl.ts","../../node_modules/@wesib/generic/src/styp/component-style-producer.impl.ts","../../node_modules/@wesib/generic/src/styp/basic-style-producer-support.feature.ts","../../node_modules/@wesib/generic/src/styp/component-styp-options.ts","../../node_modules/@wesib/generic/src/styp/produce-style.decorator.ts","../../node_modules/@wesib/generic/src/styp/style-producer-support.feature.ts","../../node_modules/@wesib/generic/src/theme/theme.ts","../../node_modules/@wesib/generic/src/theme/theme-factory.ts","../../node_modules/@wesib/generic/src/theme/theme-style.ts","../../node_modules/@wesib/generic/src/theme/theme.impl.ts","../../node_modules/@wesib/generic/src/theme/theme-factory.impl.ts","../../node_modules/@wesib/generic/src/theme/theme-support.feature.ts","../../node_modules/@wesib/generic/src/tree/element-node.ts","../../node_modules/@wesib/generic/src/tree/element-node-list.impl.ts","../../node_modules/@wesib/generic/src/tree/node-attributes.impl.ts","../../node_modules/@wesib/generic/src/tree/node-properties.impl.ts","../../node_modules/@wesib/generic/src/tree/element-node.impl.ts","../../node_modules/@wesib/generic/src/tree/component-tree-support.feature.ts"],"sourcesContent":["import { SingleContextKey } from 'context-values';\nimport { BootstrapContext } from './bootstrap-context';\n\n/**\n * @internal\n */\nexport const BootstrapContext__key = /*#__PURE__*/ new SingleContextKey<BootstrapContext>('bootstrap-context');\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, ContextValues } from 'context-values';\nimport { OnEvent } from 'fun-events';\nimport { Class } from '../common';\nimport { ComponentClass, ComponentFactory } from '../component/definition';\nimport { FeatureRef } from '../feature';\nimport { BootstrapContext__key } from './bootstrap-context.key.impl';\n\n/**\n * Components bootstrap context.\n *\n * An instance of this class is passed to [[FeatureDef.init]] method so that the feature can configure itself.\n *\n * Extends `BootstrapValues` interface. The values are {@link FeatureDef.set pre-configured} in feature definitions.\n *\n * @category Core\n */\nexport abstract class BootstrapContext extends ContextValues {\n\n  /**\n   * A key of bootstrap context value containing the bootstrap context itself.\n   */\n  static get [ContextKey__symbol](): ContextKey<BootstrapContext> {\n    return BootstrapContext__key;\n  }\n\n  /**\n   * An `OnEvent` sender of bootstrap readiness event.\n   *\n   * The registered receiver will be notified once bootstrap is complete.\n   *\n   * If bootstrap is complete already, the receiver will be notified immediately.\n   */\n  abstract readonly whenReady: OnEvent<[BootstrapContext]>;\n\n  /**\n   * Allows to wait for component definition.\n   *\n   * This corresponds to `window.customElements.whenDefined()` method.\n   *\n   * @param componentType  Component class constructor.\n   *\n   * @return A promise that is resolved to component factory when the given `componentType` is registered.\n   *\n   * @throws TypeError  If `componentType` does not contain a component definition.\n   */\n  abstract whenDefined<C extends object>(componentType: ComponentClass<C>): Promise<ComponentFactory<C>>;\n\n  /**\n   * Allows to loads the given `feature`.\n   *\n   * @param feature  The feature to load.\n   *\n   * @returns  Loaded feature reference.\n   */\n  abstract load(feature: Class): FeatureRef;\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKeyDefault } from 'context-values';\nimport { BootstrapContext } from './bootstrap-context';\n\n/**\n * Provides a default value for bootstrap context key.\n *\n * @param provide  A function accepting bootstrap context and target key as parameters, and returning either a default\n * value, or `null`/`undefined` if unknown.\n *\n * @returns A provider of default value for bootstrap context value key.\n */\nexport function bootstrapDefault<Value, Key extends ContextKey<any, any, any>>(\n    provide: (this: void, context: BootstrapContext, key: Key) => Value | null | undefined,\n): ContextKeyDefault<Value, Key> {\n  return (context, key) => {\n\n    const bootstrapContext = context.get(BootstrapContext);\n\n    return context === bootstrapContext ? provide(bootstrapContext, key) : bootstrapContext.get(key);\n  };\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { Class } from '../../common';\nimport { ComponentMount } from '../component-mount';\nimport { ComponentClass } from './component-class';\nimport { ElementDef } from './element-def';\n\nconst ComponentFactory__key = /*#__PURE__*/ new SingleContextKey<ComponentFactory>('component-factory');\n\n/**\n * A factory of components of particular type.\n *\n * @category Core\n * @typeparam T  A type of component.\n */\nexport abstract class ComponentFactory<T extends object = any> {\n\n  /**\n   * A key of definition context value containing a component factory.\n   */\n  static get [ContextKey__symbol](): ContextKey<ComponentFactory> {\n    return ComponentFactory__key;\n  }\n\n  /**\n   * Component class constructor.\n   */\n  abstract readonly componentType: ComponentClass<T>;\n\n  /**\n   * Custom element class constructor.\n   *\n   * It is an error accessing this property before the element class is created, e.g. from inside of\n   * `DefinitionListener` or `ComponentDef.define()` function. In these cases you may wish to add a `whenReady()`\n   * callback.\n   */\n  abstract readonly elementType: Class;\n\n  /**\n   * Custom element definition.\n   */\n  abstract readonly elementDef: ElementDef;\n\n  /**\n   * Mounts a component to arbitrary element.\n   *\n   * This method creates a component, but instead of creating a custom element for, it mounts it to the target\n   * `element`.\n   *\n   * It is up to the features to update the target element. They can use a `ComponentContext.mount` property to check\n   * whether the component is mounted or is constructed in standard way.\n   *\n   * The constructed component will be in disconnected state. To update its connection state either update a\n   * `ComponentMount.connected` property, or use a `connectTo()` method.\n   *\n   * @param element  Target element to mount new component to.\n   *\n   * @returns New component mount.\n   *\n   * @throws Error If target element is already bound to some component.\n   */\n  abstract mountTo(element: any): ComponentMount<T>;\n\n  /**\n   * Connects a component to arbitrary element.\n   *\n   * This method does the same as `mountTo()`, but also marks the mounted component as connected.\n   *\n   * @param element  Target element to mount new component to.\n   *\n   * @returns New component mount.\n   *\n   * @throws Error If target element is already bound to some component.\n   */\n  connectTo(element: any): ComponentMount<T> {\n\n    const mount = this.mountTo(element);\n\n    mount.connected = true;\n\n    return mount;\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\n\n/**\n * A window the components bootstrap is performed against.\n *\n * @category Core\n */\nexport type BootstrapWindow = Window & typeof globalThis;\n\n/**\n * A key of bootstrap context value containing a window instance the bootstrap is performed against.\n *\n * Target value defaults to current window.\n *\n * @category Core\n */\nexport const BootstrapWindow: SingleContextRef<BootstrapWindow> = /*#__PURE__*/ new SingleContextKey(\n    'window',\n    {\n      byDefault() {\n        return window;\n      },\n    },\n);\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport { NamespaceAliaser } from 'namespace-aliaser';\n\n/**\n * Namespace aliaser used by default.\n *\n * Maps namespaces to their unique aliases.\n *\n * @category Core\n */\nexport type DefaultNamespaceAliaser = NamespaceAliaser;\n\n/**\n * A key of bootstrap context value containing the default namespace aliaser.\n *\n * @category Core\n */\nexport const DefaultNamespaceAliaser: SingleContextRef<DefaultNamespaceAliaser> =\n    /*#__PURE__*/ new SingleContextKey<DefaultNamespaceAliaser>('default-namespace-aliaser');\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport { BootstrapWindow } from './bootstrap-window';\n\n/**\n * A window (e.g. DOM) element all bootstrapped components belong to.\n *\n * @category Core\n */\nexport type BootstrapRoot = any;\n\n/**\n * A key of bootstrap context value containing a bootstrap root.\n *\n * Target value defaults to document body of [[BootstrapWindow]].\n *\n * @category Core\n */\nexport const BootstrapRoot: SingleContextRef<BootstrapRoot> = /*#__PURE__*/ new SingleContextKey(\n    'bootstrap-root',\n    {\n      byDefault(ctx) {\n        return ctx.get(BootstrapWindow).document.body;\n      },\n    },\n);\n","/**\n * @internal\n */\nexport function isArray<T>(value: T | T[]): value is T[];\n\n/**\n * @internal\n */\nexport function isArray<T>(value: T | readonly T[]): value is readonly T[];\n\nexport function isArray<T>(value: T | readonly T[]): value is T[] {\n  return Array.isArray(value);\n}\n","/**\n * @module @wesib/wesib\n */\nimport { AIterable } from 'a-iterable';\nimport { isArray } from './types.impl';\n\n/**\n * @category Utility\n */\nexport class ArraySet<T> extends AIterable<T> {\n\n  readonly items: Set<T>;\n\n  constructor(value?: T | readonly T[]) {\n    super();\n    this.items = value == null ? new Set() : isArray(value) ? new Set(value) : new Set([value]);\n  }\n\n  get value(): T | T[] | undefined {\n    switch (this.items.size) {\n    case 0: return;\n    case 1: return this.items[Symbol.iterator]().next().value;\n    default: return [...this.items];\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.items[Symbol.iterator]();\n  }\n\n  add(...items: T[]): this {\n    items.forEach(item => this.items.add(item));\n    return this;\n  }\n\n  get size(): number {\n    return this.items.size;\n  }\n\n  merge(items: readonly T[] | T | undefined): this {\n    if (items == null) {\n      return this;\n    }\n    if (isArray(items)) {\n      return this.add(...items);\n    }\n    return this.add(items);\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\n/**\n * Merges two functions by calling one after another.\n *\n * Optionally merges function call results.\n *\n * @category Utility\n * @typeparam P  Function parameter types as tuple.\n * @typeparam R  A type of function result.\n * @typeparam T  A type if `this` object expected by function.\n * @param first  The first function to call.\n * @param second  The second function to call.\n * @param merge  Optional function call results merger. Accepts two function results as arguments and returns the final\n * result. When omitted the first function call result is ignored and the second function's call result is returned.\n *\n * @return A function that calls both of the given ones and merges their results. If one of the functions is absent,\n * then just returns another one. If both are absent, then returns `undefined`.\n */\nexport function mergeFunctions<P extends any[], R, T>(\n    first: (this: T, ...args: P) => R,\n    second: ((this: T, ...args: P) => R) | undefined,\n    merge: (first: R, second: R) => R): (this: T, ...args: P) => R;\n\nexport function mergeFunctions<P extends any[], R, T>(\n    first: ((this: T, ...args: P) => R) | undefined,\n    second: (this: T, ...args: P) => R,\n    merge?: (first: R, second: R) => R): (this: T, ...args: P) => R;\n\nexport function mergeFunctions<P extends any[], R, T>(\n    first: ((this: T, ...args: P) => R) | undefined,\n    second: ((this: T, ...args: P) => R) | undefined,\n    merge?: (first: R, second: R) => R): ((this: T, ...args: P) => R) | undefined;\n\nexport function mergeFunctions<P extends any[], R, T>(\n    first: ((this: T, ...args: P) => R) | undefined,\n    second: ((this: T, ...args: P) => R) | undefined,\n    merge: (first: R, second: R) => R = (_f, s) => s): ((this: T, ...args: P) => R) | undefined {\n  if (!first) {\n    return second;\n  }\n  if (!second) {\n    return first;\n  }\n  return function(this: T, ...args: P) {\n    return merge(\n      first.apply(this, args),\n      second.apply(this, args));\n  };\n}\n","/**\n * @module @wesib/wesib\n */\nimport { Class, superClassOf } from './classes';\n\n/**\n * @category Utility\n */\nexport abstract class MetaAccessor<M> {\n\n  readonly symbol: symbol;\n\n  protected constructor(symbol: symbol) {\n    this.symbol = symbol;\n  }\n\n  of(type: Class): M | undefined {\n\n    const def: M | undefined = type.hasOwnProperty(this.symbol) ? (type as any)[this.symbol] : undefined;\n    const superType = superClassOf(type);\n    const superDef = superType && this.of(superType);\n\n    return def ? (superDef ? this.merge(superDef, def) : def) : superDef;\n  }\n\n  define<C extends Class>(type: C, ...defs: M[]): C {\n\n    const prevDef: M | undefined = type.hasOwnProperty(this.symbol) ? (type as any)[this.symbol] : undefined;\n    let def: M;\n\n    if (prevDef) {\n      def = this.merge(prevDef, ...defs);\n    } else {\n      def = this.merge(...defs);\n    }\n\n    Object.defineProperty(\n        type,\n        this.symbol,\n        {\n          configurable: true,\n          value: def,\n        },\n    );\n\n    return type;\n  }\n\n  abstract merge(...defs: M[]): M;\n\n}\n","/**\n * @module @wesib/wesib\n */\n/**\n * Arbitrary class constructor.\n *\n * @category Utility\n * @typeparam T  A type of object.\n */\nexport interface Class<T extends object = any> extends Function {\n  new(...args: any[]): T;\n  prototype: T;\n}\n\n/**\n * Detects super class of the given class optionally satisfying the given criteria.\n *\n * Traverses all class ancestors until reaches the one satisfying the given criteria, or stops when there is no more\n * ancestors.\n *\n * @category Utility\n * @param type  The class constructor to find super class of.\n * @param satisfying  The criteria of super class matching. It is a function accepting a super class constructor\n * as the only parameter and returning `true` if the given super class matches, or `false` otherwise. Always returns\n * `true` by default.\n *\n * @return A super class `satisfying` the given criteria, or `undefined` if there is no such super class, or there is no\n * super class at all (e.g. when `Object` is passed in).\n */\nexport function superClassOf(type: Class, satisfying: (type: Class) => boolean = () => true): Class | undefined {\n\n  const prototype = Object.getPrototypeOf(type.prototype);\n\n  if (prototype == null) {\n    return;\n  }\n\n  const superType = prototype.constructor as Class;\n\n  if (satisfying(superType)) {\n    return superType;\n  }\n\n  return superClassOf(superType, satisfying);\n}\n","/**\n * @module @wesib/wesib\n */\n/**\n * @category Utility\n */\nexport class PromiseResolver<T = void> {\n\n  readonly promise: Promise<T>;\n  private _resolve!: (value: T) => void;\n  private _reject!: (error: any) => void;\n\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  resolve(value: T) {\n    this._resolve(value);\n  }\n\n  reject(error: any) {\n    this._reject(error);\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { BootstrapSetup } from '../boot';\nimport { ArraySet, Class, mergeFunctions, MetaAccessor } from '../common';\nimport { FeatureContext } from './feature-context';\n\n/**\n * A key of a property holding a feature definition within its class constructor.\n *\n * @category Core\n */\nexport const FeatureDef__symbol = /*#__PURE__*/ Symbol('feature-def');\n\n/**\n * Feature definition.\n *\n * @category Core\n */\nexport interface FeatureDef {\n\n  /**\n   * Features this one requires.\n   */\n  readonly needs?: Class | readonly Class[];\n\n  /**\n   * Features this one provides.\n   *\n   * The feature always provides itself.\n   */\n  readonly has?: Class | readonly Class[];\n\n  /**\n   * Sets up bootstrap.\n   *\n   * This method is called before bootstrap context created.\n   *\n   * @param this  Feature class.\n   * @param setup  Bootstrap setup.\n   */\n  setup?(this: Class, setup: BootstrapSetup): void;\n\n  /**\n   * Bootstraps this feature by calling the given bootstrap context constructed.\n   *\n   * @param this  Feature class.\n   * @param context  Feature initialization context.\n   */\n  init?(this: Class, context: FeatureContext): void;\n\n}\n\nclass FeatureMeta extends MetaAccessor<FeatureDef> {\n\n  constructor() {\n    super(FeatureDef__symbol);\n  }\n\n  merge(...defs: readonly FeatureDef[]): FeatureDef {\n    return defs.reduce<FeatureDef>(\n        (prev, def) => ({\n          needs: new ArraySet(prev.needs).merge(def.needs).value,\n          has: new ArraySet(prev.has).merge(def.has).value,\n          setup: mergeFunctions<[BootstrapSetup], void, Class>(prev.setup, def.setup),\n          init: mergeFunctions<[FeatureContext], void, Class>(prev.init, def.init),\n        }),\n        {});\n  }\n\n}\n\nconst meta = /*#__PURE__*/ new FeatureMeta();\n\n/**\n * @category Core\n */\nexport const FeatureDef = {\n\n  /**\n   * Extracts a feature definition from its type.\n   *\n   * @param featureType  Target feature class constructor.\n   *\n   * @returns A feature definition. May be empty when there is no feature definition found in the given `featureType`.\n   */\n  of(featureType: Class): FeatureDef {\n    return meta.of(featureType) || {};\n  },\n\n  /**\n   * Merges multiple feature definitions.\n   *\n   * @param defs  Feature definitions to merge.\n   *\n   * @returns Merged feature definition.\n   */\n  merge(...defs: readonly FeatureDef[]): FeatureDef {\n    return meta.merge(...defs);\n  },\n\n  /**\n   * Defines a feature.\n   *\n   * Either creates new or extends an existing feature definition and stores it under `[FeatureDef__symbol]` key.\n   *\n   * @typeparam T  Feature type.\n   * @param type  Feature class constructor.\n   * @param defs  Feature definitions.\n   *\n   * @returns The `type` instance.\n   */\n  define<T extends Class>(type: T, ...defs: readonly FeatureDef[]): T {\n    return meta.define(type, ...defs);\n  },\n\n};\n","/**\n * @module @wesib/wesib\n */\nimport { Class, TypedClassDecorator } from '../common';\nimport { FeatureDef } from './feature-def';\n\n/**\n * Feature class decorator.\n *\n * Decorate a class with this decorator to define it as a feature like this:\n * ```TypeScript\n * @Feature({ needs: [OtherFeature, MyComponent] })\n * class MyFeature {\n *   // ...\n * }\n * ```\n *\n * Such feature can be passed to [[bootstrapComponents]] function or referenced by other features.\n *\n * This is an alternative to direct call to [[FeatureDef.define]] method.\n *\n * @category Core\n * @typeparam T  A type of decorated feature class.\n * @param def  Feature definition.\n *\n * @returns A feature class decorator.\n */\nexport function Feature<T extends Class = any>(def: FeatureDef): TypedClassDecorator<T> {\n  return (type: T) => FeatureDef.define(type, def);\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, ContextValueSpec, SingleContextKey } from 'context-values';\nimport { OnEvent } from 'fun-events';\nimport { BootstrapContext, BootstrapSetup } from '../boot';\nimport { Class } from '../common';\nimport { ComponentContext } from '../component';\nimport { ComponentClass, ComponentFactory, DefinitionContext, DefinitionSetup } from '../component/definition';\nimport { FeatureRef } from './feature-ref';\n\nconst FeatureContext_key = new SingleContextKey<FeatureContext>('feature-context');\n\n/**\n * Feature initialization context.\n */\nexport abstract class FeatureContext extends BootstrapContext implements BootstrapSetup {\n\n  /**\n   * A key of feature context value containing the feature context itself.\n   */\n  static get [ContextKey__symbol](): ContextKey<FeatureContext> {\n    return FeatureContext_key;\n  }\n\n  abstract readonly whenReady: OnEvent<[FeatureContext]>;\n\n  abstract readonly onDefinition: OnEvent<[DefinitionContext]>;\n\n  abstract readonly onComponent: OnEvent<[ComponentContext]>;\n\n  /**\n   * Provides bootstrap context value.\n   *\n   * Note that this happens when bootstrap context already exists. To provide a value before bootstrap context created\n   * a [[BootstrapSetup.provide]] method can be used.\n   *\n   * @typeparam Deps  Dependencies tuple type.\n   * @typeparam Src  Source value type.\n   * @typeparam Seed  Value seed type.\n   * @param spec  Context value specifier.\n   *\n   * @returns A function that removes the given context value specifier when called.\n   */\n  abstract provide<Deps extends any[], Src, Seed>(\n      spec: ContextValueSpec<BootstrapContext, any, Deps, Src, Seed>,\n  ): () => void;\n\n  abstract perDefinition<Deps extends any[], Src, Seed>(\n      spec: ContextValueSpec<DefinitionContext, any, Deps, Src, Seed>,\n  ): () => void;\n\n  abstract perComponent<Deps extends any[], Src, Seed>(\n      spec: ContextValueSpec<ComponentContext, any, Deps, Src, Seed>,\n  ): () => void;\n\n  abstract setupDefinition<T extends object>(componentType: ComponentClass<T>): OnEvent<[DefinitionSetup]>;\n\n  /**\n   * Defines a component.\n   *\n   * Creates a custom element according to component definition, and registers it with custom elements registry.\n   *\n   * Note that custom element definition will happen only when all features configuration complete.\n   *\n   * @typeparam T  A type of component.\n   * @param componentType  Component class constructor.\n   *\n   * @return Custom element class constructor registered as custom element.\n   *\n   * @throws TypeError  If `componentType` does not contain a component definition.\n   */\n  abstract define<T extends object>(componentType: ComponentClass<T>): void;\n\n  whenDefined<C extends object>(componentType: ComponentClass<C>): Promise<ComponentFactory<C>> {\n    return this.get(BootstrapContext).whenDefined(componentType);\n  }\n\n  load(feature: Class): FeatureRef {\n    return this.get(BootstrapContext).load(feature);\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { Class } from '../common';\n\n/**\n * Feature need.\n *\n * Indicates why one feature needs another one. The reason can be one of:\n *\n * - `needs` when feature {@link FeatureDef.needs depends} on another one, or\n * - `has` when feature {@link FeatureDef.has provides} another one.\n */\nexport type FeatureNeed = [Class, 'needs' | 'has', Class];\n\n/**\n * An error in feature needs. I.e. circular dependency.\n */\nexport class FeatureNeedsError extends Error {\n\n  /**\n   * Feature needs causing this error.\n   */\n  readonly needs: readonly FeatureNeed[];\n\n  /**\n   * Constructs feature needs error.\n   *\n   * @param needs  Feature needs causing the error.\n   */\n  constructor(needs: readonly FeatureNeed[]) {\n    super(\n        'Circular feature needs: '\n        + needs.reduce(\n        (prev, [feature, reason, need]) =>\n            (prev ? prev : feature.name) + ` ${reason} ${need.name}`, ''));\n    this.needs = needs;\n  }\n\n}\n","/**\n * @module wesib/wesib\n */\nimport { AfterEvent, AfterEvent__symbol, EventKeeper } from 'fun-events';\nimport { FeatureStatus } from './feature-status';\n\n/**\n * Dynamically loaded feature reference.\n *\n * It is returned from [[BootstrapContext.load]] and can be used to read feature load status and unload it.\n *\n * Implements an `EventKeeper` interface by sending a feature load status updates.\n */\nexport abstract class FeatureRef implements EventKeeper<[FeatureStatus]> {\n\n  /**\n   * An `AfterEvent` sender of feature load status updates.\n   *\n   * The `[AfterEvent__symbol]` property is an alias of this one.\n   */\n  abstract readonly read: AfterEvent<[FeatureStatus]>;\n\n  get [AfterEvent__symbol](): AfterEvent<[FeatureStatus]> {\n    return this.read;\n  }\n\n  /**\n   * A promise resolved when feature is unloaded.\n   *\n   * This happens after all feature references dismissed.\n   */\n  abstract readonly down: Promise<void>;\n\n  /**\n   * Dismisses feature reference.\n   *\n   * When all feature references dismissed, then unloads the feature. This removes everything set up by the\n   * feature via [[BootstrapSetup]] and [[DefinitionSetup]].\n   *\n   * @param reason  Arbitrary reason of feature reference dismiss. This will be reported by load status supplies\n   * as their cut off reason.\n   *\n   * @returns A promise resolved when feature is unloaded. This happens only after all feature references dismissed.\n   */\n  abstract dismiss(reason?: any): Promise<void>;\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { QualifiedName } from 'namespace-aliaser';\nimport { Class, mergeFunctions, MetaAccessor } from '../common';\nimport { FeatureDef } from '../feature';\nimport { ComponentClass, DefinitionContext, DefinitionSetup, ElementDef } from './definition';\n\n/**\n * A key of a property holding a component definition within its class constructor.\n *\n * @category Core\n */\nexport const ComponentDef__symbol = /*#__PURE__*/ Symbol('component-def');\n\n/**\n * Component definition.\n *\n * A custom element class will be created for each registered component in accordance to this definition.\n *\n * @category Core\n * @typeparam T  A type of component.\n */\nexport interface ComponentDef<T extends object = any> {\n\n  /**\n   * Custom element name.\n   *\n   * The name may belong to some namespace to avoid naming conflicts. I.e. it can be either a string, or\n   * name/namespace tuple.\n   *\n   * When omitted an anonymous component will be registered. Such component is not bound to custom element, but it\n   * still can be mounted.\n   */\n  readonly name?: QualifiedName;\n\n  /**\n   * Existing element to extend by custom one.\n   */\n  readonly extend?: ElementDef.Extend;\n\n  /**\n   * Additional feature definition options.\n   */\n  readonly feature?: FeatureDef;\n\n  /**\n   * Sets up component definition.\n   *\n   * This method is called before component definition context constructed.\n   *\n   * @param setup  Component definition setup.\n   */\n  setup?(this: void, setup: DefinitionSetup<T>): void;\n\n  /**\n   * Defines this component by calling the given component definition context methods.\n   *\n   * This function is called before the custom element is defined.\n   *\n   * @param this  Component class.\n   * @param context  Component definition context.\n   */\n  define?(this: Class<T>, context: DefinitionContext<T>): void;\n\n}\n\nclass ComponentMeta extends MetaAccessor<ComponentDef> {\n\n  constructor() {\n    super(ComponentDef__symbol);\n  }\n\n  merge<T extends object>(...defs: ComponentDef<T>[]): ComponentDef<T> {\n    return defs.reduce(\n        (prev, def) => ({\n          ...prev,\n          ...def,\n          setup: mergeFunctions(prev.setup, def.setup),\n          define: mergeFunctions(prev.define, def.define),\n          feature: prev.feature\n              ? def.feature ? FeatureDef.merge(prev.feature, def.feature) : prev.feature\n              : def.feature,\n        }),\n        {});\n  }\n\n}\n\nconst meta = /*#__PURE__*/ new ComponentMeta();\n\n/**\n * @category Core\n */\nexport const ComponentDef = {\n\n  /**\n   * Extracts a component definition from its type.\n   *\n   * @typeparam T  A type of component.\n   * @param componentType  Target component class constructor.\n   *\n   * @returns Component definition. May be empty if there is not definition attached to component type.\n   */\n  of<T extends object>(componentType: ComponentClass<T>): ComponentDef<T> {\n    return meta.of(componentType) as ComponentDef<T> || {};\n  },\n\n  /**\n   * Merges multiple (partial) component definitions.\n   *\n   * @typeparam T  A type of component.\n   * @param defs  Partial component definitions to merge.\n   *\n   * @returns Merged component definition.\n   */\n  merge<T extends object>(...defs: ComponentDef<T>[]): ComponentDef<T> {\n    return meta.merge(...defs);\n  },\n\n  /**\n   * Defines a component.\n   *\n   * Either assigns new or extends an existing component definition and stores it under [[ComponentDef__symbol]] key.\n   *\n   * Note that each component is also a feature able to register itself, so it can be passed directly to\n   * [[bootstrapComponents]] function or added as a requirement of another feature.\n   *\n   * @typeparam T  A type of component.\n   * @param type  Component class constructor.\n   * @param defs  Component definitions.\n   *\n   * @returns The `type` instance.\n   */\n  define<T extends ComponentClass>(\n      type: T,\n      ...defs: ComponentDef<InstanceType<T>>[]\n  ): T {\n\n    const def = this.merge(...defs);\n    const prevDef = meta.of(type);\n\n    meta.define(type, def);\n\n    const { feature } = def;\n\n    if (feature) {\n      FeatureDef.define(type, feature);\n    }\n    if (prevDef) {\n      return type; // Define component only once.\n    }\n\n    return FeatureDef.define(\n        type,\n        {\n          init: function (context) {\n            context.define(this);\n          },\n        });\n  },\n\n};\n","/**\n * @module @wesib/wesib\n */\nimport { TypedClassDecorator } from '../common';\nimport { ComponentDef } from './component-def';\nimport { ComponentClass } from './definition';\n\n/**\n * Component class decorator.\n *\n * Decorate a class with this decorator to define a component like this:\n * ```TypeScript\n * @Component({ name: 'my-element' })\n * class MyComponent {\n *   // ...\n * }\n * ```\n *\n * Such component can be registered with [[BootstrapContext.define]] method, or used as a feature, e.g. passed to\n * [[bootstrapComponents]] function, or added to [[FeatureDef.needs]] property of another feature.\n *\n * This is an alternative to direct call to [[ComponentDef.define]] method.\n *\n * @category Core\n * @typeparam T  A type of decorated component class.\n * @param def  A component definition or just custom element name.\n *\n * @returns A component class decorator.\n */\nexport function Component<T extends ComponentClass = any>(\n    def: ComponentDef<InstanceType<T>> | string,\n): TypedClassDecorator<T> {\n  return (type: T) => ComponentDef.define(type, typeof def === 'string' ? { name: def } : def);\n}\n","import { SingleContextKey } from 'context-values';\nimport { ComponentContext } from './component-context';\n\n/**\n * @internal\n */\nexport const ComponentContext__key = /*#__PURE__*/ new SingleContextKey<ComponentContext>('component-context');\n","import { SingleContextKey } from 'context-values';\nimport { DomEventDispatcher, OnDomEvent } from 'fun-events';\nimport { ComponentContext } from './component-context';\nimport { ComponentEventDispatcher } from './component-event';\n\n/**\n * @internal\n */\nexport const ComponentEventDispatcher__key = /*#__PURE__*/ new SingleContextKey<ComponentEventDispatcher>(\n    'component-event-dispatcher',\n    {\n      byDefault() {\n        return {\n          dispatch(context: ComponentContext, event: Event): boolean {\n            return context.element.dispatchEvent(event);\n          },\n          on<E extends Event>(context: ComponentContext, type: string): OnDomEvent<E> {\n\n            const dispatcher = new DomEventDispatcher(context.element);\n\n            return dispatcher.on(type);\n          },\n        };\n      },\n    },\n);\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport { ComponentContext__key } from './component-context.key.impl';\n\n/**\n * Component content root node.\n *\n * @category Core\n */\nexport type ContentRoot = ParentNode;\n\n/**\n * A key of component context value containing a component root element.\n *\n * This is an element itself by default. But can be overridden e.g. by {@link AttachShadow @AttachShadow} decorator.\n *\n * @category Core\n */\nexport const ContentRoot: SingleContextRef<ContentRoot> = /*#__PURE__*/ new SingleContextKey<ContentRoot>(\n    'content-root',\n    {\n      byDefault(ctx) {\n        return ctx.get(ComponentContext__key).element;\n      },\n    },\n);\n","/**\n * @module @wesib/wesib\n */\nimport { noop, valueProvider } from 'call-thru';\nimport { FnContextKey, FnContextRef } from 'context-values';\nimport { StatePath } from 'fun-events';\n\n/**\n * Component state updater function.\n *\n * @category Core\n */\nexport type StateUpdater =\n/**\n * @typeparam V  Updated value type\n * @param path  Updated state node path.\n * @param newValue  New value.\n * @param oldValue  Replaced value.\n */\n    <V>(this: void, path: StatePath, newValue: V, oldValue: V) => void;\n\n/**\n * A key of component context value containing a component state updates receiver function.\n *\n * Features are calling this function by default when component state changes, e.g. attribute value or DOM property\n * modified.\n *\n * Note that this value is not provided, unless the `StateSupport` feature is enabled.\n *\n * @category Core\n */\nexport const StateUpdater: FnContextRef<Parameters<StateUpdater>> = /*#__PURE__*/ new FnContextKey(\n    'state-updater',\n    {\n      byDefault: valueProvider(noop),\n    },\n);\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, ContextValues } from 'context-values';\nimport { EventSupply, OnDomEvent, OnEvent, StatePath } from 'fun-events';\nimport { BootstrapContext__key } from '../boot/bootstrap-context.key.impl';\nimport { ComponentContext__key } from './component-context.key.impl';\nimport { ComponentEventDispatcher__key } from './component-event.key.impl';\nimport { ComponentMount } from './component-mount';\nimport { ContentRoot } from './content-root';\nimport { ComponentClass } from './definition';\nimport { StateUpdater } from './state-updater';\n\n/**\n * A key of a custom element and component properties containing a reference to component context.\n *\n * @category Core\n */\nexport const ComponentContext__symbol = /*#__PURE__*/ Symbol('component-context');\n\n/**\n * Component context.\n *\n * Passed to component constructor as its only parameter.\n *\n * Extends `ContextValues` interface. The values are provided by corresponding providers registered with\n * [[BootstrapContext.perComponent]] method.\n *\n * @category Core\n * @typeparam T  A type of component.\n */\nexport abstract class ComponentContext<T extends object = any> extends ContextValues {\n\n  /**\n   * A key of component context value containing the component context instance itself.\n   */\n  static get [ContextKey__symbol](): ContextKey<ComponentContext> {\n    return ComponentContext__key;\n  }\n\n  /**\n   * Component class constructor.\n   */\n  abstract readonly componentType: ComponentClass<T>;\n\n  /**\n   * Custom element constructed for the component according to its type.\n   *\n   * E.g. `HTMLElement` instance.\n   */\n  abstract readonly element: any;\n\n  /**\n   * A component instance.\n   *\n   * It is an error accessing this property before the component is created, e.g. from inside of component constructor\n   * or {@link DefinitionContext.onComponent component construction event} receiver. In these cases you may wish to\n   * add a [[whenReady]] callback.\n   */\n  abstract readonly component: T;\n\n  /**\n   * Component mount.\n   *\n   * This is defined when component is mounted to arbitrary element by [[ComponentFactory.mountTo]]. Ot is `undefined`\n   * for components created in standard way.\n   */\n  abstract readonly mount: ComponentMount<T> | undefined;\n\n  /**\n   * Whether the custom element is connected.\n   *\n   * This becomes `true` right before [[whenOn]] event is sent, and becomes `false` right before [[whenOff]] event is\n   * sent.\n   */\n  abstract readonly connected: boolean;\n\n  /**\n   * An `OnEvent` sender of custom element connection events.\n   *\n   * The registered receivers are called when custom element is connected, i.e. its `connectedCallback()` method is\n   * called. If component is connected already the receiver is called immediately.\n   *\n   * Sends a connection supply that is cut off once custom element is disconnected.\n   */\n  abstract readonly whenOn: OnEvent<[EventSupply]>;\n\n  /**\n   * An `OnEvent` sender of custom element disconnection events.\n   *\n   * The registered receivers are called when custom element is disconnected, i.e. its `disconnectedCallback()` method\n   * is called. If component is ready but disconnected, the receiver is called immediately.\n   */\n  abstract readonly whenOff: OnEvent<[]>;\n\n  /**\n   * An `OnEvent` sender of component readiness event.\n   *\n   * The component is constructed shortly after custom element. So the component may not exist when requested\n   * e.g. inside component constructor or {@link DefinitionContext.onComponent component construction event} receiver.\n   * The registered receiver will be notified when the component is constructed.\n   *\n   * If the component is constructed already, the receiver will be notified immediately.\n   */\n  abstract readonly whenReady: OnEvent<[this]>;\n\n  /**\n   * An `OnEvent` sender of component destruction reason event.\n   *\n   * The registered receiver is notified when [[destroy]] method is called. If the component is destroyed already\n   * the receiver is notified immediately.\n   */\n  abstract readonly whenDestroyed: OnEvent<[any]>;\n\n  /**\n   * Updates component's state.\n   *\n   * This is a shorthand for invoking a component {@link StateUpdater state updater} .\n   *\n   * Note that state update has no effect unless [[StateSupport]] feature is enabled or [[StateUpdater]] context value\n   * is provided by other means.\n   *\n   * @typeparam V  A type of changed value.\n   * @param key  Changed value key.\n   * @param newValue  New value.\n   * @param oldValue  Previous value.\n   */\n  readonly updateState: StateUpdater = updateComponentState.bind(this);\n\n  /**\n   * Extracts component context from its custom element or from component itself.\n   *\n   * @param element  Custom element instance created for the component or the component itself.\n   *\n   * @return Component context reference stored under [[ComponentContext__symbol]] key.\n   *\n   * @throws TypeError  When the given `element` does not contain component context reference.\n   */\n  static of<T extends object>(element: any): ComponentContext<T> {\n\n    const context = element[ComponentContext__symbol];\n\n    if (!context) {\n      throw TypeError(`No component context found in ${element}`);\n    }\n\n    return context;\n  }\n\n  /**\n   * Component content root.\n   *\n   * This is a shorthand for requesting a {@link ContentRoot content root} from component context.\n   */\n  get contentRoot(): ContentRoot {\n    return this.get(ContentRoot);\n  }\n\n  /**\n   * Returns a `super` property value inherited from custom element parent.\n   *\n   * @param key  Target property key.\n   */\n  abstract elementSuper(key: PropertyKey): any;\n\n  /**\n   * Returns a DOM event producer for the given event type.\n   *\n   * This is a shorthand for invoking a component event producer function available under\n   * `[ComponentEventProducer.key]` key.\n   *\n   * @param type  An event type to listen for.\n   *\n   * @returns A producer of DOM event events of the given type.\n   */\n  on<E extends Event>(type: string): OnDomEvent<E> {\n    return this.get(ComponentEventDispatcher__key).on(this, type);\n  }\n\n  /**\n   * Dispatches an event to component element.\n   *\n   * This is a shorthand for invoking a component {@link ComponentEventDispatcher event dispatcher}.\n   *\n   * @param event  An event to dispatch.\n   */\n  dispatchEvent(event: Event): void {\n    this.get(BootstrapContext__key).get(ComponentEventDispatcher__key).dispatch(this, event);\n  }\n\n  /**\n   * Destroys the component.\n   *\n   * Removes element from the DOM tree. I.e. disconnects custom element first.\n   *\n   * After this method call the component should no longer be used.\n   *\n   * Note that component destruction is virtual. It is up to developer to decide when component is no longer needed.\n   *\n   * @param reason  Optional reason of destruction.\n   */\n  abstract destroy(reason?: any): void;\n\n}\n\nfunction updateComponentState<V>(this: ComponentContext<any>, key: StatePath, newValue: V, oldValue: V) {\n  this.get(StateUpdater)(key, newValue, oldValue);\n}\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextRef } from 'context-values';\nimport { OnDomEvent } from 'fun-events';\nimport { ComponentContext } from './component-context';\nimport { ComponentEventDispatcher__key } from './component-event.key.impl';\n\n/**\n * Component event.\n *\n * Events of this type are thrown by various services to inform on component status changes.\n *\n * It is illegal to dispatch such events for elements not bound to components. It is reasonable to dispatch events\n * using [[ComponentEventDispatcher]] available in component context.\n *\n * The following event types supported:\n * - `wesib:component` is thrown when component is bound to element. I.e. when HTML element is upgraded to custom one\n *   defined by component, or component is bound to the element. This event bubbles and is not cancelable.\n *\n * @category Core\n * @event ComponentEvent#wesib:component\n */\nexport class ComponentEvent extends Event {\n\n  /**\n   * Constructs component event.\n   *\n   * @param type  Event type.\n   * @param eventInitDict  Event initialization dictionary.\n   */\n  constructor(type: string, eventInitDict?: EventInit) {\n    super(type, eventInitDict);\n  }\n\n  /**\n   * Target component context.\n   */\n  get context(): ComponentContext {\n    return ComponentContext.of(this.target);\n  }\n\n}\n\n/**\n * Component event dispatcher is used to listen for and dispatch component events.\n *\n * It is available in bootstrap context context.\n *\n * By default treats a component element as event target.\n *\n * @category Core\n */\nexport interface ComponentEventDispatcher {\n\n  /**\n   * Dispatches the DOM event for the given component.\n   *\n   * @param context  Target component context.\n   * @param event  An event to dispatch.\n   *\n   * @returns `true` if either event's `cancelable` attribute value is `false` or its `preventDefault()` method was not\n   * invoked, or `false` otherwise.\n   */\n  dispatch(context: ComponentContext, event: Event): boolean;\n\n  /**\n   * Returns an `OnDomEvent` sender of DOM events of the given type.\n   *\n   * @param context  Target component context.\n   * @param type  An event type to listen for.\n   *\n   * @returns A producer of DOM event events of the given type.\n   */\n  on<E extends Event>(context: ComponentContext, type: string): OnDomEvent<E>;\n\n}\n\n/**\n * A key of bootstrap context value containing component event dispatcher.\n *\n * @category Core\n */\nexport const ComponentEventDispatcher: SingleContextRef<ComponentEventDispatcher> =\n    /*#__PURE__*/ ComponentEventDispatcher__key;\n","/**\n * @module @wesib/wesib\n */\nimport { ComponentContext } from './component-context';\n\n/**\n * A mount of the component to an element.\n *\n * This is constructed when a component is mounted to arbitrary element by [[ComponentFactory.mountTo]] method.\n *\n * Mounted components do not maintain their connection status automatically. It is a calling code responsibility to set\n * their connection status by updating [[ComponentMount.connected]] property. E.g. by periodically calling a\n * [[ComponentMount.checkConnected]] method, or by using an [[AutoConnectSupport]] feature.\n *\n * @category Core\n * @typeparam T  A type of component.\n */\nexport abstract class ComponentMount<T extends object = any> {\n\n  /**\n   * Mounted component context.\n   */\n  abstract readonly context: ComponentContext<T>;\n\n  /**\n   * Component connection state.\n   *\n   * Updating this property triggers appropriate listeners registered in [[ComponentContext]].\n   *\n   * The initial state is set by [[checkConnected]] method.\n   */\n  abstract connected: boolean;\n\n  /**\n   * Mounted component.\n   */\n  get component(): T {\n    return this.context.component;\n  }\n\n  /**\n   * An element the component is mounted to.\n   */\n  get element(): any {\n    return this.context.element;\n  }\n\n  /**\n   * Checks whether the mounted component element is actually connected to its owning document.\n   *\n   * Updates the `connected` property and returns its value.\n   *\n   * @returns `true` if the component element is connected, or `false` otherwise.\n   */\n  abstract checkConnected(): boolean;\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextUpKey, ContextUpRef, ContextValueOpts, ContextValues } from 'context-values';\nimport { AfterEvent, EventKeeper } from 'fun-events';\nimport { ComponentContext, ComponentContext__symbol } from '../../component';\n\n/**\n * Element adapter is a function able to convert a raw element to component. E.g. mount a component to it.\n *\n * Features may use it internally. E.g. an `AutoConnectSupport` applies it to each added DOM element.\n *\n * Multiple element adapters can be registered in bootstrap context.\n *\n * @category Core\n */\nexport type ElementAdapter =\n/**\n * @param element  Target raw element to adapt.\n *\n * @returns An adapted component's context, or `undefined` if element can not be adapted.\n */\n    (this: void, element: any) => ComponentContext | undefined;\n\nclass ElementAdapterKey extends ContextUpKey<ElementAdapter, ElementAdapter> {\n\n  constructor() {\n    super('element-adapter');\n  }\n\n  grow<Ctx extends ContextValues>(\n      opts: ContextValueOpts<\n          Ctx,\n          ElementAdapter,\n          EventKeeper<ElementAdapter[]> | ElementAdapter, AfterEvent<ElementAdapter[]>>,\n  ): ElementAdapter {\n\n    const defaultElementAdapter = (element: any) => element[ComponentContext__symbol];\n\n    let result: ElementAdapter;\n\n    opts.seed((...adapters) => {\n\n      const combined = adapters.reduce(\n          (prev, adapter) => (element: any) => prev(element) || adapter(element),\n          defaultElementAdapter,\n      );\n\n      result = combined !== defaultElementAdapter\n          ? combined\n          : opts.byDefault(() => defaultElementAdapter) || defaultElementAdapter;\n    });\n\n    return element => result(element);\n  }\n\n}\n\n/**\n * A key of bootstrap context value containing combined [[ElementAdapter]] instance.\n *\n * @category Core\n */\nexport const ElementAdapter: ContextUpRef<ElementAdapter, ElementAdapter> = /*#__PURE__*/ new ElementAdapterKey();\n","import { ComponentClass, ComponentFactory } from '../../component/definition';\n\n/**\n * @internal\n */\nexport const ComponentFactory__symbol = /*#__PURE__*/ Symbol('component-factory');\n\n/**\n * @internal\n */\nexport function componentFactoryOf<T extends object>(componentType: ComponentClass<T>): ComponentFactory<T> {\n\n  const factory = (componentType as any)[ComponentFactory__symbol];\n\n  if (!factory) {\n    throw new TypeError(`Component is not defined: ${componentType}`);\n  }\n\n  return factory;\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, ContextValues, SingleContextKey } from 'context-values';\nimport { html__naming, isQualifiedName, QualifiedName } from 'namespace-aliaser';\nimport { BootstrapWindow, DefaultNamespaceAliaser } from '../../boot/globals';\nimport { componentFactoryOf } from '../../boot/impl/component-factory.symbol.impl';\nimport { Class, PromiseResolver } from '../../common';\nimport { ComponentClass } from './component-class';\n\nconst CustomElements__key = /*#__PURE__*/ new SingleContextKey<CustomElements>(\n    'custom-elements',\n    {\n      byDefault: createCustomElements,\n    },\n);\n\n/**\n * Custom elements registry.\n *\n * This is used to register custom elements.\n *\n * Typically implemented by `window.customElements`.\n *\n * @category Core\n */\nexport abstract class CustomElements {\n\n  /**\n   * A key of bootstrap context value containing a `CustomElements` instance used to register custom\n   * elements.\n   *\n   * Target value defaults to `window.customElements` from the window provided under `[BootstrapWindow.key]`.\n   */\n  static get [ContextKey__symbol](): ContextKey<CustomElements> {\n    return CustomElements__key;\n  }\n\n  /**\n   * Defines custom element.\n   *\n   * @param componentTypeOrName  A component class constructor or custom element name. The latter may belong to\n   * namespace to avoid naming conflicts.\n   * @param elementType  A constructor of custom element to define.\n   */\n  abstract define(componentTypeOrName: ComponentClass | QualifiedName, elementType: Class): void;\n\n  /**\n   * Allows to wait for component definition.\n   *\n   * This corresponds to `window.customElements.whenDefined()` method.\n   *\n   * @param componentTypeOrName  Component class constructor or custom element name possibly belonging to some\n   * namespace.\n   *\n   * @return A promise that is resolved when custom element is registered.\n   *\n   * @throws TypeError If `componentType` does not contain a component definition.\n   */\n  abstract whenDefined(componentTypeOrName: ComponentClass | QualifiedName): Promise<void>;\n\n}\n\nfunction createCustomElements(values: ContextValues) {\n\n  const customElements: CustomElementRegistry = values.get(BootstrapWindow).customElements;\n  const nsAlias = values.get(DefaultNamespaceAliaser);\n\n  class WindowCustomElements extends CustomElements {\n\n    define(componentTypeOrName: ComponentClass | string, elementType: Class): void {\n      if (isQualifiedName(componentTypeOrName)) {\n        customElements.define(html__naming.name(componentTypeOrName, nsAlias), elementType);\n        return;\n      }\n\n      const factory = componentFactoryOf(componentTypeOrName);\n      const { name, extend } = factory.elementDef;\n\n      if (!name) {\n        componentResolver(componentTypeOrName).resolve(undefined);\n        return; // Anonymous component.\n      }\n      if (extend && extend.name) {\n        customElements.define(\n            html__naming.name(name, nsAlias),\n            elementType,\n            {\n              extends: extend.name,\n            });\n      } else {\n        customElements.define(html__naming.name(name, nsAlias), elementType);\n      }\n    }\n\n    whenDefined(componentTypeOrName: ComponentClass | string): Promise<void> {\n      if (isQualifiedName(componentTypeOrName)) {\n        return customElements.whenDefined(html__naming.name(componentTypeOrName, nsAlias));\n      }\n\n      const factory = componentFactoryOf(componentTypeOrName);\n      const { name } = factory.elementDef;\n\n      if (!name) {\n        return componentResolver(componentTypeOrName).promise;\n      }\n\n      return customElements.whenDefined(html__naming.name(name, nsAlias));\n    }\n\n  }\n\n  return new WindowCustomElements();\n}\n\nconst ComponentResolver__symbol = /*#__PURE__*/ Symbol('component-resolver');\n\nfunction componentResolver(componentType: ComponentClass): PromiseResolver<void> {\n  return (componentType as any)[ComponentResolver__symbol]\n      || ((componentType as any)[ComponentResolver__symbol] = new PromiseResolver());\n}\n","import { SingleContextKey } from 'context-values';\nimport { DefinitionContext } from './definition-context';\n\n/**\n * @internal\n */\nexport const DefinitionContext__key = /*#__PURE__*/ new SingleContextKey<DefinitionContext>('definition-context');\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport { QualifiedName } from 'namespace-aliaser';\nimport { BootstrapWindow } from '../../boot/globals';\nimport { Class } from '../../common';\nimport { ComponentDef } from '../component-def';\nimport { DefinitionContext__key } from './definition.context.key.impl';\n\n/**\n * Custom element definition meta.\n *\n * @category Core\n */\nexport interface ElementDef {\n\n  /**\n   * Custom element name.\n   *\n   * The name may belong to some namespace to avoid naming conflicts. I.e. it can be either a string, or\n   * name/namespace tuple.\n   *\n   * When omitted an anonymous component will be registered. Such component is not bound to custom element, but it\n   * still can be mounted.\n   */\n  readonly name?: QualifiedName;\n\n  /**\n   * Existing element to extend by custom one.\n   */\n  readonly extend: ElementDef.Extend;\n\n}\n\n/**\n * A key of definition context value containing a custom element definition.\n *\n * Target value defaults to `HTMLElement` from the window provided under `[BootstrapWindow.key]`,\n * unless `ComponentDef.extend.type` is specified.\n */\nexport const ElementDef: SingleContextRef<ElementDef> = /*#__PURE__*/ new SingleContextKey<ElementDef>(\n    'element-def',\n    {\n      byDefault(values) {\n\n        const componentType = values.get(DefinitionContext__key).componentType;\n        const { name, extend } = ComponentDef.of(componentType);\n\n        const elementExtend: ElementDef.Extend = {\n          get type() {\n            return extend && extend.type || values.get(BootstrapWindow).HTMLElement;\n          },\n          get name() {\n            return extend && extend.name;\n          },\n        };\n\n        return {\n          get name() {\n            return name;\n          },\n          get extend() {\n            return elementExtend;\n          },\n        };\n      },\n    },\n);\n\n/**\n * @category Core\n */\nexport namespace ElementDef {\n\n  /**\n   * The definition of element to extend by custom one.\n   */\n  export interface Extend {\n\n    /**\n     * The class constructor of element to extend.\n     */\n    readonly type: Class;\n\n    /**\n     * The name of element to extend.\n     *\n     * This is to support `as` attribute of standard HTML element. Note that this is not supported by polyfills.\n     */\n    readonly name?: string;\n\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, ContextValues, ContextValueSpec } from 'context-values';\nimport { OnEvent } from 'fun-events';\nimport { Class } from '../../common';\nimport { ComponentContext } from '../component-context';\nimport { ComponentClass } from './component-class';\nimport { DefinitionContext__key } from './definition.context.key.impl';\nimport { ElementDef } from './element-def';\n\n/**\n * Component definition context.\n *\n * Extends `ContextValues` interface. The values are provided by corresponding providers registered with\n * `BootstrapContext.perDefinition()` method. All [[BootstrapContext]] values are available too.\n *\n * @category Core\n * @typeparam T  A type of component.\n */\nexport abstract class DefinitionContext<T extends object = any> extends ContextValues {\n\n  /**\n   * A key of definition context value containing the definition context itself.\n   */\n  static get [ContextKey__symbol](): ContextKey<DefinitionContext> {\n    return DefinitionContext__key;\n  }\n\n  /**\n   * Component class constructor.\n   */\n  abstract readonly componentType: ComponentClass<T>;\n\n  /**\n   * Custom element class constructor.\n   *\n   * It is an error accessing this property before the element class is created, e.g. from inside of\n   * `DefinitionListener` or `ComponentDef.define()` function. In these cases you may wish to add a `whenReady()`\n   * callback.\n   */\n  abstract readonly elementType: Class;\n\n  /**\n   * An `OnEvent` sender of component definition readiness event.\n   *\n   * The custom element class is not constructed until component definition is complete.\n   * The registered receiver will be notified when the custom element class is constructed.\n   *\n   * If the custom element class is constructed already, the receiver will be notified immediately.\n   */\n  abstract readonly whenReady: OnEvent<[this]>;\n\n  /**\n   * Custom element definition.\n   */\n  get elementDef(): ElementDef {\n    return this.get(ElementDef);\n  }\n\n  /**\n   * An `OnEvent` sender of component construction events.\n   *\n   * The registered receiver will be notified right before the defined component is constructed.\n   */\n  abstract readonly onComponent: OnEvent<[ComponentContext<T>]>;\n\n  /**\n   * Provides a value available in the context of each component of the defined component type.\n   *\n   * @typeparam Deps  A type of dependencies.\n   * @typeparam Src  The type of context value sources.\n   * @typeparam Seed  Value seed type.\n   * @param spec  Component context value specifier.\n   *\n   * @returns A function that removes the given context value specifier when called.\n   */\n  abstract perComponent<Deps extends any[], Src, Seed>(\n      spec: ContextValueSpec<ComponentContext<T>, any, Deps, Src, Seed>,\n  ): () => void;\n\n}\n","import { ContextKey, ContextKey__symbol, ContextRegistry, ContextValues, SingleContextKey } from 'context-values';\nimport { BootstrapContext } from '../bootstrap-context';\n\nconst BootstrapContextRegistry__key =\n    /*#__PURE__*/ new SingleContextKey<BootstrapContextRegistry>('bootstrap-context-registry');\n\n/**\n * @internal\n */\nexport class BootstrapContextRegistry extends ContextRegistry<BootstrapContext> {\n\n  static get [ContextKey__symbol](): ContextKey<BootstrapContextRegistry> {\n    return BootstrapContextRegistry__key;\n  }\n\n  readonly values: ContextValues;\n\n  static create(): BootstrapContextRegistry {\n    return new BootstrapContextRegistry();\n  }\n\n  private constructor() {\n    super();\n    this.provide({ a: BootstrapContextRegistry, is: this });\n    this.values = this.newValues();\n  }\n\n}\n","import { ContextKey, ContextKey__symbol, ContextRegistry, ContextSeeds, SingleContextKey } from 'context-values';\nimport { ComponentContext } from '../../component';\nimport { bootstrapDefault } from '../bootstrap-default';\n\nconst ComponentContextRegistry__key = new SingleContextKey<ComponentContextRegistry>(\n    'component-context-registry',\n    {\n      byDefault: bootstrapDefault(() => new ComponentContextRegistry()),\n    },\n);\n\n/**\n * @internal\n */\nexport class ComponentContextRegistry extends ContextRegistry<ComponentContext> {\n\n  static get [ContextKey__symbol](): ContextKey<ComponentContextRegistry> {\n    return ComponentContextRegistry__key;\n  }\n\n  constructor(initial?: ContextSeeds<ComponentContext>) {\n    super(initial);\n  }\n\n}\n","import {\n  ContextKey,\n  ContextKey__symbol,\n  ContextRegistry,\n  ContextSeeds,\n  ContextValues,\n  SingleContextKey,\n} from 'context-values';\nimport { DefinitionContext } from '../../component/definition';\nimport { bootstrapDefault } from '../bootstrap-default';\n\nconst DefinitionContextRegistry__key = new SingleContextKey<DefinitionContextRegistry>(\n    'definition-context-registry',\n    {\n      byDefault: bootstrapDefault(context => new DefinitionContextRegistry(context)),\n    },\n);\n\n/**\n * @internal\n */\nexport class DefinitionContextRegistry extends ContextRegistry<DefinitionContext> {\n\n  static get [ContextKey__symbol](): ContextKey<DefinitionContextRegistry> {\n    return DefinitionContextRegistry__key;\n  }\n\n  constructor(initial?: ContextSeeds<DefinitionContext> | ContextValues) {\n    super(initial);\n  }\n\n}\n","import { nextArgs, nextSkip, noop } from 'call-thru';\nimport { ContextValues, ContextValueSpec, SingleContextKey, SingleContextRef } from 'context-values';\nimport { EventEmitter, eventSupply, EventSupply, OnEvent, trackValue, ValueTracker } from 'fun-events';\nimport { Class } from '../../common';\nimport {\n  ComponentContext as ComponentContext_,\n  ComponentContext__symbol,\n  ComponentDef,\n  ComponentEvent,\n  ComponentMount as ComponentMount_,\n} from '../../component';\nimport {\n  ComponentClass,\n  ComponentFactory as ComponentFactory_,\n  DefinitionContext as DefinitionContext_,\n  ElementDef,\n} from '../../component/definition';\nimport { BootstrapContext } from '../bootstrap-context';\nimport { bootstrapDefault } from '../bootstrap-default';\nimport { ComponentContextRegistry } from './component-context-registry.impl';\nimport { DefinitionContextRegistry } from './definition-context-registry.impl';\n\n/**\n * @internal\n */\nexport interface ElementBuilder {\n  readonly definitions: EventEmitter<[DefinitionContext_]>;\n  readonly components: EventEmitter<[ComponentContext_]>;\n  buildElement<T extends object>(this: void, componentType: ComponentClass<T>): ComponentFactory_<T>;\n}\n\n/**\n * @internal\n */\nexport const ElementBuilder: SingleContextRef<ElementBuilder> = /*#__PURE__*/ new SingleContextKey<ElementBuilder>(\n    'element-builder',\n    {\n      byDefault: bootstrapDefault(newElementBuilder),\n    },\n);\n\nfunction newElementBuilder(bsContext: BootstrapContext): ElementBuilder {\n\n  const definitionContextRegistry_global = bsContext.get(DefinitionContextRegistry);\n  const componentContextRegistry_global = bsContext.get(ComponentContextRegistry);\n  const definitions = new EventEmitter<[DefinitionContext_]>();\n  const components = new EventEmitter<[ComponentContext_]>();\n\n  return {\n    definitions,\n    components,\n    buildElement<T extends object>(componentType: ComponentClass<T>) {\n\n      const def = ComponentDef.of(componentType);\n      const onComponent = new EventEmitter<[ComponentContext_]>();\n      let componentContextRegistry_perType!: ComponentContextRegistry;\n      const ready = trackValue(false);\n      const whenReady: OnEvent<[]> = ready.read.thru(cls => cls ? nextArgs() : nextSkip());\n      let definitionContext: DefinitionContext;\n\n      function createComponentContextRegistry() {\n        return componentContextRegistry_global.append(componentContextRegistry_perType);\n      }\n\n      class ComponentFactory extends ComponentFactory_ < T > {\n\n        get componentType() {\n          return definitionContext.componentType;\n        }\n\n        get elementType() {\n          return definitionContext.elementType;\n        }\n\n        get elementDef() {\n          return definitionContext.elementDef;\n        }\n\n        mountTo(element: any): ComponentMount_<T> {\n          if (element[ComponentContext__symbol]) {\n            throw new Error(`Element ${element} already bound to component`);\n          }\n\n          const mount = createComponent({\n            definitionContext,\n            onComponent,\n            registry: createComponentContextRegistry(),\n            element,\n            elementSuper(key) {\n              return element[key];\n            },\n            createMount(context: ComponentContext_<T>) {\n\n              class ComponentMount extends ComponentMount_<T> {\n\n                get context() {\n                  return context;\n                }\n\n                get connected() {\n                  return elementStatus(element).it === ComponentStatus.On;\n                }\n\n                set connected(value: boolean) {\n                  elementStatus(element).it = value ? ComponentStatus.On : ComponentStatus.Off;\n                }\n\n                checkConnected(): boolean {\n\n                  const el: Element = element;\n                  const doc = el.ownerDocument;\n\n                  return this.connected = doc != null && doc.contains(el);\n                }\n\n              }\n\n              return new ComponentMount();\n            },\n          }).mount as ComponentMount_<T>;\n\n          mount.checkConnected();\n          componentCreated(mount.context);\n\n          return mount;\n        }\n\n      }\n\n      const componentFactory = new ComponentFactory();\n\n      class DefinitionContext extends DefinitionContext_<T> {\n\n        readonly get: ContextValues['get'];\n        readonly whenReady: OnEvent<[this]>;\n\n        get componentType() {\n          return componentType;\n        }\n\n        get onComponent() {\n          return onComponent.on;\n        }\n\n        get elementType(): Class {\n          throw new Error('Custom element class is not constructed yet. Consider to use a `whenReady()` callback');\n        }\n\n        constructor() {\n          super();\n          this.whenReady = whenReady.thru(() => this).once;\n\n          const definitionContextRegistry =\n              new DefinitionContextRegistry(definitionContextRegistry_global.seedIn(this));\n\n          definitionContextRegistry.provide({ a: DefinitionContext_, is: this });\n          definitionContextRegistry.provide({ a: ComponentFactory_, is: componentFactory });\n          this.get = definitionContextRegistry.newValues().get;\n          componentContextRegistry_perType = new ComponentContextRegistry(definitionContextRegistry.seedIn(this));\n\n          if (def.setup) {\n\n            const context = this;\n\n            def.setup({\n              get componentType() {\n                return componentType;\n              },\n              get whenReady() {\n                return context.whenReady;\n              },\n              perDefinition(spec) {\n                return definitionContextRegistry.provide(spec);\n              },\n              perComponent(spec) {\n                return componentContextRegistry_perType.provide(spec);\n              },\n            });\n          }\n        }\n\n        perComponent<Deps extends any[], Src, Seed>(\n            spec: ContextValueSpec<ComponentContext_<T>, any, Deps, Src, Seed>,\n        ): () => void {\n          return componentContextRegistry_perType.provide(spec);\n        }\n\n      }\n\n      definitionContext = new DefinitionContext();\n\n      if (def.define) {\n        def.define.call(componentType, definitionContext);\n      }\n      definitions.send(definitionContext);\n\n      const elementType = createElementType(definitionContext, onComponent, createComponentContextRegistry());\n\n      Object.defineProperty(definitionContext, 'elementType', {\n        configurable: true,\n        enumerable: true,\n        value: elementType,\n      });\n\n      ready.it = true;\n\n      return componentFactory;\n    },\n  };\n\n  function createElementType<T extends object>(\n      definitionContext: DefinitionContext_<T>,\n      onComponent: EventEmitter<[ComponentContext_<T>]>,\n      componentContextRegistry: ComponentContextRegistry,\n  ) {\n\n    const elementDef = definitionContext.get(ElementDef);\n\n    class Element extends elementDef.extend.type {\n\n      // Component context reference\n      [ComponentContext__symbol]: ComponentContext_<T>;\n\n      constructor() {\n        super();\n\n        const context = createComponent({\n          definitionContext,\n          onComponent,\n          registry: componentContextRegistry,\n          element: this,\n          createMount: noop,\n          elementSuper: (key) => {\n            // @ts-ignore\n            return super[key] as any;\n          },\n        });\n\n        componentCreated(context);\n      }\n\n      // noinspection JSUnusedGlobalSymbols\n      connectedCallback() {\n        elementStatus(this).it = ComponentStatus.On;\n      }\n\n      // noinspection JSUnusedGlobalSymbols\n      disconnectedCallback() {\n        elementStatus(this).it = ComponentStatus.Off;\n      }\n\n    }\n\n    return Element;\n  }\n\n  function createComponent<T extends object>(\n      {\n        definitionContext,\n        onComponent,\n        registry,\n        element,\n        createMount,\n        elementSuper,\n      }: {\n        definitionContext: DefinitionContext_<T>;\n        onComponent: EventEmitter<[ComponentContext_<T>]>;\n        registry: ComponentContextRegistry;\n        element: any;\n        elementSuper(name: PropertyKey): any;\n        createMount(context: ComponentContext_<T>): ComponentMount_<T> | undefined;\n      },\n  ): ComponentContext_<T> {\n\n    const status = trackValue<ComponentStatus>(ComponentStatus.Building);\n    const destructionReason = trackValue<[any] | undefined>();\n\n    status.on(noop).whenOff(reason => destructionReason.it = [reason]);\n\n    const destroyed: OnEvent<[any]> = destructionReason.read.thru(reason => reason ? nextArgs(reason[0]) : nextSkip());\n    const whenDestroyed: OnEvent<[any]> = destroyed.once;\n\n    const whenOff: OnEvent<[]> = status.read.thru(sts => sts === ComponentStatus.Off ? nextArgs() : nextSkip());\n    const whenOn: OnEvent<[EventSupply]> = status.read.thru(\n        sts => {\n          if (sts !== ComponentStatus.On) {\n            return nextSkip();\n          }\n\n          const offSupply = eventSupply();\n\n          whenOff.once(() => offSupply.off());\n\n          return nextArgs(offSupply);\n        },\n    );\n\n    let mount: ComponentMount_<T> | undefined;\n    const values = registry.newValues();\n\n    class ComponentContext extends ComponentContext_<T> {\n\n      readonly get = values.get;\n      readonly elementSuper = elementSuper;\n      readonly whenReady: OnEvent<[this]>;\n\n      constructor() {\n        super();\n\n        const whenReady: OnEvent<[this]> = status.read.thru(sts => sts ? nextArgs(this) : nextSkip());\n\n        this.whenReady = whenReady.once;\n      }\n\n      get componentType() {\n        return definitionContext.componentType;\n      }\n\n      get element() {\n        return element;\n      }\n\n      get component(): T {\n        throw new Error('The component is not constructed yet. Consider to use a `whenReady()` callback');\n      }\n\n      get mount(): ComponentMount_<T> | undefined {\n        return mount || (mount = createMount(this));\n      }\n\n      get connected(): boolean {\n        return status.it === ComponentStatus.On;\n      }\n\n      get whenOn(): OnEvent<[EventSupply]> {\n        return whenOn;\n      }\n\n      get whenOff(): OnEvent<[]> {\n        return whenOff;\n      }\n\n      get whenDestroyed() {\n        return whenDestroyed;\n      }\n\n      destroy(reason?: any): void {\n        status.done(reason);\n      }\n\n    }\n\n    const context = new ComponentContext();\n\n    context.whenDestroyed(() => removeElement(context));\n    registry.provide({ a: ComponentContext_, is: context });\n\n    augmentElement();\n\n    components.send(context);\n    onComponent.send(context);\n\n    const component = newComponent(definitionContext.componentType, context);\n\n    Object.defineProperty(context, 'component', {\n      configurable: true,\n      enumerable: true,\n      value: component,\n    });\n\n    status.it = ComponentStatus.Ready;\n\n    return context;\n\n    function augmentElement() {\n      Object.defineProperty(element, ComponentContext__symbol, { value: context });\n      Object.defineProperty(element, ComponentStatus__symbol, { writable: true, value: status });\n    }\n  }\n\n}\n\n/**\n * Creates new component of the given type.\n *\n * It makes component context available under `[ComponentContext__symbol]` key in constructed component.\n * The component context is also available inside component constructor by temporarily assigning it to component\n * prototype.\n *\n * @typeparam T  A type of component.\n * @param type  Component class constructor.\n * @param context  Target component context.\n */\nfunction newComponent<T extends object>(type: ComponentClass<T>, context: ComponentContext_<T>): T {\n\n  const proto = type.prototype as any;\n  const prevContext = proto[ComponentContext__symbol];\n\n  proto[ComponentContext__symbol] = context;\n  try {\n\n    const component = new type(context);\n\n    Object.defineProperty(component, ComponentContext__symbol, { value: context });\n\n    return component;\n  } finally {\n    proto[ComponentContext__symbol] = prevContext;\n  }\n}\n\nconst enum ComponentStatus {\n  Building,\n  Ready,\n  Off,\n  On,\n}\n\nconst ComponentStatus__symbol = /*#__PURE__*/ Symbol('component-status');\n\nfunction elementStatus(element: any): ValueTracker<ComponentStatus> {\n  return element[ComponentStatus__symbol];\n}\n\nfunction componentCreated(context: ComponentContext_) {\n  context.dispatchEvent(new ComponentEvent('wesib:component', { bubbles: true }));\n}\n\nfunction removeElement(context: ComponentContext_) {\n\n  const { element, mount } = context;\n\n  if (mount) {\n    mount.connected = false; // Disconnect mounted element\n  }\n\n  const parentNode: Element = element.parentElement;\n\n  if (parentNode) {\n    parentNode.removeChild(element);\n  }\n}\n","import { itsEach, overArray } from 'a-iterable';\nimport { noop, valueProvider } from 'call-thru';\nimport { EventSupply, eventSupply } from 'fun-events';\n\n/**\n * @internal\n */\nexport interface Unloader {\n  readonly supply: EventSupply;\n  add(adder: () => () => void): () => void;\n}\n\nconst doNotAdd = valueProvider(noop);\n\n/**\n * @internal\n */\nexport function newUnloader(): Unloader {\n\n  const unloads: (() => void)[] = [];\n  let add = (adder: () => () => void) => {\n\n    const unload = adder();\n\n    unloads.push(unload);\n\n    return unload;\n  };\n  const supply = eventSupply(() => {\n    add = doNotAdd;\n    itsEach(\n        overArray(unloads).reverse(),\n        unload => unload(),\n    );\n    unloads.length = 0;\n  });\n\n  return {\n    supply,\n    add(adder) {\n      return add(adder);\n    },\n  };\n}\n","import { ElementBuilder } from '../../boot/impl';\nimport { ComponentFactory__symbol } from '../../boot/impl/component-factory.symbol.impl';\nimport { ComponentClass, CustomElements } from '../../component/definition';\nimport { FeatureContext } from '../feature-context';\n\n/**\n * @internal\n */\nexport class ComponentRegistry {\n\n  private _definitionQueue: (() => void)[] = [];\n\n  constructor(private readonly _context: FeatureContext) {\n    _context.whenReady(() => {\n      this._definitionQueue.forEach(definition => definition());\n      delete this._definitionQueue;\n    });\n  }\n\n  get customElements(): CustomElements {\n    return this._context.get(CustomElements);\n  }\n\n  define<T extends object>(componentType: ComponentClass<T>) {\n    this._definitionQueue.push(() => {\n\n      const elementBuilder = this._context.get(ElementBuilder);\n      const factory = elementBuilder.buildElement(componentType);\n\n      (componentType as any)[ComponentFactory__symbol] = factory;\n\n      this.customElements.define(componentType, factory.elementType);\n    });\n  }\n\n}\n","import { nextArgs, nextSkip } from 'call-thru';\nimport { OnEvent, onEventBy, trackValue } from 'fun-events';\nimport { Unloader } from '../../boot/impl';\nimport { ComponentDef } from '../../component';\nimport { ComponentClass, DefinitionSetup } from '../../component/definition';\n\n/**\n * @internal\n */\nexport function onFeaturedDefSetup(\n    componentType: ComponentClass,\n    unloader: Unloader,\n): OnEvent<[DefinitionSetup]> {\n\n  const onSetup = featuredDefSetup(componentType);\n\n  return onEventBy(receiver => {\n    onSetup({\n      supply: receiver.supply.needs(unloader.supply),\n      receive(ctx, setup) {\n\n        const whenReady = setup.whenReady.tillOff(unloader.supply);\n\n        receiver.receive(ctx, {\n          get componentType() {\n            return setup.componentType;\n          },\n          get whenReady() {\n            return whenReady;\n          },\n          perDefinition(spec) {\n            return unloader.add(() => setup.perDefinition(spec));\n          },\n          perComponent(spec) {\n            return unloader.add(() => setup.perComponent(spec));\n          },\n        });\n      },\n    });\n  });\n\n}\n\nconst FeaturedDefSetup__symbol = /*#__PURE__*/ Symbol('featured-def-setup');\n\nfunction featuredDefSetup(componentType: ComponentClass): OnEvent<[DefinitionSetup]> {\n  if (componentType.hasOwnProperty(FeaturedDefSetup__symbol)) {\n    return (componentType as any)[FeaturedDefSetup__symbol];\n  }\n\n  const tracker = trackValue<DefinitionSetup>();\n  const onSetup: OnEvent<[DefinitionSetup]> = tracker.read.thru(setup => setup ? nextArgs(setup) : nextSkip());\n\n  Object.defineProperty(componentType, FeaturedDefSetup__symbol, { value: onSetup });\n  ComponentDef.define(componentType, {\n    setup(setup) {\n      tracker.it = setup;\n    },\n  });\n\n  return onSetup;\n}\n","import { filterIt, mapIt } from 'a-iterable';\nimport { isPresent, NextArgs, nextArgs, NextSkip, nextSkip } from 'call-thru';\nimport { ContextRegistry, ContextUpKey, ContextValueOpts, ContextValues, ContextValueSpec } from 'context-values';\nimport {\n  afterAll,\n  afterEach,\n  AfterEvent,\n  afterEventBy,\n  afterThe,\n  EventKeeper,\n  EventSupply,\n  OnEvent,\n  trackValue,\n} from 'fun-events';\nimport { BootstrapContext } from '../../boot';\nimport {\n  BootstrapContextRegistry,\n  ComponentContextRegistry,\n  DefinitionContextRegistry,\n  ElementBuilder,\n  newUnloader,\n} from '../../boot/impl';\nimport { ArraySet, Class } from '../../common';\nimport { ComponentContext } from '../../component';\nimport { ComponentClass, DefinitionContext, DefinitionSetup } from '../../component/definition';\nimport { FeatureContext } from '../feature-context';\nimport { ComponentRegistry } from './component-registry.impl';\nimport { FeatureClause, FeatureRequest } from './feature-request.impl';\nimport { onFeaturedDefSetup } from './on-featured-def-setup.impl';\n\nconst FeatureKey__symbol = /*#__PURE__*/ Symbol('feature-key');\n\n/**\n * @internal\n */\nexport class FeatureKey extends ContextUpKey<AfterEvent<[FeatureLoader?]>, FeatureClause> {\n\n  static of(feature: Class): FeatureKey {\n\n    const feat = feature as any;\n\n    return feat[FeatureKey__symbol] || (feat[FeatureKey__symbol] = new FeatureKey(feature));\n  }\n\n  private constructor(feature: Class) {\n    super(`feature:${feature.name}`);\n  }\n\n  grow<Ctx extends ContextValues>(\n      opts: ContextValueOpts<\n          Ctx,\n          AfterEvent<[FeatureLoader?]>,\n          EventKeeper<FeatureClause[]> | FeatureClause,\n          AfterEvent<FeatureClause[]>>,\n  ): AfterEvent<[FeatureLoader?]> | null | undefined {\n    return loadFeature(\n        opts.context.get(BootstrapContext),\n        opts.seed.keep.thru(preferredFeatureClause),\n    );\n  }\n\n}\n\nfunction preferredFeatureClause(...clauses: FeatureClause[]): FeatureClause | undefined {\n\n  let required = false;\n  let preferred: FeatureClause | undefined;\n\n  for (const clause of clauses) {\n    switch (clause[1]) {\n      case 'is':\n        required = true;\n        if (!preferred) {\n          preferred = clause;\n        }\n        break;\n      case 'has':\n        preferred = clause;\n        break;\n      case 'needs':\n        required = true;\n    }\n  }\n\n  return required ? preferred : undefined;\n}\n\nfunction loadFeature(\n    bsContext: BootstrapContext,\n    from: AfterEvent<[FeatureClause?]>,\n): AfterEvent<[FeatureLoader?]> {\n  return afterEventBy<[FeatureLoader?]>(receiver => {\n\n    let origin: Class | undefined;\n    let source: OnEvent<[FeatureLoader?]> = afterThe();\n    let stageId: Promise<FeatureStageId> = Promise.resolve('idle');\n\n    return afterAll({\n      clause: from,\n      deps: loadFeatureDeps(bsContext, from),\n    }).dig_(({ clause: [clause], deps }) => {\n      if (!clause) {\n        return afterThe();\n      }\n\n      const [request, , target] = clause;\n\n      if (request.feature === origin) {\n        return source; // Origin didn't change. Reuse the source.\n      }\n\n      origin = request.feature;\n\n      if (target !== origin) {\n        // Originated from replacement feature provider. Reuse its loader.\n        return source = bsContext.get(FeatureKey.of(origin)).thru_(\n            loader => {\n              loader!.to(stageId);\n              stageId = loader!.stage;\n              return loader;\n            },\n        );\n      }\n\n      // Create feature's own loader\n      const ownLoader = new FeatureLoader(bsContext, request, deps).to(stageId);\n      const ownSource = afterThe(ownLoader);\n\n      return source = afterEventBy<[FeatureLoader]>(\n          rcv => ownSource(rcv).whenOff(() => {\n            stageId = ownLoader.unload();\n          }),\n      ).share(); // Can be accessed again when reused\n    })(receiver);\n  }).keep.thru(\n      preventDuplicateLoader(),\n  );\n}\n\nfunction preventDuplicateLoader():\n    <NextReturn>(\n        loader?: FeatureLoader,\n    ) => NextArgs<[FeatureLoader?], NextReturn> | NextSkip<[FeatureLoader?], NextReturn> {\n\n  let lastLoader: FeatureLoader | null | undefined = null; // Initially `null` to differ from `undefined`\n\n  return <NextReturn>(loader?: FeatureLoader) => {\n    if (lastLoader === loader) {\n      return nextSkip();\n    }\n    lastLoader = loader;\n\n    if (!loader) {\n      return nextArgs<[FeatureLoader?], NextReturn>();\n    }\n\n    return nextArgs<[FeatureLoader?], NextReturn>(loader);\n  };\n}\n\nfunction loadFeatureDeps(\n    bsContext: BootstrapContext,\n    from: AfterEvent<[FeatureClause?]>,\n): AfterEvent<FeatureLoader[]> {\n  return from.keep.dig_(clause => {\n    if (!clause) {\n      return afterThe();\n    }\n\n    const [{ def }] = clause;\n    const needs = new ArraySet(def.needs);\n\n    if (!needs.size) {\n      return afterThe();\n    }\n\n    return afterEach(...needs.map(dep => bsContext.get(FeatureKey.of(dep))))\n        .keep.thru_(presentFeatureDeps);\n  });\n}\n\nfunction presentFeatureDeps<NextReturn>(...deps: [FeatureLoader?][]): NextArgs<FeatureLoader[], NextReturn> {\n  return nextArgs<FeatureLoader[], NextReturn>(\n      ...filterIt<FeatureLoader | undefined, FeatureLoader>(\n          mapIt(deps, dep => dep[0]),\n          isPresent,\n      ),\n  );\n}\n\n/**\n * @internal\n */\nexport class FeatureLoader {\n\n  readonly down: Promise<void>;\n  private _stage: Promise<FeatureStage>;\n  private _down!: () => void;\n  readonly state = trackValue(false);\n\n  constructor(\n      readonly bsContext: BootstrapContext,\n      readonly request: FeatureRequest,\n      readonly deps: FeatureLoader[],\n  ) {\n    this.down = new Promise(resolve => this._down = resolve);\n    this._stage = Promise.resolve(new SetupFeatureStage(this));\n  }\n\n  get stage(): Promise<FeatureStageId> {\n    return this._stage.then(stage => stage.after);\n  }\n\n  get ready(): boolean {\n    return this.state.it;\n  }\n\n  to(stageId: Promise<FeatureStageId>): this {\n\n    const lastStage = this._stage;\n\n    this._stage = stageId.then(id => lastStage.then(stage => stage[id]()));\n\n    return this;\n  }\n\n  async setup(): Promise<void> {\n    await (this._stage = this._stage.then(stage => stage.setup()));\n  }\n\n  async init(): Promise<void> {\n    await (this._stage = this._stage.then(stage => stage.init()));\n  }\n\n  async unload(): Promise<FeatureStageId> {\n\n    const prevStage = this._stage;\n\n    delete this._stage; // Unloaded feature should never be accessed again.\n\n    const stage = await prevStage;\n    const stageId = await stage.stop();\n\n    this._down();\n\n    return stageId;\n  }\n\n}\n\ntype FeatureStageId = 'idle' | 'setup' | 'init';\ntype FeatureStageStop = (this: void) => Promise<any>;\n\nabstract class FeatureStage {\n\n  abstract readonly after: FeatureStageId;\n\n  constructor(\n      readonly loader: FeatureLoader,\n      private readonly _stop: FeatureStageStop = () => Promise.resolve(),\n  ) {}\n\n  async idle(): Promise<this> {\n    return this;\n  }\n\n  abstract setup(): Promise<FeatureStage>;\n\n  abstract init(): Promise<FeatureStage>;\n\n  stop(): Promise<FeatureStageId> {\n    return this._stop().then(() => this.after);\n  }\n\n  protected perDep(action: (dep: FeatureLoader) => Promise<void>): Promise<any> {\n\n    const { deps } = this.loader;\n\n    return Promise.all(deps.map(dep => action(dep)));\n  }\n\n}\n\nclass SetupFeatureStage extends FeatureStage {\n\n  get after() {\n    return 'idle' as const;\n  }\n\n  async setup(): Promise<FeatureStage> {\n    await this.perDep(loader => loader.setup());\n\n    const { bsContext, request: { feature, def: { setup } } } = this.loader;\n    const [context, supply] = newFeatureContext(bsContext, this.loader);\n\n    if (setup) {\n      setup.call(feature, context);\n    }\n\n    return new InitFeatureStage(\n        this.loader,\n        context,\n        async () => supply.off(),\n    );\n  }\n\n  init(): Promise<FeatureStage> {\n    return this.setup().then(stage => stage.init());\n  }\n\n}\n\nclass InitFeatureStage extends FeatureStage {\n\n  get after() {\n    return 'setup' as const;\n  }\n\n  constructor(\n      state: FeatureLoader,\n      private readonly _context: FeatureContext,\n      stop: FeatureStageStop,\n  ) {\n    super(state, stop);\n  }\n\n  async setup(): Promise<FeatureStage> {\n    return this;\n  }\n\n  async init(): Promise<FeatureStage> {\n    await this.perDep(loader => loader.init());\n\n    const { request: { feature, def: { init } } } = this.loader;\n\n    if (init) {\n      init.call(feature, this._context);\n    }\n\n    return new ActiveFeatureStage(this);\n  }\n\n}\n\nclass ActiveFeatureStage extends FeatureStage {\n\n  get after() {\n    return 'init' as const;\n  }\n\n  constructor(prev: InitFeatureStage) {\n    super(prev.loader, () => prev.stop());\n    prev.loader.state.it = true;\n  }\n\n  async setup(): Promise<FeatureStage> {\n    return this;\n  }\n\n  async init(): Promise<FeatureStage> {\n    return this;\n  }\n\n}\n\nfunction newFeatureContext(\n    bsContext: BootstrapContext,\n    loader: FeatureLoader,\n): [FeatureContext, EventSupply] {\n\n  const unloader = newUnloader();\n  let componentRegistry: ComponentRegistry;\n  const definitionContextRegistry = bsContext.get(DefinitionContextRegistry);\n  const componentContextRegistry = bsContext.get(ComponentContextRegistry);\n  const registry = new ContextRegistry<FeatureContext>(bsContext);\n  const elementBuilder = bsContext.get(ElementBuilder);\n  const onDefinition = elementBuilder.definitions.on.tillOff(unloader.supply);\n  const onComponent = elementBuilder.components.on.tillOff(unloader.supply);\n\n  class Context extends FeatureContext {\n\n    readonly get = registry.newValues().get;\n    readonly whenReady: OnEvent<[FeatureContext]>;\n\n    constructor() {\n      super();\n\n      const whenReady: OnEvent<[FeatureContext]> = afterAll({\n        st: loader.state,\n        bs: trackValue<BootstrapContext>().by(bsContext.whenReady),\n      }).thru(\n          ({ st: [ready], bs: [bs] }) => bs && ready ? nextArgs(this) : nextSkip(),\n      );\n\n      this.whenReady = whenReady.once;\n      registry.provide({ a: FeatureContext, is: this });\n      componentRegistry = new ComponentRegistry(this);\n    }\n\n    get onDefinition() {\n      return onDefinition;\n    }\n\n    get onComponent() {\n      return onComponent;\n    }\n\n    provide<Deps extends any[], Src, Seed>(\n        spec: ContextValueSpec<BootstrapContext, any, Deps, Src, Seed>,\n    ): () => void {\n      return unloader.add(() => bsContext.get(BootstrapContextRegistry).provide(spec));\n    }\n\n    perDefinition<Deps extends any[], Src, Seed>(\n        spec: ContextValueSpec<DefinitionContext, any, Deps, Src, Seed>,\n    ): () => void {\n      return unloader.add(() => definitionContextRegistry.provide(spec));\n    }\n\n    perComponent<Deps extends any[], Src, Seed>(\n        spec: ContextValueSpec<ComponentContext, any, Deps, Src, Seed>,\n    ): () => void {\n      return unloader.add(() => componentContextRegistry.provide(spec));\n    }\n\n    setupDefinition<T extends object>(componentType: ComponentClass<T>): OnEvent<[DefinitionSetup]> {\n      return onFeaturedDefSetup(componentType, unloader);\n    }\n\n    define<T extends object>(componentType: ComponentClass<T>): void {\n      componentRegistry.define(componentType);\n    }\n\n  }\n\n  return [new Context(), unloader.supply];\n}\n","import { ArraySet, Class, mergeFunctions } from '../../common';\nimport { FeatureDef } from '../feature-def';\nimport { FeatureNeedsError } from '../feature-needs-error';\nimport { FeatureKey } from './feature-loader.impl';\nimport { FeatureRequester } from './feature-requester.impl';\n\n/**\n * @internal\n */\nexport type FeatureClause = [FeatureRequest, 'is' | 'needs' | 'has', Class];\n\n/**\n * @internal\n */\nexport type FeatureNeedClause = [FeatureRequest, 'needs' | 'has', Class];\n\n/**\n * @internal\n */\nexport class FeatureRequest {\n\n  readonly def: FeatureDef;\n  private _uses = 0;\n\n  constructor(\n      private readonly _requester: FeatureRequester,\n      readonly feature: Class,\n      private _revoke: () => void,\n  ) {\n    this.def = FeatureDef.of(feature);\n  }\n\n  request(clauses: readonly FeatureNeedClause[]): this {\n\n    const requester = this._requester;\n    const { registry } = requester;\n    const isClause: FeatureClause = [this, 'is', this.feature];\n\n    this._revokeBy(registry.provide({\n      a: FeatureKey.of(this.feature),\n      is: isClause,\n    }));\n\n    new ArraySet(this.def.has).forEach(feature => {\n\n      const clause: FeatureNeedClause = [this, 'has', feature];\n\n      this._revokeBy(registry.provide({ a: FeatureKey.of(feature), is: clause }));\n\n      // Request the provided feature _after_ provider\n      const request = requester.request(feature, [...clauses, clause]);\n\n      this._revokeBy(() => request.unuse());\n    });\n\n    new ArraySet(this.def.needs).forEach(feature => {\n\n      const clause: FeatureNeedClause = [this, 'needs', feature];\n\n      const request = requester.request(feature, [...clauses, clause]);\n\n      this._revokeBy(() => request.unuse());\n      this._revokeBy(registry.provide({ a: FeatureKey.of(feature), is: clause }));\n    });\n\n    this._uses = 1;\n\n    return this;\n  }\n\n  reuse(clauses: readonly FeatureNeedClause[]): this {\n    if (!this._uses) {\n      throw new FeatureNeedsError(clauses.map(([{ feature }, reason, need]) => [feature, reason, need]));\n    }\n\n    ++this._uses;\n\n    return this;\n  }\n\n  unuse() {\n    if (!--this._uses) {\n      this._revoke();\n    }\n  }\n\n  private _revokeBy(revoke: () => void) {\n    this._revoke = mergeFunctions(revoke, this._revoke);\n  }\n\n}\n","import { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { BootstrapContext, bootstrapDefault } from '../../boot';\nimport { BootstrapContextRegistry } from '../../boot/impl';\nimport { Class } from '../../common';\nimport { FeatureNeedClause, FeatureRequest } from './feature-request.impl';\n\nconst FeatureRequester__key = /*#__PURE__*/ new SingleContextKey<FeatureRequester>(\n    'feature-requester',\n    {\n      byDefault: bootstrapDefault(context => new FeatureRequester(context)),\n    },\n);\n\n/**\n * @internal\n */\nexport class FeatureRequester {\n\n  static get [ContextKey__symbol](): ContextKey<FeatureRequester> {\n    return FeatureRequester__key;\n  }\n\n  readonly registry: BootstrapContextRegistry;\n  private readonly _map = new Map<Class, FeatureRequest>();\n\n  constructor(context: BootstrapContext) {\n    this.registry = context.get(BootstrapContextRegistry);\n  }\n\n  request(feature: Class, clauses: readonly FeatureNeedClause[] = []): FeatureRequest {\n\n    const existing = this._map.get(feature);\n\n    if (existing) {\n      return existing.reuse(clauses);\n    }\n\n    const request = new FeatureRequest(this, feature, () => this._map.delete(feature));\n\n    this._map.set(feature, request);\n\n    return request.request(clauses);\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { nextArgs, nextSkip } from 'call-thru';\nimport { AfterEvent, afterEventBy, OnEvent, trackValue } from 'fun-events';\nimport { newNamespaceAliaser } from 'namespace-aliaser';\nimport { Class } from '../../common';\nimport { ComponentClass, CustomElements } from '../../component/definition';\nimport { FeatureDef, FeatureRef, FeatureStatus } from '../../feature';\nimport { FeatureKey, FeatureLoader, FeatureRequester } from '../../feature/loader';\nimport { BootstrapContext } from '../bootstrap-context';\nimport { DefaultNamespaceAliaser } from '../globals';\nimport { BootstrapContextRegistry } from '../impl';\nimport { componentFactoryOf } from '../impl/component-factory.symbol.impl';\n\n/**\n * Bootstraps components.\n *\n * Note that both features and components can be passed as parameters to this function, as components are features too.\n *\n * @category Core\n * @param features  Features and components to enable.\n *\n * @returns Bootstrap context instance.\n */\nexport function bootstrapComponents(...features: Class[]): BootstrapContext {\n\n  const bootstrapContextRegistry = BootstrapContextRegistry.create();\n  const { bootstrapContext, complete } = initBootstrap(bootstrapContextRegistry);\n  const feature = features.length === 1 ? features[0] : bootstrapFeature(features);\n\n  bootstrapContext.get(FeatureRequester).request(feature);\n  bootstrapContext.get(FeatureKey.of(feature))(loader => {\n    loader!.init().then(complete);\n  });\n\n  return bootstrapContext;\n}\n\nfunction bootstrapFeature(needs: Class[]): Class {\n  return FeatureDef.define(class BootstrapFeature {}, { needs });\n}\n\nfunction initBootstrap(bootstrapContextRegistry: BootstrapContextRegistry) {\n\n  const stage = trackValue<BootstrapStage>(BootstrapStage.Init);\n  const values = bootstrapContextRegistry.values;\n\n  class Context extends BootstrapContext {\n\n    readonly get = values.get;\n    readonly whenReady: OnEvent<[BootstrapContext]>;\n\n    constructor() {\n      super();\n\n      const whenReady: OnEvent<[BootstrapContext]> = stage.read.thru(\n          s => s ? nextArgs(this) : nextSkip(),\n      );\n\n      this.whenReady = whenReady.once;\n      bootstrapContextRegistry.provide({ a: DefaultNamespaceAliaser, by: newNamespaceAliaser });\n      bootstrapContextRegistry.provide({ a: BootstrapContext, is: this });\n    }\n\n    async whenDefined<C extends object>(componentType: ComponentClass<C>) {\n      await new Promise(resolve => this.whenReady(resolve));\n      await this.get(CustomElements).whenDefined(componentType);\n      return componentFactoryOf(componentType);\n    }\n\n    load(feature: Class<any>): FeatureRef {\n\n      interface FeatureInfo {\n        status: FeatureStatus;\n        down?: Promise<void>;\n      }\n\n      const status = afterEventBy<[FeatureInfo]>(receiver => {\n\n        const request = bootstrapContext.get(FeatureRequester).request(feature);\n        const info = trackValue<FeatureInfo>({\n          status: {\n            feature,\n            ready: false,\n          },\n        });\n\n        this.get(FeatureKey.of(feature))({\n          supply: receiver.supply,\n          receive(_ctx, ldr) {\n\n            // Present until `request` revoked\n            // But that happens only when supply is cut off.\n            const loader = ldr as FeatureLoader;\n\n            info.it = {\n              status: {\n                feature: loader.request.feature,\n                ready: loader.ready,\n              },\n              down: loader.down,\n            };\n            if (!loader.ready) {\n              loader.init().then(() => {\n                info.it = {\n                  status: {\n                    feature: loader.request.feature,\n                    ready: true,\n                  },\n                  down: loader.down,\n                };\n              });\n            }\n          },\n        }).whenOff(() => {\n          request.unuse(); // Apply this callback _after_ registration complete,\n                           // to prevent receiver call.\n        });\n\n        info.read(receiver);\n      }).share();\n\n      let whenDown: Promise<void>;\n      const supply = status(({ down }) => whenDown = down!);\n      const read: AfterEvent<[FeatureStatus]> =\n          status.keep.thru(info => info.status).tillOff(supply);\n\n      class Ref extends FeatureRef {\n\n        get read() {\n          return read;\n        }\n\n        get down() {\n          return whenDown;\n        }\n\n        dismiss(reason?: any) {\n          supply.off(reason);\n          return whenDown;\n        }\n\n      }\n\n      return new Ref();\n    }\n\n  }\n\n  const bootstrapContext = new Context();\n\n  return {\n    bootstrapContext,\n    complete() {\n      stage.it = BootstrapStage.Ready;\n    },\n  };\n}\n\nconst enum BootstrapStage {\n  Init,\n  Ready,\n}\n","/**\n * @module @wesib/wesib\n */\n/**\n * A path to sub-state containing element an attributes.\n *\n * Thus, an attribute state path is always something like `[AttributePath__root, 'attribute-name']`.\n *\n * @category Feature\n */\nexport const AttributePath__root = /*#__PURE__*/ Symbol('attribute');\n\n/**\n * A path to the named attribute state.\n *\n * @category Feature\n */\nexport type AttributePath = readonly [keyof AttributePath__root_Keys, string];\n\n/**\n * Constructs a named attribute state path.\n *\n * @category Feature\n * @param name  Target attribute name.\n *\n * @return Attribute state path.\n */\nexport function attributePathTo(name: string): AttributePath {\n  return [AttributePath__root, name];\n}\n\n/**\n * @category Feature\n */\n// tslint:disable-next-line:class-name\nexport interface AttributePath__root_Keys {\n  [AttributePath__root]: true;\n}\n","/**\n * @module @wesib/wesib\n */\nimport { noop } from 'call-thru';\nimport { StatePath } from 'fun-events';\nimport { ComponentContext } from '../../component';\nimport { AttributeUpdateReceiver } from './attribute-def';\nimport { AttributePath, attributePathTo } from './attribute-path';\nimport { AttributeChangedCallback } from './attribute-registrar';\n\n/**\n * @internal\n */\nexport function attributeStateUpdate<T extends object>(\n    name: string,\n    updateState: boolean | AttributeUpdateReceiver<T> | StatePath = true): AttributeChangedCallback<T> {\n  if (updateState === false) {\n    return noop;\n  }\n  if (updateState === true || typeof updateState === 'function') {\n\n    const key = attributePathTo(name);\n    const update: AttributeUpdateReceiver<T> = updateState === true ? defaultUpdateState : updateState;\n\n    return function (this: T, newValue, oldValue) {\n      update.call(this, key, newValue, oldValue);\n    };\n  }\n  return function (this: T, newValue, oldValue) {\n    ComponentContext.of(this).updateState(updateState, newValue, oldValue);\n  };\n}\n\nfunction defaultUpdateState<T extends object>(\n    this: T,\n    path: AttributePath,\n    newValue: string,\n    oldValue: string | null) {\n  ComponentContext.of(this).updateState(path, newValue, oldValue);\n}\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\n\n/**\n * Custom element attribute change callback.\n *\n * This function is called whenever a new attribute value assigned.\n *\n * @category Feature\n * @typeparam T  A type of component.\n */\nexport type AttributeChangedCallback<T extends object = any> =\n/**\n * @param this  Component instance.\n * @param newValue  New attribute value.\n * @param oldValue  Previous attribute value, or `null` if there were no value assigned.\n */\n    (this: T, newValue: string, oldValue: string | null) => void;\n\n/**\n * @category Feature\n */\nexport type AttributeRegistrar<T extends object = any> = (name: string, callback: AttributeChangedCallback<T>) => void;\n\n/**\n * @category Feature\n */\nexport const AttributeRegistrar: SingleContextRef<AttributeRegistrar> =\n    /*#__PURE__*/ new SingleContextKey<AttributeRegistrar>('attribute-registrar');\n","import { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { BootstrapWindow } from '../../boot/globals';\nimport { Class, mergeFunctions } from '../../common';\nimport { ComponentContext, ComponentMount } from '../../component';\nimport { DefinitionContext } from '../../component/definition';\nimport { AttributeChangedCallback } from './attribute-registrar';\n\nconst AttributeRegistry__key = /*#__PURE__*/ new SingleContextKey<AttributeRegistry>('attribute-registry');\n\n/**\n * @internal\n */\nexport class AttributeRegistry<T extends object = any> {\n\n  static get [ContextKey__symbol](): ContextKey<AttributeRegistry> {\n    return AttributeRegistry__key;\n  }\n\n  private readonly _MutationObserver: typeof MutationObserver;\n  private readonly _attrs: { [name: string]: AttributeChangedCallback<T> } = {};\n\n  constructor(ctx: DefinitionContext) {\n    this._MutationObserver = ctx.get(BootstrapWindow).MutationObserver;\n  }\n\n  add(name: string, callback: AttributeChangedCallback<T>): void {\n    this._attrs[name] = mergeFunctions<[string, string | null], void, T>(this._attrs[name], callback);\n  }\n\n  define(elementType: Class) {\n\n    const attrs = this._attrs;\n    const observedAttributes = Object.keys(attrs);\n\n    if (!observedAttributes.length) {\n      return; // No attributes defined\n    }\n\n    Object.defineProperty(elementType, 'observedAttributes', {\n      configurable: true,\n      enumerable: true,\n      value: observedAttributes,\n    });\n    Object.defineProperty(elementType.prototype, 'attributeChangedCallback', {\n      configurable: true,\n      enumerable: true,\n      value: function (name: string, oldValue: string | null, newValue: string) {\n        (attrs[name] as any).call(ComponentContext.of(this).component, newValue, oldValue);\n      },\n    });\n  }\n\n  mount(mount: ComponentMount<T>) {\n\n    const element = mount.element;\n    const attrs = this._attrs;\n    const attributeFilter = Object.keys(attrs);\n\n    if (!attributeFilter.length) {\n      return; // No attributes defined\n    }\n\n    const observer = new this._MutationObserver(\n        records => records.forEach(\n            record => {\n\n              const attributeName = record.attributeName as string;\n\n              return (attrs[attributeName] as any).call(\n                  ComponentContext.of(element).component,\n                  element.getAttribute(attributeName),\n                  record.oldValue);\n            }));\n\n    observer.observe(element, {\n      attributes: true,\n      attributeFilter,\n      attributeOldValue: true,\n    });\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { FeatureDef, FeatureDef__symbol } from '../feature-def';\nimport { AttributeChangedCallback, AttributeRegistrar } from './attribute-registrar';\nimport { AttributeRegistry } from './attribute-registry.impl';\n\nconst AttributesSupport__feature: FeatureDef = {\n  setup(setup) {\n    setup.perDefinition({ as: AttributeRegistry });\n    setup.perDefinition({\n      a: AttributeRegistrar,\n      by(registry: AttributeRegistry) {\n        return <T extends object>(name: string, callback: AttributeChangedCallback<T>) =>\n            registry.add(name, callback);\n      },\n      with: [AttributeRegistry],\n    });\n    setup.onDefinition(definitionContext => {\n      // Define element prototype attributes\n      definitionContext.whenReady(({ elementType }) => definitionContext.get(AttributeRegistry).define(elementType));\n    });\n    setup.onComponent(componentContext => {\n\n      const mount = componentContext.mount;\n\n      if (mount) {\n        // Mount element attributes\n        componentContext.get(AttributeRegistry).mount(mount);\n      }\n    });\n  },\n};\n\n/**\n * A feature adding attributes to custom elements.\n *\n * This feature is enabled automatically whenever an `@Attribute`, `@Attributes`, or `@AttributeChanged` decorator\n * applied to component.\n *\n * @category Feature\n */\nexport class AttributesSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return AttributesSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { TypedPropertyDecorator } from '../../common';\nimport { ComponentContext, ComponentDef } from '../../component';\nimport { ComponentClass } from '../../component/definition';\nimport { FeatureDef } from '../feature-def';\nimport { AttributeDef } from './attribute-def';\nimport { parseAttributeDef } from './attribute-def.impl';\nimport { AttributeRegistrar } from './attribute-registrar';\nimport { AttributesSupport } from './attributes-support.feature';\n\n/**\n * Creates a decorator for component's property that accesses custom element's attribute.\n *\n * The decorated property accesses corresponding attribute on read, and updates it on setting.\n *\n * This decorator automatically enables [[AttributesSupport]] feature.\n *\n * @category Feature\n * @typeparam T  A type of decorated component class.\n * @param def  Attribute definition or just an attribute name.\n *\n * @return Component property decorator.\n */\nexport function Attribute<T extends ComponentClass>(\n    def?: AttributeDef<InstanceType<T>> | string,\n): TypedPropertyDecorator<T> {\n  return <V>(target: InstanceType<T>, propertyKey: string | symbol, descriptor?: TypedPropertyDescriptor<V>) => {\n\n    const { name, updateState } = parseAttributeDef(target, propertyKey, def);\n    const componentType = target.constructor as T;\n\n    FeatureDef.define(componentType, { needs: AttributesSupport });\n    ComponentDef.define(\n        componentType,\n        {\n          define(definitionContext) {\n            definitionContext.get(AttributeRegistrar)(name, updateState);\n          },\n        });\n\n    const newDesc: TypedPropertyDescriptor<string | null> = {\n      get(this: InstanceType<T>): string | null {\n        return ComponentContext.of(this).element.getAttribute(name);\n      },\n      set(this: InstanceType<T>, newValue: string | null) {\n        ComponentContext.of(this).element.setAttribute(name, newValue as string);\n      },\n    };\n\n    if (descriptor == null) {\n      // Annotated field\n      Object.defineProperty(target, propertyKey, newDesc);\n      return;\n    }\n\n    return newDesc;\n  };\n}\n","import { ComponentClass } from '../../component/definition';\nimport { AttributeDef } from './attribute-def';\nimport { AttributeChangedCallback } from './attribute-registrar';\nimport { attributeStateUpdate } from './attribute-state-update.impl';\n\n/**\n * @internal\n */\nexport function parseAttributeDef<T extends ComponentClass>(\n    target: InstanceType<T>,\n    propertyKey: string | symbol,\n    opts?: AttributeDef<InstanceType<T>> | string) {\n\n  let name: string;\n  let updateState: AttributeChangedCallback<InstanceType<T>>;\n\n  if (typeof opts === 'string') {\n    name = opts;\n    updateState = attributeStateUpdate(name);\n  } else {\n    if (opts && opts.name) {\n      name = opts.name;\n    } else if (typeof propertyKey !== 'string') {\n      throw new TypeError(\n          'Attribute name is required, as property key is not a string: ' +\n          `${target.constructor.name}.${propertyKey.toString()}`);\n    } else {\n      name = propertyKey;\n    }\n\n    updateState = attributeStateUpdate(name, opts && opts.updateState);\n  }\n\n  return { name, updateState };\n}\n","/**\n * @module @wesib/wesib\n */\n/**\n * A path to sub-state containing DOM properties.\n *\n * Thus a property state path is always something like `[DomPropertyPath__root, 'property-name']`.\n *\n * @category Feature\n */\nexport const DomPropertyPath__root = /*#__PURE__*/ Symbol('dom-property');\n\n/**\n * A path to the named DOM property state.\n *\n * @category Feature\n */\nexport type DomPropertyPath<K extends PropertyKey = PropertyKey> = readonly [keyof DomPropertyPath__root_Keys, K];\n\n/**\n * Constructs a named DOM property state path.\n *\n * @category Feature\n * @param key  Target property key.\n *\n * @return DOM property state path.\n */\nexport function domPropertyPathTo<K extends PropertyKey = PropertyKey>(key: K): DomPropertyPath<K> {\n  return [DomPropertyPath__root, key];\n}\n\n/**\n * @category Feature\n */\n// tslint:disable-next-line:class-name\nexport interface DomPropertyPath__root_Keys {\n  [DomPropertyPath__root]: true;\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { StateTracker } from 'fun-events';\n\nconst ComponentState__key = /*#__PURE__*/ new SingleContextKey<ComponentState>('component-state');\n\n/**\n * Component state tracker.\n *\n * @category Feature\n */\nexport class ComponentState extends StateTracker {\n\n  static get [ContextKey__symbol](): ContextKey<ComponentState> {\n    return ComponentState__key;\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ComponentContext, StateUpdater } from '../../component';\nimport { FeatureDef, FeatureDef__symbol } from '../feature-def';\nimport { ComponentState } from './component-state';\n\nconst StateSupport__feature: FeatureDef = {\n  setup(setup) {\n    setup.perComponent({\n      a: ComponentState,\n      by(context: ComponentContext) {\n\n        const state = new ComponentState();\n\n        context.whenDestroyed(reason => state.done(reason));\n\n        return state;\n      },\n    });\n    setup.perComponent({\n      a: StateUpdater,\n      by(state: ComponentState) {\n        return state.update;\n      },\n      with: [ComponentState],\n    });\n  },\n};\n\n/**\n * Component state support feature.\n *\n * When enabled, it registers the following component context values:\n *\n * - [[StateUpdater]] that allows to update the component state, and\n * - [[ComponentState]] that allows to track component state changes.\n *\n * Other features would use this to notify when the state changes. E.g. [[DomPropertiesSupport]]\n * and [[AttributesSupport]] features issue state updates when needed.\n *\n * @category Feature\n */\nexport class StateSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return StateSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\n\nconst RenderScheduler__key = /*#__PURE__*/ new SingleContextKey<RenderScheduler>('render-scheduler');\n\n/**\n * Rendering scheduler.\n *\n * Schedules components rendering in order to make it less often. E.g. by utilizing `requestAnimationFrame()`.\n *\n * @category Feature\n */\nexport abstract class RenderScheduler {\n\n  /**\n   * A key of bootstrap, definition, or component context value containing [[RenderScheduler]] instance.\n   */\n  static get [ContextKey__symbol](): ContextKey<RenderScheduler> {\n    return RenderScheduler__key;\n  }\n\n  /**\n   * Creates new render schedule.\n   *\n   * @returns New render schedule instance.\n   */\n  abstract newSchedule(): RenderSchedule;\n\n}\n\n/**\n * Render schedule.\n *\n * @category Feature\n */\nexport interface RenderSchedule {\n\n  /**\n   * Schedules component rendering.\n   *\n   * Only the latest rendering request has affect. I.e. if multiple rendering have been scheduled then the rendering\n   * will be performed by the latest one.\n   *\n   * @param render  A rendering function.\n   */\n  schedule(render: (this: void) => void): void;\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ComponentContext } from '../../component';\nimport { ComponentState } from '../state';\nimport { RenderDef } from './render-def';\nimport { RenderScheduler } from './render-scheduler';\n\n/**\n * Component element render function interface.\n *\n * It has no arguments. It may return either nothing, or a function. In the latter case the returned function will be\n * called immediately to render the element. It may, in turn, return a render function, and so on.\n *\n * @category Feature\n */\nexport type ElementRender =\n/**\n * @returns Either delegated render, or nothing.\n */\n    (this: void) => void | ElementRender;\n\n/**\n * @category Feature\n */\nexport const ElementRender = {\n\n  /**\n   * Enables component element rendering.\n   *\n   * The `render` call will be scheduled by [[RenderScheduler]] once component state updated.\n   *\n   * @param context  Target component context.\n   * @param render  Element render function.\n   * @param def  Optional element render definition.\n   */\n  render(\n      context: ComponentContext,\n      render: ElementRender,\n      def: RenderDef = {},\n  ) {\n\n    const stateTracker = context.get(ComponentState);\n    const schedule = context.get(RenderScheduler).newSchedule();\n\n    const { offline } = def;\n    let rendered = false;\n    const stateSupply = stateTracker.onUpdate(() => {\n      if (offline || context.connected) {\n        scheduleRender();\n      } else {\n        rendered = false;\n      }\n    });\n\n    if (offline) {\n      scheduleRender();\n    } else {\n      context.whenOn(() => {\n        if (!rendered) {\n          scheduleRender();\n        }\n      }).whenOff(reason => {\n        stateSupply.off(reason);\n        rendered = true;\n      });\n    }\n\n    function scheduleRender() {\n      rendered = true;\n      schedule.schedule(renderElement);\n    }\n\n    function renderElement() {\n      for (;;) {\n\n        const newRender = render();\n\n        if (newRender === render || typeof newRender !== 'function') {\n          break;\n        }\n\n        render = newRender;\n      }\n    }\n  },\n\n};\n","/**\n * @module @wesib/wesib\n */\nimport { noop } from 'call-thru';\nimport { BootstrapWindow } from '../../boot/globals';\nimport { FeatureDef, FeatureDef__symbol } from '../feature-def';\nimport { RenderSchedule as RenderSchedule_, RenderScheduler as RenderScheduler_ } from './render-scheduler';\n\nconst RenderSupport__feature: FeatureDef = {\n  setup(setup) {\n    setup.provide({\n      a: RenderScheduler_,\n      by: createRenderScheduler,\n      with: [BootstrapWindow],\n    });\n  },\n};\n\n/**\n * Rendering support feature.\n *\n * This feature is automatically enabled when {@link Render @Render} decorator is used.\n *\n * @category Feature\n */\nexport class RenderSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return RenderSupport__feature;\n  }\n\n}\n\nfunction createRenderScheduler(window: BootstrapWindow) {\n\n  class RenderScheduler extends RenderScheduler_ {\n\n    newSchedule() {\n\n      let scheduled: () => void = noop;\n\n      class RenderSchedule implements RenderSchedule_ {\n\n        schedule(render: (this: void) => void): void {\n\n          const previouslyScheduled = scheduled;\n\n          scheduled = render;\n          if (previouslyScheduled === noop) {\n            window.requestAnimationFrame(() => {\n              scheduled();\n              scheduled = noop;\n            });\n          }\n        }\n\n      }\n\n      return new RenderSchedule();\n    }\n  }\n\n  return new RenderScheduler();\n}\n","/**\n * @module @wesib/wesib\n */\nimport { TypedPropertyDecorator } from '../../common';\nimport { ComponentDef } from '../../component';\nimport { ComponentClass } from '../../component/definition';\nimport { StateSupport } from '../state';\nimport { ElementRender } from './element-render';\nimport { RenderDef } from './render-def';\nimport { RenderSupport } from './render-support.feature';\n\n/**\n * Component property decorator that declares a rendering method for the component.\n *\n * The decorated method call will be scheduled by [[RenderScheduler]] once component state updated.\n *\n * The decorated method should have no arguments. It may return either nothing, or a function. In the latter case the\n * returned function will be called immediately to render the element. It may, in turn, return a renderer function,\n * and so on.\n *\n * This decorator automatically enables [[StateSupport]] and [[RenderSupport]] features.\n *\n * Utilizes [[ElementRender.render]] function to define rendering.\n *\n * @category Feature\n * @typeparam T  A type of decorated component class.\n * @param def  Non-mandatory render definition.\n *\n * @returns Component method decorator.\n */\nexport function Render<T extends ComponentClass>(def?: RenderDef): TypedPropertyDecorator<T> {\n  return (target: InstanceType<T>, propertyKey: string | symbol) => {\n\n    const componentType = target.constructor as T;\n\n    ComponentDef.define(\n        componentType,\n        {\n          define(defContext) {\n            defContext.onComponent(componentContext => {\n              componentContext.whenReady(() => {\n\n                const component = componentContext.component as any;\n                const render: () => any = component[propertyKey].bind(component);\n\n                ElementRender.render(componentContext, render, def);\n              });\n            });\n          },\n          feature: {\n            needs: [StateSupport, RenderSupport],\n          },\n        });\n  };\n}\n","/**\n * @module @wesib/wesib\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\n\n/**\n * Component shadow content root.\n *\n * @category Feature\n */\nexport type ShadowContentRoot = ShadowRoot;\n\n/**\n * A key of component context value containing a shadow content root instance.\n *\n * This is only available when the component is decorated with {@link AttachShadow @AttachShadow} decorator.\n *\n * @category Feature\n */\nexport const ShadowContentRoot: SingleContextRef<ShadowContentRoot> =\n    /*#__PURE__*/ new SingleContextKey<ShadowContentRoot>('shadow-content-root');\n","/**\n * @module @wesib/wesib\n */\n/**\n * An event related to element's shadow DOM.\n *\n * The following event types supported:\n * - `wesib:shadowAttached` is thrown when a shadow root is attached to element.\n *   In particular, it is thrown for components decorated with {@link AttachShadow @AttachShadow}.\n *   This event bubbles and is not cancelable.\n *\n * @category Feature\n */\nexport class ShadowDomEvent extends Event {\n\n  /**\n   * Constructs shadow DOM event.\n   *\n   * @param type  Event type.\n   * @param eventInitDict  Event initialization dictionary.\n   */\n  constructor(type: string, eventInitDict?: EventInit) {\n    super(type, eventInitDict);\n  }\n\n  /**\n   * Shadow root this event relates to.\n   */\n  get shadowRoot(): ShadowRoot {\n    return (this.target as Element).shadowRoot as ShadowRoot;\n  }\n\n}\n","/**\n * @module @wesib/wesib\n */\nimport { FnContextKey, FnContextRef } from 'context-values';\nimport { ComponentContext } from '../../component';\nimport { ShadowContentDef } from './shadow-content-def';\n\n/**\n * Shadow root builder function type.\n *\n * An instance of this function is available in component context and is used by {@link AttachShadow @AttachShadow}\n * decorator to attach shadow root to decorated component's custom element.\n *\n * By default, if shadow root already exists for the component's element, it uses it.\n *\n * Dispatches a `wesib:shadowAttached` event for the found or attached shadow root.\n *\n * @category Feature\n */\nexport type ShadowRootBuilder =\n/**\n * @param context  Target component context.\n * @param init  Shadow root initialization options.\n *\n * @returns A shadow root instance for target component, or `null`/`undefined` if one can not be attached.\n */\n    (context: ComponentContext<any>, init: ShadowContentDef) => ShadowRoot | null | undefined;\n\n/**\n * A key of component context value containing a shadow root builder instance.\n *\n * @category Feature\n */\nexport const ShadowRootBuilder: FnContextRef<Parameters<ShadowRootBuilder>, ReturnType<ShadowRootBuilder>> =\n    /*#__PURE__*/ new FnContextKey<Parameters<ShadowRootBuilder>, ReturnType<ShadowRootBuilder>>('shadow-root-builder');\n","/**\n * @module @wesib/wesib\n */\nimport { ComponentContext, ComponentContext__symbol } from '../../component';\nimport { FeatureDef, FeatureDef__symbol } from '../feature-def';\nimport { ShadowDomEvent } from './shadow-dom-event';\nimport { ShadowRootBuilder } from './shadow-root-builder';\n\nconst ShadowDomSupport__feature: FeatureDef = {\n  setup(setup) {\n    setup.provide({ a: ShadowRootBuilder, is: attachShadow });\n  },\n};\n\n/**\n * Shadow root support feature.\n *\n * This feature is automatically enabled when {@link AttachShadow @AttachShadow} decorator is used.\n *\n * @category Feature\n */\nexport class ShadowDomSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return ShadowDomSupport__feature;\n  }\n\n}\n\nfunction attachShadow(context: ComponentContext, init: ShadowRootInit): ShadowRoot | undefined {\n\n  const element = context.element;\n  const shadowRoot = shadowRootOf(element, init);\n\n  if (shadowRoot) {\n    (shadowRoot as any)[ComponentContext__symbol] = context;\n    context.dispatchEvent(new ShadowDomEvent('wesib:shadowAttached', { bubbles: true }));\n    return shadowRoot;\n  }\n\n  return;\n}\n\nfunction shadowRootOf(element: Element, init: ShadowRootInit): ShadowRoot | undefined {\n\n  const existing = element.shadowRoot;\n\n  if (existing) {\n    // Shadow root already attached. Using it.\n    return existing;\n  }\n  if ('attachShadow' in element) {\n    return element.attachShadow(init);\n  }\n\n  return; // Unable to attach shadow root.\n}\n","/**\n * @module @wesib/wesib\n */\nimport { ComponentContext, ComponentDef, ContentRoot } from '../../component';\nimport { ShadowContentRoot } from './shadow-content-root';\nimport { ShadowDomSupport } from './shadow-dom-support.feature';\nimport { ShadowRootBuilder } from './shadow-root-builder';\n\n/**\n * Shadow content root definition.\n *\n * This is a readonly component shadow root initialization options.\n *\n * @category Feature\n */\nexport type ShadowContentDef = Readonly<ShadowRootInit>;\n\nconst defaultShadowContentDef: ShadowContentDef = { mode: 'open' };\n\n/**\n * @category Feature\n */\nexport const ShadowContentDef = {\n\n  /**\n   * Creates component definition for the given shadow content root definition.\n   *\n   * The returned component definition enables [[ShadowDomSupport]] feature and attaches shadow content root to the\n   * component.\n   *\n   * @typeparam T  A type of component.\n   * @param def  Shadow content root definition. Uses `mode: 'open'` by default.\n   *\n   * @returns Component definition.\n   */\n  componentDef<T extends object>(def: ShadowContentDef = defaultShadowContentDef): ComponentDef<T> {\n    return {\n      setup(setup) {\n        setup.perComponent(\n            {\n              a: ShadowContentRoot,\n              by(ctx: ComponentContext<T>) {\n                return ctx.get(ShadowRootBuilder)(ctx, def);\n              },\n            },\n        );\n        setup.perComponent({ // Content root is an alias of shadow root when present.\n          a: ContentRoot,\n          by(context: ComponentContext<T>) {\n            return context.get(ShadowContentRoot, { or: null });\n          },\n        });\n      },\n      feature: { needs: ShadowDomSupport },\n    };\n  },\n\n};\n","/**\n * @module @wesib/wesib\n */\nimport { TypedClassDecorator } from '../../common';\nimport { ComponentDef } from '../../component';\nimport { ComponentClass } from '../../component/definition';\nimport { ShadowContentDef } from './shadow-content-def';\n\n/**\n * Component class decorator that attaches shadow root to decorated component instance.\n *\n * Applies component definition created by [[ShadowContentDef.componentDef]] function.\n *\n * @category Feature\n * @typeparam T  A type of decorated component class.\n * @param def  Shadow content root definition. Uses `mode: 'open'` by default.\n *\n * @return Component class decorator.\n */\nexport function AttachShadow<T extends ComponentClass = any>(\n    def?: ShadowContentDef,\n): TypedClassDecorator<T> {\n  return (type: T) => {\n    ComponentDef.define(\n        type,\n        ShadowContentDef.componentDef(def));\n  };\n}\n","import { ContextUpKey, ContextUpRef, ContextValueOpts, ContextValues } from 'context-values';\nimport { AfterEvent, EventKeeper, EventSender, OnEvent, onSupplied } from 'fun-events';\n\ntype FetchAgent<Res extends any[]> = (\n    this: void,\n    next: (this: void, request?: Request) => OnEvent<Res>,\n    request: Request,\n) => EventSender<Res>;\n\ntype CombinedFetchAgent<Res extends any[]> = (\n    this: void,\n    next: (this: void, request: Request) => OnEvent<Res>,\n    request: Request,\n) => OnEvent<Res>;\n\n/**\n * @internal\n */\nexport class FetchAgentKey<Res extends any[]>\n    extends ContextUpKey<CombinedFetchAgent<Res>, FetchAgent<Res>>\n    implements ContextUpRef<CombinedFetchAgent<Res>, FetchAgent<Res>, AfterEvent<FetchAgent<Res>[]>> {\n\n  constructor(name: string) {\n    super(name);\n  }\n\n  grow<Ctx extends ContextValues>(\n      opts: ContextValueOpts<\n          Ctx,\n          CombinedFetchAgent<Res>,\n          EventKeeper<FetchAgent<Res>[]> | FetchAgent<Res>,\n          AfterEvent<FetchAgent<Res>[]>>,\n  ): CombinedFetchAgent<Res> {\n\n    let agent!: CombinedFetchAgent<Res>;\n\n    opts.seed((...agents) => agent = combineFetchAgents(agents));\n\n    const fallback = opts.byDefault(() => (next, request) => agent(next, request));\n\n    return fallback || defaultFetchAgent;\n  }\n\n}\n\nfunction defaultFetchAgent<Res extends any[]>(\n    next: (this: void, request: Request) => OnEvent<Res>,\n    request: Request,\n): OnEvent<Res> {\n  return next(request);\n}\n\n/**\n * @internal\n */\nexport function combineFetchAgents<Res extends any[]>(agents: FetchAgent<Res>[]): CombinedFetchAgent<Res> {\n  return (next, request) => {\n\n    const fetch: (agentIdx: number, agentRequest: Request) => OnEvent<Res> = (agentIdx, agentRequest) => {\n\n      const agent = agents[agentIdx];\n\n      if (!agent) {\n        return next(agentRequest);\n      }\n\n      return onSupplied(\n          agent(\n              (nextRequest = agentRequest) => fetch(agentIdx + 1, nextRequest),\n              agentRequest,\n          ),\n      );\n    };\n\n    return fetch(0, request);\n  };\n}\n","/**\n * @module @wesib/generic\n */\nimport { ContextUpRef } from 'context-values';\nimport { EventSender, OnEvent } from 'fun-events';\nimport { FetchAgentKey } from './fetch-agent-key.impl';\n\n/**\n * HTTP fetch agent signature.\n *\n * The agent can be used to alter [[HttpFetch]] processing. For that it should be registered in appropriate context.\n *\n * All registered agents are organized into chain. The first agent in chain is called by [[HttpFetch]].\n */\nexport type HttpFetchAgent =\n/**\n * @param next  Either calls the next agent in chain, or actually fetches the data if this agent is the last one.\n * Accepts an optional `Request` parameter. The original request will be used instead when omitted.\n * @param request  HTTP request.\n *\n * @returns An `EventSender` of response object(s). It is returned either to preceding agent in chain, or as a result of\n * [[HttpFetch]] call.\n */\n    (\n        this: void,\n        next: (this: void, request?: Request) => OnEvent<[Response]>,\n        request: Request,\n    ) => EventSender<[Response]>;\n\nexport namespace HttpFetchAgent {\n\n  /**\n   * Combined HTTP fetch agent signature.\n   *\n   * This is what is available under [[HttpFetchAgent]] key.\n   */\n  export type Combined =\n  /**\n   * @param next  Either calls the next agent in chain, or actually fetches the data if this agent is the last one.\n   * Accepts `Request` parameter.\n   * @param request  HTTP request.\n   *\n   * @returns An `OnEvent` registrar of response object(s) receivers. It is returned as a result of [[HttpFetch]] call.\n   */\n      (\n          this: void,\n          next: (this: void, request: Request) => OnEvent<[Response]>,\n          request: Request,\n      ) => OnEvent<[Response]>;\n\n}\n\n/**\n * A key of context value containing an [[HttpFetchAgent]] instance.\n *\n * The agent returned combines all registered agents into one. If no agent registered it just performs the fetch.\n */\nexport const HttpFetchAgent: ContextUpRef<HttpFetchAgent.Combined, HttpFetchAgent> =\n    /*#__PURE__*/ new FetchAgentKey<[Response]>('http-fetch-agent');\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { DomEventDispatcher, EventEmitter, EventSupply, eventSupply, OnEvent, onEventBy } from 'fun-events';\nimport { HttpFetch } from './http-fetch';\nimport { HttpFetchAgent } from './http-fetch-agent';\n\nconst HttpFetchAborted = {};\n\n/**\n * @internal\n */\nexport function newHttpFetch(context: BootstrapContext): HttpFetch {\n\n  const window = context.get(BootstrapWindow);\n  const agent = context.get(HttpFetchAgent);\n\n  return (input, init) => agent(fetch, new Request(input, init));\n\n  function fetch(request: Request): OnEvent<[Response]> {\n    return onEventBy(receiver => {\n\n      const responseEmitter = new EventEmitter<[Response]>();\n      let supply: EventSupply;\n\n      if ('AbortController' in window) {\n\n        const abortController = new (window as any).AbortController();\n        const { signal } = abortController;\n\n        supply = eventSupply(reason => {\n          if (reason === HttpFetchAborted) {\n            abortController.abort();\n          }\n        });\n        receiver.supply.whenOff(() => supply.off(HttpFetchAborted)).needs(supply);\n        responseEmitter.on({\n          supply,\n          receive(ctx, response) {\n            receiver.receive(ctx, response);\n          },\n        });\n\n        const customSignal = request.signal;\n\n        if (customSignal) {\n          new DomEventDispatcher(customSignal).on('abort').once(() => abortController.abort());\n          if (customSignal.aborted) {\n            abortController.abort();\n          }\n        }\n\n        request = new Request(request, { signal });\n      } else {\n        supply = responseEmitter.on(receiver);\n      }\n\n      window.fetch(request)\n          .then(response => {\n            responseEmitter.send(response);\n            supply.off();\n          })\n          .catch(reason => supply.off(reason));\n    });\n  }\n}\n","/**\n * @module @wesib/generic\n */\nimport { bootstrapDefault } from '@wesib/wesib';\nimport { FnContextKey, FnContextRef } from 'context-values';\nimport { OnEvent } from 'fun-events';\nimport { newHttpFetch } from './http-fetch.impl';\n\n/**\n * HTTP fetch function signature.\n *\n * This is a function that wraps browser's\n * [fetch()](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch) function and provides\n * additional functionality. E.g. request interception.\n *\n * This function returns an `OnEvent` sender instead of a `Promise`. This allows to report multiple responses.\n * E.g. when the resource refresh requested and delivered. The request is sent whenever a receiver is registered\n * in this sender. When the fetch completes the response supply is cut off, and callbacks registered with its\n * `whenOff()` method are notified. When fetch fails for whatever reason, this reason is passed to these callbacks.\n * The fetch can be aborted by cutting off the response supply. I.e. by calling its `off()` method.\n *\n * An instance of [[HttpFetch]] is available from bootstrap context.\n */\nexport type HttpFetch =\n/**\n * @param input  The resource to fetch. This can either an URL string, or a `Request` object.\n * @param init  Custom settings to apply to the request.\n *\n * @returns An `OnEvent` sender of responses.\n */\n    (this: void, input: RequestInfo, init?: RequestInit) => OnEvent<[Response]>;\n\n/**\n * A key of bootstrap context value containing an [[HttpFetch]] instance.\n */\nexport const HttpFetch: FnContextRef<Parameters<HttpFetch>, ReturnType<HttpFetch>> =\n    /*#__PURE__*/ new FnContextKey<Parameters<HttpFetch>, ReturnType<HttpFetch>>(\n    'http-fetch',\n    {\n      byDefault: bootstrapDefault(newHttpFetch),\n    },\n);\n","/**\n * @module @wesib/generic\n */\nimport { Navigation } from './navigation';\nimport { Page } from './page';\n\n/**\n * Navigation event.\n */\nexport type NavigationEvent = LeavePageEvent | EnterPageEvent | StayOnPageEvent;\n\n/**\n * Navigation event type.\n */\nexport const enum NavigationEventType {\n\n  /**\n   * {@link EnterPageEvent Enter page event} type.\n   */\n  EnterPage = 'wesib:enterPage',\n\n  /**\n   * {@link LeavePageEvent Leave page event} type.\n   */\n  LeavePage = 'wesib:leavePage',\n\n  /**\n   * {@link StayOnPageEvent Stay on page event} type.\n   */\n  StayOnPage = 'wesib:stayOnPage',\n\n}\n\n/**\n * An event fired when navigation target reached by entering destination page.\n *\n * @event EnterPageEvent#wesib:enterPage\n */\nexport class EnterPageEvent extends Event {\n\n  /**\n   * When navigation event occurred.\n   *\n   * Can be one of:\n   * - `open` when opening a new page,\n   * - `replace` when replacing navigation history entry,\n   * - `enter` when entering new page by user action (e.g. hashchange event),\n   * - `return` when navigated to previously visited entry in navigation history.\n   */\n  readonly when: 'open' | 'replace' | 'enter' | 'return';\n\n  /**\n   * Entered page.\n   */\n  readonly to: Page;\n\n  /**\n   * Constructs enter page event.\n   *\n   * @param type  Event type.\n   * @param init  Initialization options.\n   */\n  constructor(type: string, init: EnterPageEventInit) {\n    super(type, { ...init, cancelable: false });\n    this.when = init.when;\n    this.to = init.to;\n  }\n\n}\n\n/**\n * {@link EnterPageEvent Enter page event} initialization options.\n */\nexport interface EnterPageEventInit extends Omit<EventInit, 'cancelable'> {\n\n  /**\n   * When navigation event occurred.\n   *\n   * Can be one of:\n   * - `open` when opening a new page,\n   * - `replace` when replacing navigation history entry,\n   * - `enter` when entering new page by user action (e.g. hashchange event),\n   * - `return` when navigated to previously visited entry in navigation history.\n   */\n  readonly when: 'open' | 'replace' | 'enter' | 'return';\n\n  /**\n   * Entered page.\n   */\n  readonly to: Page;\n\n}\n\n/**\n * An event fired right before leaving the page in order to navigate to another one.\n *\n * This event can be cancelled in order to prevent actual navigation or history update. The navigation is also\n * cancelled when another navigation initiated by one of the handlers of this event.\n *\n * @event LeavePageEvent#wesib:leavePage\n */\nexport class LeavePageEvent extends Event {\n\n  /**\n   * When navigation event occurred. Either `pre-open` when leaving a page to open a new one, or `pre-replace` when\n   * leaving a page to replace it with another history entry.\n   */\n  readonly when: 'pre-open' | 'pre-replace';\n\n  /**\n   * The page to leave.\n   */\n  readonly from: Page;\n\n  /**\n   * Navigation target page.\n   */\n  readonly to: Page;\n\n  /**\n   * Constructs leave page event.\n   *\n   * @param type  Event type.\n   * @param init  Initialization options.\n   */\n  constructor(type: string, init: LeavePageEventInit) {\n    super(type, { ...init, cancelable: true });\n    this.when = init.when;\n    this.from = init.from;\n    this.to = init.to;\n  }\n\n}\n\n/**\n * {@link LeavePageEvent Leave page event} initialization options.\n */\nexport interface LeavePageEventInit extends Omit<EventInit, 'cancelable'> {\n\n  /**\n   * When navigation event occurred. Either `pre-open` when leaving a page to open a new one, or `pre-replace` when\n   * leaving a page to replace it with another history entry.\n   */\n  readonly when: 'pre-open' | 'pre-replace';\n\n  /**\n   * The page to leave.\n   */\n  readonly from: Page;\n\n  /**\n   * Navigation target page.\n   */\n  readonly to: Page;\n\n}\n\n/**\n * An event fired when navigation cancelled or failed.\n *\n * @event StayOnPageEvent#wesib:stayOnPage\n */\nexport class StayOnPageEvent extends Event {\n\n  /**\n   * When navigation event occurred. Always `stay`.\n   */\n  get when(): 'stay' {\n    return 'stay';\n  }\n\n  /**\n   * The page to stay at.\n   */\n  readonly from: Page;\n\n  /**\n   * Navigation target.\n   */\n  readonly to: Navigation.URLTarget;\n\n  /**\n   * A reason of navigation failure. This is set when navigation failed due to some error.\n   */\n  readonly reason?: any;\n\n  /**\n   * Constructs stay on page event.\n   *\n   * @param type  Event type.\n   * @param init  Initialization options.\n   */\n  constructor(type: string, init: StayOnPageEventInit) {\n    super(type, { ...init, cancelable: true });\n    this.from = init.from;\n    this.to = init.to;\n    this.reason = init.reason;\n  }\n\n}\n\n/**\n * {@link StayOnPageEvent Stay on page event} initialization options.\n */\nexport interface StayOnPageEventInit extends Omit<EventInit, 'cancelable'> {\n\n  /**\n   * The page to stay at.\n   */\n  readonly from: Page;\n\n  /**\n   * Navigation target.\n   */\n  readonly to: Navigation.URLTarget;\n\n  /**\n   * A reason of navigation failure. This is set when navigation failed due to some error.\n   */\n  readonly reason?: any;\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport {\n  AfterEvent,\n  AfterEvent__symbol,\n  EventKeeper,\n  EventSender,\n  OnDomEvent,\n  OnEvent,\n  OnEvent__symbol,\n} from 'fun-events';\nimport { EnterPageEvent, LeavePageEvent, NavigationEvent, StayOnPageEvent } from './navigation.event';\nimport { Page } from './page';\nimport { PageParam } from './page-param';\n\nconst Navigation__key = /*#__PURE__*/ new SingleContextKey<Navigation>('navigation');\n\n/**\n * Browser navigation service.\n *\n * Expected to be used as a [History] and [Location] APIs replacement.\n *\n * Fires additional navigation events the browser does not support natively.\n *\n * Implements an `EventSender` interface by sending {@link NavigationEvent navigation events} to registered receivers.\n *\n * Implements an `EventKeeper` interface by sending current {@link Page page} to registered receivers.\n *\n * Available as bootstrap context value when [[NavigationSupport]] feature is enabled.\n *\n * [History]: https://developer.mozilla.org/en-US/docs/Web/API/History\n * [Location]: https://developer.mozilla.org/en-US/docs/Web/API/Location\n */\nexport abstract class Navigation implements EventSender<[NavigationEvent]>, EventKeeper<[Page]> {\n\n  static get [ContextKey__symbol](): ContextKey<Navigation> {\n    return Navigation__key;\n  }\n\n  /**\n   * The number of element in navigation history.\n   */\n  abstract readonly length: number;\n\n  /**\n   * An `OnDomEvent` registrar of enter page event receivers.\n   */\n  abstract readonly onEnter: OnDomEvent<EnterPageEvent>;\n\n  /**\n   * An `OnDomEvent` registrar of leave page event receivers.\n   *\n   * These receivers may cancel navigation by calling `preventDefault()` method of received event.\n   */\n  abstract readonly onLeave: OnDomEvent<LeavePageEvent>;\n\n  /**\n   * An `OnDomEvent` registrar of stay on page event receivers.\n   *\n   * These receivers are informed when navigation has been cancelled by one of leave page event receivers,\n   * navigation failed due to e.g. invalid URL, or when another navigation request initiated before the page left.\n   */\n  abstract readonly onStay: OnDomEvent<StayOnPageEvent>;\n\n  /**\n   * An `OnEvent` registrar of navigation events receivers.\n   *\n   * The `[OnEvent__symbol]` property is an alias of this one.\n   */\n  abstract readonly on: OnEvent<[NavigationEvent]>;\n\n  get [OnEvent__symbol](): OnEvent<[NavigationEvent]> {\n    return this.on;\n  }\n\n  /**\n   * An `AfterEvent` registrar of current page receivers.\n   *\n   * The `[AfterEvent__symbol]` property is an alias of this one.\n   */\n  abstract readonly read: AfterEvent<[Page]>;\n\n  get [AfterEvent__symbol](): AfterEvent<[Page]> {\n    return this.read;\n  }\n\n  /**\n   * Goes to the previous page in navigation history.\n   *\n   * Calling this method is the same as calling `go(-1)`.\n   */\n  back(): void {\n    this.go(-1);\n  }\n\n  /**\n   * Goes to the next page in navigation history.\n   *\n   * Calling this method is the same as calling `go(1)`.\n   */\n  forward(): void {\n    this.go(1);\n  }\n\n  /**\n   * Loads a page from navigation history, identified by its relative location to the current page.\n   *\n   * For example `-1` navigates to previous page, while `1` navigates to the next one. If you specify an out-of-bounds\n   * value (for instance, specifying -1 when there are no previously-visited pages in navigation history), this method\n   * silently has no effect.\n   *\n   * @param delta  Relative location in navigation history to navigate to. The absent value or value of `0` reloads\n   * the current page.\n   */\n  abstract go(delta?: number): void;\n\n  /**\n   * Reloads current page.\n   *\n   * Calling this method is the same as calling `go()`.\n   */\n  reload(): void {\n    this.go();\n  }\n\n  /**\n   * Opens a page by navigating to the given `target`.\n   *\n   * Appends an entry to navigation history.\n   *\n   * @param target  Either navigation target or URL to navigate to.\n   * @fires PreNavigateEvent#wesib:preNavigate  On window object prior to actually navigate.\n   * Then navigates to the `target`, unless the event cancelled.\n   * @fires NavigateEvent@wesib:navigate  On window object when navigation succeed.\n   *\n   * @returns A promise resolved to navigated page, or to `null` otherwise.\n   */\n  abstract open(target: Navigation.Target | string | URL): Promise<Page | null>;\n\n  /**\n   * Replaces current navigation history entry with the given `target`.\n   *\n   * @param target  Either navigation target or URL to replace current history entry with.\n   * @fires PreNavigateEvent#wesib:preNavigate  On window object prior to actually update the history.\n   * Then navigates to the `target`, unless the event cancelled.\n   * @fires NavigateEvent@wesib:navigate  On window object when history updated.\n   *\n   * @returns A promise resolved to navigated page, or to `null` otherwise.\n   */\n  abstract replace(target: Navigation.Target | string | URL): Promise<Page | null>;\n\n  /**\n   * Replaces current page URL with the given one.\n   *\n   * Does not alter current page state, and does not trigger any events.\n   *\n   * @param url  An URL to replace the\n   *\n   * @returns Current page with updated URL.\n   */\n  abstract update(url: string | URL): Page;\n\n  /**\n   * Creates parameterized navigation instance and assigns a page parameter to apply to target page.\n   *\n   * @typeparam T  Parameter value type.\n   * @typeparam I  Parameter input type.\n   * @param ref  A reference to page navigation parameter to apply.\n   * @param input  Parameter input to use when constructing its value.\n   *\n   * @returns New parameterized navigation instance.\n   */\n  abstract with<T, I>(ref: PageParam.Ref<T, I>, input: I): Navigation.Parameterized;\n\n}\n\nexport namespace Navigation {\n\n  /**\n   * Parameterized navigation.\n   *\n   * Allows to assign target page parameters prior to navigating to it.\n   */\n  export interface Parameterized {\n\n    /**\n     * Applies parameter to navigation target page.\n     *\n     * @typeparam T  Parameter value type.\n     * @typeparam I  Parameter input type.\n     * @param ref  A reference to page navigation parameter to apply.\n     * @param input  Parameter input to use when constructing its value.\n     *\n     * @returns New parameterized navigation instance.\n     */\n    with<T, I>(ref: PageParam.Ref<T, I>, input: I): Parameterized;\n\n    /**\n     * Opens a page by navigating to the given `target` with provided page parameters.\n     *\n     * Appends an entry to navigation history.\n     *\n     * @param target  Either navigation target or URL to navigate to.\n     * @fires PreNavigateEvent#wesib:preNavigate  On window object prior to actually navigate.\n     * Then navigates to the `target`, unless the event cancelled.\n     * @fires NavigateEvent@wesib:navigate  On window object when navigation succeed.\n     *\n     * @returns A promise resolved to navigated page, or to `null` otherwise.\n     */\n    open(target: Navigation.Target | string | URL): Promise<Page | null>;\n\n    /**\n     * Replaces the most recent entry in navigation history with the given `target` and provided page parameters.\n     *\n     * @param target  Either navigation target or URL to replace the latest history entry with.\n     * @fires PreNavigateEvent#wesib:preNavigate  On window object prior to actually update the history.\n     * Then navigates to the `target`, unless the event cancelled.\n     * @fires NavigateEvent@wesib:navigate  On window object when history updated.\n     *\n     * @returns A promise resolved to navigated page, or to `null` otherwise.\n     */\n    replace(target: Navigation.Target | string | URL): Promise<Page | null>;\n\n  }\n\n  /**\n   * Navigation target.\n   *\n   * This is passed to [[Navigation.open]] and [[Navigation.replace]] methods.\n   */\n  export interface Target {\n\n    /**\n     * An URL to update the browser location string to.\n     */\n    readonly url?: string | URL;\n\n    /**\n     * Opaque data to apply to session history. I.e. either push or replace.\n     */\n    readonly data?: any;\n\n    /**\n     * New window title.\n     */\n    readonly title?: string;\n\n  }\n\n  /**\n   * Navigation target with URL value.\n   */\n  export interface URLTarget extends Target {\n\n    readonly url: URL;\n\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { BootstrapWindow } from '@wesib/wesib';\nimport { ContextUpKey, ContextUpRef, ContextValueOpts, ContextValues } from 'context-values';\nimport { AfterEvent, EventKeeper } from 'fun-events';\nimport { Navigation } from './navigation';\nimport { Page } from './page';\nimport Target = Navigation.Target;\n\n/**\n * Navigation agent signature.\n *\n * The agent is called by navigation methods when leaving current page and may alter navigation processing.\n * E.g. change navigation target. For that it should be registered in appropriate context.\n *\n * All registered agents are organized into chain. The first agent in chain is called by navigation method.\n */\nexport type NavigationAgent =\n/**\n * @param next  Either calls the next agent in chain, or applies the final navigation target if this agent is the last\n * one. Not calling this function effectively prevents navigation.\n * Accepts an optional [[Navigation.Target]] parameter. The original target will be used instead when omitted.\n * @param when  When navigation occurred. Either `pre-open`, or `pre-replace`.\n * @param from  The page to leave.\n * @param to  Navigation target page.\n */\n    (\n        this: void,\n        next: (this: void, target?: Target) => void,\n        when: 'pre-open' | 'pre-replace',\n        from: Page,\n        to: Page,\n    ) => void;\n\nclass NavigationAgentKey\n    extends ContextUpKey<NavigationAgent.Combined, NavigationAgent>\n    implements ContextUpRef<NavigationAgent.Combined, NavigationAgent, AfterEvent<NavigationAgent[]>> {\n\n  constructor(name: string) {\n    super(name);\n  }\n\n  grow<Ctx extends ContextValues>(\n      opts: ContextValueOpts<\n          Ctx,\n          NavigationAgent.Combined,\n          EventKeeper<NavigationAgent[]> | NavigationAgent,\n          AfterEvent<NavigationAgent[]>>,\n  ): NavigationAgent.Combined {\n\n    const { document } = opts.context.get(BootstrapWindow);\n\n    return (next, when, from, to) => {\n\n      const result = opts.byDefault(() => combinedAgent);\n\n      return result ? result(next, when, from, to) : next(to);\n    };\n\n    function combinedAgent(\n        next: (this: void, target: Navigation.URLTarget) => void,\n        when: 'pre-open' | 'pre-replace',\n        from: Page,\n        to: Page,\n    ): void {\n\n      let agents!: NavigationAgent[];\n\n      opts.seed.once((...sources) => agents = sources);\n\n      return navigate(0, to);\n\n      function navigate(agentIdx: number, agentTo: Page): void {\n\n        const agent = agents[agentIdx];\n\n        if (!agent) {\n          return next(agentTo);\n        }\n\n        agent(\n            (\n                {\n                  url: nextURL = agentTo.url,\n                  title: nextTitle = agentTo.title,\n                  data: nextData = agentTo.data,\n                }: Navigation.Target = agentTo,\n            ) => navigate(\n                agentIdx + 1,\n                {\n                  url: new URL(String(nextURL), document.baseURI),\n                  title: nextTitle,\n                  data: nextData,\n                  get visited() {\n                    return agentTo.visited;\n                  },\n                  get current() {\n                    return agentTo.current;\n                  },\n                  get(ref) {\n                    return agentTo.get(ref);\n                  },\n                  put(ref, input) {\n                    agentTo.put(ref, input);\n                  },\n                },\n            ),\n            when,\n            from,\n            agentTo,\n        );\n      }\n    }\n  }\n\n}\n\nexport namespace NavigationAgent {\n\n  /**\n   * Combined navigation agent signature.\n   *\n   * This is what is available under [[NavigationAgent]] key.\n   */\n  export type Combined =\n  /**\n   * @param next  Either calls the next agent in chain, or applies the final navigation target if this agent is the last\n   * one. Not calling this function effectively prevents navigation.\n   * Accepts an optional [[Navigation.Target]] parameter. The original target will be used instead when omitted.\n   * @param when  When navigation occurred. Either `pre-open`, or `pre-replace`.\n   * @param from  The page to leave.\n   * @param to  Navigation target page.\n   */\n      (\n          this: void,\n          next: (this: void, target: Navigation.URLTarget) => void,\n          when: 'pre-open' | 'pre-replace',\n          from: Page,\n          to: Page,\n      ) => void;\n\n}\n\n/**\n * A key of context value containing an [[NavigationAgent]] instance.\n *\n * The agent returned combines all registered agents into one. If no agent registered it just performs the navigation.\n */\nexport const NavigationAgent: ContextUpRef<NavigationAgent.Combined, NavigationAgent> =\n    /*#__PURE__*/ new NavigationAgentKey('navigation-agent');\n","/**\n * @module @wesib/generic\n */\nimport { Page } from './page';\nimport { PageParamContext } from './page-param-context';\n\n/**\n * A key of {@link PageParam.Ref page parameter request} property containing requested page parameter.\n */\nexport const PageParam__symbol = /*#__PURE__*/ Symbol('page-param');\n\n/**\n * Page navigation parameter.\n *\n * Can applied before navigation happened (i.e. to [[LeavePageEvent]]). Then it will be available to the target page\n * both before and after navigation.\n *\n * @typeparam T  Parameter value type.\n * @typaparam I  Parameter input type.\n */\nexport abstract class PageParam<T, I> implements PageParam.Ref<T, I> {\n\n  get [PageParam__symbol](): this {\n    return this;\n  }\n\n  /**\n   * Creates page parameter handle.\n   *\n   * This method is called when {@link Page.put assigning new page parameter}.It is called at most once per request,\n   * unless this parameter is assigned already. A {@link PageParam.Handle.put} method will be called instead\n   * in the latter case.\n   *\n   * @param page  A page to assign navigation parameter to.\n   * @param input  Parameter input used to construct its initial value.\n   * @param context  Page parameter context.\n   *\n   * @returns New page parameter value handle.\n   */\n  abstract create(page: Page, input: I, context: PageParamContext): PageParam.Handle<T, I>;\n\n}\n\nexport namespace PageParam {\n\n  /**\n   * Page navigation parameter reference.\n   *\n   * @typeparam T  Parameter value type.\n   * @typaparam I  Parameter input type.\n   */\n  export interface Ref<T, I> {\n\n    /**\n     * Referred page navigation parameter instance.\n     */\n    readonly [PageParam__symbol]: PageParam<T, I>;\n\n  }\n\n  /**\n   * Page navigation parameter value handle.\n   *\n   * Holds and maintains parameter value.\n   *\n   * Created by {@link PageParam.create} method.\n   *\n   * @typeparam T  Parameter value type.\n   * @typaparam I  Parameter input type.\n   */\n  export interface Handle<T, I> {\n\n    /**\n     * Returns current parameter value.\n     *\n     * @returns Parameter value.\n     */\n    get(): T;\n\n    /**\n     * Puts page parameter value.\n     *\n     * This method is called when {@link Page.put re-assigning page parameter}. It is called when page parameter\n     * is assigned already and can be used to update it. The update logic is up to the implementation.\n     *\n     * @param input  Parameter input to use when updating its value.\n     */\n    put(input: I): void;\n\n    /**\n     * Transfers parameter to target page.\n     *\n     * This is called right before [[LeavePageEvent]] is fired for each parameter handle of current page.\n     *\n     * @param to  A page to transfer parameter to.\n     * @param when  When the transfer happens. Either `pre-open`, `pre-replace`, `open`, or `return`. The latter is used\n     * when return to page generated by another app version. E.g. from the page that has been reloaded.\n     *\n     * @returns New parameter handle instance for target page, or `undefined` if nothing to transfer.\n     */\n    transfer?(to: Page, when: 'pre-open' | 'pre-replace' | 'enter' | 'return'): Handle<T, I> | undefined;\n\n    /**\n     * This method is called when the page this parameter created for is entered.\n     *\n     * @param page  Entered page.\n     * @param when  When the page is entered. Either `init`, `open`, `replace`, `enter`, or `return`.\n     */\n    enter?(page: Page, when: 'init' | 'open' | 'replace' | 'enter' | 'return'): void;\n\n    /**\n     * This method is called when the page this parameter created for is left.\n     */\n    leave?(): void;\n\n    /**\n     * This method is called when page navigation aborted and target page won't be reached.\n     *\n     * The handle won't be accessed after this method call.\n     *\n     * @param at  The page the browser remains at.\n     */\n    stay?(at: Page): void;\n\n    /**\n     * This method is called when the page this parameter is created for is removed from navigation history.\n     *\n     * The handle won't be accessed after this method call.\n     */\n    forget?(): void;\n\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ContextValues } from 'context-values';\n\n/**\n * Page parameter context.\n *\n * Provides values available in bootstrap context.\n */\nexport abstract class PageParamContext extends ContextValues {\n}\n","import { BootstrapContext, bootstrapDefault, BootstrapWindow } from '@wesib/wesib';\nimport { itsEach } from 'a-iterable';\nimport { noop } from 'call-thru';\nimport { ContextKey__symbol, ContextRegistry, SingleContextKey } from 'context-values';\nimport { ValueTracker } from 'fun-events';\nimport { Navigation } from './navigation';\nimport { Page } from './page';\nimport { PageParam, PageParam__symbol } from './page-param';\nimport { PageParamContext } from './page-param-context';\n\nconst RoutingHistory__key = /*#__PURE__*/ new SingleContextKey<NavHistory>(\n    'navigation-history',\n    {\n      byDefault: bootstrapDefault(ctx => new NavHistory(ctx)),\n    },\n);\n\n/**\n * @internal\n */\nexport class NavHistory {\n\n  static get [ContextKey__symbol]() {\n    return RoutingHistory__key;\n  }\n\n  private readonly _document: Document;\n  private readonly _location: Location;\n  private readonly _history: History;\n  private readonly _entries = new Map<number, PageEntry>();\n  private readonly _uid: string;\n  private _lastId = 0;\n\n  constructor(private readonly _context: BootstrapContext) {\n    const window = _context.get(BootstrapWindow);\n\n    this._document = window.document;\n    this._location = window.location;\n    this._history = window.history;\n    this._uid = btoa(String(Math.random()));\n  }\n\n  init(): PageEntry {\n\n    const { data } = extractNavData(this._history.state);\n    const entry = this.newEntry({\n      url: new URL(this._location.href),\n      data,\n      title: this._document.title,\n    });\n\n    this._entries.set(entry.id, entry);\n    entry.schedule(() => {\n      entry.enter('init');\n      this._history.replaceState(this._historyState(entry), '');\n    });\n\n    return entry;\n  }\n\n  newEntry(target: Navigation.URLTarget): PageEntry {\n    return new PageEntry(this._context, ++this._lastId, target);\n  }\n\n  open(\n      toEntry: PageEntry,\n      tracker: ValueTracker<PageEntry>,\n  ) {\n\n    const { page: { title = '', url } } = toEntry;\n\n    this._history.pushState(\n        this._historyState(toEntry),\n        title,\n        url.href,\n    );\n\n    this._enter('open', toEntry, tracker);\n  }\n\n  private _enter(\n      when: 'open' | 'enter',\n      toEntry: PageEntry,\n      tracker: ValueTracker<PageEntry>,\n  ) {\n\n    const fromEntry = tracker.it;\n\n    this._entries.set(toEntry.id, toEntry);\n\n    try {\n      // Forget all entries starting from next one\n      for (let e = fromEntry.next; e; e = e.next) {\n        this._forget(e);\n      }\n    } finally {\n      toEntry.prev = fromEntry;\n      fromEntry.next = toEntry;\n      toEntry.schedule(() => {\n        try {\n          fromEntry.leave();\n        } finally {\n          toEntry.enter(when);\n        }\n      });\n      tracker.it = toEntry;\n    }\n  }\n\n  replace(\n      toEntry: PageEntry,\n      tracker: ValueTracker<PageEntry>,\n  ) {\n\n    const fromEntry = tracker.it;\n    const { page: { title = '', url } } = toEntry;\n\n    this._history.replaceState(\n        this._historyState(toEntry),\n        title,\n        url.href,\n    );\n\n    this._entries.set(toEntry.id, toEntry);\n\n    const prev = fromEntry.prev;\n\n    if (prev) {\n      toEntry.prev = prev;\n      prev.next = toEntry;\n    }\n\n    toEntry.schedule(() => {\n      try {\n        fromEntry.leave();\n      } finally {\n        try {\n          this._forget(fromEntry);\n        } finally {\n          toEntry.enter('replace');\n        }\n      }\n    });\n    tracker.it = toEntry;\n  }\n\n  popState(\n      popState: PopStateEvent,\n      tracker: ValueTracker<PageEntry>,\n  ): PageEntry | undefined {\n\n    const { state } = popState;\n\n    if (state == null) {\n      // Hash change\n      if (this._history.state == null) {\n        // Not a return\n        return this._changeHash(tracker);\n      }\n      return; // Already handled by `hashchange` handler\n    }\n\n    const fromEntry = tracker.it;\n    const { uid, data, id: pageId } = extractNavData(state);\n    let toEntry: PageEntry;\n\n    const existingEntry = uid === this._uid && pageId != null ? this._entries.get(pageId) : undefined;\n\n    if (existingEntry) {\n      toEntry = existingEntry;\n    } else {\n      // Returning to page existed in previous app version\n      toEntry = this.newEntry({\n        url: new URL(this._location.href),\n        data,\n        title: this._document.title,\n      });\n      fromEntry.transfer(toEntry, 'return');\n      this._entries.set(toEntry.id, toEntry);\n      this._history.replaceState(this._historyState(toEntry), '');\n    }\n\n    toEntry.schedule(() => {\n      try {\n        fromEntry.leave();\n      } finally {\n        toEntry.enter('return');\n      }\n    });\n\n    tracker.it = toEntry;\n\n    return toEntry;\n  }\n\n  public hashChange(tracker: ValueTracker<PageEntry>): PageEntry | void {\n    if (this._history.state == null) {\n      // Not a return\n      return this._changeHash(tracker);\n    }\n    // Otherwise, a `popstate` event is also triggered,\n    // and its handler would do the job (or already did).\n  }\n\n  public update(tracker: ValueTracker<PageEntry>, url: URL): PageEntry {\n\n    const oldEntry = tracker.it;\n    const newEntry = new PageEntry(this._context, ++this._lastId, { ...oldEntry.page, url }, oldEntry);\n\n    this._entries.set(newEntry.id, newEntry);\n    this._history.replaceState(this._historyState(newEntry), '', url.href);\n    this._entries.delete(oldEntry.id);\n\n    return tracker.it = newEntry;\n  }\n\n  private _changeHash(tracker: ValueTracker<PageEntry>): PageEntry {\n\n    const fromEntry = tracker.it;\n    const toEntry = this.newEntry({\n      url: new URL(this._location.href),\n      data: null,\n      title: this._document.title,\n    });\n\n    try {\n      fromEntry.transfer(toEntry, 'enter');\n    } finally {\n      this._history.replaceState(this._historyState(toEntry), '');\n      this._enter('enter', toEntry, tracker);\n    }\n\n    return toEntry;\n  }\n\n  private _forget(entry: PageEntry) {\n    this._entries.delete(entry.id);\n    entry.forget();\n  }\n\n  private _historyState({ id, page: { data } }: PageEntry): NavDataEnvelope {\n    return {\n      [NAV_DATA_KEY]: {\n        uid: this._uid,\n        id,\n        data,\n      },\n    };\n  }\n\n}\n\n/**\n * @internal\n */\nexport interface PartialNavData {\n  readonly uid?: string;\n  readonly id?: number;\n  readonly data: any;\n}\n\n/**\n * @internal\n */\nexport interface NavData extends PartialNavData {\n  readonly uid: string;\n  readonly id: number;\n}\n\n/**\n * @internal\n */\nexport const NAV_DATA_KEY = 'wesib:navigation:data' as const;\n\n/**\n * @internal\n */\nexport interface NavDataEnvelope {\n  readonly [NAV_DATA_KEY]: NavData;\n}\n\nfunction extractNavData(state: any): PartialNavData {\n  return state == null || typeof state !== 'object' ? { data: state } : state[NAV_DATA_KEY];\n}\n\n/**\n * @internal\n */\nexport class PageEntry {\n\n  next?: PageEntry;\n  prev?: PageEntry;\n  private _status: PageStatus = PageStatus.New;\n  readonly page: Page;\n  private readonly _params: Map<PageParam<any, any>, PageParam.Handle<any, any>>;\n  private _update: () => void = noop;\n\n  constructor(\n      private readonly _context: BootstrapContext,\n      readonly id: number,\n      target: Navigation.URLTarget,\n      proto?: PageEntry,\n  ) {\n    this._params = proto ? proto._params : new Map<PageParam<any, any>, PageParam.Handle<any, any>>();\n\n    const entry = this;\n\n    this.page = {\n      url: target.url,\n      title: target.title,\n      data: target.data,\n      get visited() {\n        return !!entry._status;\n      },\n      get current() {\n        return entry._status === PageStatus.Current;\n      },\n      get(ref) {\n        return entry.get(ref);\n      },\n      put(ref, input) {\n        entry.put(ref, input);\n      },\n    };\n  }\n\n  get<T>(ref: PageParam.Ref<T, unknown>): T | undefined {\n\n    const handle: PageParam.Handle<T, unknown> | undefined = this._params.get(ref[PageParam__symbol]);\n\n    return handle && handle.get();\n  }\n\n  put<T, I>(ref: PageParam.Ref<T, I>, input: I): T {\n\n    const param = ref[PageParam__symbol];\n    const handle: PageParam.Handle<T, I> | undefined = this._params.get(param);\n\n    if (handle) {\n      handle.put(input);\n      return handle.get();\n    }\n\n    const registry = new ContextRegistry<ParamContext>(this._context);\n\n    class ParamContext extends PageParamContext {\n      readonly get: PageParamContext['get'] = registry.newValues().get;\n    }\n\n    const newHandle = param.create(this.page, input, new ParamContext());\n\n    this._params.set(param, newHandle);\n    if (this.page.current && newHandle.enter) {\n      newHandle.enter(this.page, 'init');\n    }\n\n    return newHandle.get();\n  }\n\n  transfer(to: PageEntry, when: 'pre-open' | 'pre-replace' | 'enter' | 'return') {\n    itsEach(this._params.entries(), ([param, handle]) => {\n      if (handle.transfer) {\n\n        const transferred = handle.transfer(to.page, when);\n\n        if (transferred) {\n          to._params.set(param, transferred);\n        }\n      }\n    });\n  }\n\n  stay(at: Page) {\n    itsEach(this._params.values(), handle => handle.stay && handle.stay(at));\n  }\n\n  enter(when: 'init' | 'open' | 'replace' | 'enter' | 'return') {\n    this._status = PageStatus.Current;\n    itsEach(this._params.values(), handle => handle.enter && handle.enter(this.page, when));\n  }\n\n  leave() {\n    this._status = PageStatus.Visited;\n    itsEach(this._params.values(), handle => handle.leave && handle.leave());\n  }\n\n  forget() {\n    itsEach(this._params.values(), handle => handle.forget && handle.forget());\n    this._params.clear();\n  }\n\n  schedule(update: () => void) {\n    this._update = update;\n  }\n\n  apply() {\n\n    const update = this._update;\n\n    this._update = noop;\n    update();\n  }\n\n}\n\nconst enum PageStatus {\n  New,\n  Visited,\n  Current,\n}\n","import { BootstrapContext, BootstrapWindow, mergeFunctions } from '@wesib/wesib';\nimport { noop } from 'call-thru';\nimport { AfterEvent, DomEventDispatcher, onAny, trackValue } from 'fun-events';\nimport { NavHistory, PageEntry } from './nav-history.impl';\nimport { Navigation as Navigation_ } from './navigation';\nimport { NavigationAgent } from './navigation-agent';\nimport {\n  EnterPageEvent,\n  LeavePageEvent,\n  NavigationEvent,\n  NavigationEventType,\n  StayOnPageEvent,\n} from './navigation.event';\nimport { Page } from './page';\nimport { PageParam } from './page-param';\n\nexport function createNavigation(context: BootstrapContext): Navigation_ {\n\n  const window = context.get(BootstrapWindow);\n  const { document, history } = window;\n  const dispatcher = new DomEventDispatcher(window);\n  const navHistory = context.get(NavHistory);\n  const agent = context.get(NavigationAgent);\n  const onEnter = dispatcher.on<EnterPageEvent>(NavigationEventType.EnterPage);\n  const onLeave = dispatcher.on<LeavePageEvent>(NavigationEventType.LeavePage);\n  const onStay = dispatcher.on<StayOnPageEvent>(NavigationEventType.StayOnPage);\n  const onEvent = onAny<[NavigationEvent]>(onEnter, onLeave, onStay);\n  const nav = trackValue<PageEntry>(navHistory.init());\n\n  nav.read(nextEntry => nextEntry.apply()); // The very first page entry receiver applies scheduled updates to page\n\n  const readPage: AfterEvent<[Page]> = nav.read.keep.thru(entry => entry.page);\n  let next: Promise<any> = Promise.resolve();\n\n  dispatcher.on<PopStateEvent>('popstate')(popState => {\n\n    const entry = navHistory.popState(popState, nav);\n\n    if (entry) {\n      dispatcher.dispatch(new EnterPageEvent(\n          NavigationEventType.EnterPage,\n          {\n            when: popState.state != null ? 'return' : 'enter',\n            to: entry.page,\n          },\n      ));\n    }\n  });\n\n  dispatcher.on('hashchange')(() => {\n\n    const entry = navHistory.hashChange(nav);\n\n    if (entry) {\n      dispatcher.dispatch(new EnterPageEvent(\n          NavigationEventType.EnterPage,\n          {\n            when: 'enter',\n            to: entry.page,\n          },\n      ));\n    }\n  });\n\n  class Navigation extends Navigation_ {\n\n    get length() {\n      return history.length;\n    }\n\n    get onEnter() {\n      return onEnter;\n    }\n\n    get onLeave() {\n      return onLeave;\n    }\n\n    get onStay() {\n      return onStay;\n    }\n\n    get on() {\n      return onEvent;\n    }\n\n    get read() {\n      return readPage;\n    }\n\n    go(delta?: number): void {\n      history.go(delta);\n    }\n\n    open(target: Navigation_.Target | string | URL) {\n      return navigate('pre-open', 'open', target);\n    }\n\n    replace(target: Navigation_.Target | string | URL) {\n      return navigate('pre-replace', 'replace', target);\n    }\n\n    update(url: string | URL): Page {\n      return navHistory.update(nav, toURL(url)).page;\n    }\n\n    with<T, I>(ref: PageParam.Ref<T, I>, input: I): Navigation_.Parameterized {\n      return withParam(page => page.put(ref, input));\n    }\n\n  }\n\n  return new Navigation();\n\n  function withParam(applyParams: (page: Page) => void): Navigation_.Parameterized {\n    return {\n      with<TT, II>(ref: PageParam.Ref<TT, II>, input: II): Navigation_.Parameterized {\n        return withParam(mergeFunctions(applyParams, page => page.put(ref, input)));\n      },\n      open(target: Navigation_.Target | string | URL) {\n        return navigate('pre-open', 'open', target, applyParams);\n      },\n      replace(target: Navigation_.Target | string | URL) {\n        return navigate('pre-replace', 'replace', target, applyParams);\n      },\n    };\n  }\n\n  function toURL(url: string | URL | undefined): URL {\n    if (typeof url === 'string') {\n      return new URL(url, document.baseURI);\n    }\n    return url || nav.it.page.url;\n  }\n\n  function urlTargetOf(target: Navigation_.Target | string | URL): Navigation_.URLTarget {\n    if (typeof target === 'string' || target instanceof URL) {\n      return { url: toURL(target) };\n    }\n    if (target.url instanceof URL) {\n      return target as Navigation_.URLTarget;\n    }\n    return { ...target, url: toURL(target.url) };\n  }\n\n  function navigate(\n      whenLeave: 'pre-open' | 'pre-replace',\n      when: 'open' | 'replace',\n      target: Navigation_.Target | string | URL,\n      applyParams: (page: Page) => void = noop,\n  ): Promise<Page | null> {\n\n    const urlTarget = urlTargetOf(target);\n    const promise = next = next.then(doNavigate, doNavigate);\n\n    return promise;\n\n    function doNavigate(): Page | null {\n\n      let toEntry: PageEntry | undefined;\n\n      try {\n\n        const prepared = prepare();\n\n        if (!prepared) {\n          return prepared; // Navigation cancelled\n        }\n\n        toEntry = prepared;\n\n        navHistory[when](toEntry, nav);\n\n        dispatcher.dispatch(new EnterPageEvent(\n            NavigationEventType.EnterPage,\n            {\n              when,\n              to: toEntry.page,\n            },\n        ));\n\n        return toEntry.page;\n      } catch (e) {\n        stay(toEntry, e);\n        throw e;\n      }\n    }\n\n    function prepare(): PageEntry | null {\n      if (next !== promise) {\n        return stay();\n      }\n\n      const fromEntry = nav.it;\n      const toEntry = navHistory.newEntry(urlTarget);\n\n      fromEntry.transfer(toEntry, whenLeave);\n\n      const leavePage = new LeavePageEvent(\n          NavigationEventType.LeavePage,\n          {\n            when: whenLeave,\n            from: fromEntry.page,\n            to: toEntry.page,\n          },\n      );\n\n      applyParams(toEntry.page);\n      if (!dispatcher.dispatch(leavePage) || next !== promise) {\n        return stay(toEntry);\n      }\n\n      let finalTarget: Navigation_.URLTarget | undefined;\n\n      agent(t => finalTarget = t, whenLeave, leavePage.from, leavePage.to);\n\n      if (!finalTarget) {\n        return stay(toEntry); // Some agent didn't call `next()`.\n      }\n\n      return toEntry;\n    }\n\n    function stay(toEntry?: PageEntry, reason?: any): null {\n      if (toEntry) {\n        toEntry.stay(nav.it.page);\n      }\n\n      dispatcher.dispatch(new StayOnPageEvent(\n          NavigationEventType.StayOnPage,\n          {\n            from: nav.it.page,\n            to: urlTarget,\n            reason,\n          },\n      ));\n\n      return null;\n    }\n\n  }\n}\n","/**\n * @module @wesib/generic\n */\nimport { FeatureDef, FeatureDef__symbol } from '@wesib/wesib';\nimport { Navigation } from './navigation';\nimport { createNavigation } from './navigation.impl';\n\nconst NavigationSupport__feature: FeatureDef = {\n  setup(setup) {\n    setup.provide({ a: Navigation, by: createNavigation });\n  },\n};\n\n/**\n * Browser navigation support feature.\n *\n * Makes [[Navigation]] available in bootstrap context.\n */\nexport class NavigationSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return NavigationSupport__feature;\n  }\n\n}\n","import { nextArgs, nextSkip } from 'call-thru';\nimport { eventSupply, EventSupply, OnEvent, onEventBy, trackValue } from 'fun-events';\nimport { Page } from '../page';\nimport { PageLoadResponse } from './page-load-response';\nimport { PageLoader } from './page-loader.impl';\n\n/**\n * @internal\n */\nexport function cachingPageLoader(loader: PageLoader): PageLoader {\n\n  let state: {\n    readonly url: string;\n    readonly on: OnEvent<[PageLoadResponse]>;\n    readonly sup: EventSupply;\n  } | undefined;\n\n  return page => {\n\n    const url = pageUrl(page);\n\n    if (state) {\n      if (state.url === url) {\n        return state.on;\n      }\n      state.sup.off();\n    }\n\n    let tracked: {\n      readonly on: OnEvent<[PageLoadResponse]>;\n      num: number;\n    } | undefined;\n    const supply = eventSupply().whenOff(() => {\n      state = undefined;\n      tracked = undefined;\n    });\n\n    const on = onEventBy<[PageLoadResponse]>(receiver => {\n      if (!tracked) {\n\n        const onLoad = loader(page);\n        const tracker = trackValue<PageLoadResponse>();\n        const trackSupply = onLoad(resp => {\n          tracker.it = resp;\n        }).whenOff(reason => {\n          // Error drops page cache, unlike successful page load.\n          if (reason != null) {\n            supply.off(reason);\n          }\n        });\n\n        supply.whenOff(reason => {\n          trackSupply.off(reason);\n          tracker.done(reason);\n        });\n\n        tracked = {\n          on: tracker.read.thru_(\n              response => response ? nextArgs(response) : nextSkip(),\n          ),\n          num: 0,\n        };\n      }\n\n      const requested = tracked;\n\n      ++requested.num;\n\n      return requested.on(receiver).needs(supply).whenOff(reason => {\n        if (!--requested.num) {\n          // Allow to request the same page again\n          Promise.resolve().then(() => {\n            if (!requested.num && requested === tracked) {\n              supply.off(reason);\n            }\n          });\n        }\n      });\n    });\n\n    state = { url, on, sup: supply };\n\n    return on;\n  };\n}\n\nfunction pageUrl(page: Page): string {\n  return new URL('', page.url).href;\n}\n","import { flatMapIt, itsEach, itsIterator } from 'a-iterable';\nimport { asis, noop } from 'call-thru';\nimport {\n  EventEmitter,\n  eventReceiver,\n  EventReceiver,\n  eventSupply,\n  EventSupply,\n  noEventSupply,\n  OnEvent,\n  onEventBy,\n} from 'fun-events';\nimport { Navigation } from '../navigation';\nimport { Page } from '../page';\nimport { PageParam } from '../page-param';\nimport { PageFragmentRequest, PageLoadRequest } from './page-load-request';\nimport { PageLoadResponse } from './page-load-response';\nimport { PageLoader } from './page-loader.impl';\n\n/**\n * @internal\n */\nexport interface PageLoadReq extends PageLoadRequest {\n\n  readonly receiver: EventReceiver.Generic<[PageLoadResponse]>;\n\n}\n\nclass PageLoadAbortError extends Error {}\n\n/**\n * @internal\n */\nexport class PageLoadRequests implements Iterable<PageLoadReq> {\n\n  private readonly _map = new Map<EventSupply, PageLoadReq[]>();\n\n  constructor(\n      private readonly _navigation: Navigation,\n      private readonly _loader: PageLoader,\n  ) {}\n\n  get fragments(): readonly PageFragmentRequest[] {\n\n    const result: PageFragmentRequest[] = [];\n\n    for (const request of this) {\n      if (!request.fragment) {\n        return [];\n      }\n      result.push(request.fragment);\n    }\n\n    return result;\n  }\n\n  [Symbol.iterator](): Iterator<PageLoadReq> {\n    return itsIterator(flatMapIt(this._map.values(), asis));\n  }\n\n  handle(): PageParam.Handle<void, PageLoadRequest> {\n\n    const self = this;\n    const pageSupply = eventSupply();\n    let loadSupply = noEventSupply();\n\n    return {\n      get() {},\n      put(request: PageLoadRequest): void {\n        self._add(request);\n      },\n      transfer(to: Page) {\n\n        const transferred = self._transfer();\n\n        to.put(pageLoadRequestsParam, transferred);\n\n        return transferred.handle();\n      },\n      enter(page: Page, when: 'init' | 'open' | 'replace' | 'return'): void {\n        if (when === 'init') {\n          // The page is loaded already. No need to fetch it.\n          return;\n        }\n\n        loadSupply = eventSupply().needs(pageSupply);\n\n        const onLoad = onEventBy<[PageLoadResponse]>(responseReceiver => {\n\n          const emitter = new EventEmitter<[PageLoadResponse]>();\n          const supply = emitter.on(responseReceiver);\n\n          self._loader(page)(response => emitter.send(response)).whenOff(error => {\n            if (error !== undefined && !(error instanceof PageLoadAbortError)) {\n              // Report current page load error as failed load response\n              emitter.send({\n                ok: false as const,\n                page,\n                error,\n              });\n            }\n          }).needs(loadSupply);\n\n          return supply;\n        }).share();\n\n        itsEach(\n            self,\n            ({ fragment, receiver }) => onFragment(onLoad, fragment)({\n              supply: eventSupply().needs(receiver.supply),\n              receive(context, response): void {\n                receiver.receive(context, response);\n              },\n            }),\n        );\n      },\n      leave(): void {\n        loadSupply.off(new PageLoadAbortError('page left'));\n      },\n      stay() {\n        pageSupply.off(new PageLoadAbortError('navigation cancelled'));\n      },\n      forget() {\n        pageSupply.off(new PageLoadAbortError('page forgotten'));\n      },\n    };\n\n  }\n\n  private _add(request: PageLoadRequest) {\n\n    const req = { ...request, receiver: eventReceiver(request.receiver) };\n    const { supply } = req.receiver;\n    const list = this._map.get(supply);\n\n    if (list) {\n      list.push(req);\n    } else {\n      this._map.set(supply, [req]);\n      supply.whenOff(() => this._map.delete(supply));\n    }\n  }\n\n  private _transfer(): PageLoadRequests {\n\n    const transferred = new PageLoadRequests(this._navigation, this._loader);\n\n    for (const [supply, list] of this._map.entries()) {\n      transferred._map.set(supply, [...list]);\n    }\n\n    return transferred;\n  }\n\n}\n\nfunction onFragment(\n    onLoad: OnEvent<[PageLoadResponse]>,\n    fragment?: PageFragmentRequest,\n): OnEvent<[PageLoadResponse]> {\n  return fragment\n      ? onLoad.thru_(\n          response => response.ok\n              ? {\n                ...response,\n                fragment: (\n                    fragment.tag != null\n                    ? response.document.getElementsByTagName(fragment.tag)[0]\n                    : response.document.getElementById(fragment.id)\n                ) || undefined,\n              }\n              : response,\n      )\n      : onLoad;\n}\n\nclass PageLoadRequestsParam extends PageParam<PageLoadRequests, PageLoadRequests> {\n\n  create(\n      _page: Page,\n      requests: PageLoadRequests,\n  ): PageParam.Handle<PageLoadRequests, PageLoadRequests> {\n    return {\n      get() {\n        return requests;\n      },\n      put: noop,\n    };\n  }\n\n}\n\n/**\n * @internal\n */\nexport const pageLoadRequestsParam: PageParam<PageLoadRequests, PageLoadRequests> = new PageLoadRequestsParam();\n","/**\n * @module @wesib/generic\n */\nimport { ContextUpRef } from 'context-values';\nimport { EventSender, OnEvent } from 'fun-events';\nimport { FetchAgentKey } from '../../fetch/fetch-agent-key.impl';\nimport { PageLoadResponse } from './page-load-response';\n\n/**\n * Page load agent signature.\n *\n * The agent can be used to alter loaded page document processing. For that it should be registered in appropriate\n * context.\n *\n * All registered agents are organized into chain. The first agent in chain is called by page loader.\n */\nexport type PageLoadAgent =\n/**\n * @param next  Either calls the next agent in chain, or actually loads page document if this agent is the last one.\n * Accepts an optional `Request` parameter. The original request will be used instead when omitted.\n * @param request  HTTP request.\n *\n * @returns An `EventSender` of page load response. It is returned either to preceding agent in chain, or as a loaded\n * document.\n */\n    (\n        this: void,\n        next: (this: void, request?: Request) => OnEvent<[PageLoadResponse]>,\n        request: Request,\n    ) => EventSender<[PageLoadResponse]>;\n\nexport namespace PageLoadAgent {\n\n  /**\n   * Combined page load agent signature.\n   *\n   * This is what is available under [[PageLoadAgent]] key.\n   */\n  export type Combined =\n  /**\n   * @param next  Either calls the next agent in chain, or actually loads page document if this agent is the last one.\n   * Accepts `Request` parameter.\n   * @param request  HTTP request.\n   *\n   * @returns An `OnEvent` registrar of loaded document.\n   */\n      (\n          this: void,\n          next: (this: void, request: Request) => OnEvent<[PageLoadResponse]>,\n          request: Request,\n      ) => OnEvent<[PageLoadResponse]>;\n\n}\n\n/**\n * A key of context value containing an [[DomFetchAgent]] instance.\n *\n * The agent returned combines all registered agents into one. If no agent registered it just performs the fetch.\n */\nexport const PageLoadAgent: ContextUpRef<PageLoadAgent.Combined, PageLoadAgent> =\n    /*#__PURE__*/ new FetchAgentKey<[PageLoadResponse]>('page-load-agent');\n","import { noop, valueProvider } from 'call-thru';\nimport { ContextUpRef, FnContextKey } from 'context-values';\n\n/**\n * A signature of page load URL modifier function.\n *\n * All such functions registered in bootstrap context are called in order of their registration with current page URL.\n * They are able to modify it, e.g. by applying additional URL search parameters. The modified URL is used then to load\n * the page.\n */\nexport type PageLoadURLModifier =\n/**\n * @param url  An URL of page to load.\n */\n    (this: void, url: URL) => void;\n\n/**\n * A key of bootstrap context value containing a page load URL modifier.\n *\n * Does not modify URL by default.\n */\nexport const PageLoadURLModifier: ContextUpRef<PageLoadURLModifier, PageLoadURLModifier> =\n    /*#__PURE__*/ new FnContextKey('page-load-url', { byDefault: valueProvider(noop) });\n","import { BootstrapContext, bootstrapDefault, BootstrapWindow } from '@wesib/wesib';\nimport { itsReduction } from 'a-iterable';\nimport { SingleContextKey } from 'context-values';\nimport { afterThe, EventEmitter, eventSupply, OnEvent, onEventBy } from 'fun-events';\nimport { hthvParse, hthvQuote } from 'http-header-value';\nimport { HttpFetch } from '../../fetch';\nimport { Page } from '../page';\nimport { PageLoadAgent } from './page-load-agent';\nimport { pageLoadRequestsParam } from './page-load-requests.impl';\nimport { PageLoadResponse } from './page-load-response';\nimport { PageLoadURLModifier } from './page-load-url-modifier';\n\n/**\n * @internal\n */\nexport type PageLoader = (this: void, page: Page) => OnEvent<[PageLoadResponse]>;\n\n/**\n * @internal\n */\nexport const PageLoader = /*#__PURE__*/ new SingleContextKey<PageLoader>(\n    'page-loader',\n    {\n      byDefault: bootstrapDefault(newPageLoader),\n    },\n);\n\nfunction newPageLoader(context: BootstrapContext): PageLoader {\n\n  const window = context.get(BootstrapWindow);\n  const httpFetch = context.get(HttpFetch);\n  const modifyURL = context.get(PageLoadURLModifier);\n  const agent = context.get(PageLoadAgent);\n  const parser: DOMParser = new (window as any).DOMParser();\n\n  return page => {\n\n    const url = new URL(page.url.href);\n\n    modifyURL(url);\n\n    const request = new Request(\n        url.href,\n        {\n          mode: 'same-origin',\n          credentials: 'same-origin',\n          headers: new Headers({ 'Accept': 'text/html' }),\n        },\n    );\n\n    return onEventBy(receiver => agent(fetch, request)(receiver));\n\n    function fetch(fetchRequest: Request): OnEvent<[PageLoadResponse]> {\n      fetchRequest = pageFragmentsRequest(page, fetchRequest);\n\n      const responseTextEmitter = new EventEmitter<[Response, string]>();\n      const onResponse: OnEvent<[PageLoadResponse]> = responseTextEmitter.on.thru_(\n          (response, text) => {\n            if (!response.ok) {\n              return {\n                ok: false as const,\n                page,\n                response,\n                error: response.status,\n              };\n            }\n            try {\n              return {\n                ok: true as const,\n                page,\n                response,\n                document: parsePageDocument(parser, url, response, text),\n              };\n            } catch (error) {\n              return {\n                ok: false as const,\n                page,\n                response,\n                error,\n              };\n            }\n          },\n      );\n\n      return onEventBy<[PageLoadResponse]>(receiver => {\n\n        const { supply } = receiver;\n\n        afterThe<[PageLoadResponse.Start]>({ page }).once({\n          supply: eventSupply().needs(supply),\n          receive(ctx, start) {\n            receiver.receive(ctx, start);\n          },\n        });\n\n        const responseSupply = httpFetch(fetchRequest)(response => {\n          onResponse(receiver);\n          response.text().then(\n              text => {\n                responseTextEmitter.send(response, text);\n                supply.needs(responseSupply);\n              },\n          ).catch(\n              e => supply.off(e),\n          );\n        });\n      });\n    }\n  };\n}\n\nfunction pageFragmentsRequest(page: Page, request: Request ) {\n\n  const fragments = page.get(pageLoadRequestsParam)?.fragments;\n\n  if (!fragments || !fragments.length) {\n    return request;\n  }\n\n  return new Request(\n      request,\n      {\n        headers: {\n          'Accept-Fragment': itsReduction(\n              fragments,\n              (header, fragment) =>\n                  (header ? header + ', ' : '')\n                  + (\n                      fragment.tag != null\n                          ? 'tag=' + hthvQuote(fragment.tag)\n                          : 'id=' + hthvQuote(fragment.id)\n                  ),\n              '',\n          ),\n        },\n      },\n  );\n}\n\nfunction parsePageDocument(parser: DOMParser, url: URL, response: Response, text: string): Document {\n\n  const doc = parser.parseFromString(\n      text,\n      hthvParse(response.headers.get('Content-Type') || 'text/html')[0].v as SupportedType,\n  );\n\n  if (doc.head) {\n\n    const base = doc.head.querySelector('base');\n\n    if (base) {\n      base.href = new URL(base.getAttribute('href')!, url).href;\n    } else {\n\n      const newBase = doc.createElement('base');\n\n      newBase.href = url.href;\n\n      doc.head.appendChild(newBase);\n    }\n  }\n\n  return doc;\n}\n","import { Navigation } from '../navigation';\nimport { Page } from '../page';\nimport { PageParam } from '../page-param';\nimport { PageParamContext } from '../page-param-context';\nimport { cachingPageLoader } from './caching-page-loader.impl';\nimport { PageLoadRequest } from './page-load-request';\nimport { PageLoadRequests, pageLoadRequestsParam } from './page-load-requests.impl';\nimport { PageLoader } from './page-loader.impl';\n\nclass PageLoadParam extends PageParam<void, PageLoadRequest> {\n\n  create(page: Page, request: PageLoadRequest, context: PageParamContext) {\n\n    const requests = new PageLoadRequests(context.get(Navigation), cachingPageLoader(context.get(PageLoader)));\n    const handle = requests.handle();\n\n    page.put(pageLoadRequestsParam, requests);\n    handle.put(request);\n\n    return handle;\n  }\n\n}\n\n/**\n * Page load parameter.\n *\n * Accepts a {@link PageLoadRequest page load request} as input.\n *\n * A page load is initiated whenever a page with new address is {@link Navigation.onEnter entered}.\n *\n * Page load won't be initiated if:\n * - page load parameter is not {@link Page.put} added,\n * - all added {@link PageLoadRequest.receiver response receiver}s supplies are cut off, or\n * - the entered page address is the the same one as previous one, except the hash,\n */\nexport const pageLoadParam: PageParam<void, PageLoadRequest> = /*#__PURE__*/ new PageLoadParam();\n","import { BootstrapContext, bootstrapDefault, BootstrapWindow } from '@wesib/wesib';\nimport { ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { AfterEvent, afterThe } from 'fun-events';\nimport { Navigation } from '../navigation';\nimport { PageLoadAgent } from './page-load-agent';\nimport { PageLoadURLModifier } from './page-load-url-modifier';\n\nconst PageCacheBuster__key = /*#__PURE__*/ new SingleContextKey<PageCacheBuster>(\n    'page-cache-buster',\n    {\n      byDefault: bootstrapDefault(context => new PageCacheBuster(context)),\n    },\n);\n\n/**\n * @internal\n */\nexport const appRevSearchParam = '__wesib_app_rev__';\n\n/**\n * @internal\n */\nexport class PageCacheBuster {\n\n  static get [ContextKey__symbol](): SingleContextKey<PageCacheBuster> {\n    return PageCacheBuster__key;\n  }\n\n  readonly urlModifier: AfterEvent<PageLoadURLModifier[]>;\n  readonly agent: AfterEvent<PageLoadAgent[]>;\n\n  constructor(context: BootstrapContext) {\n\n    const rev = appRev(context.get(BootstrapWindow).document);\n\n    if (!rev) {\n      this.urlModifier = afterThe();\n      this.agent = afterThe();\n    } else {\n\n      const navigation = context.get(Navigation);\n\n      this.urlModifier = afterThe(url => url.searchParams.set(appRevSearchParam, rev));\n      this.agent = afterThe((next, request) => {\n        return next(new Request(request.url, request)).thru_(response => {\n          if (response.ok) {\n\n            const newRev = appRev(response.document);\n\n            if (newRev && newRev !== rev) {\n\n              const url = new URL(response.page.url.href);\n\n              url.searchParams.set(appRevSearchParam, newRev);\n              navigation.update(url);\n              navigation.reload();\n            }\n          }\n\n          return response;\n        });\n      });\n    }\n  }\n\n}\n\nfunction appRev(doc: Document) {\n  return doc.querySelector('meta[name=wesib-app-rev]')?.getAttribute('content');\n}\n","/**\n * @module @wesib/generic\n */\nimport { itsEach, overArray } from 'a-iterable';\n\n/**\n * Imports DOM node from one document to another.\n *\n * @param from  The node to import.\n * @param to  The node to append imported node to.\n * @param importContent  A function that imports nodes nested in parent element. [[importNodeContents]] by default.\n *\n * @returns Imported node.\n */\nexport function importNode<N extends Node>(\n    from: N,\n    to: Node,\n    importContent?: (this: void, from: N, to: N) => void,\n): N;\n\n/**\n * Imports DOM node from one document to another and inserts it before the given node.\n *\n * @param from  The node to import.\n * @param to  The node to append imported node to.\n * @param before  The node to insert imported node before, or `null` to append it to the end of target one.\n * @param importContent  A function that imports nodes nested in parent element. [[importNodeContents]] by default.\n *\n * @returns Imported node.\n */\nexport function importNode<N extends Node>(\n    from: N,\n    to: Node,\n    before?: Node | null,\n    importContent?: (this: void, from: N, to: N) => void,\n): N;\n\nexport function importNode<N extends Node>(\n    from: N,\n    to: Node,\n    beforeOrImport?: Node | null | ((this: void, from: N, to: N) => void),\n    importContent: (this: void, from: N, to: N) => void = importNodeContent,\n): N {\n\n  let before: Node | null;\n\n  if (typeof beforeOrImport === 'function') {\n    importContent = beforeOrImport;\n    before = null;\n  } else {\n    before = beforeOrImport || null;\n  }\n\n  const doc = to.ownerDocument!;\n\n  if (from.nodeType !== Node.ELEMENT_NODE) {\n\n    const nodeClone = doc.importNode(from, false);\n\n    to.insertBefore(nodeClone, before);\n\n    return nodeClone;\n  }\n\n  const element = from as Node as Element;\n  const elementClone = doc.createElement(element.tagName.toLowerCase()) as Node as (Element & N);\n\n  element.getAttributeNames().forEach(attr => elementClone.setAttribute(attr, element.getAttribute(attr)!));\n\n  importContent(from, elementClone);\n  to.insertBefore(elementClone, before);\n\n  return elementClone;\n}\n\n/**\n * Imports DOM node contents from one document to another.\n *\n * @param from  The node which contents to import.\n * @param to  The node to append imported nodes to.\n */\nexport function importNodeContent(from: Node, to: Node): void {\n  itsEach(\n      overArray(from.childNodes),\n      node => importNode(node, to),\n  );\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { filterIt, itsEach, mapIt, overArray } from 'a-iterable';\nimport { importNode } from '../../util';\nimport { PageLoadAgent } from './page-load-agent';\n\n/**\n * @internal\n */\nexport function pageScriptsAgent(context: BootstrapContext): PageLoadAgent {\n\n  const doc = context.get(BootstrapWindow).document;\n\n  return next => next().thru_(\n      response => {\n        if (response.ok) {\n\n          const allScripts = new Set<string>(mapIt(\n              externalScripts(doc, overArray(doc.scripts)),\n              ([src]) => src,\n          ));\n\n          itsEach(\n              filterIt(\n                  externalScripts(response.document, overArray(response.document.querySelectorAll('script'))),\n                  ([src]) => !allScripts.has(src),\n              ),\n              ([src, script]) => {\n                importNode(script, doc.head, (_from, to) => to.src = src);\n                allScripts.add(src);\n              },\n          );\n        }\n        return response;\n      },\n  );\n}\n\nfunction externalScripts(\n    doc: Document,\n    scripts: Iterable<HTMLScriptElement>,\n): Iterable<readonly [string, HTMLScriptElement]> {\n  return mapIt(\n      filterIt(\n          scripts,\n          script => !!script.src,\n      ),\n      script => [new URL(script.src, doc.baseURI).href, script] as const,\n  );\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { itsEach, itsFirst, overArray } from 'a-iterable';\nimport { importNode } from '../../util';\nimport { PageLoadAgent } from './page-load-agent';\n\n/**\n * @internal\n */\nexport function pageStyleAgent(context: BootstrapContext): PageLoadAgent {\n\n  const doc = context.get(BootstrapWindow).document;\n\n  return next => next().thru_(\n      response => {\n        if (!response.ok) {\n          return response;\n        }\n\n        const newStyles = response.document.querySelectorAll<HTMLLinkElement>('link[rel=stylesheet]');\n\n        if (!newStyles.length) {\n          return response;\n        }\n\n        let target: Node = doc.head;\n        let before: Node | null = null;\n        const oldStyles = doc.querySelectorAll<HTMLLinkElement>('link[rel=stylesheet]');\n        const oldStylesByHref = new Map<string, HTMLLinkElement>();\n        const firstOldStyle = oldStyles.item(0);\n\n        if (firstOldStyle) {\n          target = firstOldStyle.parentNode!;\n          before = firstOldStyle;\n          itsEach(\n              overArray(oldStyles),\n              link => oldStylesByHref.set(new URL(link.href, doc.baseURI).href, link),\n          );\n        }\n\n        itsEach(\n            overArray(newStyles),\n            newStyle => {\n\n              const href = new URL(newStyle.href, doc.baseURI).href;\n              const oldStyle = oldStylesByHref.get(href);\n\n              if (oldStyle) {\n                // Style already exists.\n                if (itsFirst(oldStylesByHref.keys()) === href) {\n                  // In proper position already.\n                  // Insert the remaining styles after it.\n                  target = oldStyle.parentNode!;\n                  before = oldStyle.nextSibling;\n                } else {\n                  // Move to proper position.\n                  target.insertBefore(oldStyle, before);\n                }\n                oldStylesByHref.delete(href);\n              } else {\n                // Import new style\n                importNode(newStyle, target, before, (_from, to) => to.href = href);\n              }\n            },\n        );\n\n        // Remove remaining old styles\n        itsEach(oldStylesByHref.values(), style => style.parentNode!.removeChild(style));\n\n        return response;\n      },\n  );\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport { PageLoadAgent } from './page-load-agent';\n\n/**\n * @internal\n */\nexport function pageTitleAgent(context: BootstrapContext): PageLoadAgent {\n\n  const doc = context.get(BootstrapWindow).document;\n\n  return next => next().thru_(response => {\n    if (response.ok) {\n\n      const title = response.document.getElementsByTagName('title').item(0);\n\n      if (title && title.textContent) {\n        doc.title = title.textContent;\n      }\n    }\n\n    return response;\n  });\n}\n","/**\n * @module @wesib/generic\n */\nimport { FeatureDef, FeatureDef__symbol } from '@wesib/wesib';\nimport { NavigationSupport } from '../navigation-support.feature';\nimport { PageCacheBuster } from './page-cache-buster.impl';\nimport { PageLoadAgent } from './page-load-agent';\nimport { PageLoadURLModifier } from './page-load-url-modifier';\nimport { pageScriptsAgent } from './page-scripts-agent.impl';\nimport { pageStyleAgent } from './page-style-agent.impl';\nimport { pageTitleAgent } from './page-title-agent.impl';\n\nconst PageLoadSupport__feature: FeatureDef = {\n  needs: NavigationSupport,\n  setup(setup) {\n    setup.provide({\n      a: PageLoadURLModifier,\n      by: (buster: PageCacheBuster) => buster.urlModifier,\n      with: [PageCacheBuster],\n    });\n    setup.provide({\n      a: PageLoadAgent,\n      by: (buster: PageCacheBuster) => buster.agent,\n      with: [PageCacheBuster],\n    });\n    setup.provide({ a: PageLoadAgent, by: pageScriptsAgent });\n    setup.provide({ a: PageLoadAgent, by: pageStyleAgent });\n    setup.provide({ a: PageLoadAgent, by: pageTitleAgent });\n  },\n};\n\n/**\n * Page load support feature.\n *\n * Enables default {@link PageLoadAgent page load agents}:\n * 1. Page cache busting agent.\n *    If `<meta name=\"wesib-app-rev\">` tag is present in initial page, then sends this tag's content with each page load\n *    request as `__wesib_app_rev__` search parameter. If the loaded page contains the same named meta tag with\n *    different content, then reloads the page.\n *    This serves both as cache busting technique, and as server-side application updates handler.\n * 2. Scripts agent.\n *    Includes external scripts from loaded page into main document.\n * 3. Style agent.\n *    Replaces external styles of main document styles with the ones from loaded page.\n *    Unless loaded page has no external styles.\n * 4. Title agent.\n *    Applies loaded page title to bootstrap window. If there is one.\n */\nexport class PageLoadSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return PageLoadSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport { EventSupply } from 'fun-events';\nimport { StypOptions, StypRules } from 'style-producer';\n\n/**\n * Component style producer function interface.\n */\nexport type ComponentStyleProducer =\n/**\n * @param rules  CSS rules to produce stylesheets for. This can be e.g. a `StypRule.rules` to render all rules,\n * or a result of `StypRuleList.grab()` method call to render only matching ones.\n * @param opts  Production options.\n *\n * @returns Styles supply. Once cut off (i.e. its `off()` method is called) the produced stylesheets are removed.\n */\n    (\n        rules: StypRules,\n        opts?: StypOptions,\n    ) => EventSupply;\n\n/**\n * A key of component context value containing a component style producer.\n */\nexport const ComponentStyleProducer: SingleContextRef<ComponentStyleProducer> =\n    /*#__PURE__*/ new SingleContextKey<ComponentStyleProducer>('component-style-producer');\n","/**\n * @module @wesib/generic\n */\nimport { MultiContextKey, MultiContextRef } from 'context-values';\nimport { StypRender } from 'style-producer';\n\n/**\n * A CSS render that will be enabled by default by [[ComponentStyleProducer]].\n */\nexport type ComponentStypRender = StypRender;\n\n/**\n * A key of component context value containing component CSS renders.\n */\nexport const ComponentStypRender: MultiContextRef<ComponentStypRender> =\n    /*#__PURE__*/ new MultiContextKey<ComponentStypRender>('component-styp-render');\n","import { ComponentContext, DefaultNamespaceAliaser, ElementDef } from '@wesib/wesib';\nimport { ContextValues, SingleContextKey, SingleContextRef } from 'context-values';\nimport { css__naming, html__naming, NamespaceDef, QualifiedName } from 'namespace-aliaser';\n\n/**\n * @internal\n */\nexport type ElementIdClass = QualifiedName;\n\n/**\n * @internal\n */\nexport const ElementIdClass__NS = /*#__PURE*/ new NamespaceDef(\n    'https://wesib.github.io/ns/element-id-class',\n    'elic',\n    'element-id-class',\n);\n\n/**\n * @internal\n */\nexport const ElementIdClass: SingleContextRef<ElementIdClass> =\n    /*#__PURE__*/ new SingleContextKey('unique-element-class', { byDefault: assignElementId });\n\nlet uniqueClassSeq = 0;\n\nfunction assignElementId(contextValues: ContextValues): ElementIdClass {\n\n  const aliaser = contextValues.get(DefaultNamespaceAliaser);\n  const context = contextValues.get(ComponentContext);\n  const elementDef = context.get(ElementDef);\n  const name: string = elementDef.name ? html__naming.name(elementDef.name, aliaser) : 'component';\n  const local = `${name}#${++uniqueClassSeq}`;\n  const qualified = ElementIdClass__NS.name(aliaser(ElementIdClass__NS), local, css__naming);\n  const element = context.element as Element;\n\n  element.classList.add(qualified);\n\n  return qualified;\n}\n","import {\n  ArraySet,\n  BootstrapWindow,\n  ComponentContext,\n  ContentRoot,\n  DefaultNamespaceAliaser,\n  RenderScheduler,\n  ShadowContentRoot,\n} from '@wesib/wesib';\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { EventSupply } from 'fun-events';\nimport { produceBasicStyle, StypOptions, StypRender, StypRules, StypSelector } from 'style-producer';\nimport { ComponentStypRender } from './component-styp-render';\nimport { ElementIdClass } from './element-id-class.impl';\n\nconst ComponentStyleProducer__key =\n    /*#__PURE__*/ new SingleContextKey<ComponentStyleProducer>('component-style-producer:impl');\n\nconst hostSelector: StypSelector.Normalized = [{ e: ':host' }];\n\n/**\n * @internal\n */\nexport class ComponentStyleProducer {\n\n  static get [ContextKey__symbol](): ContextKey<ComponentStyleProducer> {\n    return ComponentStyleProducer__key;\n  }\n\n  constructor(\n      private readonly _context: ComponentContext,\n      private readonly _produce = produceBasicStyle,\n  ) {}\n\n  produce(rules: StypRules, options: StypOptions = {}): EventSupply {\n\n    const context = this._context;\n    const shadowRoot = context.get(ShadowContentRoot, { or: null });\n\n    return this._produce(rules, {\n      ...options,\n      document: options.document || context.get(BootstrapWindow).document,\n      parent: options.parent || context.get(ContentRoot),\n      rootSelector: options.rootSelector || buildRootSelector(),\n      schedule: options.schedule || buildScheduler(),\n      nsAlias: options.nsAlias || context.get(DefaultNamespaceAliaser),\n      render: buildRender(),\n    });\n\n    function buildScheduler(): (operation: () => void) => void {\n\n      const scheduler = context.get(RenderScheduler);\n\n      return operation => scheduler.newSchedule().schedule(operation);\n    }\n\n    function buildRootSelector(): StypSelector {\n      return shadowRoot ? hostSelector : [];\n    }\n\n    function buildRender(): StypRender | readonly StypRender[] | undefined {\n\n      const { render } = options;\n      const renders = new ArraySet<StypRender>(render)\n          .add(...context.get(ComponentStypRender));\n\n      if (!shadowRoot) {\n        renders.add(noShadowRender(context.get(ElementIdClass)));\n      }\n\n      return renders.value;\n    }\n  }\n\n}\n\nfunction noShadowRender(idClass: ElementIdClass): StypRender {\n  return {\n    order: -100,\n    render(producer, properties) {\n      producer.render(properties, {\n        selector: [{ c: [idClass] }, ...producer.selector],\n      });\n    },\n  };\n}\n","/**\n * @module @wesib/generic\n */\nimport { FeatureDef, FeatureDef__symbol, RenderSupport } from '@wesib/wesib';\nimport { ComponentStyleProducer } from './component-style-producer';\nimport { ComponentStyleProducer as ComponentStyleProducer_ } from './component-style-producer.impl';\n\nconst BasicStyleProducerSupport__feature: FeatureDef = {\n  needs: RenderSupport,\n  setup(setup) {\n    setup.perComponent({ as: ComponentStyleProducer_ });\n    setup.perComponent({\n      a: ComponentStyleProducer,\n      by(producer: ComponentStyleProducer_): ComponentStyleProducer {\n        return (rules, opts) => producer.produce(rules, opts);\n      },\n      with: [ComponentStyleProducer_],\n    });\n  },\n};\n\n/**\n * Basic style producer support feature.\n *\n * Depends on [style-producer].\n *\n * Unlike [[StyleProducerSupport]] feature this one does not enable default CSS renders.\n *\n * It is enabled automatically by {@link ProduceStyle @ProduceStyle} decorator.\n *\n * [style-producer]: https://www.npmjs.com/package/style-producer\n */\nexport class BasicStyleProducerSupport {\n\n  static get [FeatureDef__symbol]() {\n    return BasicStyleProducerSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ComponentContext } from '@wesib/wesib';\nimport { noop } from 'call-thru';\nimport { eventSupply, EventSupply, noEventSupply } from 'fun-events';\nimport { lazyStypRules, StypOptions, StypRules } from 'style-producer';\nimport { ComponentStyleProducer } from './component-style-producer';\n\n/**\n * Component CSS styles production options.\n */\nexport interface ComponentStypOptions extends StypOptions {\n\n  /**\n   * Whether to produce CSS stylesheets while component is not connected.\n   *\n   * Can be one of:\n   * - `true` - to produce stylesheets when first connected and update them even if component is disconnected after\n   *   that. This is the default, as stylesheet updates is expected to be rare operation.\n   * - `false` - to produce stylesheet whenever component is connected and remove them once disconnected.\n   *   This is a good choice if stylesheets are small and updated frequently.\n   * - `always` - to produce stylesheets immediately upon component readiness and update them offline after that.\n   *   This is the right choice if component needs a stylesheet ready before it is added to the document.\n   */\n  offline?: boolean | 'always';\n\n}\n\nexport const ComponentStypOptions = {\n\n  /**\n   * Produces and dynamically updates component's CSS stylesheets based on the given CSS rules.\n   *\n   * @param context  Target component context.\n   * @param rules  A source of CSS rules to produce stylesheets for.\n   * @param options  Production options.\n   *\n   * @returns CSS rules supply. Once cut off the produced stylesheets are removed.\n   */\n  produce(\n      context: ComponentContext,\n      rules: StypRules.Source,\n      options?: ComponentStypOptions,\n  ): EventSupply {\n\n    const css = lazyStypRules(rules);\n    const offline = options && options.offline;\n    const produceStyle = context.get(ComponentStyleProducer);\n\n    let cssSupply = noEventSupply();\n    let doProduceStyle: () => void;\n    const supply = eventSupply(reason => {\n      doProduceStyle = noop;\n      cssSupply.off(reason);\n    });\n\n    doProduceStyle = () => {\n      cssSupply = produceStyle(css, options).needs(supply);\n    };\n\n    switch (offline) {\n    case 'always':\n      context.whenReady(doProduceStyle);\n      break;\n    case false:\n      context.whenOn(connectionSupply => {\n        doProduceStyle();\n        cssSupply.needs(connectionSupply);\n      });\n      break;\n    default:\n      context.whenOn.once(doProduceStyle);\n    }\n\n    context.whenDestroyed(reason => supply.off(reason));\n\n    return supply;\n  },\n};\n","/**\n * @module @wesib/generic\n */\nimport { ComponentClass, ComponentDef } from '@wesib/wesib';\nimport { StypRules } from 'style-producer';\nimport { BasicStyleProducerSupport } from './basic-style-producer-support.feature';\nimport { ComponentStypOptions } from './component-styp-options';\n\n/**\n * A decorator of component property returning CSS rules to produce.\n *\n * Decorated property value should either contain a CSS rules source of type `StypRules.Source` or be a method\n * returning it.\n *\n * This decorator automatically enables [[BasicStyleProducerSupport]] feature.\n *\n * Utilizes [[ComponentStypOptions.produce]] function to produce CSS stylesheets.\n *\n * @typeparam T  A type of decorated component class.\n * @param options  Non-mandatory CSS style production options.\n *\n * @returns Component property decorator.\n */\nexport function ProduceStyle<T extends ComponentClass>(options?: ComponentStypOptions):\n    <V extends StypRules.Source | (() => StypRules.Source)>(\n        target: InstanceType<T>,\n        propertyKey: string | symbol,\n        descriptor?: TypedPropertyDescriptor<V>,\n    ) => any | void {\n  return (target: InstanceType<T>, propertyKey: string | symbol) => {\n\n    const componentType = target.constructor as T;\n\n    ComponentDef.define(\n        componentType,\n        {\n          define(defContext) {\n            defContext.onComponent(componentContext => {\n              componentContext.whenReady(({ component }) => {\n\n                const property = component[propertyKey];\n\n                ComponentStypOptions.produce(\n                    componentContext,\n                    typeof property === 'function' ? property.bind(component) : property,\n                    options,\n                );\n              });\n            });\n          },\n          feature: {\n            needs: [BasicStyleProducerSupport],\n          },\n        });\n  };\n}\n","/**\n * @module @wesib/generic\n */\nimport { ComponentContext, FeatureDef, FeatureDef__symbol } from '@wesib/wesib';\nimport { produceStyle } from 'style-producer';\nimport { BasicStyleProducerSupport } from './basic-style-producer-support.feature';\nimport { ComponentStyleProducer } from './component-style-producer';\nimport { ComponentStyleProducer as ComponentStyleProducer_ } from './component-style-producer.impl';\n\nconst StyleProducerSupport__feature: FeatureDef = {\n  has: BasicStyleProducerSupport,\n  setup(setup) {\n    setup.perComponent({\n      a: ComponentStyleProducer_,\n      by(context: ComponentContext) {\n        return new ComponentStyleProducer_(context, produceStyle);\n      },\n    });\n    setup.perComponent({\n      a: ComponentStyleProducer,\n      by(producer: ComponentStyleProducer_): ComponentStyleProducer {\n        return (rules, opts) => producer.produce(rules, opts);\n      },\n      with: [ComponentStyleProducer_],\n    });\n  },\n};\n\n/**\n * Style producer support feature.\n *\n * Depends on [style-producer].\n *\n * This is an implementation of [[BasicStyleProducerSupport]] feature that enables default CSS renders.\n *\n * It is _not_ enabled automatically by {@link ProduceStyle @ProduceStyle} decorator.\n *\n * [style-producer]: https://www.npmjs.com/package/style-producer\n */\nexport class StyleProducerSupport {\n\n  static get [FeatureDef__symbol]() {\n    return StyleProducerSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { RefStypRule, StypProperties, StypRule, StypRuleRef, StypRules } from 'style-producer';\nimport { ThemeStyle } from './theme-style';\n\nconst Theme__key = new SingleContextKey<Theme>('theme');\n\n/**\n * A hierarchy of CSS rules within single root.\n *\n * A component may use it to extract styling information.\n *\n * Current theme is available in bootstrap, definition, or component context. By default, only one theme is declared\n * per bootstrap. But this can be overridden.\n */\nexport abstract class Theme {\n\n  /**\n   * A key of bootstrap, definition, or component context value containing current theme instance.\n   */\n  static get [ContextKey__symbol](): ContextKey<Theme> {\n    return Theme__key;\n  }\n\n  /**\n   * Root CSS rule.\n   *\n   * All theme styling is represented as rules within this root.\n   */\n  abstract readonly root: StypRule;\n\n  /**\n   * Obtains CSS rule reference by its `referrer`.\n   *\n   * This is a helper method that resolves the given `referrer` against the `root` CSS rule of this theme.\n   *\n   * @param referrer  Target CSS rule referrer.\n   *\n   * @returns CSS rule reference.\n   */\n  ref<T extends StypProperties<T>>(referrer: RefStypRule<T>): StypRuleRef<T> {\n    return referrer(this.root);\n  }\n\n  /**\n   * Obtains a styling for the given theme styles.\n   *\n   * This method requests the registered {@link ThemeStyle theme styles} for CSS rules they provide.\n   * If some of the styles are not registered then uses the given style as provider.\n   *\n   * @param styles  The styles to obtain styling information for.\n   *\n   * @returns Dynamically updated CSS rule set containing the requested styling.\n   */\n  abstract style(...styles: ThemeStyle.Provider[]): StypRules;\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ContextKey, ContextKey__symbol, SingleContextKey } from 'context-values';\nimport { Theme } from './theme';\n\nconst ThemeFactory__key = new SingleContextKey<ThemeFactory>('theme-factory');\n\nexport abstract class ThemeFactory {\n\n  static get [ContextKey__symbol](): ContextKey<ThemeFactory> {\n    return ThemeFactory__key;\n  }\n\n  abstract newTheme(): Theme;\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { AIterable } from 'a-iterable';\nimport { ContextRef, ContextValueOpts, ContextValues, SimpleContextKey } from 'context-values';\nimport { stypRules, StypRules } from 'style-producer';\nimport { Theme } from './theme';\n\n/**\n * Theme style provides part of the theme styling information.\n *\n * Theme style(s) can be provided in bootstrap context. They are applied to the theme at most once, when requested\n * by calling [[Theme.style]] method.\n *\n * Theme style is either a function, or an extension of another theme style.\n */\nexport type ThemeStyle = ThemeStyle.Provider | ThemeStyle.Extension;\n\nexport namespace ThemeStyle {\n\n  /**\n   * Theme style provider function.\n   *\n   * This function is called at most once per theme to apply styles to the latter. E.g. by declaring CSS rules.\n   *\n   * This function is used as an identifier of particular style and can be extended using [[ThemeStyle.Extension]].\n   *\n   * It is not absolutely necessary to register style provider. It will be applied on request anyway.\n   *\n   * @param theme  A theme to apply styling to.\n   *\n   * @returns Dynamically updated CSS rule set containing the applied styling.\n   */\n  export type Provider = (this: void, theme: Theme) => StypRules;\n\n  /**\n   * Theme style extension.\n   *\n   * An extension should be registered in bootstrap context in order to be applied.\n   */\n  export interface Extension {\n\n    /**\n     * A theme style provider to extend.\n     */\n    readonly style: ThemeStyle.Provider;\n\n    /**\n     * Extends the theme style.\n     *\n     * This method is called at most once per theme to apply styles to the latter. E.g. by declaring CSS rules.\n     *\n     * It will be called after the style provider it extends.\n     *\n     * @param theme  A theme to apply styling to.\n     *\n     * @returns Dynamically updated CSS rule set containing the applied styling.\n     */\n    provide(theme: Theme): StypRules;\n\n  }\n\n  /**\n   * A function obtaining combined style provider. I.e. the one that applies the style along with all extensions.\n   *\n   * @param A  provider of theme style to apply.\n   *\n   * @returns A combined theme style provider.\n   */\n  export type ById = (this: void, style: ThemeStyle.Provider) => ThemeStyle.Provider;\n\n}\n\nclass ThemeStyleKey extends SimpleContextKey<ThemeStyle.ById, ThemeStyle> {\n\n  constructor() {\n    super('theme-style');\n  }\n\n  grow<Ctx extends ContextValues>(\n      opts: ContextValueOpts<Ctx, ThemeStyle.ById, ThemeStyle, AIterable<ThemeStyle>>,\n  ): ThemeStyle.ById | null | undefined {\n\n    const providers = new Map<ThemeStyle.Provider, [ThemeStyle.Provider, boolean]>();\n\n    opts.seed.forEach(style => {\n\n      let key: ThemeStyle.Provider;\n      let provider: ThemeStyle.Provider;\n      let isId: boolean;\n\n      if (typeof style === 'function') {\n        key = provider = style;\n        isId = true;\n      } else {\n        key = style.style;\n        provider = style.provide.bind(style);\n        isId = false;\n      }\n\n      const prev = providers.get(key);\n\n      if (!prev) {\n        providers.set(key, [provider, isId]);\n      } else {\n\n        const [prevProvider, hasId] = prev;\n\n        providers.set(\n            key,\n            [\n              isId ? combineStyles(provider, prevProvider) : combineStyles(prevProvider, provider),\n              isId || hasId,\n            ]);\n      }\n    });\n\n    return providers.size ? byId : opts.byDefault(() => byId);\n\n    function byId(id: ThemeStyle.Provider): ThemeStyle.Provider {\n\n      const existing = providers.get(id);\n\n      if (!existing) {\n        return id;\n      }\n\n      const [provider, hasId] = existing;\n\n      return hasId ? provider : combineStyles(id, provider);\n    }\n  }\n\n}\n\n/**\n * A key of bootstrap context value containing theme styles.\n */\nexport const ThemeStyle: ContextRef<ThemeStyle.ById, ThemeStyle> = new ThemeStyleKey();\n\nfunction combineStyles(first: ThemeStyle.Provider, second: ThemeStyle.Provider): ThemeStyle.Provider {\n  return theme => stypRules(first(theme), second(theme));\n}\n","import { lazyStypRules, stypRoot, StypRule, StypRules } from 'style-producer';\nimport { Theme as Theme_ } from './theme';\nimport { ThemeStyle } from './theme-style';\n\n/**\n * @internal\n */\nexport class Theme extends Theme_ {\n\n  readonly root: StypRule = stypRoot();\n  private readonly _rules = new Map<ThemeStyle.Provider, StypRules>();\n\n  constructor(private readonly _styles: ThemeStyle.ById) {\n    super();\n  }\n\n  style(...styles: ThemeStyle.Provider[]): StypRules {\n\n    const theme = this;\n\n    return lazyStypRules(...styles.reduce<StypRules[]>(addStyleRules, []));\n\n    function addStyleRules(target: StypRules[], style: ThemeStyle.Provider) {\n\n      const existing = theme._rules.get(style);\n\n      if (existing) {\n        target.push(existing);\n      } else {\n\n        const constructed = theme._styles(style)(theme);\n\n        theme._rules.set(style, constructed);\n        target.push(constructed);\n      }\n\n      return target;\n    }\n  }\n\n}\n","import { ThemeFactory as ThemeFactory_ } from './theme-factory';\nimport { ThemeStyle } from './theme-style';\nimport { Theme } from './theme.impl';\n\n/**\n * @internal\n */\nexport class ThemeFactory extends ThemeFactory_ {\n\n  constructor(private readonly _styles: ThemeStyle.ById) {\n    super();\n  }\n\n  newTheme() {\n    return new Theme(this._styles);\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { FeatureDef, FeatureDef__symbol } from '@wesib/wesib';\nimport { BasicStyleProducerSupport } from '../styp';\nimport { Theme } from './theme';\nimport { ThemeFactory } from './theme-factory';\nimport { ThemeFactory as ThemeFactory_ } from './theme-factory.impl';\nimport { ThemeStyle } from './theme-style';\n\nconst ThemeSupport__feature: FeatureDef = {\n  needs: BasicStyleProducerSupport,\n  setup(setup) {\n    setup.provide({ a: ThemeFactory, as: ThemeFactory_, with: [ThemeStyle] });\n    setup.provide({\n      a: Theme,\n      by(factory: ThemeFactory) {\n        return factory.newTheme();\n      },\n      with: [ThemeFactory],\n    });\n  },\n};\n\n/**\n * Theme support feature.\n *\n * This needs to be enabled in order [[Theme]] and [[ThemeFactory]] to be available.\n */\nexport class ThemeSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return ThemeSupport__feature;\n  }\n\n}\n","/**\n * @module @wesib/generic\n */\nimport { ComponentClass, ComponentContext } from '@wesib/wesib';\nimport { AIterable, ArrayLikeIterable } from 'a-iterable';\nimport { SingleContextKey, SingleContextRef } from 'context-values';\nimport {\n  AfterEvent,\n  AfterEvent__symbol,\n  EventKeeper,\n  EventSender,\n  OnEvent,\n  OnEvent__symbol,\n  ValueTracker,\n} from 'fun-events';\n\n/**\n * Component tree node representing arbitrary element.\n */\nexport abstract class ElementNode {\n\n  /**\n   * The element itself.\n   */\n  abstract readonly element: any;\n\n  /**\n   * A context of component bound to this element, if any.\n   */\n  abstract readonly context?: ComponentContext<any>;\n\n  /**\n   * Parent element node, or `null` if element has no parent.\n   */\n  abstract readonly parent: ElementNode | null;\n\n  /**\n   * Select element nodes matching the given selector.\n   *\n   * @param selector  Simple CSS selector of nested components. E.g. component element name.\n   * @param opts  Element selector options.\n   */\n  abstract select(\n      selector: string,\n      opts: ElementNode.ElementSelectorOpts,\n  ): ElementNodeList;\n\n  /**\n   * Select component nodes matching the given selector.\n   *\n   * @param selector  Simple CSS selector of nested components (e.g. component element name), or component type.\n   * The latter should have custom element name.\n   * @param opts  Component selector options.\n   */\n  abstract select(\n      selector: string | ComponentClass<any>,\n      opts?: ElementNode.ComponentSelectorOpts,\n  ): ElementNodeList<ComponentNode>;\n\n  /**\n   * Returns a value tracker of element's attribute.\n   *\n   * @param name  Target attribute name.\n   *\n   * @returns Target attribute's value tracker.\n   */\n  abstract attribute(name: string): ValueTracker<string | null, string>;\n\n  /**\n   * Returns a value tracker of element's property.\n   *\n   * The changes are tracked with `StateTracker`. So it is expected that the target property notifies on its changes\n   * with state updater. E.g. when it is defined by `@DomProperty` decorator.\n   *\n   * @param key  Target property key.\n   *\n   * @returns Target property's value tracker.\n   */\n  abstract property<V>(key: PropertyKey): ValueTracker<V>;\n\n}\n\nexport namespace ElementNode {\n\n  /**\n   * Element node representing raw element no bound to any component.\n   */\n  export interface Raw extends ElementNode {\n\n    readonly context?: undefined;\n\n  }\n\n  /**\n   * Any element node. Either bound to some component or not.\n   */\n  export type Any = Raw | ComponentNode;\n\n  /**\n   * Element node selector options.\n   */\n  export interface SelectorOpts {\n\n    /**\n     * Set to `true` to select arbitrary nodes. Otherwise - select only component nodes.\n     */\n    all?: boolean;\n\n    /**\n     * Set to `true` to select from entire subtree. Otherwise - select from element child nodes only.\n     */\n    deep?: boolean;\n\n  }\n\n  /**\n   * Component node selector options.\n   */\n  export interface ComponentSelectorOpts extends SelectorOpts {\n\n    all?: false;\n\n  }\n\n  /**\n   * Any element node selector options.\n   */\n  export interface ElementSelectorOpts extends SelectorOpts {\n\n    /**\n     * Set to `true` to select arbitrary nodes. Otherwise - select only component nodes.\n     */\n    all: true;\n\n  }\n\n}\n\n/**\n * Element node representing an element bound to some component.\n */\nexport interface ComponentNode<T extends object = object> extends ElementNode {\n\n  readonly context: ComponentContext<T>;\n\n}\n\n/**\n * A key of component context value containing a component node instance.\n */\nexport const ComponentNode: SingleContextRef<ComponentNode> =\n    /*#__PURE__*/ new SingleContextKey<ComponentNode>('component-node');\n\n/**\n * Dynamic list of selected component tree nodes.\n *\n * It is an iterable of nodes.\n *\n * Implements an `EventSender` interface by sending added and removed nodes arrays.\n *\n * Implements an `EventKeeper` interface by sending updated node list.\n */\nexport abstract class ElementNodeList<N extends ElementNode = ElementNode.Any>\n    extends AIterable<N>\n    implements EventSender<[N[], N[]]>, EventKeeper<[ElementNodeList<N>]> {\n\n  /**\n   * An `OnEvent` sender of list changes. Sends arrays of added and removed nodes.\n   *\n   * The `[OnEvent__symbol]` property is an alias of this one.\n   */\n  abstract readonly onUpdate: OnEvent<[N[], N[]]>;\n\n  get [OnEvent__symbol](): OnEvent<[N[], N[]]> {\n    return this.onUpdate;\n  }\n\n  /**\n   * An `AfterEvent` keeper of current node list.\n   *\n   * The `[AfterEvent__symbol]` property is an alias of this one.\n   */\n  abstract readonly read: AfterEvent<[ElementNodeList<N>]>;\n\n  get [AfterEvent__symbol](): AfterEvent<[ElementNodeList<N>]> {\n    return this.read;\n  }\n\n  /**\n   * An `AfterEvent` keeper of node list changes.\n   *\n   * Sends an iterables of added and removed nodes. Sends current nodes immediately upon receiver registration.\n   */\n  abstract readonly track: AfterEvent<[ArrayLikeIterable<N>, ArrayLikeIterable<N>]>;\n\n  /**\n   * An `AfterEvent` keeper of the first node in this list.\n   */\n  abstract readonly first: AfterEvent<[N?]>;\n\n}\n","import { BootstrapContext, BootstrapWindow, ComponentClass, DefaultNamespaceAliaser } from '@wesib/wesib';\nimport { AIterable, ArrayLikeIterable, filterIt, itsEach, itsFirst, itsIterator, mapIt, overArray } from 'a-iterable';\nimport { nextArgs } from 'call-thru';\nimport { AfterEvent, afterEventBy, afterSupplied, EventEmitter, eventSupply, OnEvent, onEventBy } from 'fun-events';\nimport { html__naming } from 'namespace-aliaser';\nimport { ElementNode, ElementNodeList as ElementNodeList_ } from './element-node';\n\nconst WATCH_CHILD_LIST = { childList: true };\nconst WATCH_DEEP = { childList: true, subtree: true };\n\n/**\n * @internal\n */\nexport function elementNodeList<N extends ElementNode>(\n    bsContext: BootstrapContext,\n    root: Element,\n    selectorOrType: string | ComponentClass<any>,\n    nodeOf: (node: Element, optional?: boolean) => N | undefined,\n    { deep, all }: ElementNode.SelectorOpts,\n): ElementNodeList_<N> {\n\n  const updates = new EventEmitter<[N[], N[]]>();\n  const init: MutationObserverInit = deep ? WATCH_DEEP : WATCH_CHILD_LIST;\n  let cache = new Set<Element>();\n  let iterable: Iterable<N> | undefined;\n  let selector: string | undefined;\n\n  if (typeof selectorOrType === 'string') {\n    selector = selectorOrType;\n  } else {\n    bsContext.whenDefined(selectorOrType).then(({ elementDef: { name } }) => {\n      if (name) {\n        selector = html__naming.name(name, bsContext.get(DefaultNamespaceAliaser));\n        if (updates.size) {\n\n          const selected = refresh();\n\n          if (selected.size) {\n\n            const added = [\n              ...filterIt<N | undefined, N>(\n                  mapIt(selected, node => nodeOf(node)),\n                  isPresent,\n              ),\n            ];\n\n            if (added.length) {\n              updates.send(added, []);\n            }\n          }\n        }\n      }\n    });\n  }\n\n  const Observer: typeof MutationObserver = (bsContext.get(BootstrapWindow) as any).MutationObserver;\n  const observer = new Observer(update);\n  let nodeList: ElementNodeList;\n\n  const onUpdate = onEventBy<[N[], N[]]>(receiver => {\n\n    const firstReceiver = !updates.size;\n    const supply = updates.on(receiver);\n\n    if (firstReceiver) {\n      refresh();\n      observer.observe(root, init);\n    }\n\n    return eventSupply(reason => {\n      supply.off(reason);\n      if (!updates.size) {\n        observer.disconnect();\n      }\n    }).needs(supply);\n  });\n  const read = afterEventBy<[ElementNodeList]>(onUpdate.thru(() => nodeList), () => [nodeList]);\n  const onTrackUpdate: OnEvent<[ArrayLikeIterable<N>, ArrayLikeIterable<N>]> =\n      onUpdate.thru((added, removed) => nextArgs(AIterable.of(added), AIterable.of(removed)));\n  const track = afterEventBy<[ArrayLikeIterable<N>, ArrayLikeIterable<N>]>(receiver => {\n\n    const initialEmitter = new EventEmitter<[ArrayLikeIterable<N>, ArrayLikeIterable<N>]>();\n\n    initialEmitter.on(receiver);\n    initialEmitter.send(nodeList, AIterable.of([]));\n\n    onTrackUpdate(receiver);\n  });\n  const first: AfterEvent<[N?]> = afterSupplied(read).keep.thru(itsFirst);\n\n  if (!all) {\n    root.addEventListener('wesib:component', event => {\n\n      const element = event.target as Element;\n\n      if (cache.has(element)) {\n\n        const node = nodeOf(element) as N;\n\n        updates.send([node], [node]);\n      }\n    });\n  }\n\n  class ElementNodeList extends ElementNodeList_<N> {\n\n    get onUpdate() {\n      return onUpdate;\n    }\n\n    get read() {\n      return read;\n    }\n\n    get track() {\n      return track;\n    }\n\n    get first() {\n      return first;\n    }\n\n    [Symbol.iterator]() {\n      return itsIterator(iterable || (iterable = filterIt<N | undefined, N>(\n          mapIt(\n              elements(),\n              element => nodeOf(element),\n          ),\n          isPresent,\n      )));\n    }\n\n  }\n\n  return nodeList = new ElementNodeList();\n\n  function elements(): Set<Element> {\n    return updates.size ? cache : refresh();\n  }\n\n  function refresh(): Set<Element> {\n    iterable = undefined;\n    return cache = select();\n  }\n\n  function select(): Set<Element> {\n\n    const sel = selector;\n\n    if (!sel) {\n      return new Set();\n    }\n    if (deep) {\n      return new Set(overArray(root.querySelectorAll(sel)));\n    }\n    return new Set(\n        filterIt(\n            overArray(root.children),\n            item => item.matches(sel),\n        ),\n    );\n  }\n\n  function update(mutations: MutationRecord[]) {\n\n    const added: N[] = [];\n    const removed: N[] = [];\n\n    mutations.forEach(mutation => {\n      itsEach(\n          filterIt<N | undefined, N>(\n              mapIt(overArray(mutation.removedNodes), removeNode),\n              isPresent,\n          ),\n          node => removed.push(node),\n      );\n      itsEach(\n          filterIt<N | undefined, N>(\n              mapIt(overArray(mutation.addedNodes), addNode),\n              isPresent,\n          ),\n          node => added.push(node),\n      );\n    });\n    if (added.length || removed.length) {\n      updates.send(added, removed);\n    }\n  }\n\n  function addNode(node: Node): N | undefined {\n    if (!isElement(node)) {\n      return;\n    }\n    if (selector && node.matches(selector) && !cache.has(node)) {\n      cache.add(node);\n      return nodeOf(node);\n    }\n    return;\n  }\n\n  function removeNode(node: Node): N | undefined {\n    if (!isElement(node)) {\n      return;\n    }\n    if (!cache.delete(node)) {\n      return;\n    }\n    return nodeOf(node, true);\n  }\n\n}\n\nfunction isElement(node: Node): node is Element {\n  return node.nodeType === Node.ELEMENT_NODE;\n}\n\nfunction isPresent<T>(item: T | undefined): item is T {\n  return item != null;\n}\n","import { BootstrapContext, BootstrapWindow } from '@wesib/wesib';\nimport {\n  EventEmitter,\n  eventReceiver,\n  EventReceiver, eventSupply,\n  EventSupply,\n  noEventSupply,\n  OnEvent,\n  onEventBy,\n  ValueTracker,\n} from 'fun-events';\n\nclass AttributesObserver {\n\n  private readonly _emitters = new Map<string, EventEmitter<[string, string | null]>>();\n  private _observer?: MutationObserver;\n\n  constructor(private readonly _bs: BootstrapContext, readonly element: Element) {\n  }\n\n  private get observer(): MutationObserver {\n    if (this._observer) {\n      return this._observer;\n    }\n\n    const Observer: typeof MutationObserver = (this._bs.get(BootstrapWindow) as any).MutationObserver;\n\n    return this._observer = new Observer(mutations => this._update(mutations));\n  }\n\n  observe(name: string, receiver: EventReceiver<[string, string | null]>): EventSupply {\n\n    const self = this;\n    const observer = this.observer;\n    const emitter = this._emitter(name);\n    const rcv = eventReceiver(receiver);\n    const supply = emitter.on({\n      supply: eventSupply(() => {\n        this._emitters.delete(name);\n        observer.disconnect();\n        if (this._emitters.size) {\n          reconnect();\n        } else {\n          this._observer = undefined;\n        }\n      }).needs(rcv.supply),\n      receive: (ctx, newValue, oldValue) => rcv.receive(ctx, newValue, oldValue),\n    });\n\n    observer.disconnect();\n    reconnect();\n\n    return supply;\n\n    function reconnect() {\n      self._update(observer.takeRecords());\n      observer.observe(self.element, {\n        attributes: true,\n        attributeOldValue: true,\n        attributeFilter: [...self._emitters.keys()],\n      });\n    }\n  }\n\n  private _update(mutations: MutationRecord[]) {\n    mutations.forEach(mutation => {\n\n      const attributeName = mutation.attributeName as string;\n      const emitter = this._emitters.get(attributeName);\n\n      if (emitter) {\n        emitter.send(this.element.getAttribute(attributeName) as string, mutation.oldValue);\n      }\n    });\n  }\n\n  private _emitter(name: string): EventEmitter<[string, string | null]> {\n\n    const emitter = new EventEmitter<[string, string | null]>();\n\n    this._emitters.set(name, emitter);\n\n    return emitter;\n  }\n\n}\n\nclass AttributeTracker extends ValueTracker<string | null, string> {\n\n  private readonly _updates = new EventEmitter<[string, string | null]>();\n  readonly on: OnEvent<[string, string | null]>;\n\n  constructor(\n      private readonly _observer: AttributesObserver,\n      private readonly _name: string,\n  ) {\n    super();\n\n    let observeSupply = noEventSupply();\n\n    this.on = onEventBy(receiver => {\n      if (!this._updates.size) {\n        observeSupply = this._observer.observe(\n            _name,\n            (newValue, oldValue) => this._updates.send(newValue, oldValue),\n        );\n      }\n      receiver.supply.needs(observeSupply);\n      this._updates.on(receiver).whenOff(reason => {\n        if (!this._updates.size) {\n          observeSupply.off(reason);\n        }\n      });\n    });\n  }\n\n  get it(): string | null {\n    return this._observer.element.getAttribute(this._name);\n  }\n\n  set it(value: string | null) {\n    this._observer.element.setAttribute(this._name, value as string);\n  }\n\n  done(reason?: any): this {\n    this._updates.done(reason);\n    return this;\n  }\n\n}\n\n/**\n * @internal\n */\nexport class NodeAttributes {\n\n  private readonly _attrs = new Map<string, AttributeTracker>();\n  private readonly _observer: AttributesObserver;\n\n  constructor(bs: BootstrapContext, element: any) {\n    this._observer = new AttributesObserver(bs, element);\n  }\n\n  get(name: string): ValueTracker<string | null, string> {\n\n    const existing = this._attrs.get(name);\n\n    if (existing) {\n      return existing;\n    }\n\n    const created = new AttributeTracker(this._observer, name);\n\n    this._attrs.set(name, created);\n\n    return created;\n  }\n\n}\n","import { ComponentContext, ComponentState, domPropertyPathTo } from '@wesib/wesib';\nimport { EventEmitter, eventSupply, noEventSupply, OnEvent, ValueTracker } from 'fun-events';\n\nclass PropertyTracker<T> extends ValueTracker<T> {\n\n  private readonly _updates = new EventEmitter<[T, T]>();\n  private _supply = noEventSupply();\n\n  constructor(\n      private readonly _element: any,\n      private readonly _key: PropertyKey) {\n    super();\n  }\n\n  get on(): OnEvent<[T, T]> {\n    return this._updates.on;\n  }\n\n  bind(context: ComponentContext) {\n\n    const propertyState = context.get(ComponentState).track(domPropertyPathTo(this._key));\n\n    this._supply = propertyState.onUpdate({\n      supply: eventSupply().whenOff(reason => this._updates.done(reason)),\n      receive: (_ctx, _path, newValue: any, oldValue: any) => this._updates.send(newValue, oldValue),\n    });\n  }\n\n  get it(): T {\n    return this._element[this._key];\n  }\n\n  set it(value: T) {\n    this._element[this._key] = value;\n  }\n\n  done(reason?: any): this {\n    this._supply.off(reason);\n    return this;\n  }\n\n}\n\n/**\n * @internal\n */\nexport class NodeProperties {\n\n  private readonly _props = new Map<PropertyKey, PropertyTracker<any>>();\n  private _context?: ComponentContext<any>;\n\n  constructor(private readonly _element: any) {\n  }\n\n  bind(context: ComponentContext) {\n    this._context = context;\n    this._props.forEach(prop => prop.bind(context));\n  }\n\n  get<T>(key: PropertyKey): ValueTracker<T> {\n\n    const existing = this._props.get(key);\n\n    if (existing) {\n      return existing;\n    }\n\n    const created = new PropertyTracker<any>(this._element, key);\n\n    if (this._context) {\n      created.bind(this._context);\n    }\n    this._props.set(key, created);\n\n    return created;\n  }\n\n}\n","import {\n  BootstrapContext,\n  ComponentClass,\n  ComponentContext,\n  ComponentContext__symbol,\n  ComponentEvent,\n  ElementAdapter,\n} from '@wesib/wesib';\nimport { ValueTracker } from 'fun-events';\nimport { ComponentNode, ElementNode as ElementNode_, ElementNodeList } from './element-node';\nimport { elementNodeList } from './element-node-list.impl';\nimport { NodeAttributes } from './node-attributes.impl';\nimport { NodeProperties } from './node-properties.impl';\n\nconst ElementNode__symbol = /*#__PURE__*/ Symbol('element-node');\n\nclass ElementNode extends ElementNode_ {\n\n  private readonly _attrs: NodeAttributes;\n  private readonly _props: NodeProperties;\n\n  constructor(private readonly _bs: BootstrapContext, readonly element: Element) {\n    super();\n    this._attrs = new NodeAttributes(_bs, element);\n    this._props = new NodeProperties(element);\n    (element as any)[ElementNode__symbol] = this;\n\n    const context = (element as any)[ComponentContext__symbol] as ComponentContext<any> | undefined;\n\n    if (context) {\n      this._bind(context);\n    } else {\n      element.addEventListener('wesib:component', event => this._bind((event as ComponentEvent).context));\n    }\n  }\n\n  get context(): ComponentContext<any> | undefined {\n    return (this.element as any)[ComponentContext__symbol];\n  }\n\n  get parent() {\n\n    const parent = this.element.parentElement;\n\n    return parent != null ? elementNodeOf(this._bs, parent) : null;\n  }\n\n  select(selector: string | ComponentClass<any>, opts?: ElementNode_.SelectorOpts): ElementNodeList<any> {\n    return selectNodes(this._bs, this.element, selector, opts);\n  }\n\n  attribute(name: string): ValueTracker<string | null, string> {\n    return this._attrs.get(name);\n  }\n\n  property<V>(key: PropertyKey): ValueTracker<V> {\n    return this._props.get(key);\n  }\n\n  private _bind(context: ComponentContext) {\n    this._props.bind(context);\n  }\n\n}\n\n/**\n * @internal\n */\nexport function elementNodeOf(bs: BootstrapContext, element: Element, optional?: boolean): ElementNode_.Any {\n\n  const found: ElementNode_.Any = (element as any)[ElementNode__symbol];\n\n  if (optional || found) {\n    return found;\n  }\n\n  return new ElementNode(bs, element) as ElementNode_.Raw;\n}\n\nfunction selectNodes(\n    bs: BootstrapContext,\n    root: Element,\n    selector: string | ComponentClass<any>,\n    opts: ElementNode_.SelectorOpts = {},\n): ElementNodeList<any> {\n\n  const adapter = bs.get(ElementAdapter);\n\n  if (opts.all) {\n    return elementNodeList<ElementNode_.Any>(\n        bs,\n        root,\n        selector,\n        (element, optional) => elementNodeOf(bs, element, optional),\n        opts,\n    );\n  }\n  return elementNodeList<ComponentNode<any>>(\n      bs,\n      root,\n      selector,\n      (element, optional) => {\n        if (adapter(element)) {\n          return elementNodeOf(bs, element, optional) as ComponentNode<any>;\n        }\n        return undefined;\n      },\n      opts,\n  );\n}\n","/**\n * @module @wesib/generic\n */\nimport { BootstrapContext, ComponentContext, FeatureDef, FeatureDef__symbol, StateSupport } from '@wesib/wesib';\nimport { ComponentNode } from './element-node';\nimport { elementNodeOf } from './element-node.impl';\n\nconst ComponentTreeSupport__feature: FeatureDef = {\n  needs: StateSupport,\n  setup(setup) {\n    setup.perComponent({\n      a: ComponentNode,\n      by(context: ComponentContext) {\n        return elementNodeOf(context.get(BootstrapContext), context.element) as ComponentNode;\n      },\n    });\n  },\n};\n\n/**\n * Component tree support feature.\n *\n * Provides a [[ComponentNode]] instance for each component.\n */\nexport class ComponentTreeSupport {\n\n  static get [FeatureDef__symbol](): FeatureDef {\n    return ComponentTreeSupport__feature;\n  }\n\n}\n"],"names":["BootstrapContext__key","SingleContextKey","BootstrapContext","ContextValues","ContextKey__symbol","bootstrapDefault","provide","context","key","bootstrapContext","get","ComponentFactory__key","ComponentFactory","[object Object]","element","mount","this","mountTo","connected","BootstrapWindow","byDefault","window","DefaultNamespaceAliaser","ctx","document","body","isArray","value","Array","ArraySet","AIterable","super","items","Set","size","Symbol","iterator","next","forEach","item","add","mergeFunctions","first","second","merge","_f","s","args","apply","MetaAccessor","symbol","type","def","hasOwnProperty","undefined","superType","superClassOf","satisfying","prototype","Object","getPrototypeOf","constructor","superDef","of","defs","prevDef","defineProperty","configurable","PromiseResolver","promise","Promise","resolve","reject","_resolve","_reject","error","FeatureDef__symbol","FeatureMeta","reduce","prev","needs","has","setup","init","meta","FeatureDef","featureType","define","Feature","FeatureContext_key","FeatureContext","componentType","whenDefined","feature","load","FeatureNeedsError","Error","reason","need","name","FeatureRef","AfterEvent__symbol","read","ComponentDef__symbol","ComponentMeta","ComponentDef","Component","ComponentContext__key","ComponentEventDispatcher__key","dispatch","event","dispatchEvent","on","DomEventDispatcher","ContentRoot","StateUpdater","FnContextKey","valueProvider","noop","ComponentContext__symbol","ComponentContext","updateComponentState","bind","TypeError","contentRoot","newValue","oldValue","ComponentEvent","Event","eventInitDict","target","ComponentMount","component","ElementAdapter","ContextUpKey","opts","defaultElementAdapter","result","seed","adapters","combined","adapter","ComponentFactory__symbol","componentFactoryOf","factory","CustomElements__key","values","customElements","nsAlias","CustomElements","componentTypeOrName","elementType","isQualifiedName","html__naming","extend","elementDef","extends","componentResolver","ComponentResolver__symbol","DefinitionContext__key","ElementDef","elementExtend","HTMLElement","DefinitionContext","BootstrapContextRegistry__key","BootstrapContextRegistry","ContextRegistry","a","is","newValues","ComponentContextRegistry__key","ComponentContextRegistry","initial","DefinitionContextRegistry__key","DefinitionContextRegistry","ElementBuilder","bsContext","definitionContextRegistry_global","componentContextRegistry_global","definitions","EventEmitter","components","onComponent","componentContextRegistry_perType","ready","trackValue","whenReady","thru","cls","nextArgs","nextSkip","definitionContext","createComponentContextRegistry","append","componentFactory","ComponentFactory_","createComponent","registry","elementSuper","createMount","ComponentMount_","elementStatus","it","el","doc","ownerDocument","contains","checkConnected","componentCreated","DefinitionContext_","once","definitionContextRegistry","seedIn","perDefinition","spec","perComponent","call","send","componentContextRegistry","Element","createElementType","enumerable","status","destructionReason","whenOff","whenDestroyed","sts","whenOn","offSupply","eventSupply","off","ComponentContext_","done","parentNode","parentElement","removeChild","removeElement","ComponentStatus__symbol","writable","proto","prevContext","newComponent","bubbles","doNotAdd","ComponentRegistry","_context","_definitionQueue","definition","push","buildElement","onFeaturedDefSetup","unloader","onSetup","FeaturedDefSetup__symbol","tracker","featuredDefSetup","onEventBy","receiver","supply","tillOff","receive","FeatureKey__symbol","FeatureKey","feat","from","keep","preferredFeatureClause","afterEventBy","origin","source","afterThe","stageId","afterAll","clause","deps","loadFeatureDeps","dig_","request","thru_","loader","to","stage","ownLoader","FeatureLoader","ownSource","rcv","unload","share","lastLoader","preventDuplicateLoader","clauses","preferred","required","afterEach","map","dep","presentFeatureDeps","filterIt","mapIt","isPresent","down","_down","_stage","SetupFeatureStage","then","after","state","lastStage","id","prevStage","stop","FeatureStage","_stop","action","all","perDep","unloads","adder","itsEach","overArray","reverse","length","newUnloader","componentRegistry","elementBuilder","onDefinition","st","bs","by","newFeatureContext","InitFeatureStage","async","ActiveFeatureStage","FeatureRequest","_requester","_revoke","requester","isClause","_revokeBy","unuse","_uses","revoke","FeatureRequester__key","FeatureRequester","Map","existing","_map","reuse","delete","set","bootstrapComponents","features","bootstrapContextRegistry","create","complete","newNamespaceAliaser","info","_ctx","ldr","whenDown","initBootstrap","AttributePath__root","attributeStateUpdate","updateState","attributePathTo","update","defaultUpdateState","path","AttributeRegistrar","AttributeRegistry__key","AttributeRegistry","_MutationObserver","MutationObserver","callback","_attrs","attrs","observedAttributes","keys","attributeFilter","records","record","attributeName","getAttribute","observe","attributes","attributeOldValue","AttributesSupport__feature","as","with","componentContext","AttributesSupport","Attribute","propertyKey","descriptor","toString","parseAttributeDef","newDesc","setAttribute","DomPropertyPath__root","ComponentState__key","ComponentState","StateTracker","StateSupport__feature","StateSupport","RenderScheduler__key","RenderScheduler","ElementRender","render","stateTracker","schedule","newSchedule","offline","rendered","stateSupply","onUpdate","scheduleRender","renderElement","newRender","RenderSupport__feature","RenderScheduler_","createRenderScheduler","RenderSupport","scheduled","previouslyScheduled","requestAnimationFrame","Render","defContext","ShadowContentRoot","ShadowDomEvent","shadowRoot","ShadowRootBuilder","ShadowDomSupport__feature","attachShadow","ShadowDomSupport","shadowRootOf","defaultShadowContentDef","mode","ShadowContentDef","componentDef","or","AttachShadow","FetchAgentKey","agent","agents","fetch","agentIdx","agentRequest","onSupplied","nextRequest","combineFetchAgents","defaultFetchAgent","HttpFetchAgent","HttpFetchAborted","HttpFetch","input","Request","responseEmitter","abortController","AbortController","signal","abort","response","customSignal","aborted","catch","EnterPageEvent","cancelable","when","LeavePageEvent","StayOnPageEvent","Navigation__key","Navigation","OnEvent__symbol","go","NavigationAgentKey","combinedAgent","sources","navigate","agentTo","url","nextURL","title","nextTitle","data","nextData","URL","String","baseURI","visited","current","ref","put","NavigationAgent","PageParam__symbol","PageParam","PageParamContext","RoutingHistory__key","NavHistory","_document","_location","location","_history","history","_uid","btoa","Math","random","extractNavData","entry","newEntry","href","_entries","enter","replaceState","_historyState","PageEntry","_lastId","toEntry","page","pushState","_enter","fromEntry","e","_forget","leave","popState","_changeHash","uid","pageId","existingEntry","transfer","oldEntry","forget","NAV_DATA_KEY","_params","_status","handle","param","newHandle","entries","transferred","at","stay","clear","_update","createNavigation","dispatcher","navHistory","onEnter","onLeave","onStay","onEvent","onAny","nav","nextEntry","readPage","hashChange","Navigation_","delta","toURL","withParam","applyParams","open","replace","whenLeave","urlTarget","urlTargetOf","doNavigate","prepared","leavePage","finalTarget","t","prepare","NavigationSupport__feature","cachingPageLoader","pageUrl","sup","tracked","onLoad","trackSupply","resp","num","requested","PageLoadAbortError","PageLoadRequests","_navigation","_loader","fragments","fragment","itsIterator","flatMapIt","asis","self","pageSupply","loadSupply","noEventSupply","_add","_transfer","pageLoadRequestsParam","responseReceiver","emitter","ok","tag","getElementsByTagName","getElementById","onFragment","req","eventReceiver","list","_page","requests","PageLoadAgent","PageLoadURLModifier","PageLoader","httpFetch","modifyURL","parser","DOMParser","credentials","headers","Headers","Accept","fetchRequest","Accept-Fragment","itsReduction","header","hthvQuote","pageFragmentsRequest","responseTextEmitter","onResponse","text","parsePageDocument","start","responseSupply","parseFromString","hthvParse","v","head","base","querySelector","newBase","createElement","appendChild","pageLoadParam","PageCacheBuster__key","PageCacheBuster","appRevSearchParam","rev","appRev","navigation","urlModifier","searchParams","newRev","reload","importNode","beforeOrImport","importContent","importNodeContent","before","nodeType","Node","ELEMENT_NODE","nodeClone","insertBefore","elementClone","tagName","toLowerCase","getAttributeNames","attr","childNodes","node","pageScriptsAgent","allScripts","externalScripts","scripts","src","querySelectorAll","script","_from","pageStyleAgent","newStyles","oldStyles","oldStylesByHref","firstOldStyle","link","newStyle","oldStyle","itsFirst","nextSibling","style","pageTitleAgent","textContent","PageLoadSupport__feature","buster","PageLoadSupport","ComponentStyleProducer","ComponentStypRender","MultiContextKey","ElementIdClass__NS","NamespaceDef","ElementIdClass","contextValues","aliaser","local","uniqueClassSeq","qualified","css__naming","classList","ComponentStyleProducer__key","hostSelector","_produce","produceBasicStyle","rules","options","parent","rootSelector","scheduler","operation","buildScheduler","renders","idClass","order","producer","properties","selector","c","buildRender","BasicStyleProducerSupport__feature","ComponentStyleProducer_","produce","BasicStyleProducerSupport","ComponentStypOptions","css","lazyStypRules","produceStyle","doProduceStyle","cssSupply","connectionSupply","ProduceStyle","property","StyleProducerSupport__feature","StyleProducerSupport","Theme__key","Theme","referrer","root","ThemeFactory__key","ThemeFactory","ThemeStyle","SimpleContextKey","providers","provider","isId","prevProvider","hasId","combineStyles","byId","theme","stypRules","Theme_","_styles","stypRoot","styles","_rules","constructed","ThemeFactory_","ThemeSupport__feature","newTheme","ThemeSupport","ElementNode","ComponentNode","ElementNodeList","WATCH_CHILD_LIST","childList","WATCH_DEEP","subtree","elementNodeList","selectorOrType","nodeOf","deep","updates","iterable","cache","selected","refresh","added","observer","Observer","mutations","removed","mutation","removedNodes","removeNode","addedNodes","addNode","nodeList","firstReceiver","disconnect","onTrackUpdate","track","initialEmitter","afterSupplied","addEventListener","ElementNodeList_","sel","children","matches","select","isElement","AttributesObserver","_bs","_observer","_emitter","_emitters","reconnect","takeRecords","AttributeTracker","ValueTracker","_name","observeSupply","_updates","NodeAttributes","created","PropertyTracker","_element","_key","propertyState","_supply","_path","NodeProperties","_props","prop","ElementNode__symbol","ElementNode_","_bind","elementNodeOf","optional","selectNodes","found","ComponentTreeSupport__feature","ComponentTreeSupport"],"mappings":"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"}